// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkResampleImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkResampleImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkResampleImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkResampleImageFilterJava
#endif
#ifdef SWIGLUA
%module itkResampleImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkResampleImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkResampleImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkResampleImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkResampleImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkResampleImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkResampleImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkResampleImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkResampleImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkResampleImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkResampleImageFilterPython
#endif
#ifdef SWIGR
%module itkResampleImageFilterR
#endif
#ifdef SWIGRUBY
%module itkResampleImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkResampleImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkResampleImageFilterTcl
#endif
#ifdef SWIGXML
%module itkResampleImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "SimpleFilters.includes"
%}


%{
%}




%import wrap_itkPoint.i
%import wrap_itkIndex.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkTransform.i
%import wrap_itkImage.i
%import wrap_itkVector.i
%import wrap_itkMatrix.i
%import wrap_ITKCommonBase.i
%import wrap_itkSize.i
%import wrap_itkInterpolateImageFunction.i


%include itk.i
%include wrap_itkResampleImageFilter_ext.i


 class itkResampleImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD22 const * _arg);
     virtual itkTransformD22 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionID2D * _arg);
     virtual itkInterpolateImageFunctionID2D const * GetInterpolator() const;
     virtual void SetSize(itkSize2 const _arg);
     virtual itkSize2 const & GetSize() const;
     virtual void SetDefaultPixelValue(double const _arg);
     virtual double const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase2 const * image);
     virtual void SetOutputStartIndex(itkIndex2 const _arg);
     virtual itkIndex2 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageD2 const * image);
     itkImageD2 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterID2ID2(itkResampleImageFilterID2ID2 const & arg0);
     void operator=(itkResampleImageFilterID2ID2 const & arg0);
   protected:
     itkResampleImageFilterID2ID2();
     ~itkResampleImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterID2ID2_Pointer {
   public:
     itkResampleImageFilterID2ID2_Pointer();
     itkResampleImageFilterID2ID2_Pointer(itkResampleImageFilterID2ID2_Pointer const & p);
     itkResampleImageFilterID2ID2_Pointer(itkResampleImageFilterID2ID2 * p);
     ~itkResampleImageFilterID2ID2_Pointer();
     itkResampleImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkResampleImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkResampleImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterID2ID2_Pointer const & r) const;
     itkResampleImageFilterID2ID2_Pointer & operator=(itkResampleImageFilterID2ID2_Pointer const & r);
     itkResampleImageFilterID2ID2_Pointer & operator=(itkResampleImageFilterID2ID2 * r);
     itkResampleImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkResampleImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD33 const * _arg);
     virtual itkTransformD33 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionID3D * _arg);
     virtual itkInterpolateImageFunctionID3D const * GetInterpolator() const;
     virtual void SetSize(itkSize3 const _arg);
     virtual itkSize3 const & GetSize() const;
     virtual void SetDefaultPixelValue(double const _arg);
     virtual double const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase3 const * image);
     virtual void SetOutputStartIndex(itkIndex3 const _arg);
     virtual itkIndex3 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageD3 const * image);
     itkImageD3 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterID3ID3(itkResampleImageFilterID3ID3 const & arg0);
     void operator=(itkResampleImageFilterID3ID3 const & arg0);
   protected:
     itkResampleImageFilterID3ID3();
     ~itkResampleImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterID3ID3_Pointer {
   public:
     itkResampleImageFilterID3ID3_Pointer();
     itkResampleImageFilterID3ID3_Pointer(itkResampleImageFilterID3ID3_Pointer const & p);
     itkResampleImageFilterID3ID3_Pointer(itkResampleImageFilterID3ID3 * p);
     ~itkResampleImageFilterID3ID3_Pointer();
     itkResampleImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkResampleImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkResampleImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterID3ID3_Pointer const & r) const;
     itkResampleImageFilterID3ID3_Pointer & operator=(itkResampleImageFilterID3ID3_Pointer const & r);
     itkResampleImageFilterID3ID3_Pointer & operator=(itkResampleImageFilterID3ID3 * r);
     itkResampleImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkResampleImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD22 const * _arg);
     virtual itkTransformD22 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIF2D * _arg);
     virtual itkInterpolateImageFunctionIF2D const * GetInterpolator() const;
     virtual void SetSize(itkSize2 const _arg);
     virtual itkSize2 const & GetSize() const;
     virtual void SetDefaultPixelValue(float const _arg);
     virtual float const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase2 const * image);
     virtual void SetOutputStartIndex(itkIndex2 const _arg);
     virtual itkIndex2 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageF2 const * image);
     itkImageF2 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterIF2IF2(itkResampleImageFilterIF2IF2 const & arg0);
     void operator=(itkResampleImageFilterIF2IF2 const & arg0);
   protected:
     itkResampleImageFilterIF2IF2();
     ~itkResampleImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterIF2IF2_Pointer {
   public:
     itkResampleImageFilterIF2IF2_Pointer();
     itkResampleImageFilterIF2IF2_Pointer(itkResampleImageFilterIF2IF2_Pointer const & p);
     itkResampleImageFilterIF2IF2_Pointer(itkResampleImageFilterIF2IF2 * p);
     ~itkResampleImageFilterIF2IF2_Pointer();
     itkResampleImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkResampleImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkResampleImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterIF2IF2_Pointer const & r) const;
     itkResampleImageFilterIF2IF2_Pointer & operator=(itkResampleImageFilterIF2IF2_Pointer const & r);
     itkResampleImageFilterIF2IF2_Pointer & operator=(itkResampleImageFilterIF2IF2 * r);
     itkResampleImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkResampleImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD33 const * _arg);
     virtual itkTransformD33 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIF3D * _arg);
     virtual itkInterpolateImageFunctionIF3D const * GetInterpolator() const;
     virtual void SetSize(itkSize3 const _arg);
     virtual itkSize3 const & GetSize() const;
     virtual void SetDefaultPixelValue(float const _arg);
     virtual float const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase3 const * image);
     virtual void SetOutputStartIndex(itkIndex3 const _arg);
     virtual itkIndex3 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageF3 const * image);
     itkImageF3 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterIF3IF3(itkResampleImageFilterIF3IF3 const & arg0);
     void operator=(itkResampleImageFilterIF3IF3 const & arg0);
   protected:
     itkResampleImageFilterIF3IF3();
     ~itkResampleImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterIF3IF3_Pointer {
   public:
     itkResampleImageFilterIF3IF3_Pointer();
     itkResampleImageFilterIF3IF3_Pointer(itkResampleImageFilterIF3IF3_Pointer const & p);
     itkResampleImageFilterIF3IF3_Pointer(itkResampleImageFilterIF3IF3 * p);
     ~itkResampleImageFilterIF3IF3_Pointer();
     itkResampleImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkResampleImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkResampleImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterIF3IF3_Pointer const & r) const;
     itkResampleImageFilterIF3IF3_Pointer & operator=(itkResampleImageFilterIF3IF3_Pointer const & r);
     itkResampleImageFilterIF3IF3_Pointer & operator=(itkResampleImageFilterIF3IF3 * r);
     itkResampleImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkResampleImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD22 const * _arg);
     virtual itkTransformD22 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIUC2D * _arg);
     virtual itkInterpolateImageFunctionIUC2D const * GetInterpolator() const;
     virtual void SetSize(itkSize2 const _arg);
     virtual itkSize2 const & GetSize() const;
     virtual void SetDefaultPixelValue(unsigned char const _arg);
     virtual unsigned char const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase2 const * image);
     virtual void SetOutputStartIndex(itkIndex2 const _arg);
     virtual itkIndex2 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageUC2 const * image);
     itkImageUC2 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterIUC2IUC2(itkResampleImageFilterIUC2IUC2 const & arg0);
     void operator=(itkResampleImageFilterIUC2IUC2 const & arg0);
   protected:
     itkResampleImageFilterIUC2IUC2();
     ~itkResampleImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterIUC2IUC2_Pointer {
   public:
     itkResampleImageFilterIUC2IUC2_Pointer();
     itkResampleImageFilterIUC2IUC2_Pointer(itkResampleImageFilterIUC2IUC2_Pointer const & p);
     itkResampleImageFilterIUC2IUC2_Pointer(itkResampleImageFilterIUC2IUC2 * p);
     ~itkResampleImageFilterIUC2IUC2_Pointer();
     itkResampleImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkResampleImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkResampleImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterIUC2IUC2_Pointer const & r) const;
     itkResampleImageFilterIUC2IUC2_Pointer & operator=(itkResampleImageFilterIUC2IUC2_Pointer const & r);
     itkResampleImageFilterIUC2IUC2_Pointer & operator=(itkResampleImageFilterIUC2IUC2 * r);
     itkResampleImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkResampleImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD33 const * _arg);
     virtual itkTransformD33 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIUC3D * _arg);
     virtual itkInterpolateImageFunctionIUC3D const * GetInterpolator() const;
     virtual void SetSize(itkSize3 const _arg);
     virtual itkSize3 const & GetSize() const;
     virtual void SetDefaultPixelValue(unsigned char const _arg);
     virtual unsigned char const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase3 const * image);
     virtual void SetOutputStartIndex(itkIndex3 const _arg);
     virtual itkIndex3 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageUC3 const * image);
     itkImageUC3 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterIUC3IUC3(itkResampleImageFilterIUC3IUC3 const & arg0);
     void operator=(itkResampleImageFilterIUC3IUC3 const & arg0);
   protected:
     itkResampleImageFilterIUC3IUC3();
     ~itkResampleImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterIUC3IUC3_Pointer {
   public:
     itkResampleImageFilterIUC3IUC3_Pointer();
     itkResampleImageFilterIUC3IUC3_Pointer(itkResampleImageFilterIUC3IUC3_Pointer const & p);
     itkResampleImageFilterIUC3IUC3_Pointer(itkResampleImageFilterIUC3IUC3 * p);
     ~itkResampleImageFilterIUC3IUC3_Pointer();
     itkResampleImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkResampleImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkResampleImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterIUC3IUC3_Pointer const & r) const;
     itkResampleImageFilterIUC3IUC3_Pointer & operator=(itkResampleImageFilterIUC3IUC3_Pointer const & r);
     itkResampleImageFilterIUC3IUC3_Pointer & operator=(itkResampleImageFilterIUC3IUC3 * r);
     itkResampleImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkResampleImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD22 const * _arg);
     virtual itkTransformD22 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIUL2D * _arg);
     virtual itkInterpolateImageFunctionIUL2D const * GetInterpolator() const;
     virtual void SetSize(itkSize2 const _arg);
     virtual itkSize2 const & GetSize() const;
     virtual void SetDefaultPixelValue(unsigned long const _arg);
     virtual unsigned long const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase2 const * image);
     virtual void SetOutputStartIndex(itkIndex2 const _arg);
     virtual itkIndex2 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageUL2 const * image);
     itkImageUL2 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterIUL2IUL2(itkResampleImageFilterIUL2IUL2 const & arg0);
     void operator=(itkResampleImageFilterIUL2IUL2 const & arg0);
   protected:
     itkResampleImageFilterIUL2IUL2();
     ~itkResampleImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterIUL2IUL2_Pointer {
   public:
     itkResampleImageFilterIUL2IUL2_Pointer();
     itkResampleImageFilterIUL2IUL2_Pointer(itkResampleImageFilterIUL2IUL2_Pointer const & p);
     itkResampleImageFilterIUL2IUL2_Pointer(itkResampleImageFilterIUL2IUL2 * p);
     ~itkResampleImageFilterIUL2IUL2_Pointer();
     itkResampleImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkResampleImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkResampleImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterIUL2IUL2_Pointer const & r) const;
     itkResampleImageFilterIUL2IUL2_Pointer & operator=(itkResampleImageFilterIUL2IUL2_Pointer const & r);
     itkResampleImageFilterIUL2IUL2_Pointer & operator=(itkResampleImageFilterIUL2IUL2 * r);
     itkResampleImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkResampleImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD33 const * _arg);
     virtual itkTransformD33 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIUL3D * _arg);
     virtual itkInterpolateImageFunctionIUL3D const * GetInterpolator() const;
     virtual void SetSize(itkSize3 const _arg);
     virtual itkSize3 const & GetSize() const;
     virtual void SetDefaultPixelValue(unsigned long const _arg);
     virtual unsigned long const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase3 const * image);
     virtual void SetOutputStartIndex(itkIndex3 const _arg);
     virtual itkIndex3 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageUL3 const * image);
     itkImageUL3 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterIUL3IUL3(itkResampleImageFilterIUL3IUL3 const & arg0);
     void operator=(itkResampleImageFilterIUL3IUL3 const & arg0);
   protected:
     itkResampleImageFilterIUL3IUL3();
     ~itkResampleImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterIUL3IUL3_Pointer {
   public:
     itkResampleImageFilterIUL3IUL3_Pointer();
     itkResampleImageFilterIUL3IUL3_Pointer(itkResampleImageFilterIUL3IUL3_Pointer const & p);
     itkResampleImageFilterIUL3IUL3_Pointer(itkResampleImageFilterIUL3IUL3 * p);
     ~itkResampleImageFilterIUL3IUL3_Pointer();
     itkResampleImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkResampleImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkResampleImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterIUL3IUL3_Pointer const & r) const;
     itkResampleImageFilterIUL3IUL3_Pointer & operator=(itkResampleImageFilterIUL3IUL3_Pointer const & r);
     itkResampleImageFilterIUL3IUL3_Pointer & operator=(itkResampleImageFilterIUL3IUL3 * r);
     itkResampleImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkResampleImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD22 const * _arg);
     virtual itkTransformD22 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIUS2D * _arg);
     virtual itkInterpolateImageFunctionIUS2D const * GetInterpolator() const;
     virtual void SetSize(itkSize2 const _arg);
     virtual itkSize2 const & GetSize() const;
     virtual void SetDefaultPixelValue(unsigned short const _arg);
     virtual unsigned short const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase2 const * image);
     virtual void SetOutputStartIndex(itkIndex2 const _arg);
     virtual itkIndex2 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageUS2 const * image);
     itkImageUS2 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterIUS2IUS2(itkResampleImageFilterIUS2IUS2 const & arg0);
     void operator=(itkResampleImageFilterIUS2IUS2 const & arg0);
   protected:
     itkResampleImageFilterIUS2IUS2();
     ~itkResampleImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterIUS2IUS2_Pointer {
   public:
     itkResampleImageFilterIUS2IUS2_Pointer();
     itkResampleImageFilterIUS2IUS2_Pointer(itkResampleImageFilterIUS2IUS2_Pointer const & p);
     itkResampleImageFilterIUS2IUS2_Pointer(itkResampleImageFilterIUS2IUS2 * p);
     ~itkResampleImageFilterIUS2IUS2_Pointer();
     itkResampleImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkResampleImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkResampleImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterIUS2IUS2_Pointer const & r) const;
     itkResampleImageFilterIUS2IUS2_Pointer & operator=(itkResampleImageFilterIUS2IUS2_Pointer const & r);
     itkResampleImageFilterIUS2IUS2_Pointer & operator=(itkResampleImageFilterIUS2IUS2 * r);
     itkResampleImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkResampleImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkResampleImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetTransform(itkTransformD33 const * _arg);
     virtual itkTransformD33 const * GetTransform() const;
     virtual void SetInterpolator(itkInterpolateImageFunctionIUS3D * _arg);
     virtual itkInterpolateImageFunctionIUS3D const * GetInterpolator() const;
     virtual void SetSize(itkSize3 const _arg);
     virtual itkSize3 const & GetSize() const;
     virtual void SetDefaultPixelValue(unsigned short const _arg);
     virtual unsigned short const & GetDefaultPixelValue() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual void SetOutputSpacing(double const * values);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual void SetOutputOrigin(double const * values);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     void SetOutputParametersFromImage(itkImageBase3 const * image);
     virtual void SetOutputStartIndex(itkIndex3 const _arg);
     virtual itkIndex3 const & GetOutputStartIndex() const;
     void SetReferenceImage(itkImageUS3 const * image);
     itkImageUS3 const * GetReferenceImage() const;
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual unsigned long GetMTime() const;
   private:
     itkResampleImageFilterIUS3IUS3(itkResampleImageFilterIUS3IUS3 const & arg0);
     void operator=(itkResampleImageFilterIUS3IUS3 const & arg0);
   protected:
     itkResampleImageFilterIUS3IUS3();
     ~itkResampleImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void NonlinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     void LinearThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkResampleImageFilterIUS3IUS3_Pointer {
   public:
     itkResampleImageFilterIUS3IUS3_Pointer();
     itkResampleImageFilterIUS3IUS3_Pointer(itkResampleImageFilterIUS3IUS3_Pointer const & p);
     itkResampleImageFilterIUS3IUS3_Pointer(itkResampleImageFilterIUS3IUS3 * p);
     ~itkResampleImageFilterIUS3IUS3_Pointer();
     itkResampleImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkResampleImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkResampleImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkResampleImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkResampleImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkResampleImageFilterIUS3IUS3_Pointer const & r) const;
     itkResampleImageFilterIUS3IUS3_Pointer & operator=(itkResampleImageFilterIUS3IUS3_Pointer const & r);
     itkResampleImageFilterIUS3IUS3_Pointer & operator=(itkResampleImageFilterIUS3IUS3 * r);
     itkResampleImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


