// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkDoubleThresholdImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkDoubleThresholdImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkDoubleThresholdImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkDoubleThresholdImageFilterJava
#endif
#ifdef SWIGLUA
%module itkDoubleThresholdImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkDoubleThresholdImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkDoubleThresholdImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkDoubleThresholdImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkDoubleThresholdImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkDoubleThresholdImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkDoubleThresholdImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkDoubleThresholdImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkDoubleThresholdImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkDoubleThresholdImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkDoubleThresholdImageFilterPython
#endif
#ifdef SWIGR
%module itkDoubleThresholdImageFilterR
#endif
#ifdef SWIGRUBY
%module itkDoubleThresholdImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkDoubleThresholdImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkDoubleThresholdImageFilterTcl
#endif
#ifdef SWIGXML
%module itkDoubleThresholdImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkDoubleThresholdImageFilter_ext.i


 class itkDoubleThresholdImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual void SetThreshold1(double const _arg);
     virtual void SetThreshold2(double const _arg);
     virtual void SetThreshold3(double const _arg);
     virtual void SetThreshold4(double const _arg);
     virtual double GetThreshold1() const;
     virtual double GetThreshold2() const;
     virtual double GetThreshold3() const;
     virtual double GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterID2ID2(itkDoubleThresholdImageFilterID2ID2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterID2ID2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterID2ID2();
     ~itkDoubleThresholdImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterID2ID2_Pointer {
   public:
     itkDoubleThresholdImageFilterID2ID2_Pointer();
     itkDoubleThresholdImageFilterID2ID2_Pointer(itkDoubleThresholdImageFilterID2ID2_Pointer const & p);
     itkDoubleThresholdImageFilterID2ID2_Pointer(itkDoubleThresholdImageFilterID2ID2 * p);
     ~itkDoubleThresholdImageFilterID2ID2_Pointer();
     itkDoubleThresholdImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterID2ID2_Pointer const & r) const;
     itkDoubleThresholdImageFilterID2ID2_Pointer & operator=(itkDoubleThresholdImageFilterID2ID2_Pointer const & r);
     itkDoubleThresholdImageFilterID2ID2_Pointer & operator=(itkDoubleThresholdImageFilterID2ID2 * r);
     itkDoubleThresholdImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterID2IUC2 : public itkImageToImageFilterID2IUC2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterID2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual void SetThreshold1(double const _arg);
     virtual void SetThreshold2(double const _arg);
     virtual void SetThreshold3(double const _arg);
     virtual void SetThreshold4(double const _arg);
     virtual double GetThreshold1() const;
     virtual double GetThreshold2() const;
     virtual double GetThreshold3() const;
     virtual double GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterID2IUC2(itkDoubleThresholdImageFilterID2IUC2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterID2IUC2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterID2IUC2();
     ~itkDoubleThresholdImageFilterID2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterID2IUC2_Pointer {
   public:
     itkDoubleThresholdImageFilterID2IUC2_Pointer();
     itkDoubleThresholdImageFilterID2IUC2_Pointer(itkDoubleThresholdImageFilterID2IUC2_Pointer const & p);
     itkDoubleThresholdImageFilterID2IUC2_Pointer(itkDoubleThresholdImageFilterID2IUC2 * p);
     ~itkDoubleThresholdImageFilterID2IUC2_Pointer();
     itkDoubleThresholdImageFilterID2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterID2IUC2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterID2IUC2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterID2IUC2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterID2IUC2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterID2IUC2_Pointer const & r) const;
     itkDoubleThresholdImageFilterID2IUC2_Pointer & operator=(itkDoubleThresholdImageFilterID2IUC2_Pointer const & r);
     itkDoubleThresholdImageFilterID2IUC2_Pointer & operator=(itkDoubleThresholdImageFilterID2IUC2 * r);
     itkDoubleThresholdImageFilterID2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterID2IUL2 : public itkImageToImageFilterID2IUL2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterID2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual void SetThreshold1(double const _arg);
     virtual void SetThreshold2(double const _arg);
     virtual void SetThreshold3(double const _arg);
     virtual void SetThreshold4(double const _arg);
     virtual double GetThreshold1() const;
     virtual double GetThreshold2() const;
     virtual double GetThreshold3() const;
     virtual double GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterID2IUL2(itkDoubleThresholdImageFilterID2IUL2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterID2IUL2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterID2IUL2();
     ~itkDoubleThresholdImageFilterID2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterID2IUL2_Pointer {
   public:
     itkDoubleThresholdImageFilterID2IUL2_Pointer();
     itkDoubleThresholdImageFilterID2IUL2_Pointer(itkDoubleThresholdImageFilterID2IUL2_Pointer const & p);
     itkDoubleThresholdImageFilterID2IUL2_Pointer(itkDoubleThresholdImageFilterID2IUL2 * p);
     ~itkDoubleThresholdImageFilterID2IUL2_Pointer();
     itkDoubleThresholdImageFilterID2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterID2IUL2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterID2IUL2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterID2IUL2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterID2IUL2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterID2IUL2_Pointer const & r) const;
     itkDoubleThresholdImageFilterID2IUL2_Pointer & operator=(itkDoubleThresholdImageFilterID2IUL2_Pointer const & r);
     itkDoubleThresholdImageFilterID2IUL2_Pointer & operator=(itkDoubleThresholdImageFilterID2IUL2 * r);
     itkDoubleThresholdImageFilterID2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterID2IUS2 : public itkImageToImageFilterID2IUS2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterID2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual void SetThreshold1(double const _arg);
     virtual void SetThreshold2(double const _arg);
     virtual void SetThreshold3(double const _arg);
     virtual void SetThreshold4(double const _arg);
     virtual double GetThreshold1() const;
     virtual double GetThreshold2() const;
     virtual double GetThreshold3() const;
     virtual double GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterID2IUS2(itkDoubleThresholdImageFilterID2IUS2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterID2IUS2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterID2IUS2();
     ~itkDoubleThresholdImageFilterID2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterID2IUS2_Pointer {
   public:
     itkDoubleThresholdImageFilterID2IUS2_Pointer();
     itkDoubleThresholdImageFilterID2IUS2_Pointer(itkDoubleThresholdImageFilterID2IUS2_Pointer const & p);
     itkDoubleThresholdImageFilterID2IUS2_Pointer(itkDoubleThresholdImageFilterID2IUS2 * p);
     ~itkDoubleThresholdImageFilterID2IUS2_Pointer();
     itkDoubleThresholdImageFilterID2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterID2IUS2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterID2IUS2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterID2IUS2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterID2IUS2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterID2IUS2_Pointer const & r) const;
     itkDoubleThresholdImageFilterID2IUS2_Pointer & operator=(itkDoubleThresholdImageFilterID2IUS2_Pointer const & r);
     itkDoubleThresholdImageFilterID2IUS2_Pointer & operator=(itkDoubleThresholdImageFilterID2IUS2 * r);
     itkDoubleThresholdImageFilterID2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double GetInsideValue() const;
     virtual void SetThreshold1(double const _arg);
     virtual void SetThreshold2(double const _arg);
     virtual void SetThreshold3(double const _arg);
     virtual void SetThreshold4(double const _arg);
     virtual double GetThreshold1() const;
     virtual double GetThreshold2() const;
     virtual double GetThreshold3() const;
     virtual double GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterID3ID3(itkDoubleThresholdImageFilterID3ID3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterID3ID3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterID3ID3();
     ~itkDoubleThresholdImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterID3ID3_Pointer {
   public:
     itkDoubleThresholdImageFilterID3ID3_Pointer();
     itkDoubleThresholdImageFilterID3ID3_Pointer(itkDoubleThresholdImageFilterID3ID3_Pointer const & p);
     itkDoubleThresholdImageFilterID3ID3_Pointer(itkDoubleThresholdImageFilterID3ID3 * p);
     ~itkDoubleThresholdImageFilterID3ID3_Pointer();
     itkDoubleThresholdImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterID3ID3_Pointer const & r) const;
     itkDoubleThresholdImageFilterID3ID3_Pointer & operator=(itkDoubleThresholdImageFilterID3ID3_Pointer const & r);
     itkDoubleThresholdImageFilterID3ID3_Pointer & operator=(itkDoubleThresholdImageFilterID3ID3 * r);
     itkDoubleThresholdImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterID3IUC3 : public itkImageToImageFilterID3IUC3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterID3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual void SetThreshold1(double const _arg);
     virtual void SetThreshold2(double const _arg);
     virtual void SetThreshold3(double const _arg);
     virtual void SetThreshold4(double const _arg);
     virtual double GetThreshold1() const;
     virtual double GetThreshold2() const;
     virtual double GetThreshold3() const;
     virtual double GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterID3IUC3(itkDoubleThresholdImageFilterID3IUC3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterID3IUC3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterID3IUC3();
     ~itkDoubleThresholdImageFilterID3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterID3IUC3_Pointer {
   public:
     itkDoubleThresholdImageFilterID3IUC3_Pointer();
     itkDoubleThresholdImageFilterID3IUC3_Pointer(itkDoubleThresholdImageFilterID3IUC3_Pointer const & p);
     itkDoubleThresholdImageFilterID3IUC3_Pointer(itkDoubleThresholdImageFilterID3IUC3 * p);
     ~itkDoubleThresholdImageFilterID3IUC3_Pointer();
     itkDoubleThresholdImageFilterID3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterID3IUC3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterID3IUC3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterID3IUC3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterID3IUC3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterID3IUC3_Pointer const & r) const;
     itkDoubleThresholdImageFilterID3IUC3_Pointer & operator=(itkDoubleThresholdImageFilterID3IUC3_Pointer const & r);
     itkDoubleThresholdImageFilterID3IUC3_Pointer & operator=(itkDoubleThresholdImageFilterID3IUC3 * r);
     itkDoubleThresholdImageFilterID3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterID3IUL3 : public itkImageToImageFilterID3IUL3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterID3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual void SetThreshold1(double const _arg);
     virtual void SetThreshold2(double const _arg);
     virtual void SetThreshold3(double const _arg);
     virtual void SetThreshold4(double const _arg);
     virtual double GetThreshold1() const;
     virtual double GetThreshold2() const;
     virtual double GetThreshold3() const;
     virtual double GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterID3IUL3(itkDoubleThresholdImageFilterID3IUL3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterID3IUL3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterID3IUL3();
     ~itkDoubleThresholdImageFilterID3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterID3IUL3_Pointer {
   public:
     itkDoubleThresholdImageFilterID3IUL3_Pointer();
     itkDoubleThresholdImageFilterID3IUL3_Pointer(itkDoubleThresholdImageFilterID3IUL3_Pointer const & p);
     itkDoubleThresholdImageFilterID3IUL3_Pointer(itkDoubleThresholdImageFilterID3IUL3 * p);
     ~itkDoubleThresholdImageFilterID3IUL3_Pointer();
     itkDoubleThresholdImageFilterID3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterID3IUL3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterID3IUL3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterID3IUL3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterID3IUL3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterID3IUL3_Pointer const & r) const;
     itkDoubleThresholdImageFilterID3IUL3_Pointer & operator=(itkDoubleThresholdImageFilterID3IUL3_Pointer const & r);
     itkDoubleThresholdImageFilterID3IUL3_Pointer & operator=(itkDoubleThresholdImageFilterID3IUL3 * r);
     itkDoubleThresholdImageFilterID3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterID3IUS3 : public itkImageToImageFilterID3IUS3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterID3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual void SetThreshold1(double const _arg);
     virtual void SetThreshold2(double const _arg);
     virtual void SetThreshold3(double const _arg);
     virtual void SetThreshold4(double const _arg);
     virtual double GetThreshold1() const;
     virtual double GetThreshold2() const;
     virtual double GetThreshold3() const;
     virtual double GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterID3IUS3(itkDoubleThresholdImageFilterID3IUS3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterID3IUS3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterID3IUS3();
     ~itkDoubleThresholdImageFilterID3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterID3IUS3_Pointer {
   public:
     itkDoubleThresholdImageFilterID3IUS3_Pointer();
     itkDoubleThresholdImageFilterID3IUS3_Pointer(itkDoubleThresholdImageFilterID3IUS3_Pointer const & p);
     itkDoubleThresholdImageFilterID3IUS3_Pointer(itkDoubleThresholdImageFilterID3IUS3 * p);
     ~itkDoubleThresholdImageFilterID3IUS3_Pointer();
     itkDoubleThresholdImageFilterID3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterID3IUS3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterID3IUS3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterID3IUS3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterID3IUS3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterID3IUS3_Pointer const & r) const;
     itkDoubleThresholdImageFilterID3IUS3_Pointer & operator=(itkDoubleThresholdImageFilterID3IUS3_Pointer const & r);
     itkDoubleThresholdImageFilterID3IUS3_Pointer & operator=(itkDoubleThresholdImageFilterID3IUS3 * r);
     itkDoubleThresholdImageFilterID3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual void SetThreshold1(float const _arg);
     virtual void SetThreshold2(float const _arg);
     virtual void SetThreshold3(float const _arg);
     virtual void SetThreshold4(float const _arg);
     virtual float GetThreshold1() const;
     virtual float GetThreshold2() const;
     virtual float GetThreshold3() const;
     virtual float GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIF2IF2(itkDoubleThresholdImageFilterIF2IF2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIF2IF2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIF2IF2();
     ~itkDoubleThresholdImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIF2IF2_Pointer {
   public:
     itkDoubleThresholdImageFilterIF2IF2_Pointer();
     itkDoubleThresholdImageFilterIF2IF2_Pointer(itkDoubleThresholdImageFilterIF2IF2_Pointer const & p);
     itkDoubleThresholdImageFilterIF2IF2_Pointer(itkDoubleThresholdImageFilterIF2IF2 * p);
     ~itkDoubleThresholdImageFilterIF2IF2_Pointer();
     itkDoubleThresholdImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIF2IF2_Pointer const & r) const;
     itkDoubleThresholdImageFilterIF2IF2_Pointer & operator=(itkDoubleThresholdImageFilterIF2IF2_Pointer const & r);
     itkDoubleThresholdImageFilterIF2IF2_Pointer & operator=(itkDoubleThresholdImageFilterIF2IF2 * r);
     itkDoubleThresholdImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIF2IUC2 : public itkImageToImageFilterIF2IUC2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIF2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual void SetThreshold1(float const _arg);
     virtual void SetThreshold2(float const _arg);
     virtual void SetThreshold3(float const _arg);
     virtual void SetThreshold4(float const _arg);
     virtual float GetThreshold1() const;
     virtual float GetThreshold2() const;
     virtual float GetThreshold3() const;
     virtual float GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIF2IUC2(itkDoubleThresholdImageFilterIF2IUC2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIF2IUC2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIF2IUC2();
     ~itkDoubleThresholdImageFilterIF2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIF2IUC2_Pointer {
   public:
     itkDoubleThresholdImageFilterIF2IUC2_Pointer();
     itkDoubleThresholdImageFilterIF2IUC2_Pointer(itkDoubleThresholdImageFilterIF2IUC2_Pointer const & p);
     itkDoubleThresholdImageFilterIF2IUC2_Pointer(itkDoubleThresholdImageFilterIF2IUC2 * p);
     ~itkDoubleThresholdImageFilterIF2IUC2_Pointer();
     itkDoubleThresholdImageFilterIF2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIF2IUC2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIF2IUC2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIF2IUC2_Pointer const & r) const;
     itkDoubleThresholdImageFilterIF2IUC2_Pointer & operator=(itkDoubleThresholdImageFilterIF2IUC2_Pointer const & r);
     itkDoubleThresholdImageFilterIF2IUC2_Pointer & operator=(itkDoubleThresholdImageFilterIF2IUC2 * r);
     itkDoubleThresholdImageFilterIF2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIF2IUL2 : public itkImageToImageFilterIF2IUL2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIF2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual void SetThreshold1(float const _arg);
     virtual void SetThreshold2(float const _arg);
     virtual void SetThreshold3(float const _arg);
     virtual void SetThreshold4(float const _arg);
     virtual float GetThreshold1() const;
     virtual float GetThreshold2() const;
     virtual float GetThreshold3() const;
     virtual float GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIF2IUL2(itkDoubleThresholdImageFilterIF2IUL2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIF2IUL2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIF2IUL2();
     ~itkDoubleThresholdImageFilterIF2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIF2IUL2_Pointer {
   public:
     itkDoubleThresholdImageFilterIF2IUL2_Pointer();
     itkDoubleThresholdImageFilterIF2IUL2_Pointer(itkDoubleThresholdImageFilterIF2IUL2_Pointer const & p);
     itkDoubleThresholdImageFilterIF2IUL2_Pointer(itkDoubleThresholdImageFilterIF2IUL2 * p);
     ~itkDoubleThresholdImageFilterIF2IUL2_Pointer();
     itkDoubleThresholdImageFilterIF2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIF2IUL2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIF2IUL2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIF2IUL2_Pointer const & r) const;
     itkDoubleThresholdImageFilterIF2IUL2_Pointer & operator=(itkDoubleThresholdImageFilterIF2IUL2_Pointer const & r);
     itkDoubleThresholdImageFilterIF2IUL2_Pointer & operator=(itkDoubleThresholdImageFilterIF2IUL2 * r);
     itkDoubleThresholdImageFilterIF2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIF2IUS2 : public itkImageToImageFilterIF2IUS2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIF2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual void SetThreshold1(float const _arg);
     virtual void SetThreshold2(float const _arg);
     virtual void SetThreshold3(float const _arg);
     virtual void SetThreshold4(float const _arg);
     virtual float GetThreshold1() const;
     virtual float GetThreshold2() const;
     virtual float GetThreshold3() const;
     virtual float GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIF2IUS2(itkDoubleThresholdImageFilterIF2IUS2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIF2IUS2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIF2IUS2();
     ~itkDoubleThresholdImageFilterIF2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIF2IUS2_Pointer {
   public:
     itkDoubleThresholdImageFilterIF2IUS2_Pointer();
     itkDoubleThresholdImageFilterIF2IUS2_Pointer(itkDoubleThresholdImageFilterIF2IUS2_Pointer const & p);
     itkDoubleThresholdImageFilterIF2IUS2_Pointer(itkDoubleThresholdImageFilterIF2IUS2 * p);
     ~itkDoubleThresholdImageFilterIF2IUS2_Pointer();
     itkDoubleThresholdImageFilterIF2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIF2IUS2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIF2IUS2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIF2IUS2_Pointer const & r) const;
     itkDoubleThresholdImageFilterIF2IUS2_Pointer & operator=(itkDoubleThresholdImageFilterIF2IUS2_Pointer const & r);
     itkDoubleThresholdImageFilterIF2IUS2_Pointer & operator=(itkDoubleThresholdImageFilterIF2IUS2 * r);
     itkDoubleThresholdImageFilterIF2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float GetInsideValue() const;
     virtual void SetThreshold1(float const _arg);
     virtual void SetThreshold2(float const _arg);
     virtual void SetThreshold3(float const _arg);
     virtual void SetThreshold4(float const _arg);
     virtual float GetThreshold1() const;
     virtual float GetThreshold2() const;
     virtual float GetThreshold3() const;
     virtual float GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIF3IF3(itkDoubleThresholdImageFilterIF3IF3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIF3IF3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIF3IF3();
     ~itkDoubleThresholdImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIF3IF3_Pointer {
   public:
     itkDoubleThresholdImageFilterIF3IF3_Pointer();
     itkDoubleThresholdImageFilterIF3IF3_Pointer(itkDoubleThresholdImageFilterIF3IF3_Pointer const & p);
     itkDoubleThresholdImageFilterIF3IF3_Pointer(itkDoubleThresholdImageFilterIF3IF3 * p);
     ~itkDoubleThresholdImageFilterIF3IF3_Pointer();
     itkDoubleThresholdImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIF3IF3_Pointer const & r) const;
     itkDoubleThresholdImageFilterIF3IF3_Pointer & operator=(itkDoubleThresholdImageFilterIF3IF3_Pointer const & r);
     itkDoubleThresholdImageFilterIF3IF3_Pointer & operator=(itkDoubleThresholdImageFilterIF3IF3 * r);
     itkDoubleThresholdImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIF3IUC3 : public itkImageToImageFilterIF3IUC3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIF3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual void SetThreshold1(float const _arg);
     virtual void SetThreshold2(float const _arg);
     virtual void SetThreshold3(float const _arg);
     virtual void SetThreshold4(float const _arg);
     virtual float GetThreshold1() const;
     virtual float GetThreshold2() const;
     virtual float GetThreshold3() const;
     virtual float GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIF3IUC3(itkDoubleThresholdImageFilterIF3IUC3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIF3IUC3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIF3IUC3();
     ~itkDoubleThresholdImageFilterIF3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIF3IUC3_Pointer {
   public:
     itkDoubleThresholdImageFilterIF3IUC3_Pointer();
     itkDoubleThresholdImageFilterIF3IUC3_Pointer(itkDoubleThresholdImageFilterIF3IUC3_Pointer const & p);
     itkDoubleThresholdImageFilterIF3IUC3_Pointer(itkDoubleThresholdImageFilterIF3IUC3 * p);
     ~itkDoubleThresholdImageFilterIF3IUC3_Pointer();
     itkDoubleThresholdImageFilterIF3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIF3IUC3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIF3IUC3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIF3IUC3_Pointer const & r) const;
     itkDoubleThresholdImageFilterIF3IUC3_Pointer & operator=(itkDoubleThresholdImageFilterIF3IUC3_Pointer const & r);
     itkDoubleThresholdImageFilterIF3IUC3_Pointer & operator=(itkDoubleThresholdImageFilterIF3IUC3 * r);
     itkDoubleThresholdImageFilterIF3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIF3IUL3 : public itkImageToImageFilterIF3IUL3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIF3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual void SetThreshold1(float const _arg);
     virtual void SetThreshold2(float const _arg);
     virtual void SetThreshold3(float const _arg);
     virtual void SetThreshold4(float const _arg);
     virtual float GetThreshold1() const;
     virtual float GetThreshold2() const;
     virtual float GetThreshold3() const;
     virtual float GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIF3IUL3(itkDoubleThresholdImageFilterIF3IUL3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIF3IUL3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIF3IUL3();
     ~itkDoubleThresholdImageFilterIF3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIF3IUL3_Pointer {
   public:
     itkDoubleThresholdImageFilterIF3IUL3_Pointer();
     itkDoubleThresholdImageFilterIF3IUL3_Pointer(itkDoubleThresholdImageFilterIF3IUL3_Pointer const & p);
     itkDoubleThresholdImageFilterIF3IUL3_Pointer(itkDoubleThresholdImageFilterIF3IUL3 * p);
     ~itkDoubleThresholdImageFilterIF3IUL3_Pointer();
     itkDoubleThresholdImageFilterIF3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIF3IUL3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIF3IUL3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIF3IUL3_Pointer const & r) const;
     itkDoubleThresholdImageFilterIF3IUL3_Pointer & operator=(itkDoubleThresholdImageFilterIF3IUL3_Pointer const & r);
     itkDoubleThresholdImageFilterIF3IUL3_Pointer & operator=(itkDoubleThresholdImageFilterIF3IUL3 * r);
     itkDoubleThresholdImageFilterIF3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIF3IUS3 : public itkImageToImageFilterIF3IUS3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIF3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual void SetThreshold1(float const _arg);
     virtual void SetThreshold2(float const _arg);
     virtual void SetThreshold3(float const _arg);
     virtual void SetThreshold4(float const _arg);
     virtual float GetThreshold1() const;
     virtual float GetThreshold2() const;
     virtual float GetThreshold3() const;
     virtual float GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIF3IUS3(itkDoubleThresholdImageFilterIF3IUS3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIF3IUS3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIF3IUS3();
     ~itkDoubleThresholdImageFilterIF3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIF3IUS3_Pointer {
   public:
     itkDoubleThresholdImageFilterIF3IUS3_Pointer();
     itkDoubleThresholdImageFilterIF3IUS3_Pointer(itkDoubleThresholdImageFilterIF3IUS3_Pointer const & p);
     itkDoubleThresholdImageFilterIF3IUS3_Pointer(itkDoubleThresholdImageFilterIF3IUS3 * p);
     ~itkDoubleThresholdImageFilterIF3IUS3_Pointer();
     itkDoubleThresholdImageFilterIF3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIF3IUS3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIF3IUS3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIF3IUS3_Pointer const & r) const;
     itkDoubleThresholdImageFilterIF3IUS3_Pointer & operator=(itkDoubleThresholdImageFilterIF3IUS3_Pointer const & r);
     itkDoubleThresholdImageFilterIF3IUS3_Pointer & operator=(itkDoubleThresholdImageFilterIF3IUS3 * r);
     itkDoubleThresholdImageFilterIF3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual void SetThreshold1(unsigned char const _arg);
     virtual void SetThreshold2(unsigned char const _arg);
     virtual void SetThreshold3(unsigned char const _arg);
     virtual void SetThreshold4(unsigned char const _arg);
     virtual unsigned char GetThreshold1() const;
     virtual unsigned char GetThreshold2() const;
     virtual unsigned char GetThreshold3() const;
     virtual unsigned char GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIUC2IUC2(itkDoubleThresholdImageFilterIUC2IUC2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIUC2IUC2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIUC2IUC2();
     ~itkDoubleThresholdImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIUC2IUC2_Pointer {
   public:
     itkDoubleThresholdImageFilterIUC2IUC2_Pointer();
     itkDoubleThresholdImageFilterIUC2IUC2_Pointer(itkDoubleThresholdImageFilterIUC2IUC2_Pointer const & p);
     itkDoubleThresholdImageFilterIUC2IUC2_Pointer(itkDoubleThresholdImageFilterIUC2IUC2 * p);
     ~itkDoubleThresholdImageFilterIUC2IUC2_Pointer();
     itkDoubleThresholdImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     itkDoubleThresholdImageFilterIUC2IUC2_Pointer & operator=(itkDoubleThresholdImageFilterIUC2IUC2_Pointer const & r);
     itkDoubleThresholdImageFilterIUC2IUC2_Pointer & operator=(itkDoubleThresholdImageFilterIUC2IUC2 * r);
     itkDoubleThresholdImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char GetInsideValue() const;
     virtual void SetThreshold1(unsigned char const _arg);
     virtual void SetThreshold2(unsigned char const _arg);
     virtual void SetThreshold3(unsigned char const _arg);
     virtual void SetThreshold4(unsigned char const _arg);
     virtual unsigned char GetThreshold1() const;
     virtual unsigned char GetThreshold2() const;
     virtual unsigned char GetThreshold3() const;
     virtual unsigned char GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIUC3IUC3(itkDoubleThresholdImageFilterIUC3IUC3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIUC3IUC3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIUC3IUC3();
     ~itkDoubleThresholdImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIUC3IUC3_Pointer {
   public:
     itkDoubleThresholdImageFilterIUC3IUC3_Pointer();
     itkDoubleThresholdImageFilterIUC3IUC3_Pointer(itkDoubleThresholdImageFilterIUC3IUC3_Pointer const & p);
     itkDoubleThresholdImageFilterIUC3IUC3_Pointer(itkDoubleThresholdImageFilterIUC3IUC3 * p);
     ~itkDoubleThresholdImageFilterIUC3IUC3_Pointer();
     itkDoubleThresholdImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     itkDoubleThresholdImageFilterIUC3IUC3_Pointer & operator=(itkDoubleThresholdImageFilterIUC3IUC3_Pointer const & r);
     itkDoubleThresholdImageFilterIUC3IUC3_Pointer & operator=(itkDoubleThresholdImageFilterIUC3IUC3 * r);
     itkDoubleThresholdImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual void SetThreshold1(unsigned long const _arg);
     virtual void SetThreshold2(unsigned long const _arg);
     virtual void SetThreshold3(unsigned long const _arg);
     virtual void SetThreshold4(unsigned long const _arg);
     virtual unsigned long GetThreshold1() const;
     virtual unsigned long GetThreshold2() const;
     virtual unsigned long GetThreshold3() const;
     virtual unsigned long GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIUL2IUL2(itkDoubleThresholdImageFilterIUL2IUL2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIUL2IUL2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIUL2IUL2();
     ~itkDoubleThresholdImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIUL2IUL2_Pointer {
   public:
     itkDoubleThresholdImageFilterIUL2IUL2_Pointer();
     itkDoubleThresholdImageFilterIUL2IUL2_Pointer(itkDoubleThresholdImageFilterIUL2IUL2_Pointer const & p);
     itkDoubleThresholdImageFilterIUL2IUL2_Pointer(itkDoubleThresholdImageFilterIUL2IUL2 * p);
     ~itkDoubleThresholdImageFilterIUL2IUL2_Pointer();
     itkDoubleThresholdImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     itkDoubleThresholdImageFilterIUL2IUL2_Pointer & operator=(itkDoubleThresholdImageFilterIUL2IUL2_Pointer const & r);
     itkDoubleThresholdImageFilterIUL2IUL2_Pointer & operator=(itkDoubleThresholdImageFilterIUL2IUL2 * r);
     itkDoubleThresholdImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long GetInsideValue() const;
     virtual void SetThreshold1(unsigned long const _arg);
     virtual void SetThreshold2(unsigned long const _arg);
     virtual void SetThreshold3(unsigned long const _arg);
     virtual void SetThreshold4(unsigned long const _arg);
     virtual unsigned long GetThreshold1() const;
     virtual unsigned long GetThreshold2() const;
     virtual unsigned long GetThreshold3() const;
     virtual unsigned long GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIUL3IUL3(itkDoubleThresholdImageFilterIUL3IUL3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIUL3IUL3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIUL3IUL3();
     ~itkDoubleThresholdImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIUL3IUL3_Pointer {
   public:
     itkDoubleThresholdImageFilterIUL3IUL3_Pointer();
     itkDoubleThresholdImageFilterIUL3IUL3_Pointer(itkDoubleThresholdImageFilterIUL3IUL3_Pointer const & p);
     itkDoubleThresholdImageFilterIUL3IUL3_Pointer(itkDoubleThresholdImageFilterIUL3IUL3 * p);
     ~itkDoubleThresholdImageFilterIUL3IUL3_Pointer();
     itkDoubleThresholdImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     itkDoubleThresholdImageFilterIUL3IUL3_Pointer & operator=(itkDoubleThresholdImageFilterIUL3IUL3_Pointer const & r);
     itkDoubleThresholdImageFilterIUL3IUL3_Pointer & operator=(itkDoubleThresholdImageFilterIUL3IUL3 * r);
     itkDoubleThresholdImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual void SetThreshold1(unsigned short const _arg);
     virtual void SetThreshold2(unsigned short const _arg);
     virtual void SetThreshold3(unsigned short const _arg);
     virtual void SetThreshold4(unsigned short const _arg);
     virtual unsigned short GetThreshold1() const;
     virtual unsigned short GetThreshold2() const;
     virtual unsigned short GetThreshold3() const;
     virtual unsigned short GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIUS2IUS2(itkDoubleThresholdImageFilterIUS2IUS2 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIUS2IUS2 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIUS2IUS2();
     ~itkDoubleThresholdImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIUS2IUS2_Pointer {
   public:
     itkDoubleThresholdImageFilterIUS2IUS2_Pointer();
     itkDoubleThresholdImageFilterIUS2IUS2_Pointer(itkDoubleThresholdImageFilterIUS2IUS2_Pointer const & p);
     itkDoubleThresholdImageFilterIUS2IUS2_Pointer(itkDoubleThresholdImageFilterIUS2IUS2 * p);
     ~itkDoubleThresholdImageFilterIUS2IUS2_Pointer();
     itkDoubleThresholdImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     itkDoubleThresholdImageFilterIUS2IUS2_Pointer & operator=(itkDoubleThresholdImageFilterIUS2IUS2_Pointer const & r);
     itkDoubleThresholdImageFilterIUS2IUS2_Pointer & operator=(itkDoubleThresholdImageFilterIUS2IUS2 * r);
     itkDoubleThresholdImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkDoubleThresholdImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputComparableCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkDoubleThresholdImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short GetInsideValue() const;
     virtual void SetThreshold1(unsigned short const _arg);
     virtual void SetThreshold2(unsigned short const _arg);
     virtual void SetThreshold3(unsigned short const _arg);
     virtual void SetThreshold4(unsigned short const _arg);
     virtual unsigned short GetThreshold1() const;
     virtual unsigned short GetThreshold2() const;
     virtual unsigned short GetThreshold3() const;
     virtual unsigned short GetThreshold4() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkDoubleThresholdImageFilterIUS3IUS3(itkDoubleThresholdImageFilterIUS3IUS3 const & arg0);
     void operator=(itkDoubleThresholdImageFilterIUS3IUS3 const & arg0);
   protected:
     itkDoubleThresholdImageFilterIUS3IUS3();
     ~itkDoubleThresholdImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkDoubleThresholdImageFilterIUS3IUS3_Pointer {
   public:
     itkDoubleThresholdImageFilterIUS3IUS3_Pointer();
     itkDoubleThresholdImageFilterIUS3IUS3_Pointer(itkDoubleThresholdImageFilterIUS3IUS3_Pointer const & p);
     itkDoubleThresholdImageFilterIUS3IUS3_Pointer(itkDoubleThresholdImageFilterIUS3IUS3 * p);
     ~itkDoubleThresholdImageFilterIUS3IUS3_Pointer();
     itkDoubleThresholdImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkDoubleThresholdImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkDoubleThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkDoubleThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkDoubleThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkDoubleThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     itkDoubleThresholdImageFilterIUS3IUS3_Pointer & operator=(itkDoubleThresholdImageFilterIUS3IUS3_Pointer const & r);
     itkDoubleThresholdImageFilterIUS3IUS3_Pointer & operator=(itkDoubleThresholdImageFilterIUS3IUS3 * r);
     itkDoubleThresholdImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


