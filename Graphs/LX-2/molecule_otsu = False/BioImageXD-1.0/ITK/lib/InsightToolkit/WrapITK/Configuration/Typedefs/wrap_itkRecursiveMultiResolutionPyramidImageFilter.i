// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkRecursiveMultiResolutionPyramidImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkRecursiveMultiResolutionPyramidImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkRecursiveMultiResolutionPyramidImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkRecursiveMultiResolutionPyramidImageFilterJava
#endif
#ifdef SWIGLUA
%module itkRecursiveMultiResolutionPyramidImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkRecursiveMultiResolutionPyramidImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkRecursiveMultiResolutionPyramidImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkRecursiveMultiResolutionPyramidImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkRecursiveMultiResolutionPyramidImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkRecursiveMultiResolutionPyramidImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkRecursiveMultiResolutionPyramidImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkRecursiveMultiResolutionPyramidImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkRecursiveMultiResolutionPyramidImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkRecursiveMultiResolutionPyramidImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkRecursiveMultiResolutionPyramidImageFilterPython
#endif
#ifdef SWIGR
%module itkRecursiveMultiResolutionPyramidImageFilterR
#endif
#ifdef SWIGRUBY
%module itkRecursiveMultiResolutionPyramidImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkRecursiveMultiResolutionPyramidImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkRecursiveMultiResolutionPyramidImageFilterTcl
#endif
#ifdef SWIGXML
%module itkRecursiveMultiResolutionPyramidImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Resize.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkMultiResolutionPyramidImageFilter.i


%include itk.i
%include wrap_itkRecursiveMultiResolutionPyramidImageFilter_ext.i


 class itkRecursiveMultiResolutionPyramidImageFilterID2ID2 : public itkMultiResolutionPyramidImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2(itkRecursiveMultiResolutionPyramidImageFilterID2ID2 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterID2ID2 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2();
     ~itkRecursiveMultiResolutionPyramidImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterID2ID2 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterID2ID2 * r);
     itkRecursiveMultiResolutionPyramidImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveMultiResolutionPyramidImageFilterID3ID3 : public itkMultiResolutionPyramidImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3(itkRecursiveMultiResolutionPyramidImageFilterID3ID3 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterID3ID3 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3();
     ~itkRecursiveMultiResolutionPyramidImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterID3ID3 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterID3ID3 * r);
     itkRecursiveMultiResolutionPyramidImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 : public itkMultiResolutionPyramidImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2();
     ~itkRecursiveMultiResolutionPyramidImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 * r);
     itkRecursiveMultiResolutionPyramidImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 : public itkMultiResolutionPyramidImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3();
     ~itkRecursiveMultiResolutionPyramidImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 * r);
     itkRecursiveMultiResolutionPyramidImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 : public itkMultiResolutionPyramidImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2();
     ~itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 * r);
     itkRecursiveMultiResolutionPyramidImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 : public itkMultiResolutionPyramidImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3();
     ~itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 * r);
     itkRecursiveMultiResolutionPyramidImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 : public itkMultiResolutionPyramidImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2();
     ~itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 * r);
     itkRecursiveMultiResolutionPyramidImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 : public itkMultiResolutionPyramidImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3();
     ~itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 * r);
     itkRecursiveMultiResolutionPyramidImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 : public itkMultiResolutionPyramidImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2();
     ~itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 * r);
     itkRecursiveMultiResolutionPyramidImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 : public itkMultiResolutionPyramidImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GenerateOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateInputRequestedRegion();
   private:
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 const & arg0);
     void operator=(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 const & arg0);
   protected:
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3();
     ~itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer {
   public:
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer const & p);
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 * p);
     ~itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer();
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer const & r) const;
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer const & r);
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3_Pointer & operator=(itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 * r);
     itkRecursiveMultiResolutionPyramidImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


