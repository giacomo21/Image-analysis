// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAcosImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkAcosImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkAcosImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkAcosImageFilterJava
#endif
#ifdef SWIGLUA
%module itkAcosImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkAcosImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAcosImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkAcosImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkAcosImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkAcosImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkAcosImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkAcosImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkAcosImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkAcosImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkAcosImageFilterPython
#endif
#ifdef SWIGR
%module itkAcosImageFilterR
#endif
#ifdef SWIGRUBY
%module itkAcosImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkAcosImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkAcosImageFilterTcl
#endif
#ifdef SWIGXML
%module itkAcosImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "UnaryPixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkAcosImageFilter_ext.i


 class itkAcosImageFilterID2ID2_Pointer {
   public:
     itkAcosImageFilterID2ID2_Pointer();
     itkAcosImageFilterID2ID2_Pointer(itkAcosImageFilterID2ID2_Pointer const & p);
     itkAcosImageFilterID2ID2_Pointer(itkAcosImageFilterID2ID2 * p);
     ~itkAcosImageFilterID2ID2_Pointer();
     itkAcosImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkAcosImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkAcosImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterID2ID2_Pointer const & r) const;
     itkAcosImageFilterID2ID2_Pointer & operator=(itkAcosImageFilterID2ID2_Pointer const & r);
     itkAcosImageFilterID2ID2_Pointer & operator=(itkAcosImageFilterID2ID2 * r);
     itkAcosImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkAcosImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< double, double > & GetFunctor();
     itk::Functor::Acos< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< double, double > const & functor);
   private:
     itkAcosImageFilterID2ID2_Superclass(itkAcosImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkAcosImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkAcosImageFilterID2ID2_Superclass();
     ~itkAcosImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterID2ID2_Superclass_Pointer {
   public:
     itkAcosImageFilterID2ID2_Superclass_Pointer();
     itkAcosImageFilterID2ID2_Superclass_Pointer(itkAcosImageFilterID2ID2_Superclass_Pointer const & p);
     itkAcosImageFilterID2ID2_Superclass_Pointer(itkAcosImageFilterID2ID2_Superclass * p);
     ~itkAcosImageFilterID2ID2_Superclass_Pointer();
     itkAcosImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkAcosImageFilterID2ID2_Superclass_Pointer & operator=(itkAcosImageFilterID2ID2_Superclass_Pointer const & r);
     itkAcosImageFilterID2ID2_Superclass_Pointer & operator=(itkAcosImageFilterID2ID2_Superclass * r);
     itkAcosImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterID3ID3_Pointer {
   public:
     itkAcosImageFilterID3ID3_Pointer();
     itkAcosImageFilterID3ID3_Pointer(itkAcosImageFilterID3ID3_Pointer const & p);
     itkAcosImageFilterID3ID3_Pointer(itkAcosImageFilterID3ID3 * p);
     ~itkAcosImageFilterID3ID3_Pointer();
     itkAcosImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkAcosImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkAcosImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterID3ID3_Pointer const & r) const;
     itkAcosImageFilterID3ID3_Pointer & operator=(itkAcosImageFilterID3ID3_Pointer const & r);
     itkAcosImageFilterID3ID3_Pointer & operator=(itkAcosImageFilterID3ID3 * r);
     itkAcosImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkAcosImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< double, double > & GetFunctor();
     itk::Functor::Acos< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< double, double > const & functor);
   private:
     itkAcosImageFilterID3ID3_Superclass(itkAcosImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkAcosImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkAcosImageFilterID3ID3_Superclass();
     ~itkAcosImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterID3ID3_Superclass_Pointer {
   public:
     itkAcosImageFilterID3ID3_Superclass_Pointer();
     itkAcosImageFilterID3ID3_Superclass_Pointer(itkAcosImageFilterID3ID3_Superclass_Pointer const & p);
     itkAcosImageFilterID3ID3_Superclass_Pointer(itkAcosImageFilterID3ID3_Superclass * p);
     ~itkAcosImageFilterID3ID3_Superclass_Pointer();
     itkAcosImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkAcosImageFilterID3ID3_Superclass_Pointer & operator=(itkAcosImageFilterID3ID3_Superclass_Pointer const & r);
     itkAcosImageFilterID3ID3_Superclass_Pointer & operator=(itkAcosImageFilterID3ID3_Superclass * r);
     itkAcosImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIF2IF2_Pointer {
   public:
     itkAcosImageFilterIF2IF2_Pointer();
     itkAcosImageFilterIF2IF2_Pointer(itkAcosImageFilterIF2IF2_Pointer const & p);
     itkAcosImageFilterIF2IF2_Pointer(itkAcosImageFilterIF2IF2 * p);
     ~itkAcosImageFilterIF2IF2_Pointer();
     itkAcosImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkAcosImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIF2IF2_Pointer const & r) const;
     itkAcosImageFilterIF2IF2_Pointer & operator=(itkAcosImageFilterIF2IF2_Pointer const & r);
     itkAcosImageFilterIF2IF2_Pointer & operator=(itkAcosImageFilterIF2IF2 * r);
     itkAcosImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkAcosImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< float, float > & GetFunctor();
     itk::Functor::Acos< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< float, float > const & functor);
   private:
     itkAcosImageFilterIF2IF2_Superclass(itkAcosImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkAcosImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkAcosImageFilterIF2IF2_Superclass();
     ~itkAcosImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkAcosImageFilterIF2IF2_Superclass_Pointer();
     itkAcosImageFilterIF2IF2_Superclass_Pointer(itkAcosImageFilterIF2IF2_Superclass_Pointer const & p);
     itkAcosImageFilterIF2IF2_Superclass_Pointer(itkAcosImageFilterIF2IF2_Superclass * p);
     ~itkAcosImageFilterIF2IF2_Superclass_Pointer();
     itkAcosImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkAcosImageFilterIF2IF2_Superclass_Pointer & operator=(itkAcosImageFilterIF2IF2_Superclass_Pointer const & r);
     itkAcosImageFilterIF2IF2_Superclass_Pointer & operator=(itkAcosImageFilterIF2IF2_Superclass * r);
     itkAcosImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIF3IF3_Pointer {
   public:
     itkAcosImageFilterIF3IF3_Pointer();
     itkAcosImageFilterIF3IF3_Pointer(itkAcosImageFilterIF3IF3_Pointer const & p);
     itkAcosImageFilterIF3IF3_Pointer(itkAcosImageFilterIF3IF3 * p);
     ~itkAcosImageFilterIF3IF3_Pointer();
     itkAcosImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkAcosImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIF3IF3_Pointer const & r) const;
     itkAcosImageFilterIF3IF3_Pointer & operator=(itkAcosImageFilterIF3IF3_Pointer const & r);
     itkAcosImageFilterIF3IF3_Pointer & operator=(itkAcosImageFilterIF3IF3 * r);
     itkAcosImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkAcosImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< float, float > & GetFunctor();
     itk::Functor::Acos< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< float, float > const & functor);
   private:
     itkAcosImageFilterIF3IF3_Superclass(itkAcosImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkAcosImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkAcosImageFilterIF3IF3_Superclass();
     ~itkAcosImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkAcosImageFilterIF3IF3_Superclass_Pointer();
     itkAcosImageFilterIF3IF3_Superclass_Pointer(itkAcosImageFilterIF3IF3_Superclass_Pointer const & p);
     itkAcosImageFilterIF3IF3_Superclass_Pointer(itkAcosImageFilterIF3IF3_Superclass * p);
     ~itkAcosImageFilterIF3IF3_Superclass_Pointer();
     itkAcosImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkAcosImageFilterIF3IF3_Superclass_Pointer & operator=(itkAcosImageFilterIF3IF3_Superclass_Pointer const & r);
     itkAcosImageFilterIF3IF3_Superclass_Pointer & operator=(itkAcosImageFilterIF3IF3_Superclass * r);
     itkAcosImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUC2IUC2_Pointer {
   public:
     itkAcosImageFilterIUC2IUC2_Pointer();
     itkAcosImageFilterIUC2IUC2_Pointer(itkAcosImageFilterIUC2IUC2_Pointer const & p);
     itkAcosImageFilterIUC2IUC2_Pointer(itkAcosImageFilterIUC2IUC2 * p);
     ~itkAcosImageFilterIUC2IUC2_Pointer();
     itkAcosImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkAcosImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUC2IUC2_Pointer const & r) const;
     itkAcosImageFilterIUC2IUC2_Pointer & operator=(itkAcosImageFilterIUC2IUC2_Pointer const & r);
     itkAcosImageFilterIUC2IUC2_Pointer & operator=(itkAcosImageFilterIUC2IUC2 * r);
     itkAcosImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     static itkAcosImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::Acos< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< unsigned char, unsigned char > const & functor);
   private:
     itkAcosImageFilterIUC2IUC2_Superclass(itkAcosImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkAcosImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkAcosImageFilterIUC2IUC2_Superclass();
     ~itkAcosImageFilterIUC2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkAcosImageFilterIUC2IUC2_Superclass_Pointer();
     itkAcosImageFilterIUC2IUC2_Superclass_Pointer(itkAcosImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkAcosImageFilterIUC2IUC2_Superclass_Pointer(itkAcosImageFilterIUC2IUC2_Superclass * p);
     ~itkAcosImageFilterIUC2IUC2_Superclass_Pointer();
     itkAcosImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkAcosImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkAcosImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkAcosImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkAcosImageFilterIUC2IUC2_Superclass * r);
     itkAcosImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUC3IUC3_Pointer {
   public:
     itkAcosImageFilterIUC3IUC3_Pointer();
     itkAcosImageFilterIUC3IUC3_Pointer(itkAcosImageFilterIUC3IUC3_Pointer const & p);
     itkAcosImageFilterIUC3IUC3_Pointer(itkAcosImageFilterIUC3IUC3 * p);
     ~itkAcosImageFilterIUC3IUC3_Pointer();
     itkAcosImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkAcosImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUC3IUC3_Pointer const & r) const;
     itkAcosImageFilterIUC3IUC3_Pointer & operator=(itkAcosImageFilterIUC3IUC3_Pointer const & r);
     itkAcosImageFilterIUC3IUC3_Pointer & operator=(itkAcosImageFilterIUC3IUC3 * r);
     itkAcosImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     static itkAcosImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::Acos< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< unsigned char, unsigned char > const & functor);
   private:
     itkAcosImageFilterIUC3IUC3_Superclass(itkAcosImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkAcosImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkAcosImageFilterIUC3IUC3_Superclass();
     ~itkAcosImageFilterIUC3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkAcosImageFilterIUC3IUC3_Superclass_Pointer();
     itkAcosImageFilterIUC3IUC3_Superclass_Pointer(itkAcosImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkAcosImageFilterIUC3IUC3_Superclass_Pointer(itkAcosImageFilterIUC3IUC3_Superclass * p);
     ~itkAcosImageFilterIUC3IUC3_Superclass_Pointer();
     itkAcosImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkAcosImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkAcosImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkAcosImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkAcosImageFilterIUC3IUC3_Superclass * r);
     itkAcosImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUL2IUL2_Pointer {
   public:
     itkAcosImageFilterIUL2IUL2_Pointer();
     itkAcosImageFilterIUL2IUL2_Pointer(itkAcosImageFilterIUL2IUL2_Pointer const & p);
     itkAcosImageFilterIUL2IUL2_Pointer(itkAcosImageFilterIUL2IUL2 * p);
     ~itkAcosImageFilterIUL2IUL2_Pointer();
     itkAcosImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkAcosImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUL2IUL2_Pointer const & r) const;
     itkAcosImageFilterIUL2IUL2_Pointer & operator=(itkAcosImageFilterIUL2IUL2_Pointer const & r);
     itkAcosImageFilterIUL2IUL2_Pointer & operator=(itkAcosImageFilterIUL2IUL2 * r);
     itkAcosImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     static itkAcosImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::Acos< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< unsigned long, unsigned long > const & functor);
   private:
     itkAcosImageFilterIUL2IUL2_Superclass(itkAcosImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkAcosImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkAcosImageFilterIUL2IUL2_Superclass();
     ~itkAcosImageFilterIUL2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkAcosImageFilterIUL2IUL2_Superclass_Pointer();
     itkAcosImageFilterIUL2IUL2_Superclass_Pointer(itkAcosImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkAcosImageFilterIUL2IUL2_Superclass_Pointer(itkAcosImageFilterIUL2IUL2_Superclass * p);
     ~itkAcosImageFilterIUL2IUL2_Superclass_Pointer();
     itkAcosImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkAcosImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkAcosImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkAcosImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkAcosImageFilterIUL2IUL2_Superclass * r);
     itkAcosImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUL3IUL3_Pointer {
   public:
     itkAcosImageFilterIUL3IUL3_Pointer();
     itkAcosImageFilterIUL3IUL3_Pointer(itkAcosImageFilterIUL3IUL3_Pointer const & p);
     itkAcosImageFilterIUL3IUL3_Pointer(itkAcosImageFilterIUL3IUL3 * p);
     ~itkAcosImageFilterIUL3IUL3_Pointer();
     itkAcosImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkAcosImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUL3IUL3_Pointer const & r) const;
     itkAcosImageFilterIUL3IUL3_Pointer & operator=(itkAcosImageFilterIUL3IUL3_Pointer const & r);
     itkAcosImageFilterIUL3IUL3_Pointer & operator=(itkAcosImageFilterIUL3IUL3 * r);
     itkAcosImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     static itkAcosImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::Acos< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< unsigned long, unsigned long > const & functor);
   private:
     itkAcosImageFilterIUL3IUL3_Superclass(itkAcosImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkAcosImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkAcosImageFilterIUL3IUL3_Superclass();
     ~itkAcosImageFilterIUL3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkAcosImageFilterIUL3IUL3_Superclass_Pointer();
     itkAcosImageFilterIUL3IUL3_Superclass_Pointer(itkAcosImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkAcosImageFilterIUL3IUL3_Superclass_Pointer(itkAcosImageFilterIUL3IUL3_Superclass * p);
     ~itkAcosImageFilterIUL3IUL3_Superclass_Pointer();
     itkAcosImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkAcosImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkAcosImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkAcosImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkAcosImageFilterIUL3IUL3_Superclass * r);
     itkAcosImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUS2IUS2_Pointer {
   public:
     itkAcosImageFilterIUS2IUS2_Pointer();
     itkAcosImageFilterIUS2IUS2_Pointer(itkAcosImageFilterIUS2IUS2_Pointer const & p);
     itkAcosImageFilterIUS2IUS2_Pointer(itkAcosImageFilterIUS2IUS2 * p);
     ~itkAcosImageFilterIUS2IUS2_Pointer();
     itkAcosImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkAcosImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUS2IUS2_Pointer const & r) const;
     itkAcosImageFilterIUS2IUS2_Pointer & operator=(itkAcosImageFilterIUS2IUS2_Pointer const & r);
     itkAcosImageFilterIUS2IUS2_Pointer & operator=(itkAcosImageFilterIUS2IUS2 * r);
     itkAcosImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     static itkAcosImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::Acos< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< unsigned short, unsigned short > const & functor);
   private:
     itkAcosImageFilterIUS2IUS2_Superclass(itkAcosImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkAcosImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkAcosImageFilterIUS2IUS2_Superclass();
     ~itkAcosImageFilterIUS2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkAcosImageFilterIUS2IUS2_Superclass_Pointer();
     itkAcosImageFilterIUS2IUS2_Superclass_Pointer(itkAcosImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkAcosImageFilterIUS2IUS2_Superclass_Pointer(itkAcosImageFilterIUS2IUS2_Superclass * p);
     ~itkAcosImageFilterIUS2IUS2_Superclass_Pointer();
     itkAcosImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkAcosImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkAcosImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkAcosImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkAcosImageFilterIUS2IUS2_Superclass * r);
     itkAcosImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUS3IUS3_Pointer {
   public:
     itkAcosImageFilterIUS3IUS3_Pointer();
     itkAcosImageFilterIUS3IUS3_Pointer(itkAcosImageFilterIUS3IUS3_Pointer const & p);
     itkAcosImageFilterIUS3IUS3_Pointer(itkAcosImageFilterIUS3IUS3 * p);
     ~itkAcosImageFilterIUS3IUS3_Pointer();
     itkAcosImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkAcosImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUS3IUS3_Pointer const & r) const;
     itkAcosImageFilterIUS3IUS3_Pointer & operator=(itkAcosImageFilterIUS3IUS3_Pointer const & r);
     itkAcosImageFilterIUS3IUS3_Pointer & operator=(itkAcosImageFilterIUS3IUS3 * r);
     itkAcosImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterIUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     static itkAcosImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::Acos< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::Acos< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Acos< unsigned short, unsigned short > const & functor);
   private:
     itkAcosImageFilterIUS3IUS3_Superclass(itkAcosImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkAcosImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkAcosImageFilterIUS3IUS3_Superclass();
     ~itkAcosImageFilterIUS3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAcosImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkAcosImageFilterIUS3IUS3_Superclass_Pointer();
     itkAcosImageFilterIUS3IUS3_Superclass_Pointer(itkAcosImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkAcosImageFilterIUS3IUS3_Superclass_Pointer(itkAcosImageFilterIUS3IUS3_Superclass * p);
     ~itkAcosImageFilterIUS3IUS3_Superclass_Pointer();
     itkAcosImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAcosImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkAcosImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkAcosImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkAcosImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkAcosImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkAcosImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkAcosImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkAcosImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkAcosImageFilterIUS3IUS3_Superclass * r);
     itkAcosImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAcosImageFilterID2ID2 : public itkAcosImageFilterID2ID2_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterID2ID2(itkAcosImageFilterID2ID2 const & arg0);
     void operator=(itkAcosImageFilterID2ID2 const & arg0);
   protected:
     itkAcosImageFilterID2ID2();
     ~itkAcosImageFilterID2ID2();
 };


 class itkAcosImageFilterID3ID3 : public itkAcosImageFilterID3ID3_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterID3ID3(itkAcosImageFilterID3ID3 const & arg0);
     void operator=(itkAcosImageFilterID3ID3 const & arg0);
   protected:
     itkAcosImageFilterID3ID3();
     ~itkAcosImageFilterID3ID3();
 };


 class itkAcosImageFilterIF2IF2 : public itkAcosImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterIF2IF2(itkAcosImageFilterIF2IF2 const & arg0);
     void operator=(itkAcosImageFilterIF2IF2 const & arg0);
   protected:
     itkAcosImageFilterIF2IF2();
     ~itkAcosImageFilterIF2IF2();
 };


 class itkAcosImageFilterIF3IF3 : public itkAcosImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterIF3IF3(itkAcosImageFilterIF3IF3 const & arg0);
     void operator=(itkAcosImageFilterIF3IF3 const & arg0);
   protected:
     itkAcosImageFilterIF3IF3();
     ~itkAcosImageFilterIF3IF3();
 };


 class itkAcosImageFilterIUC2IUC2 : public itkAcosImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterIUC2IUC2(itkAcosImageFilterIUC2IUC2 const & arg0);
     void operator=(itkAcosImageFilterIUC2IUC2 const & arg0);
   protected:
     itkAcosImageFilterIUC2IUC2();
     ~itkAcosImageFilterIUC2IUC2();
 };


 class itkAcosImageFilterIUC3IUC3 : public itkAcosImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterIUC3IUC3(itkAcosImageFilterIUC3IUC3 const & arg0);
     void operator=(itkAcosImageFilterIUC3IUC3 const & arg0);
   protected:
     itkAcosImageFilterIUC3IUC3();
     ~itkAcosImageFilterIUC3IUC3();
 };


 class itkAcosImageFilterIUL2IUL2 : public itkAcosImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterIUL2IUL2(itkAcosImageFilterIUL2IUL2 const & arg0);
     void operator=(itkAcosImageFilterIUL2IUL2 const & arg0);
   protected:
     itkAcosImageFilterIUL2IUL2();
     ~itkAcosImageFilterIUL2IUL2();
 };


 class itkAcosImageFilterIUL3IUL3 : public itkAcosImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterIUL3IUL3(itkAcosImageFilterIUL3IUL3 const & arg0);
     void operator=(itkAcosImageFilterIUL3IUL3 const & arg0);
   protected:
     itkAcosImageFilterIUL3IUL3();
     ~itkAcosImageFilterIUL3IUL3();
 };


 class itkAcosImageFilterIUS2IUS2 : public itkAcosImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterIUS2IUS2(itkAcosImageFilterIUS2IUS2 const & arg0);
     void operator=(itkAcosImageFilterIUS2IUS2 const & arg0);
   protected:
     itkAcosImageFilterIUS2IUS2();
     ~itkAcosImageFilterIUS2IUS2();
 };


 class itkAcosImageFilterIUS3IUS3 : public itkAcosImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  InputCovertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkAcosImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAcosImageFilterIUS3IUS3(itkAcosImageFilterIUS3IUS3 const & arg0);
     void operator=(itkAcosImageFilterIUS3IUS3 const & arg0);
   protected:
     itkAcosImageFilterIUS3IUS3();
     ~itkAcosImageFilterIUS3IUS3();
 };


