// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkScalarToRGBColormapImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkScalarToRGBColormapImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkScalarToRGBColormapImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkScalarToRGBColormapImageFilterJava
#endif
#ifdef SWIGLUA
%module itkScalarToRGBColormapImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkScalarToRGBColormapImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkScalarToRGBColormapImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkScalarToRGBColormapImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkScalarToRGBColormapImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkScalarToRGBColormapImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkScalarToRGBColormapImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkScalarToRGBColormapImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkScalarToRGBColormapImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkScalarToRGBColormapImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkScalarToRGBColormapImageFilterPython
#endif
#ifdef SWIGR
%module itkScalarToRGBColormapImageFilterR
#endif
#ifdef SWIGRUBY
%module itkScalarToRGBColormapImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkScalarToRGBColormapImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkScalarToRGBColormapImageFilterTcl
#endif
#ifdef SWIGXML
%module itkScalarToRGBColormapImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterB.i


%include itk.i
%include wrap_itkScalarToRGBColormapImageFilter_ext.i


 class itkScalarToRGBColormapImageFilterID2IRGBAUS2 : public itkImageToImageFilterID2IRGBAUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< double, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< double, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterID2IRGBAUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterID2IRGBAUS2(itkScalarToRGBColormapImageFilterID2IRGBAUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterID2IRGBAUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterID2IRGBAUS2();
     ~itkScalarToRGBColormapImageFilterID2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterID2IRGBAUS2 * p);
     ~itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterID2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterID2IRGBAUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterID2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterID2IRGBAUS2 * r);
     itkScalarToRGBColormapImageFilterID2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterID2IRGBUS2 : public itkImageToImageFilterID2IRGBUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< double, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< double, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterID2IRGBUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterID2IRGBUS2(itkScalarToRGBColormapImageFilterID2IRGBUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterID2IRGBUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterID2IRGBUS2();
     ~itkScalarToRGBColormapImageFilterID2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterID2IRGBUS2 * p);
     ~itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterID2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterID2IRGBUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterID2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterID2IRGBUS2 * r);
     itkScalarToRGBColormapImageFilterID2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterID3IRGBAUS3 : public itkImageToImageFilterID3IRGBAUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< double, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< double, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterID3IRGBAUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterID3IRGBAUS3(itkScalarToRGBColormapImageFilterID3IRGBAUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterID3IRGBAUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterID3IRGBAUS3();
     ~itkScalarToRGBColormapImageFilterID3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterID3IRGBAUS3 * p);
     ~itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterID3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterID3IRGBAUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterID3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterID3IRGBAUS3 * r);
     itkScalarToRGBColormapImageFilterID3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterID3IRGBUS3 : public itkImageToImageFilterID3IRGBUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< double, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< double, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterID3IRGBUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterID3IRGBUS3(itkScalarToRGBColormapImageFilterID3IRGBUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterID3IRGBUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterID3IRGBUS3();
     ~itkScalarToRGBColormapImageFilterID3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterID3IRGBUS3 * p);
     ~itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterID3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterID3IRGBUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterID3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterID3IRGBUS3 * r);
     itkScalarToRGBColormapImageFilterID3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIF2IRGBAUS2 : public itkImageToImageFilterIF2IRGBAUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< float, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< float, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIF2IRGBAUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2(itkScalarToRGBColormapImageFilterIF2IRGBAUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIF2IRGBAUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2();
     ~itkScalarToRGBColormapImageFilterIF2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterIF2IRGBAUS2 * p);
     ~itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIF2IRGBAUS2 * r);
     itkScalarToRGBColormapImageFilterIF2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIF2IRGBUS2 : public itkImageToImageFilterIF2IRGBUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< float, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< float, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIF2IRGBUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIF2IRGBUS2(itkScalarToRGBColormapImageFilterIF2IRGBUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIF2IRGBUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIF2IRGBUS2();
     ~itkScalarToRGBColormapImageFilterIF2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterIF2IRGBUS2 * p);
     ~itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterIF2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIF2IRGBUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterIF2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIF2IRGBUS2 * r);
     itkScalarToRGBColormapImageFilterIF2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIF3IRGBAUS3 : public itkImageToImageFilterIF3IRGBAUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< float, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< float, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIF3IRGBAUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3(itkScalarToRGBColormapImageFilterIF3IRGBAUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIF3IRGBAUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3();
     ~itkScalarToRGBColormapImageFilterIF3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterIF3IRGBAUS3 * p);
     ~itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIF3IRGBAUS3 * r);
     itkScalarToRGBColormapImageFilterIF3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIF3IRGBUS3 : public itkImageToImageFilterIF3IRGBUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< float, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< float, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIF3IRGBUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIF3IRGBUS3(itkScalarToRGBColormapImageFilterIF3IRGBUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIF3IRGBUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIF3IRGBUS3();
     ~itkScalarToRGBColormapImageFilterIF3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterIF3IRGBUS3 * p);
     ~itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterIF3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIF3IRGBUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterIF3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIF3IRGBUS3 * r);
     itkScalarToRGBColormapImageFilterIF3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUC2IRGBAUS2 : public itkImageToImageFilterIUC2IRGBAUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned char, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned char, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2();
     ~itkScalarToRGBColormapImageFilterIUC2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2 * p);
     ~itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUC2IRGBAUS2 * r);
     itkScalarToRGBColormapImageFilterIUC2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUC2IRGBUS2 : public itkImageToImageFilterIUC2IRGBUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned char, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned char, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUC2IRGBUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2(itkScalarToRGBColormapImageFilterIUC2IRGBUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUC2IRGBUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2();
     ~itkScalarToRGBColormapImageFilterIUC2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterIUC2IRGBUS2 * p);
     ~itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUC2IRGBUS2 * r);
     itkScalarToRGBColormapImageFilterIUC2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUC3IRGBAUS3 : public itkImageToImageFilterIUC3IRGBAUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned char, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned char, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3();
     ~itkScalarToRGBColormapImageFilterIUC3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3 * p);
     ~itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUC3IRGBAUS3 * r);
     itkScalarToRGBColormapImageFilterIUC3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUC3IRGBUS3 : public itkImageToImageFilterIUC3IRGBUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned char, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned char, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUC3IRGBUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3(itkScalarToRGBColormapImageFilterIUC3IRGBUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUC3IRGBUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3();
     ~itkScalarToRGBColormapImageFilterIUC3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterIUC3IRGBUS3 * p);
     ~itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUC3IRGBUS3 * r);
     itkScalarToRGBColormapImageFilterIUC3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUL2IRGBAUS2 : public itkImageToImageFilterIUL2IRGBAUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned long, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned long, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2();
     ~itkScalarToRGBColormapImageFilterIUL2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2 * p);
     ~itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUL2IRGBAUS2 * r);
     itkScalarToRGBColormapImageFilterIUL2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUL2IRGBUS2 : public itkImageToImageFilterIUL2IRGBUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned long, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned long, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUL2IRGBUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2(itkScalarToRGBColormapImageFilterIUL2IRGBUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUL2IRGBUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2();
     ~itkScalarToRGBColormapImageFilterIUL2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterIUL2IRGBUS2 * p);
     ~itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUL2IRGBUS2 * r);
     itkScalarToRGBColormapImageFilterIUL2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUL3IRGBAUS3 : public itkImageToImageFilterIUL3IRGBAUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned long, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned long, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3();
     ~itkScalarToRGBColormapImageFilterIUL3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3 * p);
     ~itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUL3IRGBAUS3 * r);
     itkScalarToRGBColormapImageFilterIUL3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUL3IRGBUS3 : public itkImageToImageFilterIUL3IRGBUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned long, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned long, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUL3IRGBUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3(itkScalarToRGBColormapImageFilterIUL3IRGBUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUL3IRGBUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3();
     ~itkScalarToRGBColormapImageFilterIUL3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterIUL3IRGBUS3 * p);
     ~itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUL3IRGBUS3 * r);
     itkScalarToRGBColormapImageFilterIUL3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUS2IRGBAUS2 : public itkImageToImageFilterIUS2IRGBAUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned short, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned short, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2();
     ~itkScalarToRGBColormapImageFilterIUS2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2 * p);
     ~itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUS2IRGBAUS2 * r);
     itkScalarToRGBColormapImageFilterIUS2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUS2IRGBUS2 : public itkImageToImageFilterIUS2IRGBUS2 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned short, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned short, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUS2IRGBUS2::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2(itkScalarToRGBColormapImageFilterIUS2IRGBUS2 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUS2IRGBUS2 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2();
     ~itkScalarToRGBColormapImageFilterIUS2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer(itkScalarToRGBColormapImageFilterIUS2IRGBUS2 * p);
     ~itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer();
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2_Pointer & operator=(itkScalarToRGBColormapImageFilterIUS2IRGBUS2 * r);
     itkScalarToRGBColormapImageFilterIUS2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUS3IRGBAUS3 : public itkImageToImageFilterIUS3IRGBAUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned short, itk::RGBAPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned short, itk::RGBAPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3();
     ~itkScalarToRGBColormapImageFilterIUS3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3 * p);
     ~itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUS3IRGBAUS3 * r);
     itkScalarToRGBColormapImageFilterIUS3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarToRGBColormapImageFilterIUS3IRGBUS3 : public itkImageToImageFilterIUS3IRGBUS3 {
   public:
     enum ColormapEnumType {  Red = 0,  Green = 1,  Blue = 2,  Grey = 3,  Hot = 4,  Cool = 5,  Spring = 6,  Summer = 7,  Autumn = 8,  Winter = 9,  Copper = 10,  Jet = 11,  HSV = 12,  OverUnder = 13 };
     static itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::SmartPointer< itk::Functor::ColormapFunctor< unsigned short, itk::RGBPixel< unsigned short > > > GetColormap();
     void SetColormap(itk::Functor::ColormapFunctor< unsigned short, itk::RGBPixel< unsigned short > > * colormap);
     void SetColormap(itkScalarToRGBColormapImageFilterIUS3IRGBUS3::ColormapEnumType arg0);
     virtual void SetUseInputImageExtremaForScaling(bool const _arg);
     virtual bool GetUseInputImageExtremaForScaling() const;
     virtual void UseInputImageExtremaForScalingOn();
     virtual void UseInputImageExtremaForScalingOff();
   private:
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3(itkScalarToRGBColormapImageFilterIUS3IRGBUS3 const & arg0);
     void operator=(itkScalarToRGBColormapImageFilterIUS3IRGBUS3 const & arg0);
   protected:
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3();
     ~itkScalarToRGBColormapImageFilterIUS3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer {
   public:
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer const & p);
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer(itkScalarToRGBColormapImageFilterIUS3IRGBUS3 * p);
     ~itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer();
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3 * GetPointer() const;
     bool operator<(itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer const & r) const;
     bool operator>(itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer const & r) const;
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer const & r);
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3_Pointer & operator=(itkScalarToRGBColormapImageFilterIUS3IRGBUS3 * r);
     itkScalarToRGBColormapImageFilterIUS3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


