// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkConstrainedValueAdditionImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkConstrainedValueAdditionImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkConstrainedValueAdditionImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkConstrainedValueAdditionImageFilterJava
#endif
#ifdef SWIGLUA
%module itkConstrainedValueAdditionImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkConstrainedValueAdditionImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkConstrainedValueAdditionImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkConstrainedValueAdditionImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkConstrainedValueAdditionImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkConstrainedValueAdditionImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkConstrainedValueAdditionImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkConstrainedValueAdditionImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkConstrainedValueAdditionImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkConstrainedValueAdditionImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkConstrainedValueAdditionImageFilterPython
#endif
#ifdef SWIGR
%module itkConstrainedValueAdditionImageFilterR
#endif
#ifdef SWIGRUBY
%module itkConstrainedValueAdditionImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkConstrainedValueAdditionImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkConstrainedValueAdditionImageFilterTcl
#endif
#ifdef SWIGXML
%module itkConstrainedValueAdditionImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "PixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkConstrainedValueAdditionImageFilter_ext.i


 class itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer();
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer(itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer const & p);
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer(itkConstrainedValueAdditionImageFilterID2ID2ID2 * p);
     ~itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer();
     itkConstrainedValueAdditionImageFilterID2ID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterID2ID2ID2 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer & operator=(itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer const & r);
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer & operator=(itkConstrainedValueAdditionImageFilterID2ID2ID2 * r);
     itkConstrainedValueAdditionImageFilterID2ID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageD2 const * image2);
     itk::Functor::ConstrainedValueAddition< double, double, double > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< double, double, double > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass();
     ~itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass * r);
     itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer();
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer(itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer const & p);
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer(itkConstrainedValueAdditionImageFilterID3ID3ID3 * p);
     ~itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer();
     itkConstrainedValueAdditionImageFilterID3ID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterID3ID3ID3 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer & operator=(itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer const & r);
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer & operator=(itkConstrainedValueAdditionImageFilterID3ID3ID3 * r);
     itkConstrainedValueAdditionImageFilterID3ID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageD3 const * image2);
     itk::Functor::ConstrainedValueAddition< double, double, double > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< double, double, double > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass();
     ~itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass * r);
     itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer();
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer(itkConstrainedValueAdditionImageFilterIF2IF2IF2 * p);
     ~itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer();
     itkConstrainedValueAdditionImageFilterIF2IF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIF2IF2IF2 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer & operator=(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer & operator=(itkConstrainedValueAdditionImageFilterIF2IF2IF2 * r);
     itkConstrainedValueAdditionImageFilterIF2IF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageF2 const * image2);
     itk::Functor::ConstrainedValueAddition< float, float, float > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< float, float, float > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass();
     ~itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass * r);
     itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer();
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer(itkConstrainedValueAdditionImageFilterIF3IF3IF3 * p);
     ~itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer();
     itkConstrainedValueAdditionImageFilterIF3IF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIF3IF3IF3 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer & operator=(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer & operator=(itkConstrainedValueAdditionImageFilterIF3IF3IF3 * r);
     itkConstrainedValueAdditionImageFilterIF3IF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     itk::Functor::ConstrainedValueAddition< float, float, float > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< float, float, float > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass();
     ~itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass * r);
     itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer();
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 * p);
     ~itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer();
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 * r);
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::ConstrainedValueAddition< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass();
     ~itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass * r);
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer();
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 * p);
     ~itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer();
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 * r);
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::ConstrainedValueAddition< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass();
     ~itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass * r);
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer();
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2 * p);
     ~itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer();
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2 * r);
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::ConstrainedValueAddition< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass();
     ~itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass * r);
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer();
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3 * p);
     ~itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer();
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3 * r);
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::ConstrainedValueAddition< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass();
     ~itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass * r);
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer();
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 * p);
     ~itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer();
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 * r);
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::ConstrainedValueAddition< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass();
     ~itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass * r);
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer();
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 * p);
     ~itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer();
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 * r);
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::ConstrainedValueAddition< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::ConstrainedValueAddition< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ConstrainedValueAddition< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass();
     ~itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer {
   public:
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer const & p);
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass * p);
     ~itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r);
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass * r);
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkConstrainedValueAdditionImageFilterID2ID2ID2 : public itkConstrainedValueAdditionImageFilterID2ID2ID2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterID2ID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterID2ID2ID2(itkConstrainedValueAdditionImageFilterID2ID2ID2 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterID2ID2ID2 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterID2ID2ID2();
     ~itkConstrainedValueAdditionImageFilterID2ID2ID2();
 };


 class itkConstrainedValueAdditionImageFilterID3ID3ID3 : public itkConstrainedValueAdditionImageFilterID3ID3ID3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterID3ID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterID3ID3ID3(itkConstrainedValueAdditionImageFilterID3ID3ID3 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterID3ID3ID3 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterID3ID3ID3();
     ~itkConstrainedValueAdditionImageFilterID3ID3ID3();
 };


 class itkConstrainedValueAdditionImageFilterIF2IF2IF2 : public itkConstrainedValueAdditionImageFilterIF2IF2IF2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterIF2IF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterIF2IF2IF2(itkConstrainedValueAdditionImageFilterIF2IF2IF2 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIF2IF2IF2 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIF2IF2IF2();
     ~itkConstrainedValueAdditionImageFilterIF2IF2IF2();
 };


 class itkConstrainedValueAdditionImageFilterIF3IF3IF3 : public itkConstrainedValueAdditionImageFilterIF3IF3IF3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterIF3IF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterIF3IF3IF3(itkConstrainedValueAdditionImageFilterIF3IF3IF3 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIF3IF3IF3 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIF3IF3IF3();
     ~itkConstrainedValueAdditionImageFilterIF3IF3IF3();
 };


 class itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 : public itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2();
     ~itkConstrainedValueAdditionImageFilterIUC2IUC2IUC2();
 };


 class itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 : public itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3();
     ~itkConstrainedValueAdditionImageFilterIUC3IUC3IUC3();
 };


 class itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2 : public itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2();
     ~itkConstrainedValueAdditionImageFilterIUL2IUL2IUL2();
 };


 class itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3 : public itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3();
     ~itkConstrainedValueAdditionImageFilterIUL3IUL3IUL3();
 };


 class itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 : public itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2();
     ~itkConstrainedValueAdditionImageFilterIUS2IUS2IUS2();
 };


 class itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 : public itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCastCheck = 1 };
     enum  {  DoubleLessThanOutputCheck = 1 };
     static itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3();
     ~itkConstrainedValueAdditionImageFilterIUS3IUS3IUS3();
 };


