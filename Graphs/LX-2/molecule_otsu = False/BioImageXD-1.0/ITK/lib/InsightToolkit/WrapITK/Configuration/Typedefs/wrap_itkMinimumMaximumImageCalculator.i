// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMinimumMaximumImageCalculatorChicken
#endif
#ifdef SWIGCSHARP
%module itkMinimumMaximumImageCalculatorCsharp
#endif
#ifdef SWIGGUILE
%module itkMinimumMaximumImageCalculatorGuile
#endif
#ifdef SWIGJAVA
%module itkMinimumMaximumImageCalculatorJava
#endif
#ifdef SWIGLUA
%module itkMinimumMaximumImageCalculatorLua
#endif
#ifdef SWIGMODULA3
%module itkMinimumMaximumImageCalculatorModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMinimumMaximumImageCalculatorMzscheme
#endif
#ifdef SWIGOCAML
%module itkMinimumMaximumImageCalculatorOcaml
#endif
#ifdef SWIGPERL
%module itkMinimumMaximumImageCalculatorPerl
#endif
#ifdef SWIGPERL5
%module itkMinimumMaximumImageCalculatorPerl5
#endif
#ifdef SWIGPHP
%module itkMinimumMaximumImageCalculatorPhp
#endif
#ifdef SWIGPHP4
%module itkMinimumMaximumImageCalculatorPhp4
#endif
#ifdef SWIGPHP5
%module itkMinimumMaximumImageCalculatorPhp5
#endif
#ifdef SWIGPIKE
%module itkMinimumMaximumImageCalculatorPike
#endif
#ifdef SWIGPYTHON
%module itkMinimumMaximumImageCalculatorPython
#endif
#ifdef SWIGR
%module itkMinimumMaximumImageCalculatorR
#endif
#ifdef SWIGRUBY
%module itkMinimumMaximumImageCalculatorRuby
#endif
#ifdef SWIGSEXP
%module itkMinimumMaximumImageCalculatorSexp
#endif
#ifdef SWIGTCL
%module itkMinimumMaximumImageCalculatorTcl
#endif
#ifdef SWIGXML
%module itkMinimumMaximumImageCalculatorXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Calculators.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_ITKRegions.i
%import wrap_itkIndex.i


%include itk.i
%include wrap_itkMinimumMaximumImageCalculator_ext.i


 class itkMinimumMaximumImageCalculatorID2 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageD2 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual double GetMinimum() const;
     virtual double GetMaximum() const;
     virtual itkIndex2 const & GetIndexOfMinimum() const;
     virtual itkIndex2 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion2 const & region);
   private:
     itkMinimumMaximumImageCalculatorID2(itkMinimumMaximumImageCalculatorID2 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorID2 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorID2();
     ~itkMinimumMaximumImageCalculatorID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorID2_Pointer {
   public:
     itkMinimumMaximumImageCalculatorID2_Pointer();
     itkMinimumMaximumImageCalculatorID2_Pointer(itkMinimumMaximumImageCalculatorID2_Pointer const & p);
     itkMinimumMaximumImageCalculatorID2_Pointer(itkMinimumMaximumImageCalculatorID2 * p);
     ~itkMinimumMaximumImageCalculatorID2_Pointer();
     itkMinimumMaximumImageCalculatorID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorID2 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorID2_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorID2_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorID2_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorID2_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorID2_Pointer & operator=(itkMinimumMaximumImageCalculatorID2_Pointer const & r);
     itkMinimumMaximumImageCalculatorID2_Pointer & operator=(itkMinimumMaximumImageCalculatorID2 * r);
     itkMinimumMaximumImageCalculatorID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumMaximumImageCalculatorID3 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageD3 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual double GetMinimum() const;
     virtual double GetMaximum() const;
     virtual itkIndex3 const & GetIndexOfMinimum() const;
     virtual itkIndex3 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion3 const & region);
   private:
     itkMinimumMaximumImageCalculatorID3(itkMinimumMaximumImageCalculatorID3 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorID3 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorID3();
     ~itkMinimumMaximumImageCalculatorID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorID3_Pointer {
   public:
     itkMinimumMaximumImageCalculatorID3_Pointer();
     itkMinimumMaximumImageCalculatorID3_Pointer(itkMinimumMaximumImageCalculatorID3_Pointer const & p);
     itkMinimumMaximumImageCalculatorID3_Pointer(itkMinimumMaximumImageCalculatorID3 * p);
     ~itkMinimumMaximumImageCalculatorID3_Pointer();
     itkMinimumMaximumImageCalculatorID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorID3 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorID3_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorID3_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorID3_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorID3_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorID3_Pointer & operator=(itkMinimumMaximumImageCalculatorID3_Pointer const & r);
     itkMinimumMaximumImageCalculatorID3_Pointer & operator=(itkMinimumMaximumImageCalculatorID3 * r);
     itkMinimumMaximumImageCalculatorID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumMaximumImageCalculatorIF2 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageF2 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual float GetMinimum() const;
     virtual float GetMaximum() const;
     virtual itkIndex2 const & GetIndexOfMinimum() const;
     virtual itkIndex2 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion2 const & region);
   private:
     itkMinimumMaximumImageCalculatorIF2(itkMinimumMaximumImageCalculatorIF2 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorIF2 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorIF2();
     ~itkMinimumMaximumImageCalculatorIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorIF2_Pointer {
   public:
     itkMinimumMaximumImageCalculatorIF2_Pointer();
     itkMinimumMaximumImageCalculatorIF2_Pointer(itkMinimumMaximumImageCalculatorIF2_Pointer const & p);
     itkMinimumMaximumImageCalculatorIF2_Pointer(itkMinimumMaximumImageCalculatorIF2 * p);
     ~itkMinimumMaximumImageCalculatorIF2_Pointer();
     itkMinimumMaximumImageCalculatorIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorIF2 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorIF2_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorIF2_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorIF2_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorIF2_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorIF2_Pointer & operator=(itkMinimumMaximumImageCalculatorIF2_Pointer const & r);
     itkMinimumMaximumImageCalculatorIF2_Pointer & operator=(itkMinimumMaximumImageCalculatorIF2 * r);
     itkMinimumMaximumImageCalculatorIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumMaximumImageCalculatorIF3 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageF3 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual float GetMinimum() const;
     virtual float GetMaximum() const;
     virtual itkIndex3 const & GetIndexOfMinimum() const;
     virtual itkIndex3 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion3 const & region);
   private:
     itkMinimumMaximumImageCalculatorIF3(itkMinimumMaximumImageCalculatorIF3 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorIF3 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorIF3();
     ~itkMinimumMaximumImageCalculatorIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorIF3_Pointer {
   public:
     itkMinimumMaximumImageCalculatorIF3_Pointer();
     itkMinimumMaximumImageCalculatorIF3_Pointer(itkMinimumMaximumImageCalculatorIF3_Pointer const & p);
     itkMinimumMaximumImageCalculatorIF3_Pointer(itkMinimumMaximumImageCalculatorIF3 * p);
     ~itkMinimumMaximumImageCalculatorIF3_Pointer();
     itkMinimumMaximumImageCalculatorIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorIF3 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorIF3_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorIF3_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorIF3_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorIF3_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorIF3_Pointer & operator=(itkMinimumMaximumImageCalculatorIF3_Pointer const & r);
     itkMinimumMaximumImageCalculatorIF3_Pointer & operator=(itkMinimumMaximumImageCalculatorIF3 * r);
     itkMinimumMaximumImageCalculatorIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumMaximumImageCalculatorIUC2 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUC2 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual unsigned char GetMinimum() const;
     virtual unsigned char GetMaximum() const;
     virtual itkIndex2 const & GetIndexOfMinimum() const;
     virtual itkIndex2 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion2 const & region);
   private:
     itkMinimumMaximumImageCalculatorIUC2(itkMinimumMaximumImageCalculatorIUC2 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorIUC2 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorIUC2();
     ~itkMinimumMaximumImageCalculatorIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorIUC2_Pointer {
   public:
     itkMinimumMaximumImageCalculatorIUC2_Pointer();
     itkMinimumMaximumImageCalculatorIUC2_Pointer(itkMinimumMaximumImageCalculatorIUC2_Pointer const & p);
     itkMinimumMaximumImageCalculatorIUC2_Pointer(itkMinimumMaximumImageCalculatorIUC2 * p);
     ~itkMinimumMaximumImageCalculatorIUC2_Pointer();
     itkMinimumMaximumImageCalculatorIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorIUC2 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorIUC2_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorIUC2_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorIUC2_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorIUC2_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorIUC2_Pointer & operator=(itkMinimumMaximumImageCalculatorIUC2_Pointer const & r);
     itkMinimumMaximumImageCalculatorIUC2_Pointer & operator=(itkMinimumMaximumImageCalculatorIUC2 * r);
     itkMinimumMaximumImageCalculatorIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumMaximumImageCalculatorIUC3 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUC3 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual unsigned char GetMinimum() const;
     virtual unsigned char GetMaximum() const;
     virtual itkIndex3 const & GetIndexOfMinimum() const;
     virtual itkIndex3 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion3 const & region);
   private:
     itkMinimumMaximumImageCalculatorIUC3(itkMinimumMaximumImageCalculatorIUC3 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorIUC3 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorIUC3();
     ~itkMinimumMaximumImageCalculatorIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorIUC3_Pointer {
   public:
     itkMinimumMaximumImageCalculatorIUC3_Pointer();
     itkMinimumMaximumImageCalculatorIUC3_Pointer(itkMinimumMaximumImageCalculatorIUC3_Pointer const & p);
     itkMinimumMaximumImageCalculatorIUC3_Pointer(itkMinimumMaximumImageCalculatorIUC3 * p);
     ~itkMinimumMaximumImageCalculatorIUC3_Pointer();
     itkMinimumMaximumImageCalculatorIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorIUC3 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorIUC3_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorIUC3_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorIUC3_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorIUC3_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorIUC3_Pointer & operator=(itkMinimumMaximumImageCalculatorIUC3_Pointer const & r);
     itkMinimumMaximumImageCalculatorIUC3_Pointer & operator=(itkMinimumMaximumImageCalculatorIUC3 * r);
     itkMinimumMaximumImageCalculatorIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumMaximumImageCalculatorIUL2 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUL2 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual unsigned long GetMinimum() const;
     virtual unsigned long GetMaximum() const;
     virtual itkIndex2 const & GetIndexOfMinimum() const;
     virtual itkIndex2 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion2 const & region);
   private:
     itkMinimumMaximumImageCalculatorIUL2(itkMinimumMaximumImageCalculatorIUL2 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorIUL2 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorIUL2();
     ~itkMinimumMaximumImageCalculatorIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorIUL2_Pointer {
   public:
     itkMinimumMaximumImageCalculatorIUL2_Pointer();
     itkMinimumMaximumImageCalculatorIUL2_Pointer(itkMinimumMaximumImageCalculatorIUL2_Pointer const & p);
     itkMinimumMaximumImageCalculatorIUL2_Pointer(itkMinimumMaximumImageCalculatorIUL2 * p);
     ~itkMinimumMaximumImageCalculatorIUL2_Pointer();
     itkMinimumMaximumImageCalculatorIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorIUL2 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorIUL2_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorIUL2_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorIUL2_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorIUL2_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorIUL2_Pointer & operator=(itkMinimumMaximumImageCalculatorIUL2_Pointer const & r);
     itkMinimumMaximumImageCalculatorIUL2_Pointer & operator=(itkMinimumMaximumImageCalculatorIUL2 * r);
     itkMinimumMaximumImageCalculatorIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumMaximumImageCalculatorIUL3 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUL3 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual unsigned long GetMinimum() const;
     virtual unsigned long GetMaximum() const;
     virtual itkIndex3 const & GetIndexOfMinimum() const;
     virtual itkIndex3 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion3 const & region);
   private:
     itkMinimumMaximumImageCalculatorIUL3(itkMinimumMaximumImageCalculatorIUL3 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorIUL3 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorIUL3();
     ~itkMinimumMaximumImageCalculatorIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorIUL3_Pointer {
   public:
     itkMinimumMaximumImageCalculatorIUL3_Pointer();
     itkMinimumMaximumImageCalculatorIUL3_Pointer(itkMinimumMaximumImageCalculatorIUL3_Pointer const & p);
     itkMinimumMaximumImageCalculatorIUL3_Pointer(itkMinimumMaximumImageCalculatorIUL3 * p);
     ~itkMinimumMaximumImageCalculatorIUL3_Pointer();
     itkMinimumMaximumImageCalculatorIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorIUL3 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorIUL3_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorIUL3_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorIUL3_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorIUL3_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorIUL3_Pointer & operator=(itkMinimumMaximumImageCalculatorIUL3_Pointer const & r);
     itkMinimumMaximumImageCalculatorIUL3_Pointer & operator=(itkMinimumMaximumImageCalculatorIUL3 * r);
     itkMinimumMaximumImageCalculatorIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumMaximumImageCalculatorIUS2 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUS2 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual unsigned short GetMinimum() const;
     virtual unsigned short GetMaximum() const;
     virtual itkIndex2 const & GetIndexOfMinimum() const;
     virtual itkIndex2 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion2 const & region);
   private:
     itkMinimumMaximumImageCalculatorIUS2(itkMinimumMaximumImageCalculatorIUS2 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorIUS2 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorIUS2();
     ~itkMinimumMaximumImageCalculatorIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorIUS2_Pointer {
   public:
     itkMinimumMaximumImageCalculatorIUS2_Pointer();
     itkMinimumMaximumImageCalculatorIUS2_Pointer(itkMinimumMaximumImageCalculatorIUS2_Pointer const & p);
     itkMinimumMaximumImageCalculatorIUS2_Pointer(itkMinimumMaximumImageCalculatorIUS2 * p);
     ~itkMinimumMaximumImageCalculatorIUS2_Pointer();
     itkMinimumMaximumImageCalculatorIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorIUS2 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorIUS2_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorIUS2_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorIUS2_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorIUS2_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorIUS2_Pointer & operator=(itkMinimumMaximumImageCalculatorIUS2_Pointer const & r);
     itkMinimumMaximumImageCalculatorIUS2_Pointer & operator=(itkMinimumMaximumImageCalculatorIUS2 * r);
     itkMinimumMaximumImageCalculatorIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMinimumMaximumImageCalculatorIUS3 : public itkObject {
   public:
     static itkMinimumMaximumImageCalculatorIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetImage(itkImageUS3 const * _arg);
     void ComputeMinimum();
     void ComputeMaximum();
     void Compute();
     virtual unsigned short GetMinimum() const;
     virtual unsigned short GetMaximum() const;
     virtual itkIndex3 const & GetIndexOfMinimum() const;
     virtual itkIndex3 const & GetIndexOfMaximum() const;
     void SetRegion(itkImageRegion3 const & region);
   private:
     itkMinimumMaximumImageCalculatorIUS3(itkMinimumMaximumImageCalculatorIUS3 const & arg0);
     void operator=(itkMinimumMaximumImageCalculatorIUS3 const & arg0);
   protected:
     itkMinimumMaximumImageCalculatorIUS3();
     ~itkMinimumMaximumImageCalculatorIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMinimumMaximumImageCalculatorIUS3_Pointer {
   public:
     itkMinimumMaximumImageCalculatorIUS3_Pointer();
     itkMinimumMaximumImageCalculatorIUS3_Pointer(itkMinimumMaximumImageCalculatorIUS3_Pointer const & p);
     itkMinimumMaximumImageCalculatorIUS3_Pointer(itkMinimumMaximumImageCalculatorIUS3 * p);
     ~itkMinimumMaximumImageCalculatorIUS3_Pointer();
     itkMinimumMaximumImageCalculatorIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMinimumMaximumImageCalculatorIUS3 * GetPointer() const;
     bool operator<(itkMinimumMaximumImageCalculatorIUS3_Pointer const & r) const;
     bool operator>(itkMinimumMaximumImageCalculatorIUS3_Pointer const & r) const;
     bool operator<=(itkMinimumMaximumImageCalculatorIUS3_Pointer const & r) const;
     bool operator>=(itkMinimumMaximumImageCalculatorIUS3_Pointer const & r) const;
     itkMinimumMaximumImageCalculatorIUS3_Pointer & operator=(itkMinimumMaximumImageCalculatorIUS3_Pointer const & r);
     itkMinimumMaximumImageCalculatorIUS3_Pointer & operator=(itkMinimumMaximumImageCalculatorIUS3 * r);
     itkMinimumMaximumImageCalculatorIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


