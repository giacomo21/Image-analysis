# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkAdditiveGaussianNoiseImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkAdditiveGaussianNoiseImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkAdditiveGaussianNoiseImageFilterPython
            return _itkAdditiveGaussianNoiseImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkAdditiveGaussianNoiseImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkAdditiveGaussianNoiseImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkAdditiveGaussianNoiseImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkAdditiveGaussianNoiseImageFilterID3ID3_New():
  return itkAdditiveGaussianNoiseImageFilterID3ID3.New()

def itkAdditiveGaussianNoiseImageFilterID2ID2_New():
  return itkAdditiveGaussianNoiseImageFilterID2ID2.New()

def itkAdditiveGaussianNoiseImageFilterIF3IF3_New():
  return itkAdditiveGaussianNoiseImageFilterIF3IF3.New()

def itkAdditiveGaussianNoiseImageFilterIF2IF2_New():
  return itkAdditiveGaussianNoiseImageFilterIF2IF2.New()

def itkAdditiveGaussianNoiseImageFilterIUS3IUS3_New():
  return itkAdditiveGaussianNoiseImageFilterIUS3IUS3.New()

def itkAdditiveGaussianNoiseImageFilterIUS2IUS2_New():
  return itkAdditiveGaussianNoiseImageFilterIUS2IUS2.New()

def itkAdditiveGaussianNoiseImageFilterIUL3IUL3_New():
  return itkAdditiveGaussianNoiseImageFilterIUL3IUL3.New()

def itkAdditiveGaussianNoiseImageFilterIUL2IUL2_New():
  return itkAdditiveGaussianNoiseImageFilterIUL2IUL2.New()

def itkAdditiveGaussianNoiseImageFilterIUC3IUC3_New():
  return itkAdditiveGaussianNoiseImageFilterIUC3IUC3.New()

def itkAdditiveGaussianNoiseImageFilterIUC2IUC2_New():
  return itkAdditiveGaussianNoiseImageFilterIUC2IUC2.New()

class itkAdditiveGaussianNoiseImageFilterID2ID2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterID2ID2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterID2ID2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterID2ID2
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterID2ID2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_GetMean,None,itkAdditiveGaussianNoiseImageFilterID2ID2)
itkAdditiveGaussianNoiseImageFilterID2ID2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_SetMean,None,itkAdditiveGaussianNoiseImageFilterID2ID2)
itkAdditiveGaussianNoiseImageFilterID2ID2.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterID2ID2)
itkAdditiveGaussianNoiseImageFilterID2ID2.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterID2ID2)
itkAdditiveGaussianNoiseImageFilterID2ID2.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_GetPointer,None,itkAdditiveGaussianNoiseImageFilterID2ID2)
itkAdditiveGaussianNoiseImageFilterID2ID2_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_swigregister
itkAdditiveGaussianNoiseImageFilterID2ID2_swigregister(itkAdditiveGaussianNoiseImageFilterID2ID2)

def itkAdditiveGaussianNoiseImageFilterID2ID2___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterID2ID2___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2___New_orig__()

def itkAdditiveGaussianNoiseImageFilterID2ID2_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterID2ID2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterID2ID2"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID2ID2_cast(*args)

class itkAdditiveGaussianNoiseImageFilterID3ID3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterID3ID3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterID3ID3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterID3ID3
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterID3ID3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_GetMean,None,itkAdditiveGaussianNoiseImageFilterID3ID3)
itkAdditiveGaussianNoiseImageFilterID3ID3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_SetMean,None,itkAdditiveGaussianNoiseImageFilterID3ID3)
itkAdditiveGaussianNoiseImageFilterID3ID3.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterID3ID3)
itkAdditiveGaussianNoiseImageFilterID3ID3.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterID3ID3)
itkAdditiveGaussianNoiseImageFilterID3ID3.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_GetPointer,None,itkAdditiveGaussianNoiseImageFilterID3ID3)
itkAdditiveGaussianNoiseImageFilterID3ID3_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_swigregister
itkAdditiveGaussianNoiseImageFilterID3ID3_swigregister(itkAdditiveGaussianNoiseImageFilterID3ID3)

def itkAdditiveGaussianNoiseImageFilterID3ID3___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterID3ID3___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3___New_orig__()

def itkAdditiveGaussianNoiseImageFilterID3ID3_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterID3ID3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterID3ID3"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterID3ID3_cast(*args)

class itkAdditiveGaussianNoiseImageFilterIF2IF2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIF2IF2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterIF2IF2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIF2IF2
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIF2IF2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetMean,None,itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_SetMean,None,itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_GetPointer,None,itkAdditiveGaussianNoiseImageFilterIF2IF2)
itkAdditiveGaussianNoiseImageFilterIF2IF2_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_swigregister
itkAdditiveGaussianNoiseImageFilterIF2IF2_swigregister(itkAdditiveGaussianNoiseImageFilterIF2IF2)

def itkAdditiveGaussianNoiseImageFilterIF2IF2___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterIF2IF2___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIF2IF2_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterIF2IF2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIF2IF2"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF2IF2_cast(*args)

class itkAdditiveGaussianNoiseImageFilterIF3IF3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIF3IF3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterIF3IF3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIF3IF3
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIF3IF3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetMean,None,itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_SetMean,None,itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_GetPointer,None,itkAdditiveGaussianNoiseImageFilterIF3IF3)
itkAdditiveGaussianNoiseImageFilterIF3IF3_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_swigregister
itkAdditiveGaussianNoiseImageFilterIF3IF3_swigregister(itkAdditiveGaussianNoiseImageFilterIF3IF3)

def itkAdditiveGaussianNoiseImageFilterIF3IF3___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterIF3IF3___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIF3IF3_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterIF3IF3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIF3IF3"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIF3IF3_cast(*args)

class itkAdditiveGaussianNoiseImageFilterIUC2IUC2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIUC2IUC2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetMean,None,itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_SetMean,None,itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_GetPointer,None,itkAdditiveGaussianNoiseImageFilterIUC2IUC2)
itkAdditiveGaussianNoiseImageFilterIUC2IUC2_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_swigregister
itkAdditiveGaussianNoiseImageFilterIUC2IUC2_swigregister(itkAdditiveGaussianNoiseImageFilterIUC2IUC2)

def itkAdditiveGaussianNoiseImageFilterIUC2IUC2___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterIUC2IUC2___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIUC2IUC2_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUC2IUC2"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC2IUC2_cast(*args)

class itkAdditiveGaussianNoiseImageFilterIUC3IUC3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIUC3IUC3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetMean,None,itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_SetMean,None,itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_GetPointer,None,itkAdditiveGaussianNoiseImageFilterIUC3IUC3)
itkAdditiveGaussianNoiseImageFilterIUC3IUC3_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_swigregister
itkAdditiveGaussianNoiseImageFilterIUC3IUC3_swigregister(itkAdditiveGaussianNoiseImageFilterIUC3IUC3)

def itkAdditiveGaussianNoiseImageFilterIUC3IUC3___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterIUC3IUC3___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIUC3IUC3_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUC3IUC3"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUC3IUC3_cast(*args)

class itkAdditiveGaussianNoiseImageFilterIUL2IUL2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUL2IUL2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterIUL2IUL2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIUL2IUL2
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIUL2IUL2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_GetMean,None,itkAdditiveGaussianNoiseImageFilterIUL2IUL2)
itkAdditiveGaussianNoiseImageFilterIUL2IUL2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_SetMean,None,itkAdditiveGaussianNoiseImageFilterIUL2IUL2)
itkAdditiveGaussianNoiseImageFilterIUL2IUL2.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUL2IUL2)
itkAdditiveGaussianNoiseImageFilterIUL2IUL2.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUL2IUL2)
itkAdditiveGaussianNoiseImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_GetPointer,None,itkAdditiveGaussianNoiseImageFilterIUL2IUL2)
itkAdditiveGaussianNoiseImageFilterIUL2IUL2_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_swigregister
itkAdditiveGaussianNoiseImageFilterIUL2IUL2_swigregister(itkAdditiveGaussianNoiseImageFilterIUL2IUL2)

def itkAdditiveGaussianNoiseImageFilterIUL2IUL2___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterIUL2IUL2___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIUL2IUL2_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUL2IUL2"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL2IUL2_cast(*args)

class itkAdditiveGaussianNoiseImageFilterIUL3IUL3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUL3IUL3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterIUL3IUL3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIUL3IUL3
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIUL3IUL3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_GetMean,None,itkAdditiveGaussianNoiseImageFilterIUL3IUL3)
itkAdditiveGaussianNoiseImageFilterIUL3IUL3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_SetMean,None,itkAdditiveGaussianNoiseImageFilterIUL3IUL3)
itkAdditiveGaussianNoiseImageFilterIUL3IUL3.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUL3IUL3)
itkAdditiveGaussianNoiseImageFilterIUL3IUL3.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUL3IUL3)
itkAdditiveGaussianNoiseImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_GetPointer,None,itkAdditiveGaussianNoiseImageFilterIUL3IUL3)
itkAdditiveGaussianNoiseImageFilterIUL3IUL3_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_swigregister
itkAdditiveGaussianNoiseImageFilterIUL3IUL3_swigregister(itkAdditiveGaussianNoiseImageFilterIUL3IUL3)

def itkAdditiveGaussianNoiseImageFilterIUL3IUL3___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterIUL3IUL3___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIUL3IUL3_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUL3IUL3"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUL3IUL3_cast(*args)

class itkAdditiveGaussianNoiseImageFilterIUS2IUS2(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUS2IUS2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterIUS2IUS2"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIUS2IUS2
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIUS2IUS2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_GetMean,None,itkAdditiveGaussianNoiseImageFilterIUS2IUS2)
itkAdditiveGaussianNoiseImageFilterIUS2IUS2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_SetMean,None,itkAdditiveGaussianNoiseImageFilterIUS2IUS2)
itkAdditiveGaussianNoiseImageFilterIUS2IUS2.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUS2IUS2)
itkAdditiveGaussianNoiseImageFilterIUS2IUS2.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUS2IUS2)
itkAdditiveGaussianNoiseImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_GetPointer,None,itkAdditiveGaussianNoiseImageFilterIUS2IUS2)
itkAdditiveGaussianNoiseImageFilterIUS2IUS2_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_swigregister
itkAdditiveGaussianNoiseImageFilterIUS2IUS2_swigregister(itkAdditiveGaussianNoiseImageFilterIUS2IUS2)

def itkAdditiveGaussianNoiseImageFilterIUS2IUS2___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterIUS2IUS2___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIUS2IUS2_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUS2IUS2"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS2IUS2_cast(*args)

class itkAdditiveGaussianNoiseImageFilterIUS3IUS3(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkAdditiveGaussianNoiseImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToOutputCheck = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMean(self):
        """GetMean(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_GetMean(self)

    def SetMean(self, *args):
        """SetMean(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_SetMean(self, *args)

    def GetStandardDeviation(self):
        """GetStandardDeviation(self) -> double"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_GetStandardDeviation(self)

    def SetStandardDeviation(self, *args):
        """SetStandardDeviation(self, double _arg)"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_SetStandardDeviation(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseImageFilterPython.delete_itkAdditiveGaussianNoiseImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUS3IUS3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAdditiveGaussianNoiseImageFilterIUS3IUS3"""
        return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseImageFilterIUS3IUS3
        
        Create a new object of the class itkAdditiveGaussianNoiseImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAdditiveGaussianNoiseImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAdditiveGaussianNoiseImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseImageFilterIUS3IUS3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_GetMean,None,itkAdditiveGaussianNoiseImageFilterIUS3IUS3)
itkAdditiveGaussianNoiseImageFilterIUS3IUS3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_SetMean,None,itkAdditiveGaussianNoiseImageFilterIUS3IUS3)
itkAdditiveGaussianNoiseImageFilterIUS3IUS3.GetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_GetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUS3IUS3)
itkAdditiveGaussianNoiseImageFilterIUS3IUS3.SetStandardDeviation = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_SetStandardDeviation,None,itkAdditiveGaussianNoiseImageFilterIUS3IUS3)
itkAdditiveGaussianNoiseImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_GetPointer,None,itkAdditiveGaussianNoiseImageFilterIUS3IUS3)
itkAdditiveGaussianNoiseImageFilterIUS3IUS3_swigregister = _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_swigregister
itkAdditiveGaussianNoiseImageFilterIUS3IUS3_swigregister(itkAdditiveGaussianNoiseImageFilterIUS3IUS3)

def itkAdditiveGaussianNoiseImageFilterIUS3IUS3___New_orig__():
  """itkAdditiveGaussianNoiseImageFilterIUS3IUS3___New_orig__()"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3___New_orig__()

def itkAdditiveGaussianNoiseImageFilterIUS3IUS3_cast(*args):
  """itkAdditiveGaussianNoiseImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseImageFilterIUS3IUS3"""
  return _itkAdditiveGaussianNoiseImageFilterPython.itkAdditiveGaussianNoiseImageFilterIUS3IUS3_cast(*args)



