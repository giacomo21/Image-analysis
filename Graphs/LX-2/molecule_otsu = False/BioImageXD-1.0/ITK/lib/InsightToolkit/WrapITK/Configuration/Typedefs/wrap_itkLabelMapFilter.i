// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_itkStatisticsLabelObject.i
%import wrap_itkLabelMap.i
%import wrap_ITKLabelMapBase.i
%import wrap_ITKRegions.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkLabelMapFilter_ext.i


 class itkLabelMapFilterLM2ID2 : public itkImageToImageFilterLM2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM2ID2(itkLabelMapFilterLM2ID2 const & arg0);
     void operator=(itkLabelMapFilterLM2ID2 const & arg0);
   protected:
     itkLabelMapFilterLM2ID2();
     ~itkLabelMapFilterLM2ID2();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual itkLabelMap2 * GetLabelMap();
 };


 class itkLabelMapFilterLM2ID2_Pointer {
   public:
     itkLabelMapFilterLM2ID2_Pointer();
     itkLabelMapFilterLM2ID2_Pointer(itkLabelMapFilterLM2ID2_Pointer const & p);
     itkLabelMapFilterLM2ID2_Pointer(itkLabelMapFilterLM2ID2 * p);
     ~itkLabelMapFilterLM2ID2_Pointer();
     itkLabelMapFilterLM2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM2ID2 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM2ID2_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM2ID2_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM2ID2_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM2ID2_Pointer const & r) const;
     itkLabelMapFilterLM2ID2_Pointer & operator=(itkLabelMapFilterLM2ID2_Pointer const & r);
     itkLabelMapFilterLM2ID2_Pointer & operator=(itkLabelMapFilterLM2ID2 * r);
     itkLabelMapFilterLM2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM2IF2 : public itkImageToImageFilterLM2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM2IF2(itkLabelMapFilterLM2IF2 const & arg0);
     void operator=(itkLabelMapFilterLM2IF2 const & arg0);
   protected:
     itkLabelMapFilterLM2IF2();
     ~itkLabelMapFilterLM2IF2();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual itkLabelMap2 * GetLabelMap();
 };


 class itkLabelMapFilterLM2IF2_Pointer {
   public:
     itkLabelMapFilterLM2IF2_Pointer();
     itkLabelMapFilterLM2IF2_Pointer(itkLabelMapFilterLM2IF2_Pointer const & p);
     itkLabelMapFilterLM2IF2_Pointer(itkLabelMapFilterLM2IF2 * p);
     ~itkLabelMapFilterLM2IF2_Pointer();
     itkLabelMapFilterLM2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM2IF2 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM2IF2_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM2IF2_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM2IF2_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM2IF2_Pointer const & r) const;
     itkLabelMapFilterLM2IF2_Pointer & operator=(itkLabelMapFilterLM2IF2_Pointer const & r);
     itkLabelMapFilterLM2IF2_Pointer & operator=(itkLabelMapFilterLM2IF2 * r);
     itkLabelMapFilterLM2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM2IRGBUS2 : public itkImageToImageFilterLM2IRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM2IRGBUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM2IRGBUS2(itkLabelMapFilterLM2IRGBUS2 const & arg0);
     void operator=(itkLabelMapFilterLM2IRGBUS2 const & arg0);
   protected:
     itkLabelMapFilterLM2IRGBUS2();
     ~itkLabelMapFilterLM2IRGBUS2();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual itkLabelMap2 * GetLabelMap();
 };


 class itkLabelMapFilterLM2IRGBUS2_Pointer {
   public:
     itkLabelMapFilterLM2IRGBUS2_Pointer();
     itkLabelMapFilterLM2IRGBUS2_Pointer(itkLabelMapFilterLM2IRGBUS2_Pointer const & p);
     itkLabelMapFilterLM2IRGBUS2_Pointer(itkLabelMapFilterLM2IRGBUS2 * p);
     ~itkLabelMapFilterLM2IRGBUS2_Pointer();
     itkLabelMapFilterLM2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM2IRGBUS2 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM2IRGBUS2_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM2IRGBUS2_Pointer const & r) const;
     itkLabelMapFilterLM2IRGBUS2_Pointer & operator=(itkLabelMapFilterLM2IRGBUS2_Pointer const & r);
     itkLabelMapFilterLM2IRGBUS2_Pointer & operator=(itkLabelMapFilterLM2IRGBUS2 * r);
     itkLabelMapFilterLM2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM2IUC2 : public itkImageToImageFilterLM2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM2IUC2(itkLabelMapFilterLM2IUC2 const & arg0);
     void operator=(itkLabelMapFilterLM2IUC2 const & arg0);
   protected:
     itkLabelMapFilterLM2IUC2();
     ~itkLabelMapFilterLM2IUC2();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual itkLabelMap2 * GetLabelMap();
 };


 class itkLabelMapFilterLM2IUC2_Pointer {
   public:
     itkLabelMapFilterLM2IUC2_Pointer();
     itkLabelMapFilterLM2IUC2_Pointer(itkLabelMapFilterLM2IUC2_Pointer const & p);
     itkLabelMapFilterLM2IUC2_Pointer(itkLabelMapFilterLM2IUC2 * p);
     ~itkLabelMapFilterLM2IUC2_Pointer();
     itkLabelMapFilterLM2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM2IUC2 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM2IUC2_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM2IUC2_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM2IUC2_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM2IUC2_Pointer const & r) const;
     itkLabelMapFilterLM2IUC2_Pointer & operator=(itkLabelMapFilterLM2IUC2_Pointer const & r);
     itkLabelMapFilterLM2IUC2_Pointer & operator=(itkLabelMapFilterLM2IUC2 * r);
     itkLabelMapFilterLM2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM2IUL2 : public itkImageToImageFilterLM2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM2IUL2(itkLabelMapFilterLM2IUL2 const & arg0);
     void operator=(itkLabelMapFilterLM2IUL2 const & arg0);
   protected:
     itkLabelMapFilterLM2IUL2();
     ~itkLabelMapFilterLM2IUL2();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual itkLabelMap2 * GetLabelMap();
 };


 class itkLabelMapFilterLM2IUL2_Pointer {
   public:
     itkLabelMapFilterLM2IUL2_Pointer();
     itkLabelMapFilterLM2IUL2_Pointer(itkLabelMapFilterLM2IUL2_Pointer const & p);
     itkLabelMapFilterLM2IUL2_Pointer(itkLabelMapFilterLM2IUL2 * p);
     ~itkLabelMapFilterLM2IUL2_Pointer();
     itkLabelMapFilterLM2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM2IUL2 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM2IUL2_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM2IUL2_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM2IUL2_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM2IUL2_Pointer const & r) const;
     itkLabelMapFilterLM2IUL2_Pointer & operator=(itkLabelMapFilterLM2IUL2_Pointer const & r);
     itkLabelMapFilterLM2IUL2_Pointer & operator=(itkLabelMapFilterLM2IUL2 * r);
     itkLabelMapFilterLM2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM2IUS2 : public itkImageToImageFilterLM2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM2IUS2(itkLabelMapFilterLM2IUS2 const & arg0);
     void operator=(itkLabelMapFilterLM2IUS2 const & arg0);
   protected:
     itkLabelMapFilterLM2IUS2();
     ~itkLabelMapFilterLM2IUS2();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual itkLabelMap2 * GetLabelMap();
 };


 class itkLabelMapFilterLM2IUS2_Pointer {
   public:
     itkLabelMapFilterLM2IUS2_Pointer();
     itkLabelMapFilterLM2IUS2_Pointer(itkLabelMapFilterLM2IUS2_Pointer const & p);
     itkLabelMapFilterLM2IUS2_Pointer(itkLabelMapFilterLM2IUS2 * p);
     ~itkLabelMapFilterLM2IUS2_Pointer();
     itkLabelMapFilterLM2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM2IUS2 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM2IUS2_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM2IUS2_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM2IUS2_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM2IUS2_Pointer const & r) const;
     itkLabelMapFilterLM2IUS2_Pointer & operator=(itkLabelMapFilterLM2IUS2_Pointer const & r);
     itkLabelMapFilterLM2IUS2_Pointer & operator=(itkLabelMapFilterLM2IUS2 * r);
     itkLabelMapFilterLM2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM2LM2 : public itkImageToImageFilterLM2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM2LM2(itkLabelMapFilterLM2LM2 const & arg0);
     void operator=(itkLabelMapFilterLM2LM2 const & arg0);
   protected:
     itkLabelMapFilterLM2LM2();
     ~itkLabelMapFilterLM2LM2();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL2 * labelObject);
     virtual itkLabelMap2 * GetLabelMap();
 };


 class itkLabelMapFilterLM2LM2_Pointer {
   public:
     itkLabelMapFilterLM2LM2_Pointer();
     itkLabelMapFilterLM2LM2_Pointer(itkLabelMapFilterLM2LM2_Pointer const & p);
     itkLabelMapFilterLM2LM2_Pointer(itkLabelMapFilterLM2LM2 * p);
     ~itkLabelMapFilterLM2LM2_Pointer();
     itkLabelMapFilterLM2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM2LM2 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM2LM2_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM2LM2_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM2LM2_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM2LM2_Pointer const & r) const;
     itkLabelMapFilterLM2LM2_Pointer & operator=(itkLabelMapFilterLM2LM2_Pointer const & r);
     itkLabelMapFilterLM2LM2_Pointer & operator=(itkLabelMapFilterLM2LM2 * r);
     itkLabelMapFilterLM2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM3ID3 : public itkImageToImageFilterLM3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM3ID3(itkLabelMapFilterLM3ID3 const & arg0);
     void operator=(itkLabelMapFilterLM3ID3 const & arg0);
   protected:
     itkLabelMapFilterLM3ID3();
     ~itkLabelMapFilterLM3ID3();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual itkLabelMap3 * GetLabelMap();
 };


 class itkLabelMapFilterLM3ID3_Pointer {
   public:
     itkLabelMapFilterLM3ID3_Pointer();
     itkLabelMapFilterLM3ID3_Pointer(itkLabelMapFilterLM3ID3_Pointer const & p);
     itkLabelMapFilterLM3ID3_Pointer(itkLabelMapFilterLM3ID3 * p);
     ~itkLabelMapFilterLM3ID3_Pointer();
     itkLabelMapFilterLM3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM3ID3 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM3ID3_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM3ID3_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM3ID3_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM3ID3_Pointer const & r) const;
     itkLabelMapFilterLM3ID3_Pointer & operator=(itkLabelMapFilterLM3ID3_Pointer const & r);
     itkLabelMapFilterLM3ID3_Pointer & operator=(itkLabelMapFilterLM3ID3 * r);
     itkLabelMapFilterLM3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM3IF3 : public itkImageToImageFilterLM3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM3IF3(itkLabelMapFilterLM3IF3 const & arg0);
     void operator=(itkLabelMapFilterLM3IF3 const & arg0);
   protected:
     itkLabelMapFilterLM3IF3();
     ~itkLabelMapFilterLM3IF3();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual itkLabelMap3 * GetLabelMap();
 };


 class itkLabelMapFilterLM3IF3_Pointer {
   public:
     itkLabelMapFilterLM3IF3_Pointer();
     itkLabelMapFilterLM3IF3_Pointer(itkLabelMapFilterLM3IF3_Pointer const & p);
     itkLabelMapFilterLM3IF3_Pointer(itkLabelMapFilterLM3IF3 * p);
     ~itkLabelMapFilterLM3IF3_Pointer();
     itkLabelMapFilterLM3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM3IF3 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM3IF3_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM3IF3_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM3IF3_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM3IF3_Pointer const & r) const;
     itkLabelMapFilterLM3IF3_Pointer & operator=(itkLabelMapFilterLM3IF3_Pointer const & r);
     itkLabelMapFilterLM3IF3_Pointer & operator=(itkLabelMapFilterLM3IF3 * r);
     itkLabelMapFilterLM3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM3IRGBUS3 : public itkImageToImageFilterLM3IRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM3IRGBUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM3IRGBUS3(itkLabelMapFilterLM3IRGBUS3 const & arg0);
     void operator=(itkLabelMapFilterLM3IRGBUS3 const & arg0);
   protected:
     itkLabelMapFilterLM3IRGBUS3();
     ~itkLabelMapFilterLM3IRGBUS3();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual itkLabelMap3 * GetLabelMap();
 };


 class itkLabelMapFilterLM3IRGBUS3_Pointer {
   public:
     itkLabelMapFilterLM3IRGBUS3_Pointer();
     itkLabelMapFilterLM3IRGBUS3_Pointer(itkLabelMapFilterLM3IRGBUS3_Pointer const & p);
     itkLabelMapFilterLM3IRGBUS3_Pointer(itkLabelMapFilterLM3IRGBUS3 * p);
     ~itkLabelMapFilterLM3IRGBUS3_Pointer();
     itkLabelMapFilterLM3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM3IRGBUS3 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM3IRGBUS3_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM3IRGBUS3_Pointer const & r) const;
     itkLabelMapFilterLM3IRGBUS3_Pointer & operator=(itkLabelMapFilterLM3IRGBUS3_Pointer const & r);
     itkLabelMapFilterLM3IRGBUS3_Pointer & operator=(itkLabelMapFilterLM3IRGBUS3 * r);
     itkLabelMapFilterLM3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM3IUC3 : public itkImageToImageFilterLM3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM3IUC3(itkLabelMapFilterLM3IUC3 const & arg0);
     void operator=(itkLabelMapFilterLM3IUC3 const & arg0);
   protected:
     itkLabelMapFilterLM3IUC3();
     ~itkLabelMapFilterLM3IUC3();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual itkLabelMap3 * GetLabelMap();
 };


 class itkLabelMapFilterLM3IUC3_Pointer {
   public:
     itkLabelMapFilterLM3IUC3_Pointer();
     itkLabelMapFilterLM3IUC3_Pointer(itkLabelMapFilterLM3IUC3_Pointer const & p);
     itkLabelMapFilterLM3IUC3_Pointer(itkLabelMapFilterLM3IUC3 * p);
     ~itkLabelMapFilterLM3IUC3_Pointer();
     itkLabelMapFilterLM3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM3IUC3 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM3IUC3_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM3IUC3_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM3IUC3_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM3IUC3_Pointer const & r) const;
     itkLabelMapFilterLM3IUC3_Pointer & operator=(itkLabelMapFilterLM3IUC3_Pointer const & r);
     itkLabelMapFilterLM3IUC3_Pointer & operator=(itkLabelMapFilterLM3IUC3 * r);
     itkLabelMapFilterLM3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM3IUL3 : public itkImageToImageFilterLM3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM3IUL3(itkLabelMapFilterLM3IUL3 const & arg0);
     void operator=(itkLabelMapFilterLM3IUL3 const & arg0);
   protected:
     itkLabelMapFilterLM3IUL3();
     ~itkLabelMapFilterLM3IUL3();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual itkLabelMap3 * GetLabelMap();
 };


 class itkLabelMapFilterLM3IUL3_Pointer {
   public:
     itkLabelMapFilterLM3IUL3_Pointer();
     itkLabelMapFilterLM3IUL3_Pointer(itkLabelMapFilterLM3IUL3_Pointer const & p);
     itkLabelMapFilterLM3IUL3_Pointer(itkLabelMapFilterLM3IUL3 * p);
     ~itkLabelMapFilterLM3IUL3_Pointer();
     itkLabelMapFilterLM3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM3IUL3 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM3IUL3_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM3IUL3_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM3IUL3_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM3IUL3_Pointer const & r) const;
     itkLabelMapFilterLM3IUL3_Pointer & operator=(itkLabelMapFilterLM3IUL3_Pointer const & r);
     itkLabelMapFilterLM3IUL3_Pointer & operator=(itkLabelMapFilterLM3IUL3 * r);
     itkLabelMapFilterLM3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM3IUS3 : public itkImageToImageFilterLM3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM3IUS3(itkLabelMapFilterLM3IUS3 const & arg0);
     void operator=(itkLabelMapFilterLM3IUS3 const & arg0);
   protected:
     itkLabelMapFilterLM3IUS3();
     ~itkLabelMapFilterLM3IUS3();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual itkLabelMap3 * GetLabelMap();
 };


 class itkLabelMapFilterLM3IUS3_Pointer {
   public:
     itkLabelMapFilterLM3IUS3_Pointer();
     itkLabelMapFilterLM3IUS3_Pointer(itkLabelMapFilterLM3IUS3_Pointer const & p);
     itkLabelMapFilterLM3IUS3_Pointer(itkLabelMapFilterLM3IUS3 * p);
     ~itkLabelMapFilterLM3IUS3_Pointer();
     itkLabelMapFilterLM3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM3IUS3 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM3IUS3_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM3IUS3_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM3IUS3_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM3IUS3_Pointer const & r) const;
     itkLabelMapFilterLM3IUS3_Pointer & operator=(itkLabelMapFilterLM3IUS3_Pointer const & r);
     itkLabelMapFilterLM3IUS3_Pointer & operator=(itkLabelMapFilterLM3IUS3 * r);
     itkLabelMapFilterLM3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelMapFilterLM3LM3 : public itkImageToImageFilterLM3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLabelMapFilterLM3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
   private:
     itkLabelMapFilterLM3LM3(itkLabelMapFilterLM3LM3 const & arg0);
     void operator=(itkLabelMapFilterLM3LM3 const & arg0);
   protected:
     itkLabelMapFilterLM3LM3();
     ~itkLabelMapFilterLM3LM3();
     virtual void BeforeThreadedGenerateData();
     virtual void AfterThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void ThreadedProcessLabelObject(itkStatisticsLabelObjectUL3 * labelObject);
     virtual itkLabelMap3 * GetLabelMap();
 };


 class itkLabelMapFilterLM3LM3_Pointer {
   public:
     itkLabelMapFilterLM3LM3_Pointer();
     itkLabelMapFilterLM3LM3_Pointer(itkLabelMapFilterLM3LM3_Pointer const & p);
     itkLabelMapFilterLM3LM3_Pointer(itkLabelMapFilterLM3LM3 * p);
     ~itkLabelMapFilterLM3LM3_Pointer();
     itkLabelMapFilterLM3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelMapFilterLM3LM3 * GetPointer() const;
     bool operator<(itkLabelMapFilterLM3LM3_Pointer const & r) const;
     bool operator>(itkLabelMapFilterLM3LM3_Pointer const & r) const;
     bool operator<=(itkLabelMapFilterLM3LM3_Pointer const & r) const;
     bool operator>=(itkLabelMapFilterLM3LM3_Pointer const & r) const;
     itkLabelMapFilterLM3LM3_Pointer & operator=(itkLabelMapFilterLM3LM3_Pointer const & r);
     itkLabelMapFilterLM3LM3_Pointer & operator=(itkLabelMapFilterLM3LM3 * r);
     itkLabelMapFilterLM3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


