// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkThresholdImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkThresholdImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkThresholdImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkThresholdImageFilterJava
#endif
#ifdef SWIGLUA
%module itkThresholdImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkThresholdImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkThresholdImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkThresholdImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkThresholdImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkThresholdImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkThresholdImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkThresholdImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkThresholdImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkThresholdImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkThresholdImageFilterPython
#endif
#ifdef SWIGR
%module itkThresholdImageFilterR
#endif
#ifdef SWIGRUBY
%module itkThresholdImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkThresholdImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkThresholdImageFilterTcl
#endif
#ifdef SWIGXML
%module itkThresholdImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkThresholdImageFilter_ext.i


 class itkThresholdImageFilterID2 : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     void ThresholdAbove(double const & thresh);
     void ThresholdBelow(double const & thresh);
     void ThresholdOutside(double const & lower, double const & upper);
     virtual void SetLower(double const _arg);
     virtual double GetLower() const;
     virtual void SetUpper(double const _arg);
     virtual double GetUpper() const;
   private:
     itkThresholdImageFilterID2(itkThresholdImageFilterID2 const & arg0);
     void operator=(itkThresholdImageFilterID2 const & arg0);
   protected:
     itkThresholdImageFilterID2();
     ~itkThresholdImageFilterID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterID2_Pointer {
   public:
     itkThresholdImageFilterID2_Pointer();
     itkThresholdImageFilterID2_Pointer(itkThresholdImageFilterID2_Pointer const & p);
     itkThresholdImageFilterID2_Pointer(itkThresholdImageFilterID2 * p);
     ~itkThresholdImageFilterID2_Pointer();
     itkThresholdImageFilterID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterID2 * GetPointer() const;
     bool operator<(itkThresholdImageFilterID2_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterID2_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterID2_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterID2_Pointer const & r) const;
     itkThresholdImageFilterID2_Pointer & operator=(itkThresholdImageFilterID2_Pointer const & r);
     itkThresholdImageFilterID2_Pointer & operator=(itkThresholdImageFilterID2 * r);
     itkThresholdImageFilterID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdImageFilterID3 : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double GetOutsideValue() const;
     void ThresholdAbove(double const & thresh);
     void ThresholdBelow(double const & thresh);
     void ThresholdOutside(double const & lower, double const & upper);
     virtual void SetLower(double const _arg);
     virtual double GetLower() const;
     virtual void SetUpper(double const _arg);
     virtual double GetUpper() const;
   private:
     itkThresholdImageFilterID3(itkThresholdImageFilterID3 const & arg0);
     void operator=(itkThresholdImageFilterID3 const & arg0);
   protected:
     itkThresholdImageFilterID3();
     ~itkThresholdImageFilterID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterID3_Pointer {
   public:
     itkThresholdImageFilterID3_Pointer();
     itkThresholdImageFilterID3_Pointer(itkThresholdImageFilterID3_Pointer const & p);
     itkThresholdImageFilterID3_Pointer(itkThresholdImageFilterID3 * p);
     ~itkThresholdImageFilterID3_Pointer();
     itkThresholdImageFilterID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterID3 * GetPointer() const;
     bool operator<(itkThresholdImageFilterID3_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterID3_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterID3_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterID3_Pointer const & r) const;
     itkThresholdImageFilterID3_Pointer & operator=(itkThresholdImageFilterID3_Pointer const & r);
     itkThresholdImageFilterID3_Pointer & operator=(itkThresholdImageFilterID3 * r);
     itkThresholdImageFilterID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdImageFilterIF2 : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     void ThresholdAbove(float const & thresh);
     void ThresholdBelow(float const & thresh);
     void ThresholdOutside(float const & lower, float const & upper);
     virtual void SetLower(float const _arg);
     virtual float GetLower() const;
     virtual void SetUpper(float const _arg);
     virtual float GetUpper() const;
   private:
     itkThresholdImageFilterIF2(itkThresholdImageFilterIF2 const & arg0);
     void operator=(itkThresholdImageFilterIF2 const & arg0);
   protected:
     itkThresholdImageFilterIF2();
     ~itkThresholdImageFilterIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterIF2_Pointer {
   public:
     itkThresholdImageFilterIF2_Pointer();
     itkThresholdImageFilterIF2_Pointer(itkThresholdImageFilterIF2_Pointer const & p);
     itkThresholdImageFilterIF2_Pointer(itkThresholdImageFilterIF2 * p);
     ~itkThresholdImageFilterIF2_Pointer();
     itkThresholdImageFilterIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterIF2 * GetPointer() const;
     bool operator<(itkThresholdImageFilterIF2_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterIF2_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterIF2_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterIF2_Pointer const & r) const;
     itkThresholdImageFilterIF2_Pointer & operator=(itkThresholdImageFilterIF2_Pointer const & r);
     itkThresholdImageFilterIF2_Pointer & operator=(itkThresholdImageFilterIF2 * r);
     itkThresholdImageFilterIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdImageFilterIF3 : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float GetOutsideValue() const;
     void ThresholdAbove(float const & thresh);
     void ThresholdBelow(float const & thresh);
     void ThresholdOutside(float const & lower, float const & upper);
     virtual void SetLower(float const _arg);
     virtual float GetLower() const;
     virtual void SetUpper(float const _arg);
     virtual float GetUpper() const;
   private:
     itkThresholdImageFilterIF3(itkThresholdImageFilterIF3 const & arg0);
     void operator=(itkThresholdImageFilterIF3 const & arg0);
   protected:
     itkThresholdImageFilterIF3();
     ~itkThresholdImageFilterIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterIF3_Pointer {
   public:
     itkThresholdImageFilterIF3_Pointer();
     itkThresholdImageFilterIF3_Pointer(itkThresholdImageFilterIF3_Pointer const & p);
     itkThresholdImageFilterIF3_Pointer(itkThresholdImageFilterIF3 * p);
     ~itkThresholdImageFilterIF3_Pointer();
     itkThresholdImageFilterIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterIF3 * GetPointer() const;
     bool operator<(itkThresholdImageFilterIF3_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterIF3_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterIF3_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterIF3_Pointer const & r) const;
     itkThresholdImageFilterIF3_Pointer & operator=(itkThresholdImageFilterIF3_Pointer const & r);
     itkThresholdImageFilterIF3_Pointer & operator=(itkThresholdImageFilterIF3 * r);
     itkThresholdImageFilterIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdImageFilterIUC2 : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     void ThresholdAbove(unsigned char const & thresh);
     void ThresholdBelow(unsigned char const & thresh);
     void ThresholdOutside(unsigned char const & lower, unsigned char const & upper);
     virtual void SetLower(unsigned char const _arg);
     virtual unsigned char GetLower() const;
     virtual void SetUpper(unsigned char const _arg);
     virtual unsigned char GetUpper() const;
   private:
     itkThresholdImageFilterIUC2(itkThresholdImageFilterIUC2 const & arg0);
     void operator=(itkThresholdImageFilterIUC2 const & arg0);
   protected:
     itkThresholdImageFilterIUC2();
     ~itkThresholdImageFilterIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterIUC2_Pointer {
   public:
     itkThresholdImageFilterIUC2_Pointer();
     itkThresholdImageFilterIUC2_Pointer(itkThresholdImageFilterIUC2_Pointer const & p);
     itkThresholdImageFilterIUC2_Pointer(itkThresholdImageFilterIUC2 * p);
     ~itkThresholdImageFilterIUC2_Pointer();
     itkThresholdImageFilterIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterIUC2 * GetPointer() const;
     bool operator<(itkThresholdImageFilterIUC2_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterIUC2_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterIUC2_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterIUC2_Pointer const & r) const;
     itkThresholdImageFilterIUC2_Pointer & operator=(itkThresholdImageFilterIUC2_Pointer const & r);
     itkThresholdImageFilterIUC2_Pointer & operator=(itkThresholdImageFilterIUC2 * r);
     itkThresholdImageFilterIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdImageFilterIUC3 : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char GetOutsideValue() const;
     void ThresholdAbove(unsigned char const & thresh);
     void ThresholdBelow(unsigned char const & thresh);
     void ThresholdOutside(unsigned char const & lower, unsigned char const & upper);
     virtual void SetLower(unsigned char const _arg);
     virtual unsigned char GetLower() const;
     virtual void SetUpper(unsigned char const _arg);
     virtual unsigned char GetUpper() const;
   private:
     itkThresholdImageFilterIUC3(itkThresholdImageFilterIUC3 const & arg0);
     void operator=(itkThresholdImageFilterIUC3 const & arg0);
   protected:
     itkThresholdImageFilterIUC3();
     ~itkThresholdImageFilterIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterIUC3_Pointer {
   public:
     itkThresholdImageFilterIUC3_Pointer();
     itkThresholdImageFilterIUC3_Pointer(itkThresholdImageFilterIUC3_Pointer const & p);
     itkThresholdImageFilterIUC3_Pointer(itkThresholdImageFilterIUC3 * p);
     ~itkThresholdImageFilterIUC3_Pointer();
     itkThresholdImageFilterIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterIUC3 * GetPointer() const;
     bool operator<(itkThresholdImageFilterIUC3_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterIUC3_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterIUC3_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterIUC3_Pointer const & r) const;
     itkThresholdImageFilterIUC3_Pointer & operator=(itkThresholdImageFilterIUC3_Pointer const & r);
     itkThresholdImageFilterIUC3_Pointer & operator=(itkThresholdImageFilterIUC3 * r);
     itkThresholdImageFilterIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdImageFilterIUL2 : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     void ThresholdAbove(unsigned long const & thresh);
     void ThresholdBelow(unsigned long const & thresh);
     void ThresholdOutside(unsigned long const & lower, unsigned long const & upper);
     virtual void SetLower(unsigned long const _arg);
     virtual unsigned long GetLower() const;
     virtual void SetUpper(unsigned long const _arg);
     virtual unsigned long GetUpper() const;
   private:
     itkThresholdImageFilterIUL2(itkThresholdImageFilterIUL2 const & arg0);
     void operator=(itkThresholdImageFilterIUL2 const & arg0);
   protected:
     itkThresholdImageFilterIUL2();
     ~itkThresholdImageFilterIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterIUL2_Pointer {
   public:
     itkThresholdImageFilterIUL2_Pointer();
     itkThresholdImageFilterIUL2_Pointer(itkThresholdImageFilterIUL2_Pointer const & p);
     itkThresholdImageFilterIUL2_Pointer(itkThresholdImageFilterIUL2 * p);
     ~itkThresholdImageFilterIUL2_Pointer();
     itkThresholdImageFilterIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterIUL2 * GetPointer() const;
     bool operator<(itkThresholdImageFilterIUL2_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterIUL2_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterIUL2_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterIUL2_Pointer const & r) const;
     itkThresholdImageFilterIUL2_Pointer & operator=(itkThresholdImageFilterIUL2_Pointer const & r);
     itkThresholdImageFilterIUL2_Pointer & operator=(itkThresholdImageFilterIUL2 * r);
     itkThresholdImageFilterIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdImageFilterIUL3 : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long GetOutsideValue() const;
     void ThresholdAbove(unsigned long const & thresh);
     void ThresholdBelow(unsigned long const & thresh);
     void ThresholdOutside(unsigned long const & lower, unsigned long const & upper);
     virtual void SetLower(unsigned long const _arg);
     virtual unsigned long GetLower() const;
     virtual void SetUpper(unsigned long const _arg);
     virtual unsigned long GetUpper() const;
   private:
     itkThresholdImageFilterIUL3(itkThresholdImageFilterIUL3 const & arg0);
     void operator=(itkThresholdImageFilterIUL3 const & arg0);
   protected:
     itkThresholdImageFilterIUL3();
     ~itkThresholdImageFilterIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterIUL3_Pointer {
   public:
     itkThresholdImageFilterIUL3_Pointer();
     itkThresholdImageFilterIUL3_Pointer(itkThresholdImageFilterIUL3_Pointer const & p);
     itkThresholdImageFilterIUL3_Pointer(itkThresholdImageFilterIUL3 * p);
     ~itkThresholdImageFilterIUL3_Pointer();
     itkThresholdImageFilterIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterIUL3 * GetPointer() const;
     bool operator<(itkThresholdImageFilterIUL3_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterIUL3_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterIUL3_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterIUL3_Pointer const & r) const;
     itkThresholdImageFilterIUL3_Pointer & operator=(itkThresholdImageFilterIUL3_Pointer const & r);
     itkThresholdImageFilterIUL3_Pointer & operator=(itkThresholdImageFilterIUL3 * r);
     itkThresholdImageFilterIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdImageFilterIUS2 : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     void ThresholdAbove(unsigned short const & thresh);
     void ThresholdBelow(unsigned short const & thresh);
     void ThresholdOutside(unsigned short const & lower, unsigned short const & upper);
     virtual void SetLower(unsigned short const _arg);
     virtual unsigned short GetLower() const;
     virtual void SetUpper(unsigned short const _arg);
     virtual unsigned short GetUpper() const;
   private:
     itkThresholdImageFilterIUS2(itkThresholdImageFilterIUS2 const & arg0);
     void operator=(itkThresholdImageFilterIUS2 const & arg0);
   protected:
     itkThresholdImageFilterIUS2();
     ~itkThresholdImageFilterIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterIUS2_Pointer {
   public:
     itkThresholdImageFilterIUS2_Pointer();
     itkThresholdImageFilterIUS2_Pointer(itkThresholdImageFilterIUS2_Pointer const & p);
     itkThresholdImageFilterIUS2_Pointer(itkThresholdImageFilterIUS2 * p);
     ~itkThresholdImageFilterIUS2_Pointer();
     itkThresholdImageFilterIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterIUS2 * GetPointer() const;
     bool operator<(itkThresholdImageFilterIUS2_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterIUS2_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterIUS2_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterIUS2_Pointer const & r) const;
     itkThresholdImageFilterIUS2_Pointer & operator=(itkThresholdImageFilterIUS2_Pointer const & r);
     itkThresholdImageFilterIUS2_Pointer & operator=(itkThresholdImageFilterIUS2 * r);
     itkThresholdImageFilterIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdImageFilterIUS3 : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  PixelTypeComparableCheck = 1 };
     enum  {  PixelTypeOStreamWritableCheck = 1 };
     static itkThresholdImageFilterIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short GetOutsideValue() const;
     void ThresholdAbove(unsigned short const & thresh);
     void ThresholdBelow(unsigned short const & thresh);
     void ThresholdOutside(unsigned short const & lower, unsigned short const & upper);
     virtual void SetLower(unsigned short const _arg);
     virtual unsigned short GetLower() const;
     virtual void SetUpper(unsigned short const _arg);
     virtual unsigned short GetUpper() const;
   private:
     itkThresholdImageFilterIUS3(itkThresholdImageFilterIUS3 const & arg0);
     void operator=(itkThresholdImageFilterIUS3 const & arg0);
   protected:
     itkThresholdImageFilterIUS3();
     ~itkThresholdImageFilterIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdImageFilterIUS3_Pointer {
   public:
     itkThresholdImageFilterIUS3_Pointer();
     itkThresholdImageFilterIUS3_Pointer(itkThresholdImageFilterIUS3_Pointer const & p);
     itkThresholdImageFilterIUS3_Pointer(itkThresholdImageFilterIUS3 * p);
     ~itkThresholdImageFilterIUS3_Pointer();
     itkThresholdImageFilterIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdImageFilterIUS3 * GetPointer() const;
     bool operator<(itkThresholdImageFilterIUS3_Pointer const & r) const;
     bool operator>(itkThresholdImageFilterIUS3_Pointer const & r) const;
     bool operator<=(itkThresholdImageFilterIUS3_Pointer const & r) const;
     bool operator>=(itkThresholdImageFilterIUS3_Pointer const & r) const;
     itkThresholdImageFilterIUS3_Pointer & operator=(itkThresholdImageFilterIUS3_Pointer const & r);
     itkThresholdImageFilterIUS3_Pointer & operator=(itkThresholdImageFilterIUS3 * r);
     itkThresholdImageFilterIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


