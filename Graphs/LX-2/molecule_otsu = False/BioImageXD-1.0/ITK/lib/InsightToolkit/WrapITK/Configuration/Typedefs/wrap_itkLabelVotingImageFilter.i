// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkLabelVotingImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkLabelVotingImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkLabelVotingImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkLabelVotingImageFilterJava
#endif
#ifdef SWIGLUA
%module itkLabelVotingImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkLabelVotingImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkLabelVotingImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkLabelVotingImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkLabelVotingImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkLabelVotingImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkLabelVotingImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkLabelVotingImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkLabelVotingImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkLabelVotingImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkLabelVotingImageFilterPython
#endif
#ifdef SWIGR
%module itkLabelVotingImageFilterR
#endif
#ifdef SWIGRUBY
%module itkLabelVotingImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkLabelVotingImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkLabelVotingImageFilterTcl
#endif
#ifdef SWIGXML
%module itkLabelVotingImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkLabelVotingImageFilter_ext.i


 class itkLabelVotingImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToUnsignedIntCheck = 1 };
     enum  {  IntConvertibleToOutputPixelType = 1 };
     enum  {  InputPlusIntCheck = 1 };
     enum  {  InputIncrementDecrementOperatorsCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkLabelVotingImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetLabelForUndecidedPixels(unsigned char const l);
     unsigned char GetLabelForUndecidedPixels() const;
     void UnsetLabelForUndecidedPixels();
   private:
     itkLabelVotingImageFilterIUC2IUC2(itkLabelVotingImageFilterIUC2IUC2 const & arg0);
     void operator=(itkLabelVotingImageFilterIUC2IUC2 const & arg0);
   protected:
     itkLabelVotingImageFilterIUC2IUC2();
     ~itkLabelVotingImageFilterIUC2IUC2();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     unsigned char ComputeMaximumInputValue();
 };


 class itkLabelVotingImageFilterIUC2IUC2_Pointer {
   public:
     itkLabelVotingImageFilterIUC2IUC2_Pointer();
     itkLabelVotingImageFilterIUC2IUC2_Pointer(itkLabelVotingImageFilterIUC2IUC2_Pointer const & p);
     itkLabelVotingImageFilterIUC2IUC2_Pointer(itkLabelVotingImageFilterIUC2IUC2 * p);
     ~itkLabelVotingImageFilterIUC2IUC2_Pointer();
     itkLabelVotingImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelVotingImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkLabelVotingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkLabelVotingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkLabelVotingImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkLabelVotingImageFilterIUC2IUC2_Pointer const & r) const;
     itkLabelVotingImageFilterIUC2IUC2_Pointer & operator=(itkLabelVotingImageFilterIUC2IUC2_Pointer const & r);
     itkLabelVotingImageFilterIUC2IUC2_Pointer & operator=(itkLabelVotingImageFilterIUC2IUC2 * r);
     itkLabelVotingImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelVotingImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToUnsignedIntCheck = 1 };
     enum  {  IntConvertibleToOutputPixelType = 1 };
     enum  {  InputPlusIntCheck = 1 };
     enum  {  InputIncrementDecrementOperatorsCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkLabelVotingImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetLabelForUndecidedPixels(unsigned char const l);
     unsigned char GetLabelForUndecidedPixels() const;
     void UnsetLabelForUndecidedPixels();
   private:
     itkLabelVotingImageFilterIUC3IUC3(itkLabelVotingImageFilterIUC3IUC3 const & arg0);
     void operator=(itkLabelVotingImageFilterIUC3IUC3 const & arg0);
   protected:
     itkLabelVotingImageFilterIUC3IUC3();
     ~itkLabelVotingImageFilterIUC3IUC3();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     unsigned char ComputeMaximumInputValue();
 };


 class itkLabelVotingImageFilterIUC3IUC3_Pointer {
   public:
     itkLabelVotingImageFilterIUC3IUC3_Pointer();
     itkLabelVotingImageFilterIUC3IUC3_Pointer(itkLabelVotingImageFilterIUC3IUC3_Pointer const & p);
     itkLabelVotingImageFilterIUC3IUC3_Pointer(itkLabelVotingImageFilterIUC3IUC3 * p);
     ~itkLabelVotingImageFilterIUC3IUC3_Pointer();
     itkLabelVotingImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelVotingImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkLabelVotingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkLabelVotingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkLabelVotingImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkLabelVotingImageFilterIUC3IUC3_Pointer const & r) const;
     itkLabelVotingImageFilterIUC3IUC3_Pointer & operator=(itkLabelVotingImageFilterIUC3IUC3_Pointer const & r);
     itkLabelVotingImageFilterIUC3IUC3_Pointer & operator=(itkLabelVotingImageFilterIUC3IUC3 * r);
     itkLabelVotingImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelVotingImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToUnsignedIntCheck = 1 };
     enum  {  IntConvertibleToOutputPixelType = 1 };
     enum  {  InputPlusIntCheck = 1 };
     enum  {  InputIncrementDecrementOperatorsCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkLabelVotingImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetLabelForUndecidedPixels(unsigned long const l);
     unsigned long GetLabelForUndecidedPixels() const;
     void UnsetLabelForUndecidedPixels();
   private:
     itkLabelVotingImageFilterIUL2IUL2(itkLabelVotingImageFilterIUL2IUL2 const & arg0);
     void operator=(itkLabelVotingImageFilterIUL2IUL2 const & arg0);
   protected:
     itkLabelVotingImageFilterIUL2IUL2();
     ~itkLabelVotingImageFilterIUL2IUL2();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     unsigned long ComputeMaximumInputValue();
 };


 class itkLabelVotingImageFilterIUL2IUL2_Pointer {
   public:
     itkLabelVotingImageFilterIUL2IUL2_Pointer();
     itkLabelVotingImageFilterIUL2IUL2_Pointer(itkLabelVotingImageFilterIUL2IUL2_Pointer const & p);
     itkLabelVotingImageFilterIUL2IUL2_Pointer(itkLabelVotingImageFilterIUL2IUL2 * p);
     ~itkLabelVotingImageFilterIUL2IUL2_Pointer();
     itkLabelVotingImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelVotingImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkLabelVotingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkLabelVotingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkLabelVotingImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkLabelVotingImageFilterIUL2IUL2_Pointer const & r) const;
     itkLabelVotingImageFilterIUL2IUL2_Pointer & operator=(itkLabelVotingImageFilterIUL2IUL2_Pointer const & r);
     itkLabelVotingImageFilterIUL2IUL2_Pointer & operator=(itkLabelVotingImageFilterIUL2IUL2 * r);
     itkLabelVotingImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelVotingImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToUnsignedIntCheck = 1 };
     enum  {  IntConvertibleToOutputPixelType = 1 };
     enum  {  InputPlusIntCheck = 1 };
     enum  {  InputIncrementDecrementOperatorsCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkLabelVotingImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetLabelForUndecidedPixels(unsigned long const l);
     unsigned long GetLabelForUndecidedPixels() const;
     void UnsetLabelForUndecidedPixels();
   private:
     itkLabelVotingImageFilterIUL3IUL3(itkLabelVotingImageFilterIUL3IUL3 const & arg0);
     void operator=(itkLabelVotingImageFilterIUL3IUL3 const & arg0);
   protected:
     itkLabelVotingImageFilterIUL3IUL3();
     ~itkLabelVotingImageFilterIUL3IUL3();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     unsigned long ComputeMaximumInputValue();
 };


 class itkLabelVotingImageFilterIUL3IUL3_Pointer {
   public:
     itkLabelVotingImageFilterIUL3IUL3_Pointer();
     itkLabelVotingImageFilterIUL3IUL3_Pointer(itkLabelVotingImageFilterIUL3IUL3_Pointer const & p);
     itkLabelVotingImageFilterIUL3IUL3_Pointer(itkLabelVotingImageFilterIUL3IUL3 * p);
     ~itkLabelVotingImageFilterIUL3IUL3_Pointer();
     itkLabelVotingImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelVotingImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkLabelVotingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkLabelVotingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkLabelVotingImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkLabelVotingImageFilterIUL3IUL3_Pointer const & r) const;
     itkLabelVotingImageFilterIUL3IUL3_Pointer & operator=(itkLabelVotingImageFilterIUL3IUL3_Pointer const & r);
     itkLabelVotingImageFilterIUL3IUL3_Pointer & operator=(itkLabelVotingImageFilterIUL3IUL3 * r);
     itkLabelVotingImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelVotingImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToUnsignedIntCheck = 1 };
     enum  {  IntConvertibleToOutputPixelType = 1 };
     enum  {  InputPlusIntCheck = 1 };
     enum  {  InputIncrementDecrementOperatorsCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkLabelVotingImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetLabelForUndecidedPixels(unsigned short const l);
     unsigned short GetLabelForUndecidedPixels() const;
     void UnsetLabelForUndecidedPixels();
   private:
     itkLabelVotingImageFilterIUS2IUS2(itkLabelVotingImageFilterIUS2IUS2 const & arg0);
     void operator=(itkLabelVotingImageFilterIUS2IUS2 const & arg0);
   protected:
     itkLabelVotingImageFilterIUS2IUS2();
     ~itkLabelVotingImageFilterIUS2IUS2();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     unsigned short ComputeMaximumInputValue();
 };


 class itkLabelVotingImageFilterIUS2IUS2_Pointer {
   public:
     itkLabelVotingImageFilterIUS2IUS2_Pointer();
     itkLabelVotingImageFilterIUS2IUS2_Pointer(itkLabelVotingImageFilterIUS2IUS2_Pointer const & p);
     itkLabelVotingImageFilterIUS2IUS2_Pointer(itkLabelVotingImageFilterIUS2IUS2 * p);
     ~itkLabelVotingImageFilterIUS2IUS2_Pointer();
     itkLabelVotingImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelVotingImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkLabelVotingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkLabelVotingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkLabelVotingImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkLabelVotingImageFilterIUS2IUS2_Pointer const & r) const;
     itkLabelVotingImageFilterIUS2IUS2_Pointer & operator=(itkLabelVotingImageFilterIUS2IUS2_Pointer const & r);
     itkLabelVotingImageFilterIUS2IUS2_Pointer & operator=(itkLabelVotingImageFilterIUS2IUS2 * r);
     itkLabelVotingImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLabelVotingImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputConvertibleToUnsignedIntCheck = 1 };
     enum  {  IntConvertibleToOutputPixelType = 1 };
     enum  {  InputPlusIntCheck = 1 };
     enum  {  InputIncrementDecrementOperatorsCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkLabelVotingImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetLabelForUndecidedPixels(unsigned short const l);
     unsigned short GetLabelForUndecidedPixels() const;
     void UnsetLabelForUndecidedPixels();
   private:
     itkLabelVotingImageFilterIUS3IUS3(itkLabelVotingImageFilterIUS3IUS3 const & arg0);
     void operator=(itkLabelVotingImageFilterIUS3IUS3 const & arg0);
   protected:
     itkLabelVotingImageFilterIUS3IUS3();
     ~itkLabelVotingImageFilterIUS3IUS3();
     virtual void BeforeThreadedGenerateData();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & arg0, itkIndent arg1) const;
     unsigned short ComputeMaximumInputValue();
 };


 class itkLabelVotingImageFilterIUS3IUS3_Pointer {
   public:
     itkLabelVotingImageFilterIUS3IUS3_Pointer();
     itkLabelVotingImageFilterIUS3IUS3_Pointer(itkLabelVotingImageFilterIUS3IUS3_Pointer const & p);
     itkLabelVotingImageFilterIUS3IUS3_Pointer(itkLabelVotingImageFilterIUS3IUS3 * p);
     ~itkLabelVotingImageFilterIUS3IUS3_Pointer();
     itkLabelVotingImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLabelVotingImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkLabelVotingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkLabelVotingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkLabelVotingImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkLabelVotingImageFilterIUS3IUS3_Pointer const & r) const;
     itkLabelVotingImageFilterIUS3IUS3_Pointer & operator=(itkLabelVotingImageFilterIUS3IUS3_Pointer const & r);
     itkLabelVotingImageFilterIUS3IUS3_Pointer & operator=(itkLabelVotingImageFilterIUS3IUS3 * r);
     itkLabelVotingImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


