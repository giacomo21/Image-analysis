// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAntiAliasBinaryImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkAntiAliasBinaryImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkAntiAliasBinaryImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkAntiAliasBinaryImageFilterJava
#endif
#ifdef SWIGLUA
%module itkAntiAliasBinaryImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkAntiAliasBinaryImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAntiAliasBinaryImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkAntiAliasBinaryImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkAntiAliasBinaryImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkAntiAliasBinaryImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkAntiAliasBinaryImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkAntiAliasBinaryImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkAntiAliasBinaryImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkAntiAliasBinaryImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkAntiAliasBinaryImageFilterPython
#endif
#ifdef SWIGR
%module itkAntiAliasBinaryImageFilterR
#endif
#ifdef SWIGRUBY
%module itkAntiAliasBinaryImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkAntiAliasBinaryImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkAntiAliasBinaryImageFilterTcl
#endif
#ifdef SWIGXML
%module itkAntiAliasBinaryImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkIndex.i
%import wrap_itkSparseFieldLevelSetImageFilter.i


%include itk.i
%include wrap_itkAntiAliasBinaryImageFilter_ext.i


 class itkAntiAliasBinaryImageFilterID2ID2 : public itkSparseFieldLevelSetImageFilterID2ID2 {
   public:
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkAntiAliasBinaryImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetUpperBinaryValue() const;
     virtual double GetLowerBinaryValue() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
   private:
     itkAntiAliasBinaryImageFilterID2ID2(itkAntiAliasBinaryImageFilterID2ID2 const & arg0);
     void operator=(itkAntiAliasBinaryImageFilterID2ID2 const & arg0);
   protected:
     itkAntiAliasBinaryImageFilterID2ID2();
     ~itkAntiAliasBinaryImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual double CalculateUpdateValue(itkIndex2 const & idx, double const & dt, double const & value, double const & change);
     virtual void GenerateData();
 };


 class itkAntiAliasBinaryImageFilterID2ID2_Pointer {
   public:
     itkAntiAliasBinaryImageFilterID2ID2_Pointer();
     itkAntiAliasBinaryImageFilterID2ID2_Pointer(itkAntiAliasBinaryImageFilterID2ID2_Pointer const & p);
     itkAntiAliasBinaryImageFilterID2ID2_Pointer(itkAntiAliasBinaryImageFilterID2ID2 * p);
     ~itkAntiAliasBinaryImageFilterID2ID2_Pointer();
     itkAntiAliasBinaryImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAntiAliasBinaryImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkAntiAliasBinaryImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkAntiAliasBinaryImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkAntiAliasBinaryImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkAntiAliasBinaryImageFilterID2ID2_Pointer const & r) const;
     itkAntiAliasBinaryImageFilterID2ID2_Pointer & operator=(itkAntiAliasBinaryImageFilterID2ID2_Pointer const & r);
     itkAntiAliasBinaryImageFilterID2ID2_Pointer & operator=(itkAntiAliasBinaryImageFilterID2ID2 * r);
     itkAntiAliasBinaryImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAntiAliasBinaryImageFilterID3ID3 : public itkSparseFieldLevelSetImageFilterID3ID3 {
   public:
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkAntiAliasBinaryImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetUpperBinaryValue() const;
     virtual double GetLowerBinaryValue() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
   private:
     itkAntiAliasBinaryImageFilterID3ID3(itkAntiAliasBinaryImageFilterID3ID3 const & arg0);
     void operator=(itkAntiAliasBinaryImageFilterID3ID3 const & arg0);
   protected:
     itkAntiAliasBinaryImageFilterID3ID3();
     ~itkAntiAliasBinaryImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual double CalculateUpdateValue(itkIndex3 const & idx, double const & dt, double const & value, double const & change);
     virtual void GenerateData();
 };


 class itkAntiAliasBinaryImageFilterID3ID3_Pointer {
   public:
     itkAntiAliasBinaryImageFilterID3ID3_Pointer();
     itkAntiAliasBinaryImageFilterID3ID3_Pointer(itkAntiAliasBinaryImageFilterID3ID3_Pointer const & p);
     itkAntiAliasBinaryImageFilterID3ID3_Pointer(itkAntiAliasBinaryImageFilterID3ID3 * p);
     ~itkAntiAliasBinaryImageFilterID3ID3_Pointer();
     itkAntiAliasBinaryImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAntiAliasBinaryImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkAntiAliasBinaryImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkAntiAliasBinaryImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkAntiAliasBinaryImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkAntiAliasBinaryImageFilterID3ID3_Pointer const & r) const;
     itkAntiAliasBinaryImageFilterID3ID3_Pointer & operator=(itkAntiAliasBinaryImageFilterID3ID3_Pointer const & r);
     itkAntiAliasBinaryImageFilterID3ID3_Pointer & operator=(itkAntiAliasBinaryImageFilterID3ID3 * r);
     itkAntiAliasBinaryImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAntiAliasBinaryImageFilterIF2IF2 : public itkSparseFieldLevelSetImageFilterIF2IF2 {
   public:
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkAntiAliasBinaryImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual float GetUpperBinaryValue() const;
     virtual float GetLowerBinaryValue() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
   private:
     itkAntiAliasBinaryImageFilterIF2IF2(itkAntiAliasBinaryImageFilterIF2IF2 const & arg0);
     void operator=(itkAntiAliasBinaryImageFilterIF2IF2 const & arg0);
   protected:
     itkAntiAliasBinaryImageFilterIF2IF2();
     ~itkAntiAliasBinaryImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual float CalculateUpdateValue(itkIndex2 const & idx, double const & dt, float const & value, float const & change);
     virtual void GenerateData();
 };


 class itkAntiAliasBinaryImageFilterIF2IF2_Pointer {
   public:
     itkAntiAliasBinaryImageFilterIF2IF2_Pointer();
     itkAntiAliasBinaryImageFilterIF2IF2_Pointer(itkAntiAliasBinaryImageFilterIF2IF2_Pointer const & p);
     itkAntiAliasBinaryImageFilterIF2IF2_Pointer(itkAntiAliasBinaryImageFilterIF2IF2 * p);
     ~itkAntiAliasBinaryImageFilterIF2IF2_Pointer();
     itkAntiAliasBinaryImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAntiAliasBinaryImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkAntiAliasBinaryImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkAntiAliasBinaryImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkAntiAliasBinaryImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkAntiAliasBinaryImageFilterIF2IF2_Pointer const & r) const;
     itkAntiAliasBinaryImageFilterIF2IF2_Pointer & operator=(itkAntiAliasBinaryImageFilterIF2IF2_Pointer const & r);
     itkAntiAliasBinaryImageFilterIF2IF2_Pointer & operator=(itkAntiAliasBinaryImageFilterIF2IF2 * r);
     itkAntiAliasBinaryImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAntiAliasBinaryImageFilterIF3IF3 : public itkSparseFieldLevelSetImageFilterIF3IF3 {
   public:
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkAntiAliasBinaryImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual float GetUpperBinaryValue() const;
     virtual float GetLowerBinaryValue() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
   private:
     itkAntiAliasBinaryImageFilterIF3IF3(itkAntiAliasBinaryImageFilterIF3IF3 const & arg0);
     void operator=(itkAntiAliasBinaryImageFilterIF3IF3 const & arg0);
   protected:
     itkAntiAliasBinaryImageFilterIF3IF3();
     ~itkAntiAliasBinaryImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual float CalculateUpdateValue(itkIndex3 const & idx, double const & dt, float const & value, float const & change);
     virtual void GenerateData();
 };


 class itkAntiAliasBinaryImageFilterIF3IF3_Pointer {
   public:
     itkAntiAliasBinaryImageFilterIF3IF3_Pointer();
     itkAntiAliasBinaryImageFilterIF3IF3_Pointer(itkAntiAliasBinaryImageFilterIF3IF3_Pointer const & p);
     itkAntiAliasBinaryImageFilterIF3IF3_Pointer(itkAntiAliasBinaryImageFilterIF3IF3 * p);
     ~itkAntiAliasBinaryImageFilterIF3IF3_Pointer();
     itkAntiAliasBinaryImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAntiAliasBinaryImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkAntiAliasBinaryImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkAntiAliasBinaryImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkAntiAliasBinaryImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkAntiAliasBinaryImageFilterIF3IF3_Pointer const & r) const;
     itkAntiAliasBinaryImageFilterIF3IF3_Pointer & operator=(itkAntiAliasBinaryImageFilterIF3IF3_Pointer const & r);
     itkAntiAliasBinaryImageFilterIF3IF3_Pointer & operator=(itkAntiAliasBinaryImageFilterIF3IF3 * r);
     itkAntiAliasBinaryImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


