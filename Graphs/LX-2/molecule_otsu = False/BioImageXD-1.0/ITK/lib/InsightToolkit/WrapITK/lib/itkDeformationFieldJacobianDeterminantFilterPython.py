# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkDeformationFieldJacobianDeterminantFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkDeformationFieldJacobianDeterminantFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkDeformationFieldJacobianDeterminantFilterPython
            return _itkDeformationFieldJacobianDeterminantFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkDeformationFieldJacobianDeterminantFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkDeformationFieldJacobianDeterminantFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkDeformationFieldJacobianDeterminantFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkDisplacementFieldJacobianDeterminantFilterPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkDeformationFieldJacobianDeterminantFilterIVF33D_New():
  return itkDeformationFieldJacobianDeterminantFilterIVF33D.New()

def itkDeformationFieldJacobianDeterminantFilterIVF33F_New():
  return itkDeformationFieldJacobianDeterminantFilterIVF33F.New()

def itkDeformationFieldJacobianDeterminantFilterIVF22D_New():
  return itkDeformationFieldJacobianDeterminantFilterIVF22D.New()

def itkDeformationFieldJacobianDeterminantFilterIVF22F_New():
  return itkDeformationFieldJacobianDeterminantFilterIVF22F.New()

class itkDeformationFieldJacobianDeterminantFilterIVF22D(itkDisplacementFieldJacobianDeterminantFilterPython.itkDisplacementFieldJacobianDeterminantFilterIVF22D):
    """Proxy of C++ itkDeformationFieldJacobianDeterminantFilterIVF22D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_ImageDimension
    VectorDimension = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_VectorDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def PrintSelf(self, *args):
        """PrintSelf(self, ostream os, itkIndent indent)"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_PrintSelf(self, *args)

    def EvaluateAtNeighborhood(self, *args):
        """EvaluateAtNeighborhood(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(double,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(double,2u)>,2u)>)>)> it) -> double"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_EvaluateAtNeighborhood(self, *args)

    __swig_destroy__ = _itkDeformationFieldJacobianDeterminantFilterPython.delete_itkDeformationFieldJacobianDeterminantFilterIVF22D
    def cast(*args):
        """cast(itkLightObject obj) -> itkDeformationFieldJacobianDeterminantFilterIVF22D"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDeformationFieldJacobianDeterminantFilterIVF22D"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDeformationFieldJacobianDeterminantFilterIVF22D
        
        Create a new object of the class itkDeformationFieldJacobianDeterminantFilterIVF22D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDeformationFieldJacobianDeterminantFilterIVF22D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDeformationFieldJacobianDeterminantFilterIVF22D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDeformationFieldJacobianDeterminantFilterIVF22D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDeformationFieldJacobianDeterminantFilterIVF22D.PrintSelf = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_PrintSelf,None,itkDeformationFieldJacobianDeterminantFilterIVF22D)
itkDeformationFieldJacobianDeterminantFilterIVF22D.EvaluateAtNeighborhood = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_EvaluateAtNeighborhood,None,itkDeformationFieldJacobianDeterminantFilterIVF22D)
itkDeformationFieldJacobianDeterminantFilterIVF22D.GetPointer = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_GetPointer,None,itkDeformationFieldJacobianDeterminantFilterIVF22D)
itkDeformationFieldJacobianDeterminantFilterIVF22D_swigregister = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_swigregister
itkDeformationFieldJacobianDeterminantFilterIVF22D_swigregister(itkDeformationFieldJacobianDeterminantFilterIVF22D)

def itkDeformationFieldJacobianDeterminantFilterIVF22D___New_orig__():
  """itkDeformationFieldJacobianDeterminantFilterIVF22D___New_orig__()"""
  return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D___New_orig__()

def itkDeformationFieldJacobianDeterminantFilterIVF22D_cast(*args):
  """itkDeformationFieldJacobianDeterminantFilterIVF22D_cast(itkLightObject obj) -> itkDeformationFieldJacobianDeterminantFilterIVF22D"""
  return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22D_cast(*args)

class itkDeformationFieldJacobianDeterminantFilterIVF22F(itkDisplacementFieldJacobianDeterminantFilterPython.itkDisplacementFieldJacobianDeterminantFilterIVF22F):
    """Proxy of C++ itkDeformationFieldJacobianDeterminantFilterIVF22F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_ImageDimension
    VectorDimension = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_VectorDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def PrintSelf(self, *args):
        """PrintSelf(self, ostream os, itkIndent indent)"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_PrintSelf(self, *args)

    def EvaluateAtNeighborhood(self, *args):
        """EvaluateAtNeighborhood(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> it) -> float"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_EvaluateAtNeighborhood(self, *args)

    __swig_destroy__ = _itkDeformationFieldJacobianDeterminantFilterPython.delete_itkDeformationFieldJacobianDeterminantFilterIVF22F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDeformationFieldJacobianDeterminantFilterIVF22F"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDeformationFieldJacobianDeterminantFilterIVF22F"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDeformationFieldJacobianDeterminantFilterIVF22F
        
        Create a new object of the class itkDeformationFieldJacobianDeterminantFilterIVF22F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDeformationFieldJacobianDeterminantFilterIVF22F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDeformationFieldJacobianDeterminantFilterIVF22F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDeformationFieldJacobianDeterminantFilterIVF22F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDeformationFieldJacobianDeterminantFilterIVF22F.PrintSelf = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_PrintSelf,None,itkDeformationFieldJacobianDeterminantFilterIVF22F)
itkDeformationFieldJacobianDeterminantFilterIVF22F.EvaluateAtNeighborhood = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_EvaluateAtNeighborhood,None,itkDeformationFieldJacobianDeterminantFilterIVF22F)
itkDeformationFieldJacobianDeterminantFilterIVF22F.GetPointer = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_GetPointer,None,itkDeformationFieldJacobianDeterminantFilterIVF22F)
itkDeformationFieldJacobianDeterminantFilterIVF22F_swigregister = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_swigregister
itkDeformationFieldJacobianDeterminantFilterIVF22F_swigregister(itkDeformationFieldJacobianDeterminantFilterIVF22F)

def itkDeformationFieldJacobianDeterminantFilterIVF22F___New_orig__():
  """itkDeformationFieldJacobianDeterminantFilterIVF22F___New_orig__()"""
  return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F___New_orig__()

def itkDeformationFieldJacobianDeterminantFilterIVF22F_cast(*args):
  """itkDeformationFieldJacobianDeterminantFilterIVF22F_cast(itkLightObject obj) -> itkDeformationFieldJacobianDeterminantFilterIVF22F"""
  return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF22F_cast(*args)

class itkDeformationFieldJacobianDeterminantFilterIVF33D(itkDisplacementFieldJacobianDeterminantFilterPython.itkDisplacementFieldJacobianDeterminantFilterIVF33D):
    """Proxy of C++ itkDeformationFieldJacobianDeterminantFilterIVF33D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_ImageDimension
    VectorDimension = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_VectorDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def PrintSelf(self, *args):
        """PrintSelf(self, ostream os, itkIndent indent)"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_PrintSelf(self, *args)

    def EvaluateAtNeighborhood(self, *args):
        """EvaluateAtNeighborhood(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(double,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(double,3u)>,3u)>)>)> it) -> double"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_EvaluateAtNeighborhood(self, *args)

    __swig_destroy__ = _itkDeformationFieldJacobianDeterminantFilterPython.delete_itkDeformationFieldJacobianDeterminantFilterIVF33D
    def cast(*args):
        """cast(itkLightObject obj) -> itkDeformationFieldJacobianDeterminantFilterIVF33D"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDeformationFieldJacobianDeterminantFilterIVF33D"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDeformationFieldJacobianDeterminantFilterIVF33D
        
        Create a new object of the class itkDeformationFieldJacobianDeterminantFilterIVF33D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDeformationFieldJacobianDeterminantFilterIVF33D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDeformationFieldJacobianDeterminantFilterIVF33D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDeformationFieldJacobianDeterminantFilterIVF33D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDeformationFieldJacobianDeterminantFilterIVF33D.PrintSelf = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_PrintSelf,None,itkDeformationFieldJacobianDeterminantFilterIVF33D)
itkDeformationFieldJacobianDeterminantFilterIVF33D.EvaluateAtNeighborhood = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_EvaluateAtNeighborhood,None,itkDeformationFieldJacobianDeterminantFilterIVF33D)
itkDeformationFieldJacobianDeterminantFilterIVF33D.GetPointer = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_GetPointer,None,itkDeformationFieldJacobianDeterminantFilterIVF33D)
itkDeformationFieldJacobianDeterminantFilterIVF33D_swigregister = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_swigregister
itkDeformationFieldJacobianDeterminantFilterIVF33D_swigregister(itkDeformationFieldJacobianDeterminantFilterIVF33D)

def itkDeformationFieldJacobianDeterminantFilterIVF33D___New_orig__():
  """itkDeformationFieldJacobianDeterminantFilterIVF33D___New_orig__()"""
  return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D___New_orig__()

def itkDeformationFieldJacobianDeterminantFilterIVF33D_cast(*args):
  """itkDeformationFieldJacobianDeterminantFilterIVF33D_cast(itkLightObject obj) -> itkDeformationFieldJacobianDeterminantFilterIVF33D"""
  return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33D_cast(*args)

class itkDeformationFieldJacobianDeterminantFilterIVF33F(itkDisplacementFieldJacobianDeterminantFilterPython.itkDisplacementFieldJacobianDeterminantFilterIVF33F):
    """Proxy of C++ itkDeformationFieldJacobianDeterminantFilterIVF33F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_ImageDimension
    VectorDimension = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_VectorDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def PrintSelf(self, *args):
        """PrintSelf(self, ostream os, itkIndent indent)"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_PrintSelf(self, *args)

    def EvaluateAtNeighborhood(self, *args):
        """EvaluateAtNeighborhood(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> it) -> float"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_EvaluateAtNeighborhood(self, *args)

    __swig_destroy__ = _itkDeformationFieldJacobianDeterminantFilterPython.delete_itkDeformationFieldJacobianDeterminantFilterIVF33F
    def cast(*args):
        """cast(itkLightObject obj) -> itkDeformationFieldJacobianDeterminantFilterIVF33F"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDeformationFieldJacobianDeterminantFilterIVF33F"""
        return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDeformationFieldJacobianDeterminantFilterIVF33F
        
        Create a new object of the class itkDeformationFieldJacobianDeterminantFilterIVF33F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDeformationFieldJacobianDeterminantFilterIVF33F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDeformationFieldJacobianDeterminantFilterIVF33F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDeformationFieldJacobianDeterminantFilterIVF33F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDeformationFieldJacobianDeterminantFilterIVF33F.PrintSelf = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_PrintSelf,None,itkDeformationFieldJacobianDeterminantFilterIVF33F)
itkDeformationFieldJacobianDeterminantFilterIVF33F.EvaluateAtNeighborhood = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_EvaluateAtNeighborhood,None,itkDeformationFieldJacobianDeterminantFilterIVF33F)
itkDeformationFieldJacobianDeterminantFilterIVF33F.GetPointer = new_instancemethod(_itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_GetPointer,None,itkDeformationFieldJacobianDeterminantFilterIVF33F)
itkDeformationFieldJacobianDeterminantFilterIVF33F_swigregister = _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_swigregister
itkDeformationFieldJacobianDeterminantFilterIVF33F_swigregister(itkDeformationFieldJacobianDeterminantFilterIVF33F)

def itkDeformationFieldJacobianDeterminantFilterIVF33F___New_orig__():
  """itkDeformationFieldJacobianDeterminantFilterIVF33F___New_orig__()"""
  return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F___New_orig__()

def itkDeformationFieldJacobianDeterminantFilterIVF33F_cast(*args):
  """itkDeformationFieldJacobianDeterminantFilterIVF33F_cast(itkLightObject obj) -> itkDeformationFieldJacobianDeterminantFilterIVF33F"""
  return _itkDeformationFieldJacobianDeterminantFilterPython.itkDeformationFieldJacobianDeterminantFilterIVF33F_cast(*args)



