// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkImageToImageFilterBChicken
#endif
#ifdef SWIGCSHARP
%module itkImageToImageFilterBCsharp
#endif
#ifdef SWIGGUILE
%module itkImageToImageFilterBGuile
#endif
#ifdef SWIGJAVA
%module itkImageToImageFilterBJava
#endif
#ifdef SWIGLUA
%module itkImageToImageFilterBLua
#endif
#ifdef SWIGMODULA3
%module itkImageToImageFilterBModula3
#endif
#ifdef SWIGMZSCHEME
%module itkImageToImageFilterBMzscheme
#endif
#ifdef SWIGOCAML
%module itkImageToImageFilterBOcaml
#endif
#ifdef SWIGPERL
%module itkImageToImageFilterBPerl
#endif
#ifdef SWIGPERL5
%module itkImageToImageFilterBPerl5
#endif
#ifdef SWIGPHP
%module itkImageToImageFilterBPhp
#endif
#ifdef SWIGPHP4
%module itkImageToImageFilterBPhp4
#endif
#ifdef SWIGPHP5
%module itkImageToImageFilterBPhp5
#endif
#ifdef SWIGPIKE
%module itkImageToImageFilterBPike
#endif
#ifdef SWIGPYTHON
%module itkImageToImageFilterBPython
#endif
#ifdef SWIGR
%module itkImageToImageFilterBR
#endif
#ifdef SWIGRUBY
%module itkImageToImageFilterBRuby
#endif
#ifdef SWIGSEXP
%module itkImageToImageFilterBSexp
#endif
#ifdef SWIGTCL
%module itkImageToImageFilterBTcl
#endif
#ifdef SWIGXML
%module itkImageToImageFilterBXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_ITKRegions.i
%import wrap_itkImage.i
%import wrap_ITKCommonBase.i
%import wrap_itkImageSource.i
%import wrap_itkVectorImage.i


%include itk.i
%include wrap_itkImageToImageFilterB_ext.i


 class itkImageToImageFilterICF2ICF2 : public itkImageSourceICF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCF2 const * image);
     itkImageCF2 const * GetInput();
     itkImageCF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICF2ICF2(itkImageToImageFilterICF2ICF2 const & arg0);
     void operator=(itkImageToImageFilterICF2ICF2 const & arg0);
   protected:
     itkImageToImageFilterICF2ICF2();
     ~itkImageToImageFilterICF2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICF2ICF2_Pointer {
   public:
     itkImageToImageFilterICF2ICF2_Pointer();
     itkImageToImageFilterICF2ICF2_Pointer(itkImageToImageFilterICF2ICF2_Pointer const & p);
     itkImageToImageFilterICF2ICF2_Pointer(itkImageToImageFilterICF2ICF2 * p);
     ~itkImageToImageFilterICF2ICF2_Pointer();
     itkImageToImageFilterICF2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICF2ICF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterICF2ICF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICF2ICF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICF2ICF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICF2ICF2_Pointer const & r) const;
     itkImageToImageFilterICF2ICF2_Pointer & operator=(itkImageToImageFilterICF2ICF2_Pointer const & r);
     itkImageToImageFilterICF2ICF2_Pointer & operator=(itkImageToImageFilterICF2ICF2 * r);
     itkImageToImageFilterICF2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICF2ICF3 : public itkImageSourceICF3 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCF2 const * image);
     itkImageCF2 const * GetInput();
     itkImageCF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICF2ICF3(itkImageToImageFilterICF2ICF3 const & arg0);
     void operator=(itkImageToImageFilterICF2ICF3 const & arg0);
   protected:
     itkImageToImageFilterICF2ICF3();
     ~itkImageToImageFilterICF2ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICF2ICF3_Pointer {
   public:
     itkImageToImageFilterICF2ICF3_Pointer();
     itkImageToImageFilterICF2ICF3_Pointer(itkImageToImageFilterICF2ICF3_Pointer const & p);
     itkImageToImageFilterICF2ICF3_Pointer(itkImageToImageFilterICF2ICF3 * p);
     ~itkImageToImageFilterICF2ICF3_Pointer();
     itkImageToImageFilterICF2ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICF2ICF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterICF2ICF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICF2ICF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICF2ICF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICF2ICF3_Pointer const & r) const;
     itkImageToImageFilterICF2ICF3_Pointer & operator=(itkImageToImageFilterICF2ICF3_Pointer const & r);
     itkImageToImageFilterICF2ICF3_Pointer & operator=(itkImageToImageFilterICF2ICF3 * r);
     itkImageToImageFilterICF2ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICF2ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCF2 const * image);
     itkImageCF2 const * GetInput();
     itkImageCF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICF2ID2(itkImageToImageFilterICF2ID2 const & arg0);
     void operator=(itkImageToImageFilterICF2ID2 const & arg0);
   protected:
     itkImageToImageFilterICF2ID2();
     ~itkImageToImageFilterICF2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICF2ID2_Pointer {
   public:
     itkImageToImageFilterICF2ID2_Pointer();
     itkImageToImageFilterICF2ID2_Pointer(itkImageToImageFilterICF2ID2_Pointer const & p);
     itkImageToImageFilterICF2ID2_Pointer(itkImageToImageFilterICF2ID2 * p);
     ~itkImageToImageFilterICF2ID2_Pointer();
     itkImageToImageFilterICF2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICF2ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterICF2ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICF2ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICF2ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICF2ID2_Pointer const & r) const;
     itkImageToImageFilterICF2ID2_Pointer & operator=(itkImageToImageFilterICF2ID2_Pointer const & r);
     itkImageToImageFilterICF2ID2_Pointer & operator=(itkImageToImageFilterICF2ID2 * r);
     itkImageToImageFilterICF2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICF2IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCF2 const * image);
     itkImageCF2 const * GetInput();
     itkImageCF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICF2IF2(itkImageToImageFilterICF2IF2 const & arg0);
     void operator=(itkImageToImageFilterICF2IF2 const & arg0);
   protected:
     itkImageToImageFilterICF2IF2();
     ~itkImageToImageFilterICF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICF2IF2_Pointer {
   public:
     itkImageToImageFilterICF2IF2_Pointer();
     itkImageToImageFilterICF2IF2_Pointer(itkImageToImageFilterICF2IF2_Pointer const & p);
     itkImageToImageFilterICF2IF2_Pointer(itkImageToImageFilterICF2IF2 * p);
     ~itkImageToImageFilterICF2IF2_Pointer();
     itkImageToImageFilterICF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICF2IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterICF2IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICF2IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICF2IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICF2IF2_Pointer const & r) const;
     itkImageToImageFilterICF2IF2_Pointer & operator=(itkImageToImageFilterICF2IF2_Pointer const & r);
     itkImageToImageFilterICF2IF2_Pointer & operator=(itkImageToImageFilterICF2IF2 * r);
     itkImageToImageFilterICF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICF3ICF2 : public itkImageSourceICF2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCF3 const * image);
     itkImageCF3 const * GetInput();
     itkImageCF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICF3ICF2(itkImageToImageFilterICF3ICF2 const & arg0);
     void operator=(itkImageToImageFilterICF3ICF2 const & arg0);
   protected:
     itkImageToImageFilterICF3ICF2();
     ~itkImageToImageFilterICF3ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICF3ICF2_Pointer {
   public:
     itkImageToImageFilterICF3ICF2_Pointer();
     itkImageToImageFilterICF3ICF2_Pointer(itkImageToImageFilterICF3ICF2_Pointer const & p);
     itkImageToImageFilterICF3ICF2_Pointer(itkImageToImageFilterICF3ICF2 * p);
     ~itkImageToImageFilterICF3ICF2_Pointer();
     itkImageToImageFilterICF3ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICF3ICF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterICF3ICF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICF3ICF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICF3ICF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICF3ICF2_Pointer const & r) const;
     itkImageToImageFilterICF3ICF2_Pointer & operator=(itkImageToImageFilterICF3ICF2_Pointer const & r);
     itkImageToImageFilterICF3ICF2_Pointer & operator=(itkImageToImageFilterICF3ICF2 * r);
     itkImageToImageFilterICF3ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICF3ICF3 : public itkImageSourceICF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCF3 const * image);
     itkImageCF3 const * GetInput();
     itkImageCF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICF3ICF3(itkImageToImageFilterICF3ICF3 const & arg0);
     void operator=(itkImageToImageFilterICF3ICF3 const & arg0);
   protected:
     itkImageToImageFilterICF3ICF3();
     ~itkImageToImageFilterICF3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICF3ICF3_Pointer {
   public:
     itkImageToImageFilterICF3ICF3_Pointer();
     itkImageToImageFilterICF3ICF3_Pointer(itkImageToImageFilterICF3ICF3_Pointer const & p);
     itkImageToImageFilterICF3ICF3_Pointer(itkImageToImageFilterICF3ICF3 * p);
     ~itkImageToImageFilterICF3ICF3_Pointer();
     itkImageToImageFilterICF3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICF3ICF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterICF3ICF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICF3ICF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICF3ICF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICF3ICF3_Pointer const & r) const;
     itkImageToImageFilterICF3ICF3_Pointer & operator=(itkImageToImageFilterICF3ICF3_Pointer const & r);
     itkImageToImageFilterICF3ICF3_Pointer & operator=(itkImageToImageFilterICF3ICF3 * r);
     itkImageToImageFilterICF3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICF3ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCF3 const * image);
     itkImageCF3 const * GetInput();
     itkImageCF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICF3ID3(itkImageToImageFilterICF3ID3 const & arg0);
     void operator=(itkImageToImageFilterICF3ID3 const & arg0);
   protected:
     itkImageToImageFilterICF3ID3();
     ~itkImageToImageFilterICF3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICF3ID3_Pointer {
   public:
     itkImageToImageFilterICF3ID3_Pointer();
     itkImageToImageFilterICF3ID3_Pointer(itkImageToImageFilterICF3ID3_Pointer const & p);
     itkImageToImageFilterICF3ID3_Pointer(itkImageToImageFilterICF3ID3 * p);
     ~itkImageToImageFilterICF3ID3_Pointer();
     itkImageToImageFilterICF3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICF3ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterICF3ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICF3ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICF3ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICF3ID3_Pointer const & r) const;
     itkImageToImageFilterICF3ID3_Pointer & operator=(itkImageToImageFilterICF3ID3_Pointer const & r);
     itkImageToImageFilterICF3ID3_Pointer & operator=(itkImageToImageFilterICF3ID3 * r);
     itkImageToImageFilterICF3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICF3IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCF3 const * image);
     itkImageCF3 const * GetInput();
     itkImageCF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICF3IF3(itkImageToImageFilterICF3IF3 const & arg0);
     void operator=(itkImageToImageFilterICF3IF3 const & arg0);
   protected:
     itkImageToImageFilterICF3IF3();
     ~itkImageToImageFilterICF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICF3IF3_Pointer {
   public:
     itkImageToImageFilterICF3IF3_Pointer();
     itkImageToImageFilterICF3IF3_Pointer(itkImageToImageFilterICF3IF3_Pointer const & p);
     itkImageToImageFilterICF3IF3_Pointer(itkImageToImageFilterICF3IF3 * p);
     ~itkImageToImageFilterICF3IF3_Pointer();
     itkImageToImageFilterICF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICF3IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterICF3IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICF3IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICF3IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICF3IF3_Pointer const & r) const;
     itkImageToImageFilterICF3IF3_Pointer & operator=(itkImageToImageFilterICF3IF3_Pointer const & r);
     itkImageToImageFilterICF3IF3_Pointer & operator=(itkImageToImageFilterICF3IF3 * r);
     itkImageToImageFilterICF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF22ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF22 const * image);
     itkImageCVF22 const * GetInput();
     itkImageCVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF22ID2(itkImageToImageFilterICVF22ID2 const & arg0);
     void operator=(itkImageToImageFilterICVF22ID2 const & arg0);
   protected:
     itkImageToImageFilterICVF22ID2();
     ~itkImageToImageFilterICVF22ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF22ID2_Pointer {
   public:
     itkImageToImageFilterICVF22ID2_Pointer();
     itkImageToImageFilterICVF22ID2_Pointer(itkImageToImageFilterICVF22ID2_Pointer const & p);
     itkImageToImageFilterICVF22ID2_Pointer(itkImageToImageFilterICVF22ID2 * p);
     ~itkImageToImageFilterICVF22ID2_Pointer();
     itkImageToImageFilterICVF22ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF22ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF22ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF22ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF22ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF22ID2_Pointer const & r) const;
     itkImageToImageFilterICVF22ID2_Pointer & operator=(itkImageToImageFilterICVF22ID2_Pointer const & r);
     itkImageToImageFilterICVF22ID2_Pointer & operator=(itkImageToImageFilterICVF22ID2 * r);
     itkImageToImageFilterICVF22ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF22IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF22 const * image);
     itkImageCVF22 const * GetInput();
     itkImageCVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF22IF2(itkImageToImageFilterICVF22IF2 const & arg0);
     void operator=(itkImageToImageFilterICVF22IF2 const & arg0);
   protected:
     itkImageToImageFilterICVF22IF2();
     ~itkImageToImageFilterICVF22IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF22IF2_Pointer {
   public:
     itkImageToImageFilterICVF22IF2_Pointer();
     itkImageToImageFilterICVF22IF2_Pointer(itkImageToImageFilterICVF22IF2_Pointer const & p);
     itkImageToImageFilterICVF22IF2_Pointer(itkImageToImageFilterICVF22IF2 * p);
     ~itkImageToImageFilterICVF22IF2_Pointer();
     itkImageToImageFilterICVF22IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF22IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF22IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF22IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF22IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF22IF2_Pointer const & r) const;
     itkImageToImageFilterICVF22IF2_Pointer & operator=(itkImageToImageFilterICVF22IF2_Pointer const & r);
     itkImageToImageFilterICVF22IF2_Pointer & operator=(itkImageToImageFilterICVF22IF2 * r);
     itkImageToImageFilterICVF22IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF22IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF22 const * image);
     itkImageCVF22 const * GetInput();
     itkImageCVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF22IUC2(itkImageToImageFilterICVF22IUC2 const & arg0);
     void operator=(itkImageToImageFilterICVF22IUC2 const & arg0);
   protected:
     itkImageToImageFilterICVF22IUC2();
     ~itkImageToImageFilterICVF22IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF22IUC2_Pointer {
   public:
     itkImageToImageFilterICVF22IUC2_Pointer();
     itkImageToImageFilterICVF22IUC2_Pointer(itkImageToImageFilterICVF22IUC2_Pointer const & p);
     itkImageToImageFilterICVF22IUC2_Pointer(itkImageToImageFilterICVF22IUC2 * p);
     ~itkImageToImageFilterICVF22IUC2_Pointer();
     itkImageToImageFilterICVF22IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF22IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF22IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF22IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF22IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF22IUC2_Pointer const & r) const;
     itkImageToImageFilterICVF22IUC2_Pointer & operator=(itkImageToImageFilterICVF22IUC2_Pointer const & r);
     itkImageToImageFilterICVF22IUC2_Pointer & operator=(itkImageToImageFilterICVF22IUC2 * r);
     itkImageToImageFilterICVF22IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF22IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF22 const * image);
     itkImageCVF22 const * GetInput();
     itkImageCVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF22IUL2(itkImageToImageFilterICVF22IUL2 const & arg0);
     void operator=(itkImageToImageFilterICVF22IUL2 const & arg0);
   protected:
     itkImageToImageFilterICVF22IUL2();
     ~itkImageToImageFilterICVF22IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF22IUL2_Pointer {
   public:
     itkImageToImageFilterICVF22IUL2_Pointer();
     itkImageToImageFilterICVF22IUL2_Pointer(itkImageToImageFilterICVF22IUL2_Pointer const & p);
     itkImageToImageFilterICVF22IUL2_Pointer(itkImageToImageFilterICVF22IUL2 * p);
     ~itkImageToImageFilterICVF22IUL2_Pointer();
     itkImageToImageFilterICVF22IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF22IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF22IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF22IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF22IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF22IUL2_Pointer const & r) const;
     itkImageToImageFilterICVF22IUL2_Pointer & operator=(itkImageToImageFilterICVF22IUL2_Pointer const & r);
     itkImageToImageFilterICVF22IUL2_Pointer & operator=(itkImageToImageFilterICVF22IUL2 * r);
     itkImageToImageFilterICVF22IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF22IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF22 const * image);
     itkImageCVF22 const * GetInput();
     itkImageCVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF22IUS2(itkImageToImageFilterICVF22IUS2 const & arg0);
     void operator=(itkImageToImageFilterICVF22IUS2 const & arg0);
   protected:
     itkImageToImageFilterICVF22IUS2();
     ~itkImageToImageFilterICVF22IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF22IUS2_Pointer {
   public:
     itkImageToImageFilterICVF22IUS2_Pointer();
     itkImageToImageFilterICVF22IUS2_Pointer(itkImageToImageFilterICVF22IUS2_Pointer const & p);
     itkImageToImageFilterICVF22IUS2_Pointer(itkImageToImageFilterICVF22IUS2 * p);
     ~itkImageToImageFilterICVF22IUS2_Pointer();
     itkImageToImageFilterICVF22IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF22IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF22IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF22IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF22IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF22IUS2_Pointer const & r) const;
     itkImageToImageFilterICVF22IUS2_Pointer & operator=(itkImageToImageFilterICVF22IUS2_Pointer const & r);
     itkImageToImageFilterICVF22IUS2_Pointer & operator=(itkImageToImageFilterICVF22IUS2 * r);
     itkImageToImageFilterICVF22IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF33ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF33 const * image);
     itkImageCVF33 const * GetInput();
     itkImageCVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF33ID3(itkImageToImageFilterICVF33ID3 const & arg0);
     void operator=(itkImageToImageFilterICVF33ID3 const & arg0);
   protected:
     itkImageToImageFilterICVF33ID3();
     ~itkImageToImageFilterICVF33ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF33ID3_Pointer {
   public:
     itkImageToImageFilterICVF33ID3_Pointer();
     itkImageToImageFilterICVF33ID3_Pointer(itkImageToImageFilterICVF33ID3_Pointer const & p);
     itkImageToImageFilterICVF33ID3_Pointer(itkImageToImageFilterICVF33ID3 * p);
     ~itkImageToImageFilterICVF33ID3_Pointer();
     itkImageToImageFilterICVF33ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF33ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF33ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF33ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF33ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF33ID3_Pointer const & r) const;
     itkImageToImageFilterICVF33ID3_Pointer & operator=(itkImageToImageFilterICVF33ID3_Pointer const & r);
     itkImageToImageFilterICVF33ID3_Pointer & operator=(itkImageToImageFilterICVF33ID3 * r);
     itkImageToImageFilterICVF33ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF33IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF33 const * image);
     itkImageCVF33 const * GetInput();
     itkImageCVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF33IF3(itkImageToImageFilterICVF33IF3 const & arg0);
     void operator=(itkImageToImageFilterICVF33IF3 const & arg0);
   protected:
     itkImageToImageFilterICVF33IF3();
     ~itkImageToImageFilterICVF33IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF33IF3_Pointer {
   public:
     itkImageToImageFilterICVF33IF3_Pointer();
     itkImageToImageFilterICVF33IF3_Pointer(itkImageToImageFilterICVF33IF3_Pointer const & p);
     itkImageToImageFilterICVF33IF3_Pointer(itkImageToImageFilterICVF33IF3 * p);
     ~itkImageToImageFilterICVF33IF3_Pointer();
     itkImageToImageFilterICVF33IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF33IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF33IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF33IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF33IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF33IF3_Pointer const & r) const;
     itkImageToImageFilterICVF33IF3_Pointer & operator=(itkImageToImageFilterICVF33IF3_Pointer const & r);
     itkImageToImageFilterICVF33IF3_Pointer & operator=(itkImageToImageFilterICVF33IF3 * r);
     itkImageToImageFilterICVF33IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF33IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF33 const * image);
     itkImageCVF33 const * GetInput();
     itkImageCVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF33IUC3(itkImageToImageFilterICVF33IUC3 const & arg0);
     void operator=(itkImageToImageFilterICVF33IUC3 const & arg0);
   protected:
     itkImageToImageFilterICVF33IUC3();
     ~itkImageToImageFilterICVF33IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF33IUC3_Pointer {
   public:
     itkImageToImageFilterICVF33IUC3_Pointer();
     itkImageToImageFilterICVF33IUC3_Pointer(itkImageToImageFilterICVF33IUC3_Pointer const & p);
     itkImageToImageFilterICVF33IUC3_Pointer(itkImageToImageFilterICVF33IUC3 * p);
     ~itkImageToImageFilterICVF33IUC3_Pointer();
     itkImageToImageFilterICVF33IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF33IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF33IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF33IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF33IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF33IUC3_Pointer const & r) const;
     itkImageToImageFilterICVF33IUC3_Pointer & operator=(itkImageToImageFilterICVF33IUC3_Pointer const & r);
     itkImageToImageFilterICVF33IUC3_Pointer & operator=(itkImageToImageFilterICVF33IUC3 * r);
     itkImageToImageFilterICVF33IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF33IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF33 const * image);
     itkImageCVF33 const * GetInput();
     itkImageCVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF33IUL3(itkImageToImageFilterICVF33IUL3 const & arg0);
     void operator=(itkImageToImageFilterICVF33IUL3 const & arg0);
   protected:
     itkImageToImageFilterICVF33IUL3();
     ~itkImageToImageFilterICVF33IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF33IUL3_Pointer {
   public:
     itkImageToImageFilterICVF33IUL3_Pointer();
     itkImageToImageFilterICVF33IUL3_Pointer(itkImageToImageFilterICVF33IUL3_Pointer const & p);
     itkImageToImageFilterICVF33IUL3_Pointer(itkImageToImageFilterICVF33IUL3 * p);
     ~itkImageToImageFilterICVF33IUL3_Pointer();
     itkImageToImageFilterICVF33IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF33IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF33IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF33IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF33IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF33IUL3_Pointer const & r) const;
     itkImageToImageFilterICVF33IUL3_Pointer & operator=(itkImageToImageFilterICVF33IUL3_Pointer const & r);
     itkImageToImageFilterICVF33IUL3_Pointer & operator=(itkImageToImageFilterICVF33IUL3 * r);
     itkImageToImageFilterICVF33IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterICVF33IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageCVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageCVF33 const * image);
     itkImageCVF33 const * GetInput();
     itkImageCVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageCVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageCVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterICVF33IUS3(itkImageToImageFilterICVF33IUS3 const & arg0);
     void operator=(itkImageToImageFilterICVF33IUS3 const & arg0);
   protected:
     itkImageToImageFilterICVF33IUS3();
     ~itkImageToImageFilterICVF33IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterICVF33IUS3_Pointer {
   public:
     itkImageToImageFilterICVF33IUS3_Pointer();
     itkImageToImageFilterICVF33IUS3_Pointer(itkImageToImageFilterICVF33IUS3_Pointer const & p);
     itkImageToImageFilterICVF33IUS3_Pointer(itkImageToImageFilterICVF33IUS3 * p);
     ~itkImageToImageFilterICVF33IUS3_Pointer();
     itkImageToImageFilterICVF33IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterICVF33IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterICVF33IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterICVF33IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterICVF33IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterICVF33IUS3_Pointer const & r) const;
     itkImageToImageFilterICVF33IUS3_Pointer & operator=(itkImageToImageFilterICVF33IUS3_Pointer const & r);
     itkImageToImageFilterICVF33IUS3_Pointer & operator=(itkImageToImageFilterICVF33IUS3 * r);
     itkImageToImageFilterICVF33IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2ICF2 : public itkImageSourceICF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2ICF2(itkImageToImageFilterID2ICF2 const & arg0);
     void operator=(itkImageToImageFilterID2ICF2 const & arg0);
   protected:
     itkImageToImageFilterID2ICF2();
     ~itkImageToImageFilterID2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2ICF2_Pointer {
   public:
     itkImageToImageFilterID2ICF2_Pointer();
     itkImageToImageFilterID2ICF2_Pointer(itkImageToImageFilterID2ICF2_Pointer const & p);
     itkImageToImageFilterID2ICF2_Pointer(itkImageToImageFilterID2ICF2 * p);
     ~itkImageToImageFilterID2ICF2_Pointer();
     itkImageToImageFilterID2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2ICF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2ICF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2ICF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2ICF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2ICF2_Pointer const & r) const;
     itkImageToImageFilterID2ICF2_Pointer & operator=(itkImageToImageFilterID2ICF2_Pointer const & r);
     itkImageToImageFilterID2ICF2_Pointer & operator=(itkImageToImageFilterID2ICF2 * r);
     itkImageToImageFilterID2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2ICVF22 : public itkImageSourceICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2ICVF22(itkImageToImageFilterID2ICVF22 const & arg0);
     void operator=(itkImageToImageFilterID2ICVF22 const & arg0);
   protected:
     itkImageToImageFilterID2ICVF22();
     ~itkImageToImageFilterID2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2ICVF22_Pointer {
   public:
     itkImageToImageFilterID2ICVF22_Pointer();
     itkImageToImageFilterID2ICVF22_Pointer(itkImageToImageFilterID2ICVF22_Pointer const & p);
     itkImageToImageFilterID2ICVF22_Pointer(itkImageToImageFilterID2ICVF22 * p);
     ~itkImageToImageFilterID2ICVF22_Pointer();
     itkImageToImageFilterID2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2ICVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2ICVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2ICVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2ICVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2ICVF22_Pointer const & r) const;
     itkImageToImageFilterID2ICVF22_Pointer & operator=(itkImageToImageFilterID2ICVF22_Pointer const & r);
     itkImageToImageFilterID2ICVF22_Pointer & operator=(itkImageToImageFilterID2ICVF22 * r);
     itkImageToImageFilterID2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2ID3(itkImageToImageFilterID2ID3 const & arg0);
     void operator=(itkImageToImageFilterID2ID3 const & arg0);
   protected:
     itkImageToImageFilterID2ID3();
     ~itkImageToImageFilterID2ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2ID3_Pointer {
   public:
     itkImageToImageFilterID2ID3_Pointer();
     itkImageToImageFilterID2ID3_Pointer(itkImageToImageFilterID2ID3_Pointer const & p);
     itkImageToImageFilterID2ID3_Pointer(itkImageToImageFilterID2ID3 * p);
     ~itkImageToImageFilterID2ID3_Pointer();
     itkImageToImageFilterID2ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2ID3_Pointer const & r) const;
     itkImageToImageFilterID2ID3_Pointer & operator=(itkImageToImageFilterID2ID3_Pointer const & r);
     itkImageToImageFilterID2ID3_Pointer & operator=(itkImageToImageFilterID2ID3 * r);
     itkImageToImageFilterID2ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2IRGBAUS2 : public itkImageSourceIRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2IRGBAUS2(itkImageToImageFilterID2IRGBAUS2 const & arg0);
     void operator=(itkImageToImageFilterID2IRGBAUS2 const & arg0);
   protected:
     itkImageToImageFilterID2IRGBAUS2();
     ~itkImageToImageFilterID2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2IRGBAUS2_Pointer {
   public:
     itkImageToImageFilterID2IRGBAUS2_Pointer();
     itkImageToImageFilterID2IRGBAUS2_Pointer(itkImageToImageFilterID2IRGBAUS2_Pointer const & p);
     itkImageToImageFilterID2IRGBAUS2_Pointer(itkImageToImageFilterID2IRGBAUS2 * p);
     ~itkImageToImageFilterID2IRGBAUS2_Pointer();
     itkImageToImageFilterID2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2IRGBAUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2IRGBAUS2_Pointer const & r) const;
     itkImageToImageFilterID2IRGBAUS2_Pointer & operator=(itkImageToImageFilterID2IRGBAUS2_Pointer const & r);
     itkImageToImageFilterID2IRGBAUS2_Pointer & operator=(itkImageToImageFilterID2IRGBAUS2 * r);
     itkImageToImageFilterID2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2IRGBUS2 : public itkImageSourceIRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2IRGBUS2(itkImageToImageFilterID2IRGBUS2 const & arg0);
     void operator=(itkImageToImageFilterID2IRGBUS2 const & arg0);
   protected:
     itkImageToImageFilterID2IRGBUS2();
     ~itkImageToImageFilterID2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2IRGBUS2_Pointer {
   public:
     itkImageToImageFilterID2IRGBUS2_Pointer();
     itkImageToImageFilterID2IRGBUS2_Pointer(itkImageToImageFilterID2IRGBUS2_Pointer const & p);
     itkImageToImageFilterID2IRGBUS2_Pointer(itkImageToImageFilterID2IRGBUS2 * p);
     ~itkImageToImageFilterID2IRGBUS2_Pointer();
     itkImageToImageFilterID2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2IRGBUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2IRGBUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2IRGBUS2_Pointer const & r) const;
     itkImageToImageFilterID2IRGBUS2_Pointer & operator=(itkImageToImageFilterID2IRGBUS2_Pointer const & r);
     itkImageToImageFilterID2IRGBUS2_Pointer & operator=(itkImageToImageFilterID2IRGBUS2 * r);
     itkImageToImageFilterID2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2ISSRTD22 : public itkImageSourceISSRTD22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2ISSRTD22(itkImageToImageFilterID2ISSRTD22 const & arg0);
     void operator=(itkImageToImageFilterID2ISSRTD22 const & arg0);
   protected:
     itkImageToImageFilterID2ISSRTD22();
     ~itkImageToImageFilterID2ISSRTD22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2ISSRTD22_Pointer {
   public:
     itkImageToImageFilterID2ISSRTD22_Pointer();
     itkImageToImageFilterID2ISSRTD22_Pointer(itkImageToImageFilterID2ISSRTD22_Pointer const & p);
     itkImageToImageFilterID2ISSRTD22_Pointer(itkImageToImageFilterID2ISSRTD22 * p);
     ~itkImageToImageFilterID2ISSRTD22_Pointer();
     itkImageToImageFilterID2ISSRTD22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2ISSRTD22 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2ISSRTD22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2ISSRTD22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2ISSRTD22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2ISSRTD22_Pointer const & r) const;
     itkImageToImageFilterID2ISSRTD22_Pointer & operator=(itkImageToImageFilterID2ISSRTD22_Pointer const & r);
     itkImageToImageFilterID2ISSRTD22_Pointer & operator=(itkImageToImageFilterID2ISSRTD22 * r);
     itkImageToImageFilterID2ISSRTD22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2IVF22 : public itkImageSourceIVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2IVF22(itkImageToImageFilterID2IVF22 const & arg0);
     void operator=(itkImageToImageFilterID2IVF22 const & arg0);
   protected:
     itkImageToImageFilterID2IVF22();
     ~itkImageToImageFilterID2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2IVF22_Pointer {
   public:
     itkImageToImageFilterID2IVF22_Pointer();
     itkImageToImageFilterID2IVF22_Pointer(itkImageToImageFilterID2IVF22_Pointer const & p);
     itkImageToImageFilterID2IVF22_Pointer(itkImageToImageFilterID2IVF22 * p);
     ~itkImageToImageFilterID2IVF22_Pointer();
     itkImageToImageFilterID2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2IVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2IVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2IVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2IVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2IVF22_Pointer const & r) const;
     itkImageToImageFilterID2IVF22_Pointer & operator=(itkImageToImageFilterID2IVF22_Pointer const & r);
     itkImageToImageFilterID2IVF22_Pointer & operator=(itkImageToImageFilterID2IVF22 * r);
     itkImageToImageFilterID2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2VID2 : public itkImageSourceVID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2VID2(itkImageToImageFilterID2VID2 const & arg0);
     void operator=(itkImageToImageFilterID2VID2 const & arg0);
   protected:
     itkImageToImageFilterID2VID2();
     ~itkImageToImageFilterID2VID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2VID2_Pointer {
   public:
     itkImageToImageFilterID2VID2_Pointer();
     itkImageToImageFilterID2VID2_Pointer(itkImageToImageFilterID2VID2_Pointer const & p);
     itkImageToImageFilterID2VID2_Pointer(itkImageToImageFilterID2VID2 * p);
     ~itkImageToImageFilterID2VID2_Pointer();
     itkImageToImageFilterID2VID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2VID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2VID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2VID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2VID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2VID2_Pointer const & r) const;
     itkImageToImageFilterID2VID2_Pointer & operator=(itkImageToImageFilterID2VID2_Pointer const & r);
     itkImageToImageFilterID2VID2_Pointer & operator=(itkImageToImageFilterID2VID2 * r);
     itkImageToImageFilterID2VID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2VIF2 : public itkImageSourceVIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2VIF2(itkImageToImageFilterID2VIF2 const & arg0);
     void operator=(itkImageToImageFilterID2VIF2 const & arg0);
   protected:
     itkImageToImageFilterID2VIF2();
     ~itkImageToImageFilterID2VIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2VIF2_Pointer {
   public:
     itkImageToImageFilterID2VIF2_Pointer();
     itkImageToImageFilterID2VIF2_Pointer(itkImageToImageFilterID2VIF2_Pointer const & p);
     itkImageToImageFilterID2VIF2_Pointer(itkImageToImageFilterID2VIF2 * p);
     ~itkImageToImageFilterID2VIF2_Pointer();
     itkImageToImageFilterID2VIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2VIF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2VIF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2VIF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2VIF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2VIF2_Pointer const & r) const;
     itkImageToImageFilterID2VIF2_Pointer & operator=(itkImageToImageFilterID2VIF2_Pointer const & r);
     itkImageToImageFilterID2VIF2_Pointer & operator=(itkImageToImageFilterID2VIF2 * r);
     itkImageToImageFilterID2VIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2VIUC2 : public itkImageSourceVIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2VIUC2(itkImageToImageFilterID2VIUC2 const & arg0);
     void operator=(itkImageToImageFilterID2VIUC2 const & arg0);
   protected:
     itkImageToImageFilterID2VIUC2();
     ~itkImageToImageFilterID2VIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2VIUC2_Pointer {
   public:
     itkImageToImageFilterID2VIUC2_Pointer();
     itkImageToImageFilterID2VIUC2_Pointer(itkImageToImageFilterID2VIUC2_Pointer const & p);
     itkImageToImageFilterID2VIUC2_Pointer(itkImageToImageFilterID2VIUC2 * p);
     ~itkImageToImageFilterID2VIUC2_Pointer();
     itkImageToImageFilterID2VIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2VIUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2VIUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2VIUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2VIUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2VIUC2_Pointer const & r) const;
     itkImageToImageFilterID2VIUC2_Pointer & operator=(itkImageToImageFilterID2VIUC2_Pointer const & r);
     itkImageToImageFilterID2VIUC2_Pointer & operator=(itkImageToImageFilterID2VIUC2 * r);
     itkImageToImageFilterID2VIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2VIUL2 : public itkImageSourceVIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2VIUL2(itkImageToImageFilterID2VIUL2 const & arg0);
     void operator=(itkImageToImageFilterID2VIUL2 const & arg0);
   protected:
     itkImageToImageFilterID2VIUL2();
     ~itkImageToImageFilterID2VIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2VIUL2_Pointer {
   public:
     itkImageToImageFilterID2VIUL2_Pointer();
     itkImageToImageFilterID2VIUL2_Pointer(itkImageToImageFilterID2VIUL2_Pointer const & p);
     itkImageToImageFilterID2VIUL2_Pointer(itkImageToImageFilterID2VIUL2 * p);
     ~itkImageToImageFilterID2VIUL2_Pointer();
     itkImageToImageFilterID2VIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2VIUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2VIUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2VIUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2VIUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2VIUL2_Pointer const & r) const;
     itkImageToImageFilterID2VIUL2_Pointer & operator=(itkImageToImageFilterID2VIUL2_Pointer const & r);
     itkImageToImageFilterID2VIUL2_Pointer & operator=(itkImageToImageFilterID2VIUL2 * r);
     itkImageToImageFilterID2VIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID2VIUS2 : public itkImageSourceVIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD2 const * image);
     itkImageD2 const * GetInput();
     itkImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID2VIUS2(itkImageToImageFilterID2VIUS2 const & arg0);
     void operator=(itkImageToImageFilterID2VIUS2 const & arg0);
   protected:
     itkImageToImageFilterID2VIUS2();
     ~itkImageToImageFilterID2VIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID2VIUS2_Pointer {
   public:
     itkImageToImageFilterID2VIUS2_Pointer();
     itkImageToImageFilterID2VIUS2_Pointer(itkImageToImageFilterID2VIUS2_Pointer const & p);
     itkImageToImageFilterID2VIUS2_Pointer(itkImageToImageFilterID2VIUS2 * p);
     ~itkImageToImageFilterID2VIUS2_Pointer();
     itkImageToImageFilterID2VIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID2VIUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterID2VIUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID2VIUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID2VIUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID2VIUS2_Pointer const & r) const;
     itkImageToImageFilterID2VIUS2_Pointer & operator=(itkImageToImageFilterID2VIUS2_Pointer const & r);
     itkImageToImageFilterID2VIUS2_Pointer & operator=(itkImageToImageFilterID2VIUS2 * r);
     itkImageToImageFilterID2VIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3ICF3 : public itkImageSourceICF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3ICF3(itkImageToImageFilterID3ICF3 const & arg0);
     void operator=(itkImageToImageFilterID3ICF3 const & arg0);
   protected:
     itkImageToImageFilterID3ICF3();
     ~itkImageToImageFilterID3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3ICF3_Pointer {
   public:
     itkImageToImageFilterID3ICF3_Pointer();
     itkImageToImageFilterID3ICF3_Pointer(itkImageToImageFilterID3ICF3_Pointer const & p);
     itkImageToImageFilterID3ICF3_Pointer(itkImageToImageFilterID3ICF3 * p);
     ~itkImageToImageFilterID3ICF3_Pointer();
     itkImageToImageFilterID3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3ICF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3ICF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3ICF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3ICF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3ICF3_Pointer const & r) const;
     itkImageToImageFilterID3ICF3_Pointer & operator=(itkImageToImageFilterID3ICF3_Pointer const & r);
     itkImageToImageFilterID3ICF3_Pointer & operator=(itkImageToImageFilterID3ICF3 * r);
     itkImageToImageFilterID3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3ICVF33 : public itkImageSourceICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3ICVF33(itkImageToImageFilterID3ICVF33 const & arg0);
     void operator=(itkImageToImageFilterID3ICVF33 const & arg0);
   protected:
     itkImageToImageFilterID3ICVF33();
     ~itkImageToImageFilterID3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3ICVF33_Pointer {
   public:
     itkImageToImageFilterID3ICVF33_Pointer();
     itkImageToImageFilterID3ICVF33_Pointer(itkImageToImageFilterID3ICVF33_Pointer const & p);
     itkImageToImageFilterID3ICVF33_Pointer(itkImageToImageFilterID3ICVF33 * p);
     ~itkImageToImageFilterID3ICVF33_Pointer();
     itkImageToImageFilterID3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3ICVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3ICVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3ICVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3ICVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3ICVF33_Pointer const & r) const;
     itkImageToImageFilterID3ICVF33_Pointer & operator=(itkImageToImageFilterID3ICVF33_Pointer const & r);
     itkImageToImageFilterID3ICVF33_Pointer & operator=(itkImageToImageFilterID3ICVF33 * r);
     itkImageToImageFilterID3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3ID2(itkImageToImageFilterID3ID2 const & arg0);
     void operator=(itkImageToImageFilterID3ID2 const & arg0);
   protected:
     itkImageToImageFilterID3ID2();
     ~itkImageToImageFilterID3ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3ID2_Pointer {
   public:
     itkImageToImageFilterID3ID2_Pointer();
     itkImageToImageFilterID3ID2_Pointer(itkImageToImageFilterID3ID2_Pointer const & p);
     itkImageToImageFilterID3ID2_Pointer(itkImageToImageFilterID3ID2 * p);
     ~itkImageToImageFilterID3ID2_Pointer();
     itkImageToImageFilterID3ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3ID2_Pointer const & r) const;
     itkImageToImageFilterID3ID2_Pointer & operator=(itkImageToImageFilterID3ID2_Pointer const & r);
     itkImageToImageFilterID3ID2_Pointer & operator=(itkImageToImageFilterID3ID2 * r);
     itkImageToImageFilterID3ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3IRGBAUS3 : public itkImageSourceIRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3IRGBAUS3(itkImageToImageFilterID3IRGBAUS3 const & arg0);
     void operator=(itkImageToImageFilterID3IRGBAUS3 const & arg0);
   protected:
     itkImageToImageFilterID3IRGBAUS3();
     ~itkImageToImageFilterID3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3IRGBAUS3_Pointer {
   public:
     itkImageToImageFilterID3IRGBAUS3_Pointer();
     itkImageToImageFilterID3IRGBAUS3_Pointer(itkImageToImageFilterID3IRGBAUS3_Pointer const & p);
     itkImageToImageFilterID3IRGBAUS3_Pointer(itkImageToImageFilterID3IRGBAUS3 * p);
     ~itkImageToImageFilterID3IRGBAUS3_Pointer();
     itkImageToImageFilterID3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3IRGBAUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3IRGBAUS3_Pointer const & r) const;
     itkImageToImageFilterID3IRGBAUS3_Pointer & operator=(itkImageToImageFilterID3IRGBAUS3_Pointer const & r);
     itkImageToImageFilterID3IRGBAUS3_Pointer & operator=(itkImageToImageFilterID3IRGBAUS3 * r);
     itkImageToImageFilterID3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3IRGBUS3 : public itkImageSourceIRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3IRGBUS3(itkImageToImageFilterID3IRGBUS3 const & arg0);
     void operator=(itkImageToImageFilterID3IRGBUS3 const & arg0);
   protected:
     itkImageToImageFilterID3IRGBUS3();
     ~itkImageToImageFilterID3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3IRGBUS3_Pointer {
   public:
     itkImageToImageFilterID3IRGBUS3_Pointer();
     itkImageToImageFilterID3IRGBUS3_Pointer(itkImageToImageFilterID3IRGBUS3_Pointer const & p);
     itkImageToImageFilterID3IRGBUS3_Pointer(itkImageToImageFilterID3IRGBUS3 * p);
     ~itkImageToImageFilterID3IRGBUS3_Pointer();
     itkImageToImageFilterID3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3IRGBUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3IRGBUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3IRGBUS3_Pointer const & r) const;
     itkImageToImageFilterID3IRGBUS3_Pointer & operator=(itkImageToImageFilterID3IRGBUS3_Pointer const & r);
     itkImageToImageFilterID3IRGBUS3_Pointer & operator=(itkImageToImageFilterID3IRGBUS3 * r);
     itkImageToImageFilterID3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3ISSRTD33 : public itkImageSourceISSRTD33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3ISSRTD33(itkImageToImageFilterID3ISSRTD33 const & arg0);
     void operator=(itkImageToImageFilterID3ISSRTD33 const & arg0);
   protected:
     itkImageToImageFilterID3ISSRTD33();
     ~itkImageToImageFilterID3ISSRTD33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3ISSRTD33_Pointer {
   public:
     itkImageToImageFilterID3ISSRTD33_Pointer();
     itkImageToImageFilterID3ISSRTD33_Pointer(itkImageToImageFilterID3ISSRTD33_Pointer const & p);
     itkImageToImageFilterID3ISSRTD33_Pointer(itkImageToImageFilterID3ISSRTD33 * p);
     ~itkImageToImageFilterID3ISSRTD33_Pointer();
     itkImageToImageFilterID3ISSRTD33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3ISSRTD33 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3ISSRTD33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3ISSRTD33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3ISSRTD33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3ISSRTD33_Pointer const & r) const;
     itkImageToImageFilterID3ISSRTD33_Pointer & operator=(itkImageToImageFilterID3ISSRTD33_Pointer const & r);
     itkImageToImageFilterID3ISSRTD33_Pointer & operator=(itkImageToImageFilterID3ISSRTD33 * r);
     itkImageToImageFilterID3ISSRTD33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3IVF33 : public itkImageSourceIVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3IVF33(itkImageToImageFilterID3IVF33 const & arg0);
     void operator=(itkImageToImageFilterID3IVF33 const & arg0);
   protected:
     itkImageToImageFilterID3IVF33();
     ~itkImageToImageFilterID3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3IVF33_Pointer {
   public:
     itkImageToImageFilterID3IVF33_Pointer();
     itkImageToImageFilterID3IVF33_Pointer(itkImageToImageFilterID3IVF33_Pointer const & p);
     itkImageToImageFilterID3IVF33_Pointer(itkImageToImageFilterID3IVF33 * p);
     ~itkImageToImageFilterID3IVF33_Pointer();
     itkImageToImageFilterID3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3IVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3IVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3IVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3IVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3IVF33_Pointer const & r) const;
     itkImageToImageFilterID3IVF33_Pointer & operator=(itkImageToImageFilterID3IVF33_Pointer const & r);
     itkImageToImageFilterID3IVF33_Pointer & operator=(itkImageToImageFilterID3IVF33 * r);
     itkImageToImageFilterID3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3VID3 : public itkImageSourceVID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3VID3(itkImageToImageFilterID3VID3 const & arg0);
     void operator=(itkImageToImageFilterID3VID3 const & arg0);
   protected:
     itkImageToImageFilterID3VID3();
     ~itkImageToImageFilterID3VID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3VID3_Pointer {
   public:
     itkImageToImageFilterID3VID3_Pointer();
     itkImageToImageFilterID3VID3_Pointer(itkImageToImageFilterID3VID3_Pointer const & p);
     itkImageToImageFilterID3VID3_Pointer(itkImageToImageFilterID3VID3 * p);
     ~itkImageToImageFilterID3VID3_Pointer();
     itkImageToImageFilterID3VID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3VID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3VID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3VID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3VID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3VID3_Pointer const & r) const;
     itkImageToImageFilterID3VID3_Pointer & operator=(itkImageToImageFilterID3VID3_Pointer const & r);
     itkImageToImageFilterID3VID3_Pointer & operator=(itkImageToImageFilterID3VID3 * r);
     itkImageToImageFilterID3VID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3VIF3 : public itkImageSourceVIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3VIF3(itkImageToImageFilterID3VIF3 const & arg0);
     void operator=(itkImageToImageFilterID3VIF3 const & arg0);
   protected:
     itkImageToImageFilterID3VIF3();
     ~itkImageToImageFilterID3VIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3VIF3_Pointer {
   public:
     itkImageToImageFilterID3VIF3_Pointer();
     itkImageToImageFilterID3VIF3_Pointer(itkImageToImageFilterID3VIF3_Pointer const & p);
     itkImageToImageFilterID3VIF3_Pointer(itkImageToImageFilterID3VIF3 * p);
     ~itkImageToImageFilterID3VIF3_Pointer();
     itkImageToImageFilterID3VIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3VIF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3VIF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3VIF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3VIF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3VIF3_Pointer const & r) const;
     itkImageToImageFilterID3VIF3_Pointer & operator=(itkImageToImageFilterID3VIF3_Pointer const & r);
     itkImageToImageFilterID3VIF3_Pointer & operator=(itkImageToImageFilterID3VIF3 * r);
     itkImageToImageFilterID3VIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3VIUC3 : public itkImageSourceVIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3VIUC3(itkImageToImageFilterID3VIUC3 const & arg0);
     void operator=(itkImageToImageFilterID3VIUC3 const & arg0);
   protected:
     itkImageToImageFilterID3VIUC3();
     ~itkImageToImageFilterID3VIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3VIUC3_Pointer {
   public:
     itkImageToImageFilterID3VIUC3_Pointer();
     itkImageToImageFilterID3VIUC3_Pointer(itkImageToImageFilterID3VIUC3_Pointer const & p);
     itkImageToImageFilterID3VIUC3_Pointer(itkImageToImageFilterID3VIUC3 * p);
     ~itkImageToImageFilterID3VIUC3_Pointer();
     itkImageToImageFilterID3VIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3VIUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3VIUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3VIUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3VIUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3VIUC3_Pointer const & r) const;
     itkImageToImageFilterID3VIUC3_Pointer & operator=(itkImageToImageFilterID3VIUC3_Pointer const & r);
     itkImageToImageFilterID3VIUC3_Pointer & operator=(itkImageToImageFilterID3VIUC3 * r);
     itkImageToImageFilterID3VIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3VIUL3 : public itkImageSourceVIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3VIUL3(itkImageToImageFilterID3VIUL3 const & arg0);
     void operator=(itkImageToImageFilterID3VIUL3 const & arg0);
   protected:
     itkImageToImageFilterID3VIUL3();
     ~itkImageToImageFilterID3VIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3VIUL3_Pointer {
   public:
     itkImageToImageFilterID3VIUL3_Pointer();
     itkImageToImageFilterID3VIUL3_Pointer(itkImageToImageFilterID3VIUL3_Pointer const & p);
     itkImageToImageFilterID3VIUL3_Pointer(itkImageToImageFilterID3VIUL3 * p);
     ~itkImageToImageFilterID3VIUL3_Pointer();
     itkImageToImageFilterID3VIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3VIUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3VIUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3VIUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3VIUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3VIUL3_Pointer const & r) const;
     itkImageToImageFilterID3VIUL3_Pointer & operator=(itkImageToImageFilterID3VIUL3_Pointer const & r);
     itkImageToImageFilterID3VIUL3_Pointer & operator=(itkImageToImageFilterID3VIUL3 * r);
     itkImageToImageFilterID3VIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterID3VIUS3 : public itkImageSourceVIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageD3 const * image);
     itkImageD3 const * GetInput();
     itkImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterID3VIUS3(itkImageToImageFilterID3VIUS3 const & arg0);
     void operator=(itkImageToImageFilterID3VIUS3 const & arg0);
   protected:
     itkImageToImageFilterID3VIUS3();
     ~itkImageToImageFilterID3VIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterID3VIUS3_Pointer {
   public:
     itkImageToImageFilterID3VIUS3_Pointer();
     itkImageToImageFilterID3VIUS3_Pointer(itkImageToImageFilterID3VIUS3_Pointer const & p);
     itkImageToImageFilterID3VIUS3_Pointer(itkImageToImageFilterID3VIUS3 * p);
     ~itkImageToImageFilterID3VIUS3_Pointer();
     itkImageToImageFilterID3VIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterID3VIUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterID3VIUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterID3VIUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterID3VIUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterID3VIUS3_Pointer const & r) const;
     itkImageToImageFilterID3VIUS3_Pointer & operator=(itkImageToImageFilterID3VIUS3_Pointer const & r);
     itkImageToImageFilterID3VIUS3_Pointer & operator=(itkImageToImageFilterID3VIUS3 * r);
     itkImageToImageFilterID3VIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2ICF2 : public itkImageSourceICF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2ICF2(itkImageToImageFilterIF2ICF2 const & arg0);
     void operator=(itkImageToImageFilterIF2ICF2 const & arg0);
   protected:
     itkImageToImageFilterIF2ICF2();
     ~itkImageToImageFilterIF2ICF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2ICF2_Pointer {
   public:
     itkImageToImageFilterIF2ICF2_Pointer();
     itkImageToImageFilterIF2ICF2_Pointer(itkImageToImageFilterIF2ICF2_Pointer const & p);
     itkImageToImageFilterIF2ICF2_Pointer(itkImageToImageFilterIF2ICF2 * p);
     ~itkImageToImageFilterIF2ICF2_Pointer();
     itkImageToImageFilterIF2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2ICF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2ICF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2ICF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2ICF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2ICF2_Pointer const & r) const;
     itkImageToImageFilterIF2ICF2_Pointer & operator=(itkImageToImageFilterIF2ICF2_Pointer const & r);
     itkImageToImageFilterIF2ICF2_Pointer & operator=(itkImageToImageFilterIF2ICF2 * r);
     itkImageToImageFilterIF2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2ICVF22 : public itkImageSourceICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2ICVF22(itkImageToImageFilterIF2ICVF22 const & arg0);
     void operator=(itkImageToImageFilterIF2ICVF22 const & arg0);
   protected:
     itkImageToImageFilterIF2ICVF22();
     ~itkImageToImageFilterIF2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2ICVF22_Pointer {
   public:
     itkImageToImageFilterIF2ICVF22_Pointer();
     itkImageToImageFilterIF2ICVF22_Pointer(itkImageToImageFilterIF2ICVF22_Pointer const & p);
     itkImageToImageFilterIF2ICVF22_Pointer(itkImageToImageFilterIF2ICVF22 * p);
     ~itkImageToImageFilterIF2ICVF22_Pointer();
     itkImageToImageFilterIF2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2ICVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2ICVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2ICVF22_Pointer const & r) const;
     itkImageToImageFilterIF2ICVF22_Pointer & operator=(itkImageToImageFilterIF2ICVF22_Pointer const & r);
     itkImageToImageFilterIF2ICVF22_Pointer & operator=(itkImageToImageFilterIF2ICVF22 * r);
     itkImageToImageFilterIF2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2IF3(itkImageToImageFilterIF2IF3 const & arg0);
     void operator=(itkImageToImageFilterIF2IF3 const & arg0);
   protected:
     itkImageToImageFilterIF2IF3();
     ~itkImageToImageFilterIF2IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2IF3_Pointer {
   public:
     itkImageToImageFilterIF2IF3_Pointer();
     itkImageToImageFilterIF2IF3_Pointer(itkImageToImageFilterIF2IF3_Pointer const & p);
     itkImageToImageFilterIF2IF3_Pointer(itkImageToImageFilterIF2IF3 * p);
     ~itkImageToImageFilterIF2IF3_Pointer();
     itkImageToImageFilterIF2IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2IF3_Pointer const & r) const;
     itkImageToImageFilterIF2IF3_Pointer & operator=(itkImageToImageFilterIF2IF3_Pointer const & r);
     itkImageToImageFilterIF2IF3_Pointer & operator=(itkImageToImageFilterIF2IF3 * r);
     itkImageToImageFilterIF2IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2IRGBAUS2 : public itkImageSourceIRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2IRGBAUS2(itkImageToImageFilterIF2IRGBAUS2 const & arg0);
     void operator=(itkImageToImageFilterIF2IRGBAUS2 const & arg0);
   protected:
     itkImageToImageFilterIF2IRGBAUS2();
     ~itkImageToImageFilterIF2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2IRGBAUS2_Pointer {
   public:
     itkImageToImageFilterIF2IRGBAUS2_Pointer();
     itkImageToImageFilterIF2IRGBAUS2_Pointer(itkImageToImageFilterIF2IRGBAUS2_Pointer const & p);
     itkImageToImageFilterIF2IRGBAUS2_Pointer(itkImageToImageFilterIF2IRGBAUS2 * p);
     ~itkImageToImageFilterIF2IRGBAUS2_Pointer();
     itkImageToImageFilterIF2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2IRGBAUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2IRGBAUS2_Pointer const & r) const;
     itkImageToImageFilterIF2IRGBAUS2_Pointer & operator=(itkImageToImageFilterIF2IRGBAUS2_Pointer const & r);
     itkImageToImageFilterIF2IRGBAUS2_Pointer & operator=(itkImageToImageFilterIF2IRGBAUS2 * r);
     itkImageToImageFilterIF2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2IRGBUS2 : public itkImageSourceIRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2IRGBUS2(itkImageToImageFilterIF2IRGBUS2 const & arg0);
     void operator=(itkImageToImageFilterIF2IRGBUS2 const & arg0);
   protected:
     itkImageToImageFilterIF2IRGBUS2();
     ~itkImageToImageFilterIF2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2IRGBUS2_Pointer {
   public:
     itkImageToImageFilterIF2IRGBUS2_Pointer();
     itkImageToImageFilterIF2IRGBUS2_Pointer(itkImageToImageFilterIF2IRGBUS2_Pointer const & p);
     itkImageToImageFilterIF2IRGBUS2_Pointer(itkImageToImageFilterIF2IRGBUS2 * p);
     ~itkImageToImageFilterIF2IRGBUS2_Pointer();
     itkImageToImageFilterIF2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2IRGBUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2IRGBUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2IRGBUS2_Pointer const & r) const;
     itkImageToImageFilterIF2IRGBUS2_Pointer & operator=(itkImageToImageFilterIF2IRGBUS2_Pointer const & r);
     itkImageToImageFilterIF2IRGBUS2_Pointer & operator=(itkImageToImageFilterIF2IRGBUS2 * r);
     itkImageToImageFilterIF2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2ISSRTD22 : public itkImageSourceISSRTD22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2ISSRTD22(itkImageToImageFilterIF2ISSRTD22 const & arg0);
     void operator=(itkImageToImageFilterIF2ISSRTD22 const & arg0);
   protected:
     itkImageToImageFilterIF2ISSRTD22();
     ~itkImageToImageFilterIF2ISSRTD22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2ISSRTD22_Pointer {
   public:
     itkImageToImageFilterIF2ISSRTD22_Pointer();
     itkImageToImageFilterIF2ISSRTD22_Pointer(itkImageToImageFilterIF2ISSRTD22_Pointer const & p);
     itkImageToImageFilterIF2ISSRTD22_Pointer(itkImageToImageFilterIF2ISSRTD22 * p);
     ~itkImageToImageFilterIF2ISSRTD22_Pointer();
     itkImageToImageFilterIF2ISSRTD22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2ISSRTD22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2ISSRTD22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2ISSRTD22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2ISSRTD22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2ISSRTD22_Pointer const & r) const;
     itkImageToImageFilterIF2ISSRTD22_Pointer & operator=(itkImageToImageFilterIF2ISSRTD22_Pointer const & r);
     itkImageToImageFilterIF2ISSRTD22_Pointer & operator=(itkImageToImageFilterIF2ISSRTD22 * r);
     itkImageToImageFilterIF2ISSRTD22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2IVF22 : public itkImageSourceIVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2IVF22(itkImageToImageFilterIF2IVF22 const & arg0);
     void operator=(itkImageToImageFilterIF2IVF22 const & arg0);
   protected:
     itkImageToImageFilterIF2IVF22();
     ~itkImageToImageFilterIF2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2IVF22_Pointer {
   public:
     itkImageToImageFilterIF2IVF22_Pointer();
     itkImageToImageFilterIF2IVF22_Pointer(itkImageToImageFilterIF2IVF22_Pointer const & p);
     itkImageToImageFilterIF2IVF22_Pointer(itkImageToImageFilterIF2IVF22 * p);
     ~itkImageToImageFilterIF2IVF22_Pointer();
     itkImageToImageFilterIF2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2IVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2IVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2IVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2IVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2IVF22_Pointer const & r) const;
     itkImageToImageFilterIF2IVF22_Pointer & operator=(itkImageToImageFilterIF2IVF22_Pointer const & r);
     itkImageToImageFilterIF2IVF22_Pointer & operator=(itkImageToImageFilterIF2IVF22 * r);
     itkImageToImageFilterIF2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2VID2 : public itkImageSourceVID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2VID2(itkImageToImageFilterIF2VID2 const & arg0);
     void operator=(itkImageToImageFilterIF2VID2 const & arg0);
   protected:
     itkImageToImageFilterIF2VID2();
     ~itkImageToImageFilterIF2VID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2VID2_Pointer {
   public:
     itkImageToImageFilterIF2VID2_Pointer();
     itkImageToImageFilterIF2VID2_Pointer(itkImageToImageFilterIF2VID2_Pointer const & p);
     itkImageToImageFilterIF2VID2_Pointer(itkImageToImageFilterIF2VID2 * p);
     ~itkImageToImageFilterIF2VID2_Pointer();
     itkImageToImageFilterIF2VID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2VID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2VID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2VID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2VID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2VID2_Pointer const & r) const;
     itkImageToImageFilterIF2VID2_Pointer & operator=(itkImageToImageFilterIF2VID2_Pointer const & r);
     itkImageToImageFilterIF2VID2_Pointer & operator=(itkImageToImageFilterIF2VID2 * r);
     itkImageToImageFilterIF2VID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2VIF2 : public itkImageSourceVIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2VIF2(itkImageToImageFilterIF2VIF2 const & arg0);
     void operator=(itkImageToImageFilterIF2VIF2 const & arg0);
   protected:
     itkImageToImageFilterIF2VIF2();
     ~itkImageToImageFilterIF2VIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2VIF2_Pointer {
   public:
     itkImageToImageFilterIF2VIF2_Pointer();
     itkImageToImageFilterIF2VIF2_Pointer(itkImageToImageFilterIF2VIF2_Pointer const & p);
     itkImageToImageFilterIF2VIF2_Pointer(itkImageToImageFilterIF2VIF2 * p);
     ~itkImageToImageFilterIF2VIF2_Pointer();
     itkImageToImageFilterIF2VIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2VIF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2VIF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2VIF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2VIF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2VIF2_Pointer const & r) const;
     itkImageToImageFilterIF2VIF2_Pointer & operator=(itkImageToImageFilterIF2VIF2_Pointer const & r);
     itkImageToImageFilterIF2VIF2_Pointer & operator=(itkImageToImageFilterIF2VIF2 * r);
     itkImageToImageFilterIF2VIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2VIUC2 : public itkImageSourceVIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2VIUC2(itkImageToImageFilterIF2VIUC2 const & arg0);
     void operator=(itkImageToImageFilterIF2VIUC2 const & arg0);
   protected:
     itkImageToImageFilterIF2VIUC2();
     ~itkImageToImageFilterIF2VIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2VIUC2_Pointer {
   public:
     itkImageToImageFilterIF2VIUC2_Pointer();
     itkImageToImageFilterIF2VIUC2_Pointer(itkImageToImageFilterIF2VIUC2_Pointer const & p);
     itkImageToImageFilterIF2VIUC2_Pointer(itkImageToImageFilterIF2VIUC2 * p);
     ~itkImageToImageFilterIF2VIUC2_Pointer();
     itkImageToImageFilterIF2VIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2VIUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2VIUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2VIUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2VIUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2VIUC2_Pointer const & r) const;
     itkImageToImageFilterIF2VIUC2_Pointer & operator=(itkImageToImageFilterIF2VIUC2_Pointer const & r);
     itkImageToImageFilterIF2VIUC2_Pointer & operator=(itkImageToImageFilterIF2VIUC2 * r);
     itkImageToImageFilterIF2VIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2VIUL2 : public itkImageSourceVIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2VIUL2(itkImageToImageFilterIF2VIUL2 const & arg0);
     void operator=(itkImageToImageFilterIF2VIUL2 const & arg0);
   protected:
     itkImageToImageFilterIF2VIUL2();
     ~itkImageToImageFilterIF2VIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2VIUL2_Pointer {
   public:
     itkImageToImageFilterIF2VIUL2_Pointer();
     itkImageToImageFilterIF2VIUL2_Pointer(itkImageToImageFilterIF2VIUL2_Pointer const & p);
     itkImageToImageFilterIF2VIUL2_Pointer(itkImageToImageFilterIF2VIUL2 * p);
     ~itkImageToImageFilterIF2VIUL2_Pointer();
     itkImageToImageFilterIF2VIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2VIUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2VIUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2VIUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2VIUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2VIUL2_Pointer const & r) const;
     itkImageToImageFilterIF2VIUL2_Pointer & operator=(itkImageToImageFilterIF2VIUL2_Pointer const & r);
     itkImageToImageFilterIF2VIUL2_Pointer & operator=(itkImageToImageFilterIF2VIUL2 * r);
     itkImageToImageFilterIF2VIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF2VIUS2 : public itkImageSourceVIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF2 const * image);
     itkImageF2 const * GetInput();
     itkImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF2VIUS2(itkImageToImageFilterIF2VIUS2 const & arg0);
     void operator=(itkImageToImageFilterIF2VIUS2 const & arg0);
   protected:
     itkImageToImageFilterIF2VIUS2();
     ~itkImageToImageFilterIF2VIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF2VIUS2_Pointer {
   public:
     itkImageToImageFilterIF2VIUS2_Pointer();
     itkImageToImageFilterIF2VIUS2_Pointer(itkImageToImageFilterIF2VIUS2_Pointer const & p);
     itkImageToImageFilterIF2VIUS2_Pointer(itkImageToImageFilterIF2VIUS2 * p);
     ~itkImageToImageFilterIF2VIUS2_Pointer();
     itkImageToImageFilterIF2VIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF2VIUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF2VIUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF2VIUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF2VIUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF2VIUS2_Pointer const & r) const;
     itkImageToImageFilterIF2VIUS2_Pointer & operator=(itkImageToImageFilterIF2VIUS2_Pointer const & r);
     itkImageToImageFilterIF2VIUS2_Pointer & operator=(itkImageToImageFilterIF2VIUS2 * r);
     itkImageToImageFilterIF2VIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3ICF3 : public itkImageSourceICF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3ICF3(itkImageToImageFilterIF3ICF3 const & arg0);
     void operator=(itkImageToImageFilterIF3ICF3 const & arg0);
   protected:
     itkImageToImageFilterIF3ICF3();
     ~itkImageToImageFilterIF3ICF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3ICF3_Pointer {
   public:
     itkImageToImageFilterIF3ICF3_Pointer();
     itkImageToImageFilterIF3ICF3_Pointer(itkImageToImageFilterIF3ICF3_Pointer const & p);
     itkImageToImageFilterIF3ICF3_Pointer(itkImageToImageFilterIF3ICF3 * p);
     ~itkImageToImageFilterIF3ICF3_Pointer();
     itkImageToImageFilterIF3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3ICF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3ICF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3ICF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3ICF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3ICF3_Pointer const & r) const;
     itkImageToImageFilterIF3ICF3_Pointer & operator=(itkImageToImageFilterIF3ICF3_Pointer const & r);
     itkImageToImageFilterIF3ICF3_Pointer & operator=(itkImageToImageFilterIF3ICF3 * r);
     itkImageToImageFilterIF3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3ICVF33 : public itkImageSourceICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3ICVF33(itkImageToImageFilterIF3ICVF33 const & arg0);
     void operator=(itkImageToImageFilterIF3ICVF33 const & arg0);
   protected:
     itkImageToImageFilterIF3ICVF33();
     ~itkImageToImageFilterIF3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3ICVF33_Pointer {
   public:
     itkImageToImageFilterIF3ICVF33_Pointer();
     itkImageToImageFilterIF3ICVF33_Pointer(itkImageToImageFilterIF3ICVF33_Pointer const & p);
     itkImageToImageFilterIF3ICVF33_Pointer(itkImageToImageFilterIF3ICVF33 * p);
     ~itkImageToImageFilterIF3ICVF33_Pointer();
     itkImageToImageFilterIF3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3ICVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3ICVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3ICVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3ICVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3ICVF33_Pointer const & r) const;
     itkImageToImageFilterIF3ICVF33_Pointer & operator=(itkImageToImageFilterIF3ICVF33_Pointer const & r);
     itkImageToImageFilterIF3ICVF33_Pointer & operator=(itkImageToImageFilterIF3ICVF33 * r);
     itkImageToImageFilterIF3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3IF2(itkImageToImageFilterIF3IF2 const & arg0);
     void operator=(itkImageToImageFilterIF3IF2 const & arg0);
   protected:
     itkImageToImageFilterIF3IF2();
     ~itkImageToImageFilterIF3IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3IF2_Pointer {
   public:
     itkImageToImageFilterIF3IF2_Pointer();
     itkImageToImageFilterIF3IF2_Pointer(itkImageToImageFilterIF3IF2_Pointer const & p);
     itkImageToImageFilterIF3IF2_Pointer(itkImageToImageFilterIF3IF2 * p);
     ~itkImageToImageFilterIF3IF2_Pointer();
     itkImageToImageFilterIF3IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3IF2_Pointer const & r) const;
     itkImageToImageFilterIF3IF2_Pointer & operator=(itkImageToImageFilterIF3IF2_Pointer const & r);
     itkImageToImageFilterIF3IF2_Pointer & operator=(itkImageToImageFilterIF3IF2 * r);
     itkImageToImageFilterIF3IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3IRGBAUS3 : public itkImageSourceIRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3IRGBAUS3(itkImageToImageFilterIF3IRGBAUS3 const & arg0);
     void operator=(itkImageToImageFilterIF3IRGBAUS3 const & arg0);
   protected:
     itkImageToImageFilterIF3IRGBAUS3();
     ~itkImageToImageFilterIF3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3IRGBAUS3_Pointer {
   public:
     itkImageToImageFilterIF3IRGBAUS3_Pointer();
     itkImageToImageFilterIF3IRGBAUS3_Pointer(itkImageToImageFilterIF3IRGBAUS3_Pointer const & p);
     itkImageToImageFilterIF3IRGBAUS3_Pointer(itkImageToImageFilterIF3IRGBAUS3 * p);
     ~itkImageToImageFilterIF3IRGBAUS3_Pointer();
     itkImageToImageFilterIF3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3IRGBAUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3IRGBAUS3_Pointer const & r) const;
     itkImageToImageFilterIF3IRGBAUS3_Pointer & operator=(itkImageToImageFilterIF3IRGBAUS3_Pointer const & r);
     itkImageToImageFilterIF3IRGBAUS3_Pointer & operator=(itkImageToImageFilterIF3IRGBAUS3 * r);
     itkImageToImageFilterIF3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3IRGBUS3 : public itkImageSourceIRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3IRGBUS3(itkImageToImageFilterIF3IRGBUS3 const & arg0);
     void operator=(itkImageToImageFilterIF3IRGBUS3 const & arg0);
   protected:
     itkImageToImageFilterIF3IRGBUS3();
     ~itkImageToImageFilterIF3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3IRGBUS3_Pointer {
   public:
     itkImageToImageFilterIF3IRGBUS3_Pointer();
     itkImageToImageFilterIF3IRGBUS3_Pointer(itkImageToImageFilterIF3IRGBUS3_Pointer const & p);
     itkImageToImageFilterIF3IRGBUS3_Pointer(itkImageToImageFilterIF3IRGBUS3 * p);
     ~itkImageToImageFilterIF3IRGBUS3_Pointer();
     itkImageToImageFilterIF3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3IRGBUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3IRGBUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3IRGBUS3_Pointer const & r) const;
     itkImageToImageFilterIF3IRGBUS3_Pointer & operator=(itkImageToImageFilterIF3IRGBUS3_Pointer const & r);
     itkImageToImageFilterIF3IRGBUS3_Pointer & operator=(itkImageToImageFilterIF3IRGBUS3 * r);
     itkImageToImageFilterIF3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3ISSRTD33 : public itkImageSourceISSRTD33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3ISSRTD33(itkImageToImageFilterIF3ISSRTD33 const & arg0);
     void operator=(itkImageToImageFilterIF3ISSRTD33 const & arg0);
   protected:
     itkImageToImageFilterIF3ISSRTD33();
     ~itkImageToImageFilterIF3ISSRTD33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3ISSRTD33_Pointer {
   public:
     itkImageToImageFilterIF3ISSRTD33_Pointer();
     itkImageToImageFilterIF3ISSRTD33_Pointer(itkImageToImageFilterIF3ISSRTD33_Pointer const & p);
     itkImageToImageFilterIF3ISSRTD33_Pointer(itkImageToImageFilterIF3ISSRTD33 * p);
     ~itkImageToImageFilterIF3ISSRTD33_Pointer();
     itkImageToImageFilterIF3ISSRTD33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3ISSRTD33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3ISSRTD33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3ISSRTD33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3ISSRTD33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3ISSRTD33_Pointer const & r) const;
     itkImageToImageFilterIF3ISSRTD33_Pointer & operator=(itkImageToImageFilterIF3ISSRTD33_Pointer const & r);
     itkImageToImageFilterIF3ISSRTD33_Pointer & operator=(itkImageToImageFilterIF3ISSRTD33 * r);
     itkImageToImageFilterIF3ISSRTD33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3IVF33 : public itkImageSourceIVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3IVF33(itkImageToImageFilterIF3IVF33 const & arg0);
     void operator=(itkImageToImageFilterIF3IVF33 const & arg0);
   protected:
     itkImageToImageFilterIF3IVF33();
     ~itkImageToImageFilterIF3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3IVF33_Pointer {
   public:
     itkImageToImageFilterIF3IVF33_Pointer();
     itkImageToImageFilterIF3IVF33_Pointer(itkImageToImageFilterIF3IVF33_Pointer const & p);
     itkImageToImageFilterIF3IVF33_Pointer(itkImageToImageFilterIF3IVF33 * p);
     ~itkImageToImageFilterIF3IVF33_Pointer();
     itkImageToImageFilterIF3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3IVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3IVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3IVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3IVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3IVF33_Pointer const & r) const;
     itkImageToImageFilterIF3IVF33_Pointer & operator=(itkImageToImageFilterIF3IVF33_Pointer const & r);
     itkImageToImageFilterIF3IVF33_Pointer & operator=(itkImageToImageFilterIF3IVF33 * r);
     itkImageToImageFilterIF3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3VID3 : public itkImageSourceVID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3VID3(itkImageToImageFilterIF3VID3 const & arg0);
     void operator=(itkImageToImageFilterIF3VID3 const & arg0);
   protected:
     itkImageToImageFilterIF3VID3();
     ~itkImageToImageFilterIF3VID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3VID3_Pointer {
   public:
     itkImageToImageFilterIF3VID3_Pointer();
     itkImageToImageFilterIF3VID3_Pointer(itkImageToImageFilterIF3VID3_Pointer const & p);
     itkImageToImageFilterIF3VID3_Pointer(itkImageToImageFilterIF3VID3 * p);
     ~itkImageToImageFilterIF3VID3_Pointer();
     itkImageToImageFilterIF3VID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3VID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3VID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3VID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3VID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3VID3_Pointer const & r) const;
     itkImageToImageFilterIF3VID3_Pointer & operator=(itkImageToImageFilterIF3VID3_Pointer const & r);
     itkImageToImageFilterIF3VID3_Pointer & operator=(itkImageToImageFilterIF3VID3 * r);
     itkImageToImageFilterIF3VID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3VIF3 : public itkImageSourceVIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3VIF3(itkImageToImageFilterIF3VIF3 const & arg0);
     void operator=(itkImageToImageFilterIF3VIF3 const & arg0);
   protected:
     itkImageToImageFilterIF3VIF3();
     ~itkImageToImageFilterIF3VIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3VIF3_Pointer {
   public:
     itkImageToImageFilterIF3VIF3_Pointer();
     itkImageToImageFilterIF3VIF3_Pointer(itkImageToImageFilterIF3VIF3_Pointer const & p);
     itkImageToImageFilterIF3VIF3_Pointer(itkImageToImageFilterIF3VIF3 * p);
     ~itkImageToImageFilterIF3VIF3_Pointer();
     itkImageToImageFilterIF3VIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3VIF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3VIF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3VIF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3VIF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3VIF3_Pointer const & r) const;
     itkImageToImageFilterIF3VIF3_Pointer & operator=(itkImageToImageFilterIF3VIF3_Pointer const & r);
     itkImageToImageFilterIF3VIF3_Pointer & operator=(itkImageToImageFilterIF3VIF3 * r);
     itkImageToImageFilterIF3VIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3VIUC3 : public itkImageSourceVIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3VIUC3(itkImageToImageFilterIF3VIUC3 const & arg0);
     void operator=(itkImageToImageFilterIF3VIUC3 const & arg0);
   protected:
     itkImageToImageFilterIF3VIUC3();
     ~itkImageToImageFilterIF3VIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3VIUC3_Pointer {
   public:
     itkImageToImageFilterIF3VIUC3_Pointer();
     itkImageToImageFilterIF3VIUC3_Pointer(itkImageToImageFilterIF3VIUC3_Pointer const & p);
     itkImageToImageFilterIF3VIUC3_Pointer(itkImageToImageFilterIF3VIUC3 * p);
     ~itkImageToImageFilterIF3VIUC3_Pointer();
     itkImageToImageFilterIF3VIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3VIUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3VIUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3VIUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3VIUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3VIUC3_Pointer const & r) const;
     itkImageToImageFilterIF3VIUC3_Pointer & operator=(itkImageToImageFilterIF3VIUC3_Pointer const & r);
     itkImageToImageFilterIF3VIUC3_Pointer & operator=(itkImageToImageFilterIF3VIUC3 * r);
     itkImageToImageFilterIF3VIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3VIUL3 : public itkImageSourceVIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3VIUL3(itkImageToImageFilterIF3VIUL3 const & arg0);
     void operator=(itkImageToImageFilterIF3VIUL3 const & arg0);
   protected:
     itkImageToImageFilterIF3VIUL3();
     ~itkImageToImageFilterIF3VIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3VIUL3_Pointer {
   public:
     itkImageToImageFilterIF3VIUL3_Pointer();
     itkImageToImageFilterIF3VIUL3_Pointer(itkImageToImageFilterIF3VIUL3_Pointer const & p);
     itkImageToImageFilterIF3VIUL3_Pointer(itkImageToImageFilterIF3VIUL3 * p);
     ~itkImageToImageFilterIF3VIUL3_Pointer();
     itkImageToImageFilterIF3VIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3VIUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3VIUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3VIUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3VIUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3VIUL3_Pointer const & r) const;
     itkImageToImageFilterIF3VIUL3_Pointer & operator=(itkImageToImageFilterIF3VIUL3_Pointer const & r);
     itkImageToImageFilterIF3VIUL3_Pointer & operator=(itkImageToImageFilterIF3VIUL3 * r);
     itkImageToImageFilterIF3VIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIF3VIUS3 : public itkImageSourceVIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageF3 const * image);
     itkImageF3 const * GetInput();
     itkImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIF3VIUS3(itkImageToImageFilterIF3VIUS3 const & arg0);
     void operator=(itkImageToImageFilterIF3VIUS3 const & arg0);
   protected:
     itkImageToImageFilterIF3VIUS3();
     ~itkImageToImageFilterIF3VIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIF3VIUS3_Pointer {
   public:
     itkImageToImageFilterIF3VIUS3_Pointer();
     itkImageToImageFilterIF3VIUS3_Pointer(itkImageToImageFilterIF3VIUS3_Pointer const & p);
     itkImageToImageFilterIF3VIUS3_Pointer(itkImageToImageFilterIF3VIUS3 * p);
     ~itkImageToImageFilterIF3VIUS3_Pointer();
     itkImageToImageFilterIF3VIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIF3VIUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIF3VIUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIF3VIUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIF3VIUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIF3VIUS3_Pointer const & r) const;
     itkImageToImageFilterIF3VIUS3_Pointer & operator=(itkImageToImageFilterIF3VIUS3_Pointer const & r);
     itkImageToImageFilterIF3VIUS3_Pointer & operator=(itkImageToImageFilterIF3VIUS3 * r);
     itkImageToImageFilterIF3VIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS2ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS2 const * image);
     itkImageRGBAUS2 const * GetInput();
     itkImageRGBAUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS2ID2(itkImageToImageFilterIRGBAUS2ID2 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS2ID2 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS2ID2();
     ~itkImageToImageFilterIRGBAUS2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS2ID2_Pointer {
   public:
     itkImageToImageFilterIRGBAUS2ID2_Pointer();
     itkImageToImageFilterIRGBAUS2ID2_Pointer(itkImageToImageFilterIRGBAUS2ID2_Pointer const & p);
     itkImageToImageFilterIRGBAUS2ID2_Pointer(itkImageToImageFilterIRGBAUS2ID2 * p);
     ~itkImageToImageFilterIRGBAUS2ID2_Pointer();
     itkImageToImageFilterIRGBAUS2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS2ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS2ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS2ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS2ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS2ID2_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS2ID2_Pointer & operator=(itkImageToImageFilterIRGBAUS2ID2_Pointer const & r);
     itkImageToImageFilterIRGBAUS2ID2_Pointer & operator=(itkImageToImageFilterIRGBAUS2ID2 * r);
     itkImageToImageFilterIRGBAUS2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS2IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS2 const * image);
     itkImageRGBAUS2 const * GetInput();
     itkImageRGBAUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS2IF2(itkImageToImageFilterIRGBAUS2IF2 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS2IF2 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS2IF2();
     ~itkImageToImageFilterIRGBAUS2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS2IF2_Pointer {
   public:
     itkImageToImageFilterIRGBAUS2IF2_Pointer();
     itkImageToImageFilterIRGBAUS2IF2_Pointer(itkImageToImageFilterIRGBAUS2IF2_Pointer const & p);
     itkImageToImageFilterIRGBAUS2IF2_Pointer(itkImageToImageFilterIRGBAUS2IF2 * p);
     ~itkImageToImageFilterIRGBAUS2IF2_Pointer();
     itkImageToImageFilterIRGBAUS2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS2IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS2IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS2IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS2IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS2IF2_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS2IF2_Pointer & operator=(itkImageToImageFilterIRGBAUS2IF2_Pointer const & r);
     itkImageToImageFilterIRGBAUS2IF2_Pointer & operator=(itkImageToImageFilterIRGBAUS2IF2 * r);
     itkImageToImageFilterIRGBAUS2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS2IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS2 const * image);
     itkImageRGBAUS2 const * GetInput();
     itkImageRGBAUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS2IUC2(itkImageToImageFilterIRGBAUS2IUC2 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS2IUC2 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS2IUC2();
     ~itkImageToImageFilterIRGBAUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS2IUC2_Pointer {
   public:
     itkImageToImageFilterIRGBAUS2IUC2_Pointer();
     itkImageToImageFilterIRGBAUS2IUC2_Pointer(itkImageToImageFilterIRGBAUS2IUC2_Pointer const & p);
     itkImageToImageFilterIRGBAUS2IUC2_Pointer(itkImageToImageFilterIRGBAUS2IUC2 * p);
     ~itkImageToImageFilterIRGBAUS2IUC2_Pointer();
     itkImageToImageFilterIRGBAUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS2IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS2IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS2IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS2IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS2IUC2_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS2IUC2_Pointer & operator=(itkImageToImageFilterIRGBAUS2IUC2_Pointer const & r);
     itkImageToImageFilterIRGBAUS2IUC2_Pointer & operator=(itkImageToImageFilterIRGBAUS2IUC2 * r);
     itkImageToImageFilterIRGBAUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS2IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS2 const * image);
     itkImageRGBAUS2 const * GetInput();
     itkImageRGBAUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS2IUL2(itkImageToImageFilterIRGBAUS2IUL2 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS2IUL2 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS2IUL2();
     ~itkImageToImageFilterIRGBAUS2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS2IUL2_Pointer {
   public:
     itkImageToImageFilterIRGBAUS2IUL2_Pointer();
     itkImageToImageFilterIRGBAUS2IUL2_Pointer(itkImageToImageFilterIRGBAUS2IUL2_Pointer const & p);
     itkImageToImageFilterIRGBAUS2IUL2_Pointer(itkImageToImageFilterIRGBAUS2IUL2 * p);
     ~itkImageToImageFilterIRGBAUS2IUL2_Pointer();
     itkImageToImageFilterIRGBAUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS2IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS2IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS2IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS2IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS2IUL2_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS2IUL2_Pointer & operator=(itkImageToImageFilterIRGBAUS2IUL2_Pointer const & r);
     itkImageToImageFilterIRGBAUS2IUL2_Pointer & operator=(itkImageToImageFilterIRGBAUS2IUL2 * r);
     itkImageToImageFilterIRGBAUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS2IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS2 const * image);
     itkImageRGBAUS2 const * GetInput();
     itkImageRGBAUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS2IUS2(itkImageToImageFilterIRGBAUS2IUS2 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS2IUS2 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS2IUS2();
     ~itkImageToImageFilterIRGBAUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS2IUS2_Pointer {
   public:
     itkImageToImageFilterIRGBAUS2IUS2_Pointer();
     itkImageToImageFilterIRGBAUS2IUS2_Pointer(itkImageToImageFilterIRGBAUS2IUS2_Pointer const & p);
     itkImageToImageFilterIRGBAUS2IUS2_Pointer(itkImageToImageFilterIRGBAUS2IUS2 * p);
     ~itkImageToImageFilterIRGBAUS2IUS2_Pointer();
     itkImageToImageFilterIRGBAUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS2IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS2IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS2IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS2IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS2IUS2_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS2IUS2_Pointer & operator=(itkImageToImageFilterIRGBAUS2IUS2_Pointer const & r);
     itkImageToImageFilterIRGBAUS2IUS2_Pointer & operator=(itkImageToImageFilterIRGBAUS2IUS2 * r);
     itkImageToImageFilterIRGBAUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS3ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS3 const * image);
     itkImageRGBAUS3 const * GetInput();
     itkImageRGBAUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS3ID3(itkImageToImageFilterIRGBAUS3ID3 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS3ID3 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS3ID3();
     ~itkImageToImageFilterIRGBAUS3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS3ID3_Pointer {
   public:
     itkImageToImageFilterIRGBAUS3ID3_Pointer();
     itkImageToImageFilterIRGBAUS3ID3_Pointer(itkImageToImageFilterIRGBAUS3ID3_Pointer const & p);
     itkImageToImageFilterIRGBAUS3ID3_Pointer(itkImageToImageFilterIRGBAUS3ID3 * p);
     ~itkImageToImageFilterIRGBAUS3ID3_Pointer();
     itkImageToImageFilterIRGBAUS3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS3ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS3ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS3ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS3ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS3ID3_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS3ID3_Pointer & operator=(itkImageToImageFilterIRGBAUS3ID3_Pointer const & r);
     itkImageToImageFilterIRGBAUS3ID3_Pointer & operator=(itkImageToImageFilterIRGBAUS3ID3 * r);
     itkImageToImageFilterIRGBAUS3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS3IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS3 const * image);
     itkImageRGBAUS3 const * GetInput();
     itkImageRGBAUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS3IF3(itkImageToImageFilterIRGBAUS3IF3 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS3IF3 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS3IF3();
     ~itkImageToImageFilterIRGBAUS3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS3IF3_Pointer {
   public:
     itkImageToImageFilterIRGBAUS3IF3_Pointer();
     itkImageToImageFilterIRGBAUS3IF3_Pointer(itkImageToImageFilterIRGBAUS3IF3_Pointer const & p);
     itkImageToImageFilterIRGBAUS3IF3_Pointer(itkImageToImageFilterIRGBAUS3IF3 * p);
     ~itkImageToImageFilterIRGBAUS3IF3_Pointer();
     itkImageToImageFilterIRGBAUS3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS3IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS3IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS3IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS3IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS3IF3_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS3IF3_Pointer & operator=(itkImageToImageFilterIRGBAUS3IF3_Pointer const & r);
     itkImageToImageFilterIRGBAUS3IF3_Pointer & operator=(itkImageToImageFilterIRGBAUS3IF3 * r);
     itkImageToImageFilterIRGBAUS3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS3IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS3 const * image);
     itkImageRGBAUS3 const * GetInput();
     itkImageRGBAUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS3IUC3(itkImageToImageFilterIRGBAUS3IUC3 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS3IUC3 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS3IUC3();
     ~itkImageToImageFilterIRGBAUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS3IUC3_Pointer {
   public:
     itkImageToImageFilterIRGBAUS3IUC3_Pointer();
     itkImageToImageFilterIRGBAUS3IUC3_Pointer(itkImageToImageFilterIRGBAUS3IUC3_Pointer const & p);
     itkImageToImageFilterIRGBAUS3IUC3_Pointer(itkImageToImageFilterIRGBAUS3IUC3 * p);
     ~itkImageToImageFilterIRGBAUS3IUC3_Pointer();
     itkImageToImageFilterIRGBAUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS3IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS3IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS3IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS3IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS3IUC3_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS3IUC3_Pointer & operator=(itkImageToImageFilterIRGBAUS3IUC3_Pointer const & r);
     itkImageToImageFilterIRGBAUS3IUC3_Pointer & operator=(itkImageToImageFilterIRGBAUS3IUC3 * r);
     itkImageToImageFilterIRGBAUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS3IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS3 const * image);
     itkImageRGBAUS3 const * GetInput();
     itkImageRGBAUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS3IUL3(itkImageToImageFilterIRGBAUS3IUL3 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS3IUL3 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS3IUL3();
     ~itkImageToImageFilterIRGBAUS3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS3IUL3_Pointer {
   public:
     itkImageToImageFilterIRGBAUS3IUL3_Pointer();
     itkImageToImageFilterIRGBAUS3IUL3_Pointer(itkImageToImageFilterIRGBAUS3IUL3_Pointer const & p);
     itkImageToImageFilterIRGBAUS3IUL3_Pointer(itkImageToImageFilterIRGBAUS3IUL3 * p);
     ~itkImageToImageFilterIRGBAUS3IUL3_Pointer();
     itkImageToImageFilterIRGBAUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS3IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS3IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS3IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS3IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS3IUL3_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS3IUL3_Pointer & operator=(itkImageToImageFilterIRGBAUS3IUL3_Pointer const & r);
     itkImageToImageFilterIRGBAUS3IUL3_Pointer & operator=(itkImageToImageFilterIRGBAUS3IUL3 * r);
     itkImageToImageFilterIRGBAUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBAUS3IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBAUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBAUS3 const * image);
     itkImageRGBAUS3 const * GetInput();
     itkImageRGBAUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBAUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBAUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBAUS3IUS3(itkImageToImageFilterIRGBAUS3IUS3 const & arg0);
     void operator=(itkImageToImageFilterIRGBAUS3IUS3 const & arg0);
   protected:
     itkImageToImageFilterIRGBAUS3IUS3();
     ~itkImageToImageFilterIRGBAUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBAUS3IUS3_Pointer {
   public:
     itkImageToImageFilterIRGBAUS3IUS3_Pointer();
     itkImageToImageFilterIRGBAUS3IUS3_Pointer(itkImageToImageFilterIRGBAUS3IUS3_Pointer const & p);
     itkImageToImageFilterIRGBAUS3IUS3_Pointer(itkImageToImageFilterIRGBAUS3IUS3 * p);
     ~itkImageToImageFilterIRGBAUS3IUS3_Pointer();
     itkImageToImageFilterIRGBAUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBAUS3IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBAUS3IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBAUS3IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBAUS3IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBAUS3IUS3_Pointer const & r) const;
     itkImageToImageFilterIRGBAUS3IUS3_Pointer & operator=(itkImageToImageFilterIRGBAUS3IUS3_Pointer const & r);
     itkImageToImageFilterIRGBAUS3IUS3_Pointer & operator=(itkImageToImageFilterIRGBAUS3IUS3 * r);
     itkImageToImageFilterIRGBAUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS2ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS2 const * image);
     itkImageRGBUS2 const * GetInput();
     itkImageRGBUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS2ID2(itkImageToImageFilterIRGBUS2ID2 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS2ID2 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS2ID2();
     ~itkImageToImageFilterIRGBUS2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS2ID2_Pointer {
   public:
     itkImageToImageFilterIRGBUS2ID2_Pointer();
     itkImageToImageFilterIRGBUS2ID2_Pointer(itkImageToImageFilterIRGBUS2ID2_Pointer const & p);
     itkImageToImageFilterIRGBUS2ID2_Pointer(itkImageToImageFilterIRGBUS2ID2 * p);
     ~itkImageToImageFilterIRGBUS2ID2_Pointer();
     itkImageToImageFilterIRGBUS2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS2ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS2ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS2ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS2ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS2ID2_Pointer const & r) const;
     itkImageToImageFilterIRGBUS2ID2_Pointer & operator=(itkImageToImageFilterIRGBUS2ID2_Pointer const & r);
     itkImageToImageFilterIRGBUS2ID2_Pointer & operator=(itkImageToImageFilterIRGBUS2ID2 * r);
     itkImageToImageFilterIRGBUS2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS2IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS2 const * image);
     itkImageRGBUS2 const * GetInput();
     itkImageRGBUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS2IF2(itkImageToImageFilterIRGBUS2IF2 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS2IF2 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS2IF2();
     ~itkImageToImageFilterIRGBUS2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS2IF2_Pointer {
   public:
     itkImageToImageFilterIRGBUS2IF2_Pointer();
     itkImageToImageFilterIRGBUS2IF2_Pointer(itkImageToImageFilterIRGBUS2IF2_Pointer const & p);
     itkImageToImageFilterIRGBUS2IF2_Pointer(itkImageToImageFilterIRGBUS2IF2 * p);
     ~itkImageToImageFilterIRGBUS2IF2_Pointer();
     itkImageToImageFilterIRGBUS2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS2IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS2IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS2IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS2IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS2IF2_Pointer const & r) const;
     itkImageToImageFilterIRGBUS2IF2_Pointer & operator=(itkImageToImageFilterIRGBUS2IF2_Pointer const & r);
     itkImageToImageFilterIRGBUS2IF2_Pointer & operator=(itkImageToImageFilterIRGBUS2IF2 * r);
     itkImageToImageFilterIRGBUS2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS2IRGBUS3 : public itkImageSourceIRGBUS3 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS2 const * image);
     itkImageRGBUS2 const * GetInput();
     itkImageRGBUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS2IRGBUS3(itkImageToImageFilterIRGBUS2IRGBUS3 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS2IRGBUS3 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS2IRGBUS3();
     ~itkImageToImageFilterIRGBUS2IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS2IRGBUS3_Pointer {
   public:
     itkImageToImageFilterIRGBUS2IRGBUS3_Pointer();
     itkImageToImageFilterIRGBUS2IRGBUS3_Pointer(itkImageToImageFilterIRGBUS2IRGBUS3_Pointer const & p);
     itkImageToImageFilterIRGBUS2IRGBUS3_Pointer(itkImageToImageFilterIRGBUS2IRGBUS3 * p);
     ~itkImageToImageFilterIRGBUS2IRGBUS3_Pointer();
     itkImageToImageFilterIRGBUS2IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS2IRGBUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS2IRGBUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS2IRGBUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS2IRGBUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS2IRGBUS3_Pointer const & r) const;
     itkImageToImageFilterIRGBUS2IRGBUS3_Pointer & operator=(itkImageToImageFilterIRGBUS2IRGBUS3_Pointer const & r);
     itkImageToImageFilterIRGBUS2IRGBUS3_Pointer & operator=(itkImageToImageFilterIRGBUS2IRGBUS3 * r);
     itkImageToImageFilterIRGBUS2IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS2IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS2 const * image);
     itkImageRGBUS2 const * GetInput();
     itkImageRGBUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS2IUC2(itkImageToImageFilterIRGBUS2IUC2 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS2IUC2 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS2IUC2();
     ~itkImageToImageFilterIRGBUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS2IUC2_Pointer {
   public:
     itkImageToImageFilterIRGBUS2IUC2_Pointer();
     itkImageToImageFilterIRGBUS2IUC2_Pointer(itkImageToImageFilterIRGBUS2IUC2_Pointer const & p);
     itkImageToImageFilterIRGBUS2IUC2_Pointer(itkImageToImageFilterIRGBUS2IUC2 * p);
     ~itkImageToImageFilterIRGBUS2IUC2_Pointer();
     itkImageToImageFilterIRGBUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS2IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS2IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS2IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS2IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS2IUC2_Pointer const & r) const;
     itkImageToImageFilterIRGBUS2IUC2_Pointer & operator=(itkImageToImageFilterIRGBUS2IUC2_Pointer const & r);
     itkImageToImageFilterIRGBUS2IUC2_Pointer & operator=(itkImageToImageFilterIRGBUS2IUC2 * r);
     itkImageToImageFilterIRGBUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS2IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS2 const * image);
     itkImageRGBUS2 const * GetInput();
     itkImageRGBUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS2IUL2(itkImageToImageFilterIRGBUS2IUL2 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS2IUL2 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS2IUL2();
     ~itkImageToImageFilterIRGBUS2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS2IUL2_Pointer {
   public:
     itkImageToImageFilterIRGBUS2IUL2_Pointer();
     itkImageToImageFilterIRGBUS2IUL2_Pointer(itkImageToImageFilterIRGBUS2IUL2_Pointer const & p);
     itkImageToImageFilterIRGBUS2IUL2_Pointer(itkImageToImageFilterIRGBUS2IUL2 * p);
     ~itkImageToImageFilterIRGBUS2IUL2_Pointer();
     itkImageToImageFilterIRGBUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS2IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS2IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS2IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS2IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS2IUL2_Pointer const & r) const;
     itkImageToImageFilterIRGBUS2IUL2_Pointer & operator=(itkImageToImageFilterIRGBUS2IUL2_Pointer const & r);
     itkImageToImageFilterIRGBUS2IUL2_Pointer & operator=(itkImageToImageFilterIRGBUS2IUL2 * r);
     itkImageToImageFilterIRGBUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS2IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS2 const * image);
     itkImageRGBUS2 const * GetInput();
     itkImageRGBUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS2IUS2(itkImageToImageFilterIRGBUS2IUS2 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS2IUS2 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS2IUS2();
     ~itkImageToImageFilterIRGBUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS2IUS2_Pointer {
   public:
     itkImageToImageFilterIRGBUS2IUS2_Pointer();
     itkImageToImageFilterIRGBUS2IUS2_Pointer(itkImageToImageFilterIRGBUS2IUS2_Pointer const & p);
     itkImageToImageFilterIRGBUS2IUS2_Pointer(itkImageToImageFilterIRGBUS2IUS2 * p);
     ~itkImageToImageFilterIRGBUS2IUS2_Pointer();
     itkImageToImageFilterIRGBUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS2IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS2IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS2IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS2IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS2IUS2_Pointer const & r) const;
     itkImageToImageFilterIRGBUS2IUS2_Pointer & operator=(itkImageToImageFilterIRGBUS2IUS2_Pointer const & r);
     itkImageToImageFilterIRGBUS2IUS2_Pointer & operator=(itkImageToImageFilterIRGBUS2IUS2 * r);
     itkImageToImageFilterIRGBUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS3ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS3 const * image);
     itkImageRGBUS3 const * GetInput();
     itkImageRGBUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS3ID3(itkImageToImageFilterIRGBUS3ID3 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS3ID3 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS3ID3();
     ~itkImageToImageFilterIRGBUS3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS3ID3_Pointer {
   public:
     itkImageToImageFilterIRGBUS3ID3_Pointer();
     itkImageToImageFilterIRGBUS3ID3_Pointer(itkImageToImageFilterIRGBUS3ID3_Pointer const & p);
     itkImageToImageFilterIRGBUS3ID3_Pointer(itkImageToImageFilterIRGBUS3ID3 * p);
     ~itkImageToImageFilterIRGBUS3ID3_Pointer();
     itkImageToImageFilterIRGBUS3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS3ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS3ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS3ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS3ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS3ID3_Pointer const & r) const;
     itkImageToImageFilterIRGBUS3ID3_Pointer & operator=(itkImageToImageFilterIRGBUS3ID3_Pointer const & r);
     itkImageToImageFilterIRGBUS3ID3_Pointer & operator=(itkImageToImageFilterIRGBUS3ID3 * r);
     itkImageToImageFilterIRGBUS3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS3IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS3 const * image);
     itkImageRGBUS3 const * GetInput();
     itkImageRGBUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS3IF3(itkImageToImageFilterIRGBUS3IF3 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS3IF3 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS3IF3();
     ~itkImageToImageFilterIRGBUS3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS3IF3_Pointer {
   public:
     itkImageToImageFilterIRGBUS3IF3_Pointer();
     itkImageToImageFilterIRGBUS3IF3_Pointer(itkImageToImageFilterIRGBUS3IF3_Pointer const & p);
     itkImageToImageFilterIRGBUS3IF3_Pointer(itkImageToImageFilterIRGBUS3IF3 * p);
     ~itkImageToImageFilterIRGBUS3IF3_Pointer();
     itkImageToImageFilterIRGBUS3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS3IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS3IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS3IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS3IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS3IF3_Pointer const & r) const;
     itkImageToImageFilterIRGBUS3IF3_Pointer & operator=(itkImageToImageFilterIRGBUS3IF3_Pointer const & r);
     itkImageToImageFilterIRGBUS3IF3_Pointer & operator=(itkImageToImageFilterIRGBUS3IF3 * r);
     itkImageToImageFilterIRGBUS3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS3IRGBUS2 : public itkImageSourceIRGBUS2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS3 const * image);
     itkImageRGBUS3 const * GetInput();
     itkImageRGBUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS3IRGBUS2(itkImageToImageFilterIRGBUS3IRGBUS2 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS3IRGBUS2 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS3IRGBUS2();
     ~itkImageToImageFilterIRGBUS3IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS3IRGBUS2_Pointer {
   public:
     itkImageToImageFilterIRGBUS3IRGBUS2_Pointer();
     itkImageToImageFilterIRGBUS3IRGBUS2_Pointer(itkImageToImageFilterIRGBUS3IRGBUS2_Pointer const & p);
     itkImageToImageFilterIRGBUS3IRGBUS2_Pointer(itkImageToImageFilterIRGBUS3IRGBUS2 * p);
     ~itkImageToImageFilterIRGBUS3IRGBUS2_Pointer();
     itkImageToImageFilterIRGBUS3IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS3IRGBUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS3IRGBUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS3IRGBUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS3IRGBUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS3IRGBUS2_Pointer const & r) const;
     itkImageToImageFilterIRGBUS3IRGBUS2_Pointer & operator=(itkImageToImageFilterIRGBUS3IRGBUS2_Pointer const & r);
     itkImageToImageFilterIRGBUS3IRGBUS2_Pointer & operator=(itkImageToImageFilterIRGBUS3IRGBUS2 * r);
     itkImageToImageFilterIRGBUS3IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS3IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS3 const * image);
     itkImageRGBUS3 const * GetInput();
     itkImageRGBUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS3IUC3(itkImageToImageFilterIRGBUS3IUC3 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS3IUC3 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS3IUC3();
     ~itkImageToImageFilterIRGBUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS3IUC3_Pointer {
   public:
     itkImageToImageFilterIRGBUS3IUC3_Pointer();
     itkImageToImageFilterIRGBUS3IUC3_Pointer(itkImageToImageFilterIRGBUS3IUC3_Pointer const & p);
     itkImageToImageFilterIRGBUS3IUC3_Pointer(itkImageToImageFilterIRGBUS3IUC3 * p);
     ~itkImageToImageFilterIRGBUS3IUC3_Pointer();
     itkImageToImageFilterIRGBUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS3IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS3IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS3IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS3IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS3IUC3_Pointer const & r) const;
     itkImageToImageFilterIRGBUS3IUC3_Pointer & operator=(itkImageToImageFilterIRGBUS3IUC3_Pointer const & r);
     itkImageToImageFilterIRGBUS3IUC3_Pointer & operator=(itkImageToImageFilterIRGBUS3IUC3 * r);
     itkImageToImageFilterIRGBUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS3IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS3 const * image);
     itkImageRGBUS3 const * GetInput();
     itkImageRGBUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS3IUL3(itkImageToImageFilterIRGBUS3IUL3 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS3IUL3 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS3IUL3();
     ~itkImageToImageFilterIRGBUS3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS3IUL3_Pointer {
   public:
     itkImageToImageFilterIRGBUS3IUL3_Pointer();
     itkImageToImageFilterIRGBUS3IUL3_Pointer(itkImageToImageFilterIRGBUS3IUL3_Pointer const & p);
     itkImageToImageFilterIRGBUS3IUL3_Pointer(itkImageToImageFilterIRGBUS3IUL3 * p);
     ~itkImageToImageFilterIRGBUS3IUL3_Pointer();
     itkImageToImageFilterIRGBUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS3IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS3IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS3IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS3IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS3IUL3_Pointer const & r) const;
     itkImageToImageFilterIRGBUS3IUL3_Pointer & operator=(itkImageToImageFilterIRGBUS3IUL3_Pointer const & r);
     itkImageToImageFilterIRGBUS3IUL3_Pointer & operator=(itkImageToImageFilterIRGBUS3IUL3 * r);
     itkImageToImageFilterIRGBUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIRGBUS3IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageRGBUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageRGBUS3 const * image);
     itkImageRGBUS3 const * GetInput();
     itkImageRGBUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageRGBUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageRGBUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIRGBUS3IUS3(itkImageToImageFilterIRGBUS3IUS3 const & arg0);
     void operator=(itkImageToImageFilterIRGBUS3IUS3 const & arg0);
   protected:
     itkImageToImageFilterIRGBUS3IUS3();
     ~itkImageToImageFilterIRGBUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIRGBUS3IUS3_Pointer {
   public:
     itkImageToImageFilterIRGBUS3IUS3_Pointer();
     itkImageToImageFilterIRGBUS3IUS3_Pointer(itkImageToImageFilterIRGBUS3IUS3_Pointer const & p);
     itkImageToImageFilterIRGBUS3IUS3_Pointer(itkImageToImageFilterIRGBUS3IUS3 * p);
     ~itkImageToImageFilterIRGBUS3IUS3_Pointer();
     itkImageToImageFilterIRGBUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIRGBUS3IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIRGBUS3IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIRGBUS3IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIRGBUS3IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIRGBUS3IUS3_Pointer const & r) const;
     itkImageToImageFilterIRGBUS3IUS3_Pointer & operator=(itkImageToImageFilterIRGBUS3IUS3_Pointer const & r);
     itkImageToImageFilterIRGBUS3IUS3_Pointer & operator=(itkImageToImageFilterIRGBUS3IUS3 * r);
     itkImageToImageFilterIRGBUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD22ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD22 const * image);
     itkImageSSRTD22 const * GetInput();
     itkImageSSRTD22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD22ID2(itkImageToImageFilterISSRTD22ID2 const & arg0);
     void operator=(itkImageToImageFilterISSRTD22ID2 const & arg0);
   protected:
     itkImageToImageFilterISSRTD22ID2();
     ~itkImageToImageFilterISSRTD22ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD22ID2_Pointer {
   public:
     itkImageToImageFilterISSRTD22ID2_Pointer();
     itkImageToImageFilterISSRTD22ID2_Pointer(itkImageToImageFilterISSRTD22ID2_Pointer const & p);
     itkImageToImageFilterISSRTD22ID2_Pointer(itkImageToImageFilterISSRTD22ID2 * p);
     ~itkImageToImageFilterISSRTD22ID2_Pointer();
     itkImageToImageFilterISSRTD22ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD22ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD22ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD22ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD22ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD22ID2_Pointer const & r) const;
     itkImageToImageFilterISSRTD22ID2_Pointer & operator=(itkImageToImageFilterISSRTD22ID2_Pointer const & r);
     itkImageToImageFilterISSRTD22ID2_Pointer & operator=(itkImageToImageFilterISSRTD22ID2 * r);
     itkImageToImageFilterISSRTD22ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD22IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD22 const * image);
     itkImageSSRTD22 const * GetInput();
     itkImageSSRTD22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD22IF2(itkImageToImageFilterISSRTD22IF2 const & arg0);
     void operator=(itkImageToImageFilterISSRTD22IF2 const & arg0);
   protected:
     itkImageToImageFilterISSRTD22IF2();
     ~itkImageToImageFilterISSRTD22IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD22IF2_Pointer {
   public:
     itkImageToImageFilterISSRTD22IF2_Pointer();
     itkImageToImageFilterISSRTD22IF2_Pointer(itkImageToImageFilterISSRTD22IF2_Pointer const & p);
     itkImageToImageFilterISSRTD22IF2_Pointer(itkImageToImageFilterISSRTD22IF2 * p);
     ~itkImageToImageFilterISSRTD22IF2_Pointer();
     itkImageToImageFilterISSRTD22IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD22IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD22IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD22IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD22IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD22IF2_Pointer const & r) const;
     itkImageToImageFilterISSRTD22IF2_Pointer & operator=(itkImageToImageFilterISSRTD22IF2_Pointer const & r);
     itkImageToImageFilterISSRTD22IF2_Pointer & operator=(itkImageToImageFilterISSRTD22IF2 * r);
     itkImageToImageFilterISSRTD22IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD22IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD22 const * image);
     itkImageSSRTD22 const * GetInput();
     itkImageSSRTD22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD22IUC2(itkImageToImageFilterISSRTD22IUC2 const & arg0);
     void operator=(itkImageToImageFilterISSRTD22IUC2 const & arg0);
   protected:
     itkImageToImageFilterISSRTD22IUC2();
     ~itkImageToImageFilterISSRTD22IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD22IUC2_Pointer {
   public:
     itkImageToImageFilterISSRTD22IUC2_Pointer();
     itkImageToImageFilterISSRTD22IUC2_Pointer(itkImageToImageFilterISSRTD22IUC2_Pointer const & p);
     itkImageToImageFilterISSRTD22IUC2_Pointer(itkImageToImageFilterISSRTD22IUC2 * p);
     ~itkImageToImageFilterISSRTD22IUC2_Pointer();
     itkImageToImageFilterISSRTD22IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD22IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD22IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD22IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD22IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD22IUC2_Pointer const & r) const;
     itkImageToImageFilterISSRTD22IUC2_Pointer & operator=(itkImageToImageFilterISSRTD22IUC2_Pointer const & r);
     itkImageToImageFilterISSRTD22IUC2_Pointer & operator=(itkImageToImageFilterISSRTD22IUC2 * r);
     itkImageToImageFilterISSRTD22IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD22IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD22 const * image);
     itkImageSSRTD22 const * GetInput();
     itkImageSSRTD22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD22IUL2(itkImageToImageFilterISSRTD22IUL2 const & arg0);
     void operator=(itkImageToImageFilterISSRTD22IUL2 const & arg0);
   protected:
     itkImageToImageFilterISSRTD22IUL2();
     ~itkImageToImageFilterISSRTD22IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD22IUL2_Pointer {
   public:
     itkImageToImageFilterISSRTD22IUL2_Pointer();
     itkImageToImageFilterISSRTD22IUL2_Pointer(itkImageToImageFilterISSRTD22IUL2_Pointer const & p);
     itkImageToImageFilterISSRTD22IUL2_Pointer(itkImageToImageFilterISSRTD22IUL2 * p);
     ~itkImageToImageFilterISSRTD22IUL2_Pointer();
     itkImageToImageFilterISSRTD22IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD22IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD22IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD22IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD22IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD22IUL2_Pointer const & r) const;
     itkImageToImageFilterISSRTD22IUL2_Pointer & operator=(itkImageToImageFilterISSRTD22IUL2_Pointer const & r);
     itkImageToImageFilterISSRTD22IUL2_Pointer & operator=(itkImageToImageFilterISSRTD22IUL2 * r);
     itkImageToImageFilterISSRTD22IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD22IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD22 const * image);
     itkImageSSRTD22 const * GetInput();
     itkImageSSRTD22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD22IUS2(itkImageToImageFilterISSRTD22IUS2 const & arg0);
     void operator=(itkImageToImageFilterISSRTD22IUS2 const & arg0);
   protected:
     itkImageToImageFilterISSRTD22IUS2();
     ~itkImageToImageFilterISSRTD22IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD22IUS2_Pointer {
   public:
     itkImageToImageFilterISSRTD22IUS2_Pointer();
     itkImageToImageFilterISSRTD22IUS2_Pointer(itkImageToImageFilterISSRTD22IUS2_Pointer const & p);
     itkImageToImageFilterISSRTD22IUS2_Pointer(itkImageToImageFilterISSRTD22IUS2 * p);
     ~itkImageToImageFilterISSRTD22IUS2_Pointer();
     itkImageToImageFilterISSRTD22IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD22IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD22IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD22IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD22IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD22IUS2_Pointer const & r) const;
     itkImageToImageFilterISSRTD22IUS2_Pointer & operator=(itkImageToImageFilterISSRTD22IUS2_Pointer const & r);
     itkImageToImageFilterISSRTD22IUS2_Pointer & operator=(itkImageToImageFilterISSRTD22IUS2 * r);
     itkImageToImageFilterISSRTD22IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD33ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD33 const * image);
     itkImageSSRTD33 const * GetInput();
     itkImageSSRTD33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD33ID3(itkImageToImageFilterISSRTD33ID3 const & arg0);
     void operator=(itkImageToImageFilterISSRTD33ID3 const & arg0);
   protected:
     itkImageToImageFilterISSRTD33ID3();
     ~itkImageToImageFilterISSRTD33ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD33ID3_Pointer {
   public:
     itkImageToImageFilterISSRTD33ID3_Pointer();
     itkImageToImageFilterISSRTD33ID3_Pointer(itkImageToImageFilterISSRTD33ID3_Pointer const & p);
     itkImageToImageFilterISSRTD33ID3_Pointer(itkImageToImageFilterISSRTD33ID3 * p);
     ~itkImageToImageFilterISSRTD33ID3_Pointer();
     itkImageToImageFilterISSRTD33ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD33ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD33ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD33ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD33ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD33ID3_Pointer const & r) const;
     itkImageToImageFilterISSRTD33ID3_Pointer & operator=(itkImageToImageFilterISSRTD33ID3_Pointer const & r);
     itkImageToImageFilterISSRTD33ID3_Pointer & operator=(itkImageToImageFilterISSRTD33ID3 * r);
     itkImageToImageFilterISSRTD33ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD33IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD33 const * image);
     itkImageSSRTD33 const * GetInput();
     itkImageSSRTD33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD33IF3(itkImageToImageFilterISSRTD33IF3 const & arg0);
     void operator=(itkImageToImageFilterISSRTD33IF3 const & arg0);
   protected:
     itkImageToImageFilterISSRTD33IF3();
     ~itkImageToImageFilterISSRTD33IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD33IF3_Pointer {
   public:
     itkImageToImageFilterISSRTD33IF3_Pointer();
     itkImageToImageFilterISSRTD33IF3_Pointer(itkImageToImageFilterISSRTD33IF3_Pointer const & p);
     itkImageToImageFilterISSRTD33IF3_Pointer(itkImageToImageFilterISSRTD33IF3 * p);
     ~itkImageToImageFilterISSRTD33IF3_Pointer();
     itkImageToImageFilterISSRTD33IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD33IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD33IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD33IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD33IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD33IF3_Pointer const & r) const;
     itkImageToImageFilterISSRTD33IF3_Pointer & operator=(itkImageToImageFilterISSRTD33IF3_Pointer const & r);
     itkImageToImageFilterISSRTD33IF3_Pointer & operator=(itkImageToImageFilterISSRTD33IF3 * r);
     itkImageToImageFilterISSRTD33IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD33IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD33 const * image);
     itkImageSSRTD33 const * GetInput();
     itkImageSSRTD33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD33IUC3(itkImageToImageFilterISSRTD33IUC3 const & arg0);
     void operator=(itkImageToImageFilterISSRTD33IUC3 const & arg0);
   protected:
     itkImageToImageFilterISSRTD33IUC3();
     ~itkImageToImageFilterISSRTD33IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD33IUC3_Pointer {
   public:
     itkImageToImageFilterISSRTD33IUC3_Pointer();
     itkImageToImageFilterISSRTD33IUC3_Pointer(itkImageToImageFilterISSRTD33IUC3_Pointer const & p);
     itkImageToImageFilterISSRTD33IUC3_Pointer(itkImageToImageFilterISSRTD33IUC3 * p);
     ~itkImageToImageFilterISSRTD33IUC3_Pointer();
     itkImageToImageFilterISSRTD33IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD33IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD33IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD33IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD33IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD33IUC3_Pointer const & r) const;
     itkImageToImageFilterISSRTD33IUC3_Pointer & operator=(itkImageToImageFilterISSRTD33IUC3_Pointer const & r);
     itkImageToImageFilterISSRTD33IUC3_Pointer & operator=(itkImageToImageFilterISSRTD33IUC3 * r);
     itkImageToImageFilterISSRTD33IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD33IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD33 const * image);
     itkImageSSRTD33 const * GetInput();
     itkImageSSRTD33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD33IUL3(itkImageToImageFilterISSRTD33IUL3 const & arg0);
     void operator=(itkImageToImageFilterISSRTD33IUL3 const & arg0);
   protected:
     itkImageToImageFilterISSRTD33IUL3();
     ~itkImageToImageFilterISSRTD33IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD33IUL3_Pointer {
   public:
     itkImageToImageFilterISSRTD33IUL3_Pointer();
     itkImageToImageFilterISSRTD33IUL3_Pointer(itkImageToImageFilterISSRTD33IUL3_Pointer const & p);
     itkImageToImageFilterISSRTD33IUL3_Pointer(itkImageToImageFilterISSRTD33IUL3 * p);
     ~itkImageToImageFilterISSRTD33IUL3_Pointer();
     itkImageToImageFilterISSRTD33IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD33IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD33IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD33IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD33IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD33IUL3_Pointer const & r) const;
     itkImageToImageFilterISSRTD33IUL3_Pointer & operator=(itkImageToImageFilterISSRTD33IUL3_Pointer const & r);
     itkImageToImageFilterISSRTD33IUL3_Pointer & operator=(itkImageToImageFilterISSRTD33IUL3 * r);
     itkImageToImageFilterISSRTD33IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterISSRTD33IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageSSRTD33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageSSRTD33 const * image);
     itkImageSSRTD33 const * GetInput();
     itkImageSSRTD33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageSSRTD33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageSSRTD33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterISSRTD33IUS3(itkImageToImageFilterISSRTD33IUS3 const & arg0);
     void operator=(itkImageToImageFilterISSRTD33IUS3 const & arg0);
   protected:
     itkImageToImageFilterISSRTD33IUS3();
     ~itkImageToImageFilterISSRTD33IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterISSRTD33IUS3_Pointer {
   public:
     itkImageToImageFilterISSRTD33IUS3_Pointer();
     itkImageToImageFilterISSRTD33IUS3_Pointer(itkImageToImageFilterISSRTD33IUS3_Pointer const & p);
     itkImageToImageFilterISSRTD33IUS3_Pointer(itkImageToImageFilterISSRTD33IUS3 * p);
     ~itkImageToImageFilterISSRTD33IUS3_Pointer();
     itkImageToImageFilterISSRTD33IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterISSRTD33IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterISSRTD33IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterISSRTD33IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterISSRTD33IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterISSRTD33IUS3_Pointer const & r) const;
     itkImageToImageFilterISSRTD33IUS3_Pointer & operator=(itkImageToImageFilterISSRTD33IUS3_Pointer const & r);
     itkImageToImageFilterISSRTD33IUS3_Pointer & operator=(itkImageToImageFilterISSRTD33IUS3 * r);
     itkImageToImageFilterISSRTD33IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2ICVF22 : public itkImageSourceICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2ICVF22(itkImageToImageFilterIUC2ICVF22 const & arg0);
     void operator=(itkImageToImageFilterIUC2ICVF22 const & arg0);
   protected:
     itkImageToImageFilterIUC2ICVF22();
     ~itkImageToImageFilterIUC2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2ICVF22_Pointer {
   public:
     itkImageToImageFilterIUC2ICVF22_Pointer();
     itkImageToImageFilterIUC2ICVF22_Pointer(itkImageToImageFilterIUC2ICVF22_Pointer const & p);
     itkImageToImageFilterIUC2ICVF22_Pointer(itkImageToImageFilterIUC2ICVF22 * p);
     ~itkImageToImageFilterIUC2ICVF22_Pointer();
     itkImageToImageFilterIUC2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2ICVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2ICVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2ICVF22_Pointer const & r) const;
     itkImageToImageFilterIUC2ICVF22_Pointer & operator=(itkImageToImageFilterIUC2ICVF22_Pointer const & r);
     itkImageToImageFilterIUC2ICVF22_Pointer & operator=(itkImageToImageFilterIUC2ICVF22 * r);
     itkImageToImageFilterIUC2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2IRGBAUS2 : public itkImageSourceIRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2IRGBAUS2(itkImageToImageFilterIUC2IRGBAUS2 const & arg0);
     void operator=(itkImageToImageFilterIUC2IRGBAUS2 const & arg0);
   protected:
     itkImageToImageFilterIUC2IRGBAUS2();
     ~itkImageToImageFilterIUC2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2IRGBAUS2_Pointer {
   public:
     itkImageToImageFilterIUC2IRGBAUS2_Pointer();
     itkImageToImageFilterIUC2IRGBAUS2_Pointer(itkImageToImageFilterIUC2IRGBAUS2_Pointer const & p);
     itkImageToImageFilterIUC2IRGBAUS2_Pointer(itkImageToImageFilterIUC2IRGBAUS2 * p);
     ~itkImageToImageFilterIUC2IRGBAUS2_Pointer();
     itkImageToImageFilterIUC2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2IRGBAUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2IRGBAUS2_Pointer const & r) const;
     itkImageToImageFilterIUC2IRGBAUS2_Pointer & operator=(itkImageToImageFilterIUC2IRGBAUS2_Pointer const & r);
     itkImageToImageFilterIUC2IRGBAUS2_Pointer & operator=(itkImageToImageFilterIUC2IRGBAUS2 * r);
     itkImageToImageFilterIUC2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2IRGBUS2 : public itkImageSourceIRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2IRGBUS2(itkImageToImageFilterIUC2IRGBUS2 const & arg0);
     void operator=(itkImageToImageFilterIUC2IRGBUS2 const & arg0);
   protected:
     itkImageToImageFilterIUC2IRGBUS2();
     ~itkImageToImageFilterIUC2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2IRGBUS2_Pointer {
   public:
     itkImageToImageFilterIUC2IRGBUS2_Pointer();
     itkImageToImageFilterIUC2IRGBUS2_Pointer(itkImageToImageFilterIUC2IRGBUS2_Pointer const & p);
     itkImageToImageFilterIUC2IRGBUS2_Pointer(itkImageToImageFilterIUC2IRGBUS2 * p);
     ~itkImageToImageFilterIUC2IRGBUS2_Pointer();
     itkImageToImageFilterIUC2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2IRGBUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2IRGBUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2IRGBUS2_Pointer const & r) const;
     itkImageToImageFilterIUC2IRGBUS2_Pointer & operator=(itkImageToImageFilterIUC2IRGBUS2_Pointer const & r);
     itkImageToImageFilterIUC2IRGBUS2_Pointer & operator=(itkImageToImageFilterIUC2IRGBUS2 * r);
     itkImageToImageFilterIUC2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2ISSRTD22 : public itkImageSourceISSRTD22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2ISSRTD22(itkImageToImageFilterIUC2ISSRTD22 const & arg0);
     void operator=(itkImageToImageFilterIUC2ISSRTD22 const & arg0);
   protected:
     itkImageToImageFilterIUC2ISSRTD22();
     ~itkImageToImageFilterIUC2ISSRTD22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2ISSRTD22_Pointer {
   public:
     itkImageToImageFilterIUC2ISSRTD22_Pointer();
     itkImageToImageFilterIUC2ISSRTD22_Pointer(itkImageToImageFilterIUC2ISSRTD22_Pointer const & p);
     itkImageToImageFilterIUC2ISSRTD22_Pointer(itkImageToImageFilterIUC2ISSRTD22 * p);
     ~itkImageToImageFilterIUC2ISSRTD22_Pointer();
     itkImageToImageFilterIUC2ISSRTD22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2ISSRTD22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2ISSRTD22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2ISSRTD22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2ISSRTD22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2ISSRTD22_Pointer const & r) const;
     itkImageToImageFilterIUC2ISSRTD22_Pointer & operator=(itkImageToImageFilterIUC2ISSRTD22_Pointer const & r);
     itkImageToImageFilterIUC2ISSRTD22_Pointer & operator=(itkImageToImageFilterIUC2ISSRTD22 * r);
     itkImageToImageFilterIUC2ISSRTD22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2IUC3(itkImageToImageFilterIUC2IUC3 const & arg0);
     void operator=(itkImageToImageFilterIUC2IUC3 const & arg0);
   protected:
     itkImageToImageFilterIUC2IUC3();
     ~itkImageToImageFilterIUC2IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2IUC3_Pointer {
   public:
     itkImageToImageFilterIUC2IUC3_Pointer();
     itkImageToImageFilterIUC2IUC3_Pointer(itkImageToImageFilterIUC2IUC3_Pointer const & p);
     itkImageToImageFilterIUC2IUC3_Pointer(itkImageToImageFilterIUC2IUC3 * p);
     ~itkImageToImageFilterIUC2IUC3_Pointer();
     itkImageToImageFilterIUC2IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2IUC3_Pointer const & r) const;
     itkImageToImageFilterIUC2IUC3_Pointer & operator=(itkImageToImageFilterIUC2IUC3_Pointer const & r);
     itkImageToImageFilterIUC2IUC3_Pointer & operator=(itkImageToImageFilterIUC2IUC3 * r);
     itkImageToImageFilterIUC2IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2IVF22 : public itkImageSourceIVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2IVF22(itkImageToImageFilterIUC2IVF22 const & arg0);
     void operator=(itkImageToImageFilterIUC2IVF22 const & arg0);
   protected:
     itkImageToImageFilterIUC2IVF22();
     ~itkImageToImageFilterIUC2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2IVF22_Pointer {
   public:
     itkImageToImageFilterIUC2IVF22_Pointer();
     itkImageToImageFilterIUC2IVF22_Pointer(itkImageToImageFilterIUC2IVF22_Pointer const & p);
     itkImageToImageFilterIUC2IVF22_Pointer(itkImageToImageFilterIUC2IVF22 * p);
     ~itkImageToImageFilterIUC2IVF22_Pointer();
     itkImageToImageFilterIUC2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2IVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2IVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2IVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2IVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2IVF22_Pointer const & r) const;
     itkImageToImageFilterIUC2IVF22_Pointer & operator=(itkImageToImageFilterIUC2IVF22_Pointer const & r);
     itkImageToImageFilterIUC2IVF22_Pointer & operator=(itkImageToImageFilterIUC2IVF22 * r);
     itkImageToImageFilterIUC2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2VID2 : public itkImageSourceVID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2VID2(itkImageToImageFilterIUC2VID2 const & arg0);
     void operator=(itkImageToImageFilterIUC2VID2 const & arg0);
   protected:
     itkImageToImageFilterIUC2VID2();
     ~itkImageToImageFilterIUC2VID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2VID2_Pointer {
   public:
     itkImageToImageFilterIUC2VID2_Pointer();
     itkImageToImageFilterIUC2VID2_Pointer(itkImageToImageFilterIUC2VID2_Pointer const & p);
     itkImageToImageFilterIUC2VID2_Pointer(itkImageToImageFilterIUC2VID2 * p);
     ~itkImageToImageFilterIUC2VID2_Pointer();
     itkImageToImageFilterIUC2VID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2VID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2VID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2VID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2VID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2VID2_Pointer const & r) const;
     itkImageToImageFilterIUC2VID2_Pointer & operator=(itkImageToImageFilterIUC2VID2_Pointer const & r);
     itkImageToImageFilterIUC2VID2_Pointer & operator=(itkImageToImageFilterIUC2VID2 * r);
     itkImageToImageFilterIUC2VID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2VIF2 : public itkImageSourceVIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2VIF2(itkImageToImageFilterIUC2VIF2 const & arg0);
     void operator=(itkImageToImageFilterIUC2VIF2 const & arg0);
   protected:
     itkImageToImageFilterIUC2VIF2();
     ~itkImageToImageFilterIUC2VIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2VIF2_Pointer {
   public:
     itkImageToImageFilterIUC2VIF2_Pointer();
     itkImageToImageFilterIUC2VIF2_Pointer(itkImageToImageFilterIUC2VIF2_Pointer const & p);
     itkImageToImageFilterIUC2VIF2_Pointer(itkImageToImageFilterIUC2VIF2 * p);
     ~itkImageToImageFilterIUC2VIF2_Pointer();
     itkImageToImageFilterIUC2VIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2VIF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2VIF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2VIF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2VIF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2VIF2_Pointer const & r) const;
     itkImageToImageFilterIUC2VIF2_Pointer & operator=(itkImageToImageFilterIUC2VIF2_Pointer const & r);
     itkImageToImageFilterIUC2VIF2_Pointer & operator=(itkImageToImageFilterIUC2VIF2 * r);
     itkImageToImageFilterIUC2VIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2VIUC2 : public itkImageSourceVIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2VIUC2(itkImageToImageFilterIUC2VIUC2 const & arg0);
     void operator=(itkImageToImageFilterIUC2VIUC2 const & arg0);
   protected:
     itkImageToImageFilterIUC2VIUC2();
     ~itkImageToImageFilterIUC2VIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2VIUC2_Pointer {
   public:
     itkImageToImageFilterIUC2VIUC2_Pointer();
     itkImageToImageFilterIUC2VIUC2_Pointer(itkImageToImageFilterIUC2VIUC2_Pointer const & p);
     itkImageToImageFilterIUC2VIUC2_Pointer(itkImageToImageFilterIUC2VIUC2 * p);
     ~itkImageToImageFilterIUC2VIUC2_Pointer();
     itkImageToImageFilterIUC2VIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2VIUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2VIUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2VIUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2VIUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2VIUC2_Pointer const & r) const;
     itkImageToImageFilterIUC2VIUC2_Pointer & operator=(itkImageToImageFilterIUC2VIUC2_Pointer const & r);
     itkImageToImageFilterIUC2VIUC2_Pointer & operator=(itkImageToImageFilterIUC2VIUC2 * r);
     itkImageToImageFilterIUC2VIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2VIUL2 : public itkImageSourceVIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2VIUL2(itkImageToImageFilterIUC2VIUL2 const & arg0);
     void operator=(itkImageToImageFilterIUC2VIUL2 const & arg0);
   protected:
     itkImageToImageFilterIUC2VIUL2();
     ~itkImageToImageFilterIUC2VIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2VIUL2_Pointer {
   public:
     itkImageToImageFilterIUC2VIUL2_Pointer();
     itkImageToImageFilterIUC2VIUL2_Pointer(itkImageToImageFilterIUC2VIUL2_Pointer const & p);
     itkImageToImageFilterIUC2VIUL2_Pointer(itkImageToImageFilterIUC2VIUL2 * p);
     ~itkImageToImageFilterIUC2VIUL2_Pointer();
     itkImageToImageFilterIUC2VIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2VIUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2VIUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2VIUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2VIUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2VIUL2_Pointer const & r) const;
     itkImageToImageFilterIUC2VIUL2_Pointer & operator=(itkImageToImageFilterIUC2VIUL2_Pointer const & r);
     itkImageToImageFilterIUC2VIUL2_Pointer & operator=(itkImageToImageFilterIUC2VIUL2 * r);
     itkImageToImageFilterIUC2VIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC2VIUS2 : public itkImageSourceVIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC2 const * image);
     itkImageUC2 const * GetInput();
     itkImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC2VIUS2(itkImageToImageFilterIUC2VIUS2 const & arg0);
     void operator=(itkImageToImageFilterIUC2VIUS2 const & arg0);
   protected:
     itkImageToImageFilterIUC2VIUS2();
     ~itkImageToImageFilterIUC2VIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC2VIUS2_Pointer {
   public:
     itkImageToImageFilterIUC2VIUS2_Pointer();
     itkImageToImageFilterIUC2VIUS2_Pointer(itkImageToImageFilterIUC2VIUS2_Pointer const & p);
     itkImageToImageFilterIUC2VIUS2_Pointer(itkImageToImageFilterIUC2VIUS2 * p);
     ~itkImageToImageFilterIUC2VIUS2_Pointer();
     itkImageToImageFilterIUC2VIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC2VIUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC2VIUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC2VIUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC2VIUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC2VIUS2_Pointer const & r) const;
     itkImageToImageFilterIUC2VIUS2_Pointer & operator=(itkImageToImageFilterIUC2VIUS2_Pointer const & r);
     itkImageToImageFilterIUC2VIUS2_Pointer & operator=(itkImageToImageFilterIUC2VIUS2 * r);
     itkImageToImageFilterIUC2VIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3ICVF33 : public itkImageSourceICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3ICVF33(itkImageToImageFilterIUC3ICVF33 const & arg0);
     void operator=(itkImageToImageFilterIUC3ICVF33 const & arg0);
   protected:
     itkImageToImageFilterIUC3ICVF33();
     ~itkImageToImageFilterIUC3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3ICVF33_Pointer {
   public:
     itkImageToImageFilterIUC3ICVF33_Pointer();
     itkImageToImageFilterIUC3ICVF33_Pointer(itkImageToImageFilterIUC3ICVF33_Pointer const & p);
     itkImageToImageFilterIUC3ICVF33_Pointer(itkImageToImageFilterIUC3ICVF33 * p);
     ~itkImageToImageFilterIUC3ICVF33_Pointer();
     itkImageToImageFilterIUC3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3ICVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3ICVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3ICVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3ICVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3ICVF33_Pointer const & r) const;
     itkImageToImageFilterIUC3ICVF33_Pointer & operator=(itkImageToImageFilterIUC3ICVF33_Pointer const & r);
     itkImageToImageFilterIUC3ICVF33_Pointer & operator=(itkImageToImageFilterIUC3ICVF33 * r);
     itkImageToImageFilterIUC3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3IRGBAUS3 : public itkImageSourceIRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3IRGBAUS3(itkImageToImageFilterIUC3IRGBAUS3 const & arg0);
     void operator=(itkImageToImageFilterIUC3IRGBAUS3 const & arg0);
   protected:
     itkImageToImageFilterIUC3IRGBAUS3();
     ~itkImageToImageFilterIUC3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3IRGBAUS3_Pointer {
   public:
     itkImageToImageFilterIUC3IRGBAUS3_Pointer();
     itkImageToImageFilterIUC3IRGBAUS3_Pointer(itkImageToImageFilterIUC3IRGBAUS3_Pointer const & p);
     itkImageToImageFilterIUC3IRGBAUS3_Pointer(itkImageToImageFilterIUC3IRGBAUS3 * p);
     ~itkImageToImageFilterIUC3IRGBAUS3_Pointer();
     itkImageToImageFilterIUC3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3IRGBAUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3IRGBAUS3_Pointer const & r) const;
     itkImageToImageFilterIUC3IRGBAUS3_Pointer & operator=(itkImageToImageFilterIUC3IRGBAUS3_Pointer const & r);
     itkImageToImageFilterIUC3IRGBAUS3_Pointer & operator=(itkImageToImageFilterIUC3IRGBAUS3 * r);
     itkImageToImageFilterIUC3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3IRGBUS3 : public itkImageSourceIRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3IRGBUS3(itkImageToImageFilterIUC3IRGBUS3 const & arg0);
     void operator=(itkImageToImageFilterIUC3IRGBUS3 const & arg0);
   protected:
     itkImageToImageFilterIUC3IRGBUS3();
     ~itkImageToImageFilterIUC3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3IRGBUS3_Pointer {
   public:
     itkImageToImageFilterIUC3IRGBUS3_Pointer();
     itkImageToImageFilterIUC3IRGBUS3_Pointer(itkImageToImageFilterIUC3IRGBUS3_Pointer const & p);
     itkImageToImageFilterIUC3IRGBUS3_Pointer(itkImageToImageFilterIUC3IRGBUS3 * p);
     ~itkImageToImageFilterIUC3IRGBUS3_Pointer();
     itkImageToImageFilterIUC3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3IRGBUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3IRGBUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3IRGBUS3_Pointer const & r) const;
     itkImageToImageFilterIUC3IRGBUS3_Pointer & operator=(itkImageToImageFilterIUC3IRGBUS3_Pointer const & r);
     itkImageToImageFilterIUC3IRGBUS3_Pointer & operator=(itkImageToImageFilterIUC3IRGBUS3 * r);
     itkImageToImageFilterIUC3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3ISSRTD33 : public itkImageSourceISSRTD33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3ISSRTD33(itkImageToImageFilterIUC3ISSRTD33 const & arg0);
     void operator=(itkImageToImageFilterIUC3ISSRTD33 const & arg0);
   protected:
     itkImageToImageFilterIUC3ISSRTD33();
     ~itkImageToImageFilterIUC3ISSRTD33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3ISSRTD33_Pointer {
   public:
     itkImageToImageFilterIUC3ISSRTD33_Pointer();
     itkImageToImageFilterIUC3ISSRTD33_Pointer(itkImageToImageFilterIUC3ISSRTD33_Pointer const & p);
     itkImageToImageFilterIUC3ISSRTD33_Pointer(itkImageToImageFilterIUC3ISSRTD33 * p);
     ~itkImageToImageFilterIUC3ISSRTD33_Pointer();
     itkImageToImageFilterIUC3ISSRTD33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3ISSRTD33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3ISSRTD33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3ISSRTD33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3ISSRTD33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3ISSRTD33_Pointer const & r) const;
     itkImageToImageFilterIUC3ISSRTD33_Pointer & operator=(itkImageToImageFilterIUC3ISSRTD33_Pointer const & r);
     itkImageToImageFilterIUC3ISSRTD33_Pointer & operator=(itkImageToImageFilterIUC3ISSRTD33 * r);
     itkImageToImageFilterIUC3ISSRTD33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3IUC2(itkImageToImageFilterIUC3IUC2 const & arg0);
     void operator=(itkImageToImageFilterIUC3IUC2 const & arg0);
   protected:
     itkImageToImageFilterIUC3IUC2();
     ~itkImageToImageFilterIUC3IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3IUC2_Pointer {
   public:
     itkImageToImageFilterIUC3IUC2_Pointer();
     itkImageToImageFilterIUC3IUC2_Pointer(itkImageToImageFilterIUC3IUC2_Pointer const & p);
     itkImageToImageFilterIUC3IUC2_Pointer(itkImageToImageFilterIUC3IUC2 * p);
     ~itkImageToImageFilterIUC3IUC2_Pointer();
     itkImageToImageFilterIUC3IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3IUC2_Pointer const & r) const;
     itkImageToImageFilterIUC3IUC2_Pointer & operator=(itkImageToImageFilterIUC3IUC2_Pointer const & r);
     itkImageToImageFilterIUC3IUC2_Pointer & operator=(itkImageToImageFilterIUC3IUC2 * r);
     itkImageToImageFilterIUC3IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3IVF33 : public itkImageSourceIVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3IVF33(itkImageToImageFilterIUC3IVF33 const & arg0);
     void operator=(itkImageToImageFilterIUC3IVF33 const & arg0);
   protected:
     itkImageToImageFilterIUC3IVF33();
     ~itkImageToImageFilterIUC3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3IVF33_Pointer {
   public:
     itkImageToImageFilterIUC3IVF33_Pointer();
     itkImageToImageFilterIUC3IVF33_Pointer(itkImageToImageFilterIUC3IVF33_Pointer const & p);
     itkImageToImageFilterIUC3IVF33_Pointer(itkImageToImageFilterIUC3IVF33 * p);
     ~itkImageToImageFilterIUC3IVF33_Pointer();
     itkImageToImageFilterIUC3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3IVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3IVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3IVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3IVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3IVF33_Pointer const & r) const;
     itkImageToImageFilterIUC3IVF33_Pointer & operator=(itkImageToImageFilterIUC3IVF33_Pointer const & r);
     itkImageToImageFilterIUC3IVF33_Pointer & operator=(itkImageToImageFilterIUC3IVF33 * r);
     itkImageToImageFilterIUC3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3VID3 : public itkImageSourceVID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3VID3(itkImageToImageFilterIUC3VID3 const & arg0);
     void operator=(itkImageToImageFilterIUC3VID3 const & arg0);
   protected:
     itkImageToImageFilterIUC3VID3();
     ~itkImageToImageFilterIUC3VID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3VID3_Pointer {
   public:
     itkImageToImageFilterIUC3VID3_Pointer();
     itkImageToImageFilterIUC3VID3_Pointer(itkImageToImageFilterIUC3VID3_Pointer const & p);
     itkImageToImageFilterIUC3VID3_Pointer(itkImageToImageFilterIUC3VID3 * p);
     ~itkImageToImageFilterIUC3VID3_Pointer();
     itkImageToImageFilterIUC3VID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3VID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3VID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3VID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3VID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3VID3_Pointer const & r) const;
     itkImageToImageFilterIUC3VID3_Pointer & operator=(itkImageToImageFilterIUC3VID3_Pointer const & r);
     itkImageToImageFilterIUC3VID3_Pointer & operator=(itkImageToImageFilterIUC3VID3 * r);
     itkImageToImageFilterIUC3VID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3VIF3 : public itkImageSourceVIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3VIF3(itkImageToImageFilterIUC3VIF3 const & arg0);
     void operator=(itkImageToImageFilterIUC3VIF3 const & arg0);
   protected:
     itkImageToImageFilterIUC3VIF3();
     ~itkImageToImageFilterIUC3VIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3VIF3_Pointer {
   public:
     itkImageToImageFilterIUC3VIF3_Pointer();
     itkImageToImageFilterIUC3VIF3_Pointer(itkImageToImageFilterIUC3VIF3_Pointer const & p);
     itkImageToImageFilterIUC3VIF3_Pointer(itkImageToImageFilterIUC3VIF3 * p);
     ~itkImageToImageFilterIUC3VIF3_Pointer();
     itkImageToImageFilterIUC3VIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3VIF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3VIF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3VIF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3VIF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3VIF3_Pointer const & r) const;
     itkImageToImageFilterIUC3VIF3_Pointer & operator=(itkImageToImageFilterIUC3VIF3_Pointer const & r);
     itkImageToImageFilterIUC3VIF3_Pointer & operator=(itkImageToImageFilterIUC3VIF3 * r);
     itkImageToImageFilterIUC3VIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3VIUC3 : public itkImageSourceVIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3VIUC3(itkImageToImageFilterIUC3VIUC3 const & arg0);
     void operator=(itkImageToImageFilterIUC3VIUC3 const & arg0);
   protected:
     itkImageToImageFilterIUC3VIUC3();
     ~itkImageToImageFilterIUC3VIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3VIUC3_Pointer {
   public:
     itkImageToImageFilterIUC3VIUC3_Pointer();
     itkImageToImageFilterIUC3VIUC3_Pointer(itkImageToImageFilterIUC3VIUC3_Pointer const & p);
     itkImageToImageFilterIUC3VIUC3_Pointer(itkImageToImageFilterIUC3VIUC3 * p);
     ~itkImageToImageFilterIUC3VIUC3_Pointer();
     itkImageToImageFilterIUC3VIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3VIUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3VIUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3VIUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3VIUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3VIUC3_Pointer const & r) const;
     itkImageToImageFilterIUC3VIUC3_Pointer & operator=(itkImageToImageFilterIUC3VIUC3_Pointer const & r);
     itkImageToImageFilterIUC3VIUC3_Pointer & operator=(itkImageToImageFilterIUC3VIUC3 * r);
     itkImageToImageFilterIUC3VIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3VIUL3 : public itkImageSourceVIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3VIUL3(itkImageToImageFilterIUC3VIUL3 const & arg0);
     void operator=(itkImageToImageFilterIUC3VIUL3 const & arg0);
   protected:
     itkImageToImageFilterIUC3VIUL3();
     ~itkImageToImageFilterIUC3VIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3VIUL3_Pointer {
   public:
     itkImageToImageFilterIUC3VIUL3_Pointer();
     itkImageToImageFilterIUC3VIUL3_Pointer(itkImageToImageFilterIUC3VIUL3_Pointer const & p);
     itkImageToImageFilterIUC3VIUL3_Pointer(itkImageToImageFilterIUC3VIUL3 * p);
     ~itkImageToImageFilterIUC3VIUL3_Pointer();
     itkImageToImageFilterIUC3VIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3VIUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3VIUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3VIUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3VIUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3VIUL3_Pointer const & r) const;
     itkImageToImageFilterIUC3VIUL3_Pointer & operator=(itkImageToImageFilterIUC3VIUL3_Pointer const & r);
     itkImageToImageFilterIUC3VIUL3_Pointer & operator=(itkImageToImageFilterIUC3VIUL3 * r);
     itkImageToImageFilterIUC3VIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUC3VIUS3 : public itkImageSourceVIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUC3 const * image);
     itkImageUC3 const * GetInput();
     itkImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUC3VIUS3(itkImageToImageFilterIUC3VIUS3 const & arg0);
     void operator=(itkImageToImageFilterIUC3VIUS3 const & arg0);
   protected:
     itkImageToImageFilterIUC3VIUS3();
     ~itkImageToImageFilterIUC3VIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUC3VIUS3_Pointer {
   public:
     itkImageToImageFilterIUC3VIUS3_Pointer();
     itkImageToImageFilterIUC3VIUS3_Pointer(itkImageToImageFilterIUC3VIUS3_Pointer const & p);
     itkImageToImageFilterIUC3VIUS3_Pointer(itkImageToImageFilterIUC3VIUS3 * p);
     ~itkImageToImageFilterIUC3VIUS3_Pointer();
     itkImageToImageFilterIUC3VIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUC3VIUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUC3VIUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUC3VIUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUC3VIUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUC3VIUS3_Pointer const & r) const;
     itkImageToImageFilterIUC3VIUS3_Pointer & operator=(itkImageToImageFilterIUC3VIUS3_Pointer const & r);
     itkImageToImageFilterIUC3VIUS3_Pointer & operator=(itkImageToImageFilterIUC3VIUS3 * r);
     itkImageToImageFilterIUC3VIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2ICVF22 : public itkImageSourceICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2ICVF22(itkImageToImageFilterIUL2ICVF22 const & arg0);
     void operator=(itkImageToImageFilterIUL2ICVF22 const & arg0);
   protected:
     itkImageToImageFilterIUL2ICVF22();
     ~itkImageToImageFilterIUL2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2ICVF22_Pointer {
   public:
     itkImageToImageFilterIUL2ICVF22_Pointer();
     itkImageToImageFilterIUL2ICVF22_Pointer(itkImageToImageFilterIUL2ICVF22_Pointer const & p);
     itkImageToImageFilterIUL2ICVF22_Pointer(itkImageToImageFilterIUL2ICVF22 * p);
     ~itkImageToImageFilterIUL2ICVF22_Pointer();
     itkImageToImageFilterIUL2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2ICVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2ICVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2ICVF22_Pointer const & r) const;
     itkImageToImageFilterIUL2ICVF22_Pointer & operator=(itkImageToImageFilterIUL2ICVF22_Pointer const & r);
     itkImageToImageFilterIUL2ICVF22_Pointer & operator=(itkImageToImageFilterIUL2ICVF22 * r);
     itkImageToImageFilterIUL2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2IRGBAUS2 : public itkImageSourceIRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2IRGBAUS2(itkImageToImageFilterIUL2IRGBAUS2 const & arg0);
     void operator=(itkImageToImageFilterIUL2IRGBAUS2 const & arg0);
   protected:
     itkImageToImageFilterIUL2IRGBAUS2();
     ~itkImageToImageFilterIUL2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2IRGBAUS2_Pointer {
   public:
     itkImageToImageFilterIUL2IRGBAUS2_Pointer();
     itkImageToImageFilterIUL2IRGBAUS2_Pointer(itkImageToImageFilterIUL2IRGBAUS2_Pointer const & p);
     itkImageToImageFilterIUL2IRGBAUS2_Pointer(itkImageToImageFilterIUL2IRGBAUS2 * p);
     ~itkImageToImageFilterIUL2IRGBAUS2_Pointer();
     itkImageToImageFilterIUL2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2IRGBAUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2IRGBAUS2_Pointer const & r) const;
     itkImageToImageFilterIUL2IRGBAUS2_Pointer & operator=(itkImageToImageFilterIUL2IRGBAUS2_Pointer const & r);
     itkImageToImageFilterIUL2IRGBAUS2_Pointer & operator=(itkImageToImageFilterIUL2IRGBAUS2 * r);
     itkImageToImageFilterIUL2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2IRGBUS2 : public itkImageSourceIRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2IRGBUS2(itkImageToImageFilterIUL2IRGBUS2 const & arg0);
     void operator=(itkImageToImageFilterIUL2IRGBUS2 const & arg0);
   protected:
     itkImageToImageFilterIUL2IRGBUS2();
     ~itkImageToImageFilterIUL2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2IRGBUS2_Pointer {
   public:
     itkImageToImageFilterIUL2IRGBUS2_Pointer();
     itkImageToImageFilterIUL2IRGBUS2_Pointer(itkImageToImageFilterIUL2IRGBUS2_Pointer const & p);
     itkImageToImageFilterIUL2IRGBUS2_Pointer(itkImageToImageFilterIUL2IRGBUS2 * p);
     ~itkImageToImageFilterIUL2IRGBUS2_Pointer();
     itkImageToImageFilterIUL2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2IRGBUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2IRGBUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2IRGBUS2_Pointer const & r) const;
     itkImageToImageFilterIUL2IRGBUS2_Pointer & operator=(itkImageToImageFilterIUL2IRGBUS2_Pointer const & r);
     itkImageToImageFilterIUL2IRGBUS2_Pointer & operator=(itkImageToImageFilterIUL2IRGBUS2 * r);
     itkImageToImageFilterIUL2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2ISSRTD22 : public itkImageSourceISSRTD22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2ISSRTD22(itkImageToImageFilterIUL2ISSRTD22 const & arg0);
     void operator=(itkImageToImageFilterIUL2ISSRTD22 const & arg0);
   protected:
     itkImageToImageFilterIUL2ISSRTD22();
     ~itkImageToImageFilterIUL2ISSRTD22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2ISSRTD22_Pointer {
   public:
     itkImageToImageFilterIUL2ISSRTD22_Pointer();
     itkImageToImageFilterIUL2ISSRTD22_Pointer(itkImageToImageFilterIUL2ISSRTD22_Pointer const & p);
     itkImageToImageFilterIUL2ISSRTD22_Pointer(itkImageToImageFilterIUL2ISSRTD22 * p);
     ~itkImageToImageFilterIUL2ISSRTD22_Pointer();
     itkImageToImageFilterIUL2ISSRTD22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2ISSRTD22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2ISSRTD22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2ISSRTD22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2ISSRTD22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2ISSRTD22_Pointer const & r) const;
     itkImageToImageFilterIUL2ISSRTD22_Pointer & operator=(itkImageToImageFilterIUL2ISSRTD22_Pointer const & r);
     itkImageToImageFilterIUL2ISSRTD22_Pointer & operator=(itkImageToImageFilterIUL2ISSRTD22 * r);
     itkImageToImageFilterIUL2ISSRTD22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2IUL3(itkImageToImageFilterIUL2IUL3 const & arg0);
     void operator=(itkImageToImageFilterIUL2IUL3 const & arg0);
   protected:
     itkImageToImageFilterIUL2IUL3();
     ~itkImageToImageFilterIUL2IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2IUL3_Pointer {
   public:
     itkImageToImageFilterIUL2IUL3_Pointer();
     itkImageToImageFilterIUL2IUL3_Pointer(itkImageToImageFilterIUL2IUL3_Pointer const & p);
     itkImageToImageFilterIUL2IUL3_Pointer(itkImageToImageFilterIUL2IUL3 * p);
     ~itkImageToImageFilterIUL2IUL3_Pointer();
     itkImageToImageFilterIUL2IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2IUL3_Pointer const & r) const;
     itkImageToImageFilterIUL2IUL3_Pointer & operator=(itkImageToImageFilterIUL2IUL3_Pointer const & r);
     itkImageToImageFilterIUL2IUL3_Pointer & operator=(itkImageToImageFilterIUL2IUL3 * r);
     itkImageToImageFilterIUL2IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2IVF22 : public itkImageSourceIVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2IVF22(itkImageToImageFilterIUL2IVF22 const & arg0);
     void operator=(itkImageToImageFilterIUL2IVF22 const & arg0);
   protected:
     itkImageToImageFilterIUL2IVF22();
     ~itkImageToImageFilterIUL2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2IVF22_Pointer {
   public:
     itkImageToImageFilterIUL2IVF22_Pointer();
     itkImageToImageFilterIUL2IVF22_Pointer(itkImageToImageFilterIUL2IVF22_Pointer const & p);
     itkImageToImageFilterIUL2IVF22_Pointer(itkImageToImageFilterIUL2IVF22 * p);
     ~itkImageToImageFilterIUL2IVF22_Pointer();
     itkImageToImageFilterIUL2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2IVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2IVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2IVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2IVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2IVF22_Pointer const & r) const;
     itkImageToImageFilterIUL2IVF22_Pointer & operator=(itkImageToImageFilterIUL2IVF22_Pointer const & r);
     itkImageToImageFilterIUL2IVF22_Pointer & operator=(itkImageToImageFilterIUL2IVF22 * r);
     itkImageToImageFilterIUL2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2VID2 : public itkImageSourceVID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2VID2(itkImageToImageFilterIUL2VID2 const & arg0);
     void operator=(itkImageToImageFilterIUL2VID2 const & arg0);
   protected:
     itkImageToImageFilterIUL2VID2();
     ~itkImageToImageFilterIUL2VID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2VID2_Pointer {
   public:
     itkImageToImageFilterIUL2VID2_Pointer();
     itkImageToImageFilterIUL2VID2_Pointer(itkImageToImageFilterIUL2VID2_Pointer const & p);
     itkImageToImageFilterIUL2VID2_Pointer(itkImageToImageFilterIUL2VID2 * p);
     ~itkImageToImageFilterIUL2VID2_Pointer();
     itkImageToImageFilterIUL2VID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2VID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2VID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2VID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2VID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2VID2_Pointer const & r) const;
     itkImageToImageFilterIUL2VID2_Pointer & operator=(itkImageToImageFilterIUL2VID2_Pointer const & r);
     itkImageToImageFilterIUL2VID2_Pointer & operator=(itkImageToImageFilterIUL2VID2 * r);
     itkImageToImageFilterIUL2VID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2VIF2 : public itkImageSourceVIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2VIF2(itkImageToImageFilterIUL2VIF2 const & arg0);
     void operator=(itkImageToImageFilterIUL2VIF2 const & arg0);
   protected:
     itkImageToImageFilterIUL2VIF2();
     ~itkImageToImageFilterIUL2VIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2VIF2_Pointer {
   public:
     itkImageToImageFilterIUL2VIF2_Pointer();
     itkImageToImageFilterIUL2VIF2_Pointer(itkImageToImageFilterIUL2VIF2_Pointer const & p);
     itkImageToImageFilterIUL2VIF2_Pointer(itkImageToImageFilterIUL2VIF2 * p);
     ~itkImageToImageFilterIUL2VIF2_Pointer();
     itkImageToImageFilterIUL2VIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2VIF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2VIF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2VIF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2VIF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2VIF2_Pointer const & r) const;
     itkImageToImageFilterIUL2VIF2_Pointer & operator=(itkImageToImageFilterIUL2VIF2_Pointer const & r);
     itkImageToImageFilterIUL2VIF2_Pointer & operator=(itkImageToImageFilterIUL2VIF2 * r);
     itkImageToImageFilterIUL2VIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2VIUC2 : public itkImageSourceVIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2VIUC2(itkImageToImageFilterIUL2VIUC2 const & arg0);
     void operator=(itkImageToImageFilterIUL2VIUC2 const & arg0);
   protected:
     itkImageToImageFilterIUL2VIUC2();
     ~itkImageToImageFilterIUL2VIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2VIUC2_Pointer {
   public:
     itkImageToImageFilterIUL2VIUC2_Pointer();
     itkImageToImageFilterIUL2VIUC2_Pointer(itkImageToImageFilterIUL2VIUC2_Pointer const & p);
     itkImageToImageFilterIUL2VIUC2_Pointer(itkImageToImageFilterIUL2VIUC2 * p);
     ~itkImageToImageFilterIUL2VIUC2_Pointer();
     itkImageToImageFilterIUL2VIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2VIUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2VIUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2VIUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2VIUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2VIUC2_Pointer const & r) const;
     itkImageToImageFilterIUL2VIUC2_Pointer & operator=(itkImageToImageFilterIUL2VIUC2_Pointer const & r);
     itkImageToImageFilterIUL2VIUC2_Pointer & operator=(itkImageToImageFilterIUL2VIUC2 * r);
     itkImageToImageFilterIUL2VIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2VIUL2 : public itkImageSourceVIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2VIUL2(itkImageToImageFilterIUL2VIUL2 const & arg0);
     void operator=(itkImageToImageFilterIUL2VIUL2 const & arg0);
   protected:
     itkImageToImageFilterIUL2VIUL2();
     ~itkImageToImageFilterIUL2VIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2VIUL2_Pointer {
   public:
     itkImageToImageFilterIUL2VIUL2_Pointer();
     itkImageToImageFilterIUL2VIUL2_Pointer(itkImageToImageFilterIUL2VIUL2_Pointer const & p);
     itkImageToImageFilterIUL2VIUL2_Pointer(itkImageToImageFilterIUL2VIUL2 * p);
     ~itkImageToImageFilterIUL2VIUL2_Pointer();
     itkImageToImageFilterIUL2VIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2VIUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2VIUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2VIUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2VIUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2VIUL2_Pointer const & r) const;
     itkImageToImageFilterIUL2VIUL2_Pointer & operator=(itkImageToImageFilterIUL2VIUL2_Pointer const & r);
     itkImageToImageFilterIUL2VIUL2_Pointer & operator=(itkImageToImageFilterIUL2VIUL2 * r);
     itkImageToImageFilterIUL2VIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL2VIUS2 : public itkImageSourceVIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL2 const * image);
     itkImageUL2 const * GetInput();
     itkImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL2VIUS2(itkImageToImageFilterIUL2VIUS2 const & arg0);
     void operator=(itkImageToImageFilterIUL2VIUS2 const & arg0);
   protected:
     itkImageToImageFilterIUL2VIUS2();
     ~itkImageToImageFilterIUL2VIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL2VIUS2_Pointer {
   public:
     itkImageToImageFilterIUL2VIUS2_Pointer();
     itkImageToImageFilterIUL2VIUS2_Pointer(itkImageToImageFilterIUL2VIUS2_Pointer const & p);
     itkImageToImageFilterIUL2VIUS2_Pointer(itkImageToImageFilterIUL2VIUS2 * p);
     ~itkImageToImageFilterIUL2VIUS2_Pointer();
     itkImageToImageFilterIUL2VIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL2VIUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL2VIUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL2VIUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL2VIUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL2VIUS2_Pointer const & r) const;
     itkImageToImageFilterIUL2VIUS2_Pointer & operator=(itkImageToImageFilterIUL2VIUS2_Pointer const & r);
     itkImageToImageFilterIUL2VIUS2_Pointer & operator=(itkImageToImageFilterIUL2VIUS2 * r);
     itkImageToImageFilterIUL2VIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3ICVF33 : public itkImageSourceICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3ICVF33(itkImageToImageFilterIUL3ICVF33 const & arg0);
     void operator=(itkImageToImageFilterIUL3ICVF33 const & arg0);
   protected:
     itkImageToImageFilterIUL3ICVF33();
     ~itkImageToImageFilterIUL3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3ICVF33_Pointer {
   public:
     itkImageToImageFilterIUL3ICVF33_Pointer();
     itkImageToImageFilterIUL3ICVF33_Pointer(itkImageToImageFilterIUL3ICVF33_Pointer const & p);
     itkImageToImageFilterIUL3ICVF33_Pointer(itkImageToImageFilterIUL3ICVF33 * p);
     ~itkImageToImageFilterIUL3ICVF33_Pointer();
     itkImageToImageFilterIUL3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3ICVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3ICVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3ICVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3ICVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3ICVF33_Pointer const & r) const;
     itkImageToImageFilterIUL3ICVF33_Pointer & operator=(itkImageToImageFilterIUL3ICVF33_Pointer const & r);
     itkImageToImageFilterIUL3ICVF33_Pointer & operator=(itkImageToImageFilterIUL3ICVF33 * r);
     itkImageToImageFilterIUL3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3IRGBAUS3 : public itkImageSourceIRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3IRGBAUS3(itkImageToImageFilterIUL3IRGBAUS3 const & arg0);
     void operator=(itkImageToImageFilterIUL3IRGBAUS3 const & arg0);
   protected:
     itkImageToImageFilterIUL3IRGBAUS3();
     ~itkImageToImageFilterIUL3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3IRGBAUS3_Pointer {
   public:
     itkImageToImageFilterIUL3IRGBAUS3_Pointer();
     itkImageToImageFilterIUL3IRGBAUS3_Pointer(itkImageToImageFilterIUL3IRGBAUS3_Pointer const & p);
     itkImageToImageFilterIUL3IRGBAUS3_Pointer(itkImageToImageFilterIUL3IRGBAUS3 * p);
     ~itkImageToImageFilterIUL3IRGBAUS3_Pointer();
     itkImageToImageFilterIUL3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3IRGBAUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3IRGBAUS3_Pointer const & r) const;
     itkImageToImageFilterIUL3IRGBAUS3_Pointer & operator=(itkImageToImageFilterIUL3IRGBAUS3_Pointer const & r);
     itkImageToImageFilterIUL3IRGBAUS3_Pointer & operator=(itkImageToImageFilterIUL3IRGBAUS3 * r);
     itkImageToImageFilterIUL3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3IRGBUS3 : public itkImageSourceIRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3IRGBUS3(itkImageToImageFilterIUL3IRGBUS3 const & arg0);
     void operator=(itkImageToImageFilterIUL3IRGBUS3 const & arg0);
   protected:
     itkImageToImageFilterIUL3IRGBUS3();
     ~itkImageToImageFilterIUL3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3IRGBUS3_Pointer {
   public:
     itkImageToImageFilterIUL3IRGBUS3_Pointer();
     itkImageToImageFilterIUL3IRGBUS3_Pointer(itkImageToImageFilterIUL3IRGBUS3_Pointer const & p);
     itkImageToImageFilterIUL3IRGBUS3_Pointer(itkImageToImageFilterIUL3IRGBUS3 * p);
     ~itkImageToImageFilterIUL3IRGBUS3_Pointer();
     itkImageToImageFilterIUL3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3IRGBUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3IRGBUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3IRGBUS3_Pointer const & r) const;
     itkImageToImageFilterIUL3IRGBUS3_Pointer & operator=(itkImageToImageFilterIUL3IRGBUS3_Pointer const & r);
     itkImageToImageFilterIUL3IRGBUS3_Pointer & operator=(itkImageToImageFilterIUL3IRGBUS3 * r);
     itkImageToImageFilterIUL3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3ISSRTD33 : public itkImageSourceISSRTD33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3ISSRTD33(itkImageToImageFilterIUL3ISSRTD33 const & arg0);
     void operator=(itkImageToImageFilterIUL3ISSRTD33 const & arg0);
   protected:
     itkImageToImageFilterIUL3ISSRTD33();
     ~itkImageToImageFilterIUL3ISSRTD33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3ISSRTD33_Pointer {
   public:
     itkImageToImageFilterIUL3ISSRTD33_Pointer();
     itkImageToImageFilterIUL3ISSRTD33_Pointer(itkImageToImageFilterIUL3ISSRTD33_Pointer const & p);
     itkImageToImageFilterIUL3ISSRTD33_Pointer(itkImageToImageFilterIUL3ISSRTD33 * p);
     ~itkImageToImageFilterIUL3ISSRTD33_Pointer();
     itkImageToImageFilterIUL3ISSRTD33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3ISSRTD33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3ISSRTD33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3ISSRTD33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3ISSRTD33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3ISSRTD33_Pointer const & r) const;
     itkImageToImageFilterIUL3ISSRTD33_Pointer & operator=(itkImageToImageFilterIUL3ISSRTD33_Pointer const & r);
     itkImageToImageFilterIUL3ISSRTD33_Pointer & operator=(itkImageToImageFilterIUL3ISSRTD33 * r);
     itkImageToImageFilterIUL3ISSRTD33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3IUL2(itkImageToImageFilterIUL3IUL2 const & arg0);
     void operator=(itkImageToImageFilterIUL3IUL2 const & arg0);
   protected:
     itkImageToImageFilterIUL3IUL2();
     ~itkImageToImageFilterIUL3IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3IUL2_Pointer {
   public:
     itkImageToImageFilterIUL3IUL2_Pointer();
     itkImageToImageFilterIUL3IUL2_Pointer(itkImageToImageFilterIUL3IUL2_Pointer const & p);
     itkImageToImageFilterIUL3IUL2_Pointer(itkImageToImageFilterIUL3IUL2 * p);
     ~itkImageToImageFilterIUL3IUL2_Pointer();
     itkImageToImageFilterIUL3IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3IUL2_Pointer const & r) const;
     itkImageToImageFilterIUL3IUL2_Pointer & operator=(itkImageToImageFilterIUL3IUL2_Pointer const & r);
     itkImageToImageFilterIUL3IUL2_Pointer & operator=(itkImageToImageFilterIUL3IUL2 * r);
     itkImageToImageFilterIUL3IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3IVF33 : public itkImageSourceIVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3IVF33(itkImageToImageFilterIUL3IVF33 const & arg0);
     void operator=(itkImageToImageFilterIUL3IVF33 const & arg0);
   protected:
     itkImageToImageFilterIUL3IVF33();
     ~itkImageToImageFilterIUL3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3IVF33_Pointer {
   public:
     itkImageToImageFilterIUL3IVF33_Pointer();
     itkImageToImageFilterIUL3IVF33_Pointer(itkImageToImageFilterIUL3IVF33_Pointer const & p);
     itkImageToImageFilterIUL3IVF33_Pointer(itkImageToImageFilterIUL3IVF33 * p);
     ~itkImageToImageFilterIUL3IVF33_Pointer();
     itkImageToImageFilterIUL3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3IVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3IVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3IVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3IVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3IVF33_Pointer const & r) const;
     itkImageToImageFilterIUL3IVF33_Pointer & operator=(itkImageToImageFilterIUL3IVF33_Pointer const & r);
     itkImageToImageFilterIUL3IVF33_Pointer & operator=(itkImageToImageFilterIUL3IVF33 * r);
     itkImageToImageFilterIUL3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3VID3 : public itkImageSourceVID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3VID3(itkImageToImageFilterIUL3VID3 const & arg0);
     void operator=(itkImageToImageFilterIUL3VID3 const & arg0);
   protected:
     itkImageToImageFilterIUL3VID3();
     ~itkImageToImageFilterIUL3VID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3VID3_Pointer {
   public:
     itkImageToImageFilterIUL3VID3_Pointer();
     itkImageToImageFilterIUL3VID3_Pointer(itkImageToImageFilterIUL3VID3_Pointer const & p);
     itkImageToImageFilterIUL3VID3_Pointer(itkImageToImageFilterIUL3VID3 * p);
     ~itkImageToImageFilterIUL3VID3_Pointer();
     itkImageToImageFilterIUL3VID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3VID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3VID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3VID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3VID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3VID3_Pointer const & r) const;
     itkImageToImageFilterIUL3VID3_Pointer & operator=(itkImageToImageFilterIUL3VID3_Pointer const & r);
     itkImageToImageFilterIUL3VID3_Pointer & operator=(itkImageToImageFilterIUL3VID3 * r);
     itkImageToImageFilterIUL3VID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3VIF3 : public itkImageSourceVIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3VIF3(itkImageToImageFilterIUL3VIF3 const & arg0);
     void operator=(itkImageToImageFilterIUL3VIF3 const & arg0);
   protected:
     itkImageToImageFilterIUL3VIF3();
     ~itkImageToImageFilterIUL3VIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3VIF3_Pointer {
   public:
     itkImageToImageFilterIUL3VIF3_Pointer();
     itkImageToImageFilterIUL3VIF3_Pointer(itkImageToImageFilterIUL3VIF3_Pointer const & p);
     itkImageToImageFilterIUL3VIF3_Pointer(itkImageToImageFilterIUL3VIF3 * p);
     ~itkImageToImageFilterIUL3VIF3_Pointer();
     itkImageToImageFilterIUL3VIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3VIF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3VIF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3VIF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3VIF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3VIF3_Pointer const & r) const;
     itkImageToImageFilterIUL3VIF3_Pointer & operator=(itkImageToImageFilterIUL3VIF3_Pointer const & r);
     itkImageToImageFilterIUL3VIF3_Pointer & operator=(itkImageToImageFilterIUL3VIF3 * r);
     itkImageToImageFilterIUL3VIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3VIUC3 : public itkImageSourceVIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3VIUC3(itkImageToImageFilterIUL3VIUC3 const & arg0);
     void operator=(itkImageToImageFilterIUL3VIUC3 const & arg0);
   protected:
     itkImageToImageFilterIUL3VIUC3();
     ~itkImageToImageFilterIUL3VIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3VIUC3_Pointer {
   public:
     itkImageToImageFilterIUL3VIUC3_Pointer();
     itkImageToImageFilterIUL3VIUC3_Pointer(itkImageToImageFilterIUL3VIUC3_Pointer const & p);
     itkImageToImageFilterIUL3VIUC3_Pointer(itkImageToImageFilterIUL3VIUC3 * p);
     ~itkImageToImageFilterIUL3VIUC3_Pointer();
     itkImageToImageFilterIUL3VIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3VIUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3VIUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3VIUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3VIUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3VIUC3_Pointer const & r) const;
     itkImageToImageFilterIUL3VIUC3_Pointer & operator=(itkImageToImageFilterIUL3VIUC3_Pointer const & r);
     itkImageToImageFilterIUL3VIUC3_Pointer & operator=(itkImageToImageFilterIUL3VIUC3 * r);
     itkImageToImageFilterIUL3VIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3VIUL3 : public itkImageSourceVIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3VIUL3(itkImageToImageFilterIUL3VIUL3 const & arg0);
     void operator=(itkImageToImageFilterIUL3VIUL3 const & arg0);
   protected:
     itkImageToImageFilterIUL3VIUL3();
     ~itkImageToImageFilterIUL3VIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3VIUL3_Pointer {
   public:
     itkImageToImageFilterIUL3VIUL3_Pointer();
     itkImageToImageFilterIUL3VIUL3_Pointer(itkImageToImageFilterIUL3VIUL3_Pointer const & p);
     itkImageToImageFilterIUL3VIUL3_Pointer(itkImageToImageFilterIUL3VIUL3 * p);
     ~itkImageToImageFilterIUL3VIUL3_Pointer();
     itkImageToImageFilterIUL3VIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3VIUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3VIUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3VIUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3VIUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3VIUL3_Pointer const & r) const;
     itkImageToImageFilterIUL3VIUL3_Pointer & operator=(itkImageToImageFilterIUL3VIUL3_Pointer const & r);
     itkImageToImageFilterIUL3VIUL3_Pointer & operator=(itkImageToImageFilterIUL3VIUL3 * r);
     itkImageToImageFilterIUL3VIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUL3VIUS3 : public itkImageSourceVIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUL3 const * image);
     itkImageUL3 const * GetInput();
     itkImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUL3VIUS3(itkImageToImageFilterIUL3VIUS3 const & arg0);
     void operator=(itkImageToImageFilterIUL3VIUS3 const & arg0);
   protected:
     itkImageToImageFilterIUL3VIUS3();
     ~itkImageToImageFilterIUL3VIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUL3VIUS3_Pointer {
   public:
     itkImageToImageFilterIUL3VIUS3_Pointer();
     itkImageToImageFilterIUL3VIUS3_Pointer(itkImageToImageFilterIUL3VIUS3_Pointer const & p);
     itkImageToImageFilterIUL3VIUS3_Pointer(itkImageToImageFilterIUL3VIUS3 * p);
     ~itkImageToImageFilterIUL3VIUS3_Pointer();
     itkImageToImageFilterIUL3VIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUL3VIUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUL3VIUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUL3VIUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUL3VIUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUL3VIUS3_Pointer const & r) const;
     itkImageToImageFilterIUL3VIUS3_Pointer & operator=(itkImageToImageFilterIUL3VIUS3_Pointer const & r);
     itkImageToImageFilterIUL3VIUS3_Pointer & operator=(itkImageToImageFilterIUL3VIUS3 * r);
     itkImageToImageFilterIUL3VIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2ICVF22 : public itkImageSourceICVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2ICVF22(itkImageToImageFilterIUS2ICVF22 const & arg0);
     void operator=(itkImageToImageFilterIUS2ICVF22 const & arg0);
   protected:
     itkImageToImageFilterIUS2ICVF22();
     ~itkImageToImageFilterIUS2ICVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2ICVF22_Pointer {
   public:
     itkImageToImageFilterIUS2ICVF22_Pointer();
     itkImageToImageFilterIUS2ICVF22_Pointer(itkImageToImageFilterIUS2ICVF22_Pointer const & p);
     itkImageToImageFilterIUS2ICVF22_Pointer(itkImageToImageFilterIUS2ICVF22 * p);
     ~itkImageToImageFilterIUS2ICVF22_Pointer();
     itkImageToImageFilterIUS2ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2ICVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2ICVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2ICVF22_Pointer const & r) const;
     itkImageToImageFilterIUS2ICVF22_Pointer & operator=(itkImageToImageFilterIUS2ICVF22_Pointer const & r);
     itkImageToImageFilterIUS2ICVF22_Pointer & operator=(itkImageToImageFilterIUS2ICVF22 * r);
     itkImageToImageFilterIUS2ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2IRGBAUS2 : public itkImageSourceIRGBAUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2IRGBAUS2(itkImageToImageFilterIUS2IRGBAUS2 const & arg0);
     void operator=(itkImageToImageFilterIUS2IRGBAUS2 const & arg0);
   protected:
     itkImageToImageFilterIUS2IRGBAUS2();
     ~itkImageToImageFilterIUS2IRGBAUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2IRGBAUS2_Pointer {
   public:
     itkImageToImageFilterIUS2IRGBAUS2_Pointer();
     itkImageToImageFilterIUS2IRGBAUS2_Pointer(itkImageToImageFilterIUS2IRGBAUS2_Pointer const & p);
     itkImageToImageFilterIUS2IRGBAUS2_Pointer(itkImageToImageFilterIUS2IRGBAUS2 * p);
     ~itkImageToImageFilterIUS2IRGBAUS2_Pointer();
     itkImageToImageFilterIUS2IRGBAUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2IRGBAUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2IRGBAUS2_Pointer const & r) const;
     itkImageToImageFilterIUS2IRGBAUS2_Pointer & operator=(itkImageToImageFilterIUS2IRGBAUS2_Pointer const & r);
     itkImageToImageFilterIUS2IRGBAUS2_Pointer & operator=(itkImageToImageFilterIUS2IRGBAUS2 * r);
     itkImageToImageFilterIUS2IRGBAUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2IRGBUS2 : public itkImageSourceIRGBUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2IRGBUS2(itkImageToImageFilterIUS2IRGBUS2 const & arg0);
     void operator=(itkImageToImageFilterIUS2IRGBUS2 const & arg0);
   protected:
     itkImageToImageFilterIUS2IRGBUS2();
     ~itkImageToImageFilterIUS2IRGBUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2IRGBUS2_Pointer {
   public:
     itkImageToImageFilterIUS2IRGBUS2_Pointer();
     itkImageToImageFilterIUS2IRGBUS2_Pointer(itkImageToImageFilterIUS2IRGBUS2_Pointer const & p);
     itkImageToImageFilterIUS2IRGBUS2_Pointer(itkImageToImageFilterIUS2IRGBUS2 * p);
     ~itkImageToImageFilterIUS2IRGBUS2_Pointer();
     itkImageToImageFilterIUS2IRGBUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2IRGBUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2IRGBUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2IRGBUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2IRGBUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2IRGBUS2_Pointer const & r) const;
     itkImageToImageFilterIUS2IRGBUS2_Pointer & operator=(itkImageToImageFilterIUS2IRGBUS2_Pointer const & r);
     itkImageToImageFilterIUS2IRGBUS2_Pointer & operator=(itkImageToImageFilterIUS2IRGBUS2 * r);
     itkImageToImageFilterIUS2IRGBUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2ISSRTD22 : public itkImageSourceISSRTD22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2ISSRTD22(itkImageToImageFilterIUS2ISSRTD22 const & arg0);
     void operator=(itkImageToImageFilterIUS2ISSRTD22 const & arg0);
   protected:
     itkImageToImageFilterIUS2ISSRTD22();
     ~itkImageToImageFilterIUS2ISSRTD22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2ISSRTD22_Pointer {
   public:
     itkImageToImageFilterIUS2ISSRTD22_Pointer();
     itkImageToImageFilterIUS2ISSRTD22_Pointer(itkImageToImageFilterIUS2ISSRTD22_Pointer const & p);
     itkImageToImageFilterIUS2ISSRTD22_Pointer(itkImageToImageFilterIUS2ISSRTD22 * p);
     ~itkImageToImageFilterIUS2ISSRTD22_Pointer();
     itkImageToImageFilterIUS2ISSRTD22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2ISSRTD22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2ISSRTD22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2ISSRTD22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2ISSRTD22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2ISSRTD22_Pointer const & r) const;
     itkImageToImageFilterIUS2ISSRTD22_Pointer & operator=(itkImageToImageFilterIUS2ISSRTD22_Pointer const & r);
     itkImageToImageFilterIUS2ISSRTD22_Pointer & operator=(itkImageToImageFilterIUS2ISSRTD22 * r);
     itkImageToImageFilterIUS2ISSRTD22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2IUS3(itkImageToImageFilterIUS2IUS3 const & arg0);
     void operator=(itkImageToImageFilterIUS2IUS3 const & arg0);
   protected:
     itkImageToImageFilterIUS2IUS3();
     ~itkImageToImageFilterIUS2IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2IUS3_Pointer {
   public:
     itkImageToImageFilterIUS2IUS3_Pointer();
     itkImageToImageFilterIUS2IUS3_Pointer(itkImageToImageFilterIUS2IUS3_Pointer const & p);
     itkImageToImageFilterIUS2IUS3_Pointer(itkImageToImageFilterIUS2IUS3 * p);
     ~itkImageToImageFilterIUS2IUS3_Pointer();
     itkImageToImageFilterIUS2IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2IUS3_Pointer const & r) const;
     itkImageToImageFilterIUS2IUS3_Pointer & operator=(itkImageToImageFilterIUS2IUS3_Pointer const & r);
     itkImageToImageFilterIUS2IUS3_Pointer & operator=(itkImageToImageFilterIUS2IUS3 * r);
     itkImageToImageFilterIUS2IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2IVF22 : public itkImageSourceIVF22 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2IVF22(itkImageToImageFilterIUS2IVF22 const & arg0);
     void operator=(itkImageToImageFilterIUS2IVF22 const & arg0);
   protected:
     itkImageToImageFilterIUS2IVF22();
     ~itkImageToImageFilterIUS2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2IVF22_Pointer {
   public:
     itkImageToImageFilterIUS2IVF22_Pointer();
     itkImageToImageFilterIUS2IVF22_Pointer(itkImageToImageFilterIUS2IVF22_Pointer const & p);
     itkImageToImageFilterIUS2IVF22_Pointer(itkImageToImageFilterIUS2IVF22 * p);
     ~itkImageToImageFilterIUS2IVF22_Pointer();
     itkImageToImageFilterIUS2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2IVF22 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2IVF22_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2IVF22_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2IVF22_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2IVF22_Pointer const & r) const;
     itkImageToImageFilterIUS2IVF22_Pointer & operator=(itkImageToImageFilterIUS2IVF22_Pointer const & r);
     itkImageToImageFilterIUS2IVF22_Pointer & operator=(itkImageToImageFilterIUS2IVF22 * r);
     itkImageToImageFilterIUS2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2VID2 : public itkImageSourceVID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2VID2(itkImageToImageFilterIUS2VID2 const & arg0);
     void operator=(itkImageToImageFilterIUS2VID2 const & arg0);
   protected:
     itkImageToImageFilterIUS2VID2();
     ~itkImageToImageFilterIUS2VID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2VID2_Pointer {
   public:
     itkImageToImageFilterIUS2VID2_Pointer();
     itkImageToImageFilterIUS2VID2_Pointer(itkImageToImageFilterIUS2VID2_Pointer const & p);
     itkImageToImageFilterIUS2VID2_Pointer(itkImageToImageFilterIUS2VID2 * p);
     ~itkImageToImageFilterIUS2VID2_Pointer();
     itkImageToImageFilterIUS2VID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2VID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2VID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2VID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2VID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2VID2_Pointer const & r) const;
     itkImageToImageFilterIUS2VID2_Pointer & operator=(itkImageToImageFilterIUS2VID2_Pointer const & r);
     itkImageToImageFilterIUS2VID2_Pointer & operator=(itkImageToImageFilterIUS2VID2 * r);
     itkImageToImageFilterIUS2VID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2VIF2 : public itkImageSourceVIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2VIF2(itkImageToImageFilterIUS2VIF2 const & arg0);
     void operator=(itkImageToImageFilterIUS2VIF2 const & arg0);
   protected:
     itkImageToImageFilterIUS2VIF2();
     ~itkImageToImageFilterIUS2VIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2VIF2_Pointer {
   public:
     itkImageToImageFilterIUS2VIF2_Pointer();
     itkImageToImageFilterIUS2VIF2_Pointer(itkImageToImageFilterIUS2VIF2_Pointer const & p);
     itkImageToImageFilterIUS2VIF2_Pointer(itkImageToImageFilterIUS2VIF2 * p);
     ~itkImageToImageFilterIUS2VIF2_Pointer();
     itkImageToImageFilterIUS2VIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2VIF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2VIF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2VIF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2VIF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2VIF2_Pointer const & r) const;
     itkImageToImageFilterIUS2VIF2_Pointer & operator=(itkImageToImageFilterIUS2VIF2_Pointer const & r);
     itkImageToImageFilterIUS2VIF2_Pointer & operator=(itkImageToImageFilterIUS2VIF2 * r);
     itkImageToImageFilterIUS2VIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2VIUC2 : public itkImageSourceVIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2VIUC2(itkImageToImageFilterIUS2VIUC2 const & arg0);
     void operator=(itkImageToImageFilterIUS2VIUC2 const & arg0);
   protected:
     itkImageToImageFilterIUS2VIUC2();
     ~itkImageToImageFilterIUS2VIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2VIUC2_Pointer {
   public:
     itkImageToImageFilterIUS2VIUC2_Pointer();
     itkImageToImageFilterIUS2VIUC2_Pointer(itkImageToImageFilterIUS2VIUC2_Pointer const & p);
     itkImageToImageFilterIUS2VIUC2_Pointer(itkImageToImageFilterIUS2VIUC2 * p);
     ~itkImageToImageFilterIUS2VIUC2_Pointer();
     itkImageToImageFilterIUS2VIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2VIUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2VIUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2VIUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2VIUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2VIUC2_Pointer const & r) const;
     itkImageToImageFilterIUS2VIUC2_Pointer & operator=(itkImageToImageFilterIUS2VIUC2_Pointer const & r);
     itkImageToImageFilterIUS2VIUC2_Pointer & operator=(itkImageToImageFilterIUS2VIUC2 * r);
     itkImageToImageFilterIUS2VIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2VIUL2 : public itkImageSourceVIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2VIUL2(itkImageToImageFilterIUS2VIUL2 const & arg0);
     void operator=(itkImageToImageFilterIUS2VIUL2 const & arg0);
   protected:
     itkImageToImageFilterIUS2VIUL2();
     ~itkImageToImageFilterIUS2VIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2VIUL2_Pointer {
   public:
     itkImageToImageFilterIUS2VIUL2_Pointer();
     itkImageToImageFilterIUS2VIUL2_Pointer(itkImageToImageFilterIUS2VIUL2_Pointer const & p);
     itkImageToImageFilterIUS2VIUL2_Pointer(itkImageToImageFilterIUS2VIUL2 * p);
     ~itkImageToImageFilterIUS2VIUL2_Pointer();
     itkImageToImageFilterIUS2VIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2VIUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2VIUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2VIUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2VIUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2VIUL2_Pointer const & r) const;
     itkImageToImageFilterIUS2VIUL2_Pointer & operator=(itkImageToImageFilterIUS2VIUL2_Pointer const & r);
     itkImageToImageFilterIUS2VIUL2_Pointer & operator=(itkImageToImageFilterIUS2VIUL2 * r);
     itkImageToImageFilterIUS2VIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS2VIUS2 : public itkImageSourceVIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS2 const * image);
     itkImageUS2 const * GetInput();
     itkImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS2VIUS2(itkImageToImageFilterIUS2VIUS2 const & arg0);
     void operator=(itkImageToImageFilterIUS2VIUS2 const & arg0);
   protected:
     itkImageToImageFilterIUS2VIUS2();
     ~itkImageToImageFilterIUS2VIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS2VIUS2_Pointer {
   public:
     itkImageToImageFilterIUS2VIUS2_Pointer();
     itkImageToImageFilterIUS2VIUS2_Pointer(itkImageToImageFilterIUS2VIUS2_Pointer const & p);
     itkImageToImageFilterIUS2VIUS2_Pointer(itkImageToImageFilterIUS2VIUS2 * p);
     ~itkImageToImageFilterIUS2VIUS2_Pointer();
     itkImageToImageFilterIUS2VIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS2VIUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS2VIUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS2VIUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS2VIUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS2VIUS2_Pointer const & r) const;
     itkImageToImageFilterIUS2VIUS2_Pointer & operator=(itkImageToImageFilterIUS2VIUS2_Pointer const & r);
     itkImageToImageFilterIUS2VIUS2_Pointer & operator=(itkImageToImageFilterIUS2VIUS2 * r);
     itkImageToImageFilterIUS2VIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3ICVF33 : public itkImageSourceICVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3ICVF33(itkImageToImageFilterIUS3ICVF33 const & arg0);
     void operator=(itkImageToImageFilterIUS3ICVF33 const & arg0);
   protected:
     itkImageToImageFilterIUS3ICVF33();
     ~itkImageToImageFilterIUS3ICVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3ICVF33_Pointer {
   public:
     itkImageToImageFilterIUS3ICVF33_Pointer();
     itkImageToImageFilterIUS3ICVF33_Pointer(itkImageToImageFilterIUS3ICVF33_Pointer const & p);
     itkImageToImageFilterIUS3ICVF33_Pointer(itkImageToImageFilterIUS3ICVF33 * p);
     ~itkImageToImageFilterIUS3ICVF33_Pointer();
     itkImageToImageFilterIUS3ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3ICVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3ICVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3ICVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3ICVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3ICVF33_Pointer const & r) const;
     itkImageToImageFilterIUS3ICVF33_Pointer & operator=(itkImageToImageFilterIUS3ICVF33_Pointer const & r);
     itkImageToImageFilterIUS3ICVF33_Pointer & operator=(itkImageToImageFilterIUS3ICVF33 * r);
     itkImageToImageFilterIUS3ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3IRGBAUS3 : public itkImageSourceIRGBAUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3IRGBAUS3(itkImageToImageFilterIUS3IRGBAUS3 const & arg0);
     void operator=(itkImageToImageFilterIUS3IRGBAUS3 const & arg0);
   protected:
     itkImageToImageFilterIUS3IRGBAUS3();
     ~itkImageToImageFilterIUS3IRGBAUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3IRGBAUS3_Pointer {
   public:
     itkImageToImageFilterIUS3IRGBAUS3_Pointer();
     itkImageToImageFilterIUS3IRGBAUS3_Pointer(itkImageToImageFilterIUS3IRGBAUS3_Pointer const & p);
     itkImageToImageFilterIUS3IRGBAUS3_Pointer(itkImageToImageFilterIUS3IRGBAUS3 * p);
     ~itkImageToImageFilterIUS3IRGBAUS3_Pointer();
     itkImageToImageFilterIUS3IRGBAUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3IRGBAUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3IRGBAUS3_Pointer const & r) const;
     itkImageToImageFilterIUS3IRGBAUS3_Pointer & operator=(itkImageToImageFilterIUS3IRGBAUS3_Pointer const & r);
     itkImageToImageFilterIUS3IRGBAUS3_Pointer & operator=(itkImageToImageFilterIUS3IRGBAUS3 * r);
     itkImageToImageFilterIUS3IRGBAUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3IRGBUS3 : public itkImageSourceIRGBUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3IRGBUS3(itkImageToImageFilterIUS3IRGBUS3 const & arg0);
     void operator=(itkImageToImageFilterIUS3IRGBUS3 const & arg0);
   protected:
     itkImageToImageFilterIUS3IRGBUS3();
     ~itkImageToImageFilterIUS3IRGBUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3IRGBUS3_Pointer {
   public:
     itkImageToImageFilterIUS3IRGBUS3_Pointer();
     itkImageToImageFilterIUS3IRGBUS3_Pointer(itkImageToImageFilterIUS3IRGBUS3_Pointer const & p);
     itkImageToImageFilterIUS3IRGBUS3_Pointer(itkImageToImageFilterIUS3IRGBUS3 * p);
     ~itkImageToImageFilterIUS3IRGBUS3_Pointer();
     itkImageToImageFilterIUS3IRGBUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3IRGBUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3IRGBUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3IRGBUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3IRGBUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3IRGBUS3_Pointer const & r) const;
     itkImageToImageFilterIUS3IRGBUS3_Pointer & operator=(itkImageToImageFilterIUS3IRGBUS3_Pointer const & r);
     itkImageToImageFilterIUS3IRGBUS3_Pointer & operator=(itkImageToImageFilterIUS3IRGBUS3 * r);
     itkImageToImageFilterIUS3IRGBUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3ISSRTD33 : public itkImageSourceISSRTD33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3ISSRTD33(itkImageToImageFilterIUS3ISSRTD33 const & arg0);
     void operator=(itkImageToImageFilterIUS3ISSRTD33 const & arg0);
   protected:
     itkImageToImageFilterIUS3ISSRTD33();
     ~itkImageToImageFilterIUS3ISSRTD33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3ISSRTD33_Pointer {
   public:
     itkImageToImageFilterIUS3ISSRTD33_Pointer();
     itkImageToImageFilterIUS3ISSRTD33_Pointer(itkImageToImageFilterIUS3ISSRTD33_Pointer const & p);
     itkImageToImageFilterIUS3ISSRTD33_Pointer(itkImageToImageFilterIUS3ISSRTD33 * p);
     ~itkImageToImageFilterIUS3ISSRTD33_Pointer();
     itkImageToImageFilterIUS3ISSRTD33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3ISSRTD33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3ISSRTD33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3ISSRTD33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3ISSRTD33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3ISSRTD33_Pointer const & r) const;
     itkImageToImageFilterIUS3ISSRTD33_Pointer & operator=(itkImageToImageFilterIUS3ISSRTD33_Pointer const & r);
     itkImageToImageFilterIUS3ISSRTD33_Pointer & operator=(itkImageToImageFilterIUS3ISSRTD33 * r);
     itkImageToImageFilterIUS3ISSRTD33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3IUS2(itkImageToImageFilterIUS3IUS2 const & arg0);
     void operator=(itkImageToImageFilterIUS3IUS2 const & arg0);
   protected:
     itkImageToImageFilterIUS3IUS2();
     ~itkImageToImageFilterIUS3IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3IUS2_Pointer {
   public:
     itkImageToImageFilterIUS3IUS2_Pointer();
     itkImageToImageFilterIUS3IUS2_Pointer(itkImageToImageFilterIUS3IUS2_Pointer const & p);
     itkImageToImageFilterIUS3IUS2_Pointer(itkImageToImageFilterIUS3IUS2 * p);
     ~itkImageToImageFilterIUS3IUS2_Pointer();
     itkImageToImageFilterIUS3IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3IUS2_Pointer const & r) const;
     itkImageToImageFilterIUS3IUS2_Pointer & operator=(itkImageToImageFilterIUS3IUS2_Pointer const & r);
     itkImageToImageFilterIUS3IUS2_Pointer & operator=(itkImageToImageFilterIUS3IUS2 * r);
     itkImageToImageFilterIUS3IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3IVF33 : public itkImageSourceIVF33 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3IVF33(itkImageToImageFilterIUS3IVF33 const & arg0);
     void operator=(itkImageToImageFilterIUS3IVF33 const & arg0);
   protected:
     itkImageToImageFilterIUS3IVF33();
     ~itkImageToImageFilterIUS3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3IVF33_Pointer {
   public:
     itkImageToImageFilterIUS3IVF33_Pointer();
     itkImageToImageFilterIUS3IVF33_Pointer(itkImageToImageFilterIUS3IVF33_Pointer const & p);
     itkImageToImageFilterIUS3IVF33_Pointer(itkImageToImageFilterIUS3IVF33 * p);
     ~itkImageToImageFilterIUS3IVF33_Pointer();
     itkImageToImageFilterIUS3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3IVF33 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3IVF33_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3IVF33_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3IVF33_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3IVF33_Pointer const & r) const;
     itkImageToImageFilterIUS3IVF33_Pointer & operator=(itkImageToImageFilterIUS3IVF33_Pointer const & r);
     itkImageToImageFilterIUS3IVF33_Pointer & operator=(itkImageToImageFilterIUS3IVF33 * r);
     itkImageToImageFilterIUS3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3VID3 : public itkImageSourceVID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3VID3(itkImageToImageFilterIUS3VID3 const & arg0);
     void operator=(itkImageToImageFilterIUS3VID3 const & arg0);
   protected:
     itkImageToImageFilterIUS3VID3();
     ~itkImageToImageFilterIUS3VID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3VID3_Pointer {
   public:
     itkImageToImageFilterIUS3VID3_Pointer();
     itkImageToImageFilterIUS3VID3_Pointer(itkImageToImageFilterIUS3VID3_Pointer const & p);
     itkImageToImageFilterIUS3VID3_Pointer(itkImageToImageFilterIUS3VID3 * p);
     ~itkImageToImageFilterIUS3VID3_Pointer();
     itkImageToImageFilterIUS3VID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3VID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3VID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3VID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3VID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3VID3_Pointer const & r) const;
     itkImageToImageFilterIUS3VID3_Pointer & operator=(itkImageToImageFilterIUS3VID3_Pointer const & r);
     itkImageToImageFilterIUS3VID3_Pointer & operator=(itkImageToImageFilterIUS3VID3 * r);
     itkImageToImageFilterIUS3VID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3VIF3 : public itkImageSourceVIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3VIF3(itkImageToImageFilterIUS3VIF3 const & arg0);
     void operator=(itkImageToImageFilterIUS3VIF3 const & arg0);
   protected:
     itkImageToImageFilterIUS3VIF3();
     ~itkImageToImageFilterIUS3VIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3VIF3_Pointer {
   public:
     itkImageToImageFilterIUS3VIF3_Pointer();
     itkImageToImageFilterIUS3VIF3_Pointer(itkImageToImageFilterIUS3VIF3_Pointer const & p);
     itkImageToImageFilterIUS3VIF3_Pointer(itkImageToImageFilterIUS3VIF3 * p);
     ~itkImageToImageFilterIUS3VIF3_Pointer();
     itkImageToImageFilterIUS3VIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3VIF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3VIF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3VIF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3VIF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3VIF3_Pointer const & r) const;
     itkImageToImageFilterIUS3VIF3_Pointer & operator=(itkImageToImageFilterIUS3VIF3_Pointer const & r);
     itkImageToImageFilterIUS3VIF3_Pointer & operator=(itkImageToImageFilterIUS3VIF3 * r);
     itkImageToImageFilterIUS3VIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3VIUC3 : public itkImageSourceVIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3VIUC3(itkImageToImageFilterIUS3VIUC3 const & arg0);
     void operator=(itkImageToImageFilterIUS3VIUC3 const & arg0);
   protected:
     itkImageToImageFilterIUS3VIUC3();
     ~itkImageToImageFilterIUS3VIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3VIUC3_Pointer {
   public:
     itkImageToImageFilterIUS3VIUC3_Pointer();
     itkImageToImageFilterIUS3VIUC3_Pointer(itkImageToImageFilterIUS3VIUC3_Pointer const & p);
     itkImageToImageFilterIUS3VIUC3_Pointer(itkImageToImageFilterIUS3VIUC3 * p);
     ~itkImageToImageFilterIUS3VIUC3_Pointer();
     itkImageToImageFilterIUS3VIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3VIUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3VIUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3VIUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3VIUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3VIUC3_Pointer const & r) const;
     itkImageToImageFilterIUS3VIUC3_Pointer & operator=(itkImageToImageFilterIUS3VIUC3_Pointer const & r);
     itkImageToImageFilterIUS3VIUC3_Pointer & operator=(itkImageToImageFilterIUS3VIUC3 * r);
     itkImageToImageFilterIUS3VIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3VIUL3 : public itkImageSourceVIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3VIUL3(itkImageToImageFilterIUS3VIUL3 const & arg0);
     void operator=(itkImageToImageFilterIUS3VIUL3 const & arg0);
   protected:
     itkImageToImageFilterIUS3VIUL3();
     ~itkImageToImageFilterIUS3VIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3VIUL3_Pointer {
   public:
     itkImageToImageFilterIUS3VIUL3_Pointer();
     itkImageToImageFilterIUS3VIUL3_Pointer(itkImageToImageFilterIUS3VIUL3_Pointer const & p);
     itkImageToImageFilterIUS3VIUL3_Pointer(itkImageToImageFilterIUS3VIUL3 * p);
     ~itkImageToImageFilterIUS3VIUL3_Pointer();
     itkImageToImageFilterIUS3VIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3VIUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3VIUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3VIUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3VIUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3VIUL3_Pointer const & r) const;
     itkImageToImageFilterIUS3VIUL3_Pointer & operator=(itkImageToImageFilterIUS3VIUL3_Pointer const & r);
     itkImageToImageFilterIUS3VIUL3_Pointer & operator=(itkImageToImageFilterIUS3VIUL3 * r);
     itkImageToImageFilterIUS3VIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIUS3VIUS3 : public itkImageSourceVIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkImageUS3 const * image);
     itkImageUS3 const * GetInput();
     itkImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIUS3VIUS3(itkImageToImageFilterIUS3VIUS3 const & arg0);
     void operator=(itkImageToImageFilterIUS3VIUS3 const & arg0);
   protected:
     itkImageToImageFilterIUS3VIUS3();
     ~itkImageToImageFilterIUS3VIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIUS3VIUS3_Pointer {
   public:
     itkImageToImageFilterIUS3VIUS3_Pointer();
     itkImageToImageFilterIUS3VIUS3_Pointer(itkImageToImageFilterIUS3VIUS3_Pointer const & p);
     itkImageToImageFilterIUS3VIUS3_Pointer(itkImageToImageFilterIUS3VIUS3 * p);
     ~itkImageToImageFilterIUS3VIUS3_Pointer();
     itkImageToImageFilterIUS3VIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIUS3VIUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIUS3VIUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIUS3VIUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIUS3VIUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIUS3VIUS3_Pointer const & r) const;
     itkImageToImageFilterIUS3VIUS3_Pointer & operator=(itkImageToImageFilterIUS3VIUS3_Pointer const & r);
     itkImageToImageFilterIUS3VIUS3_Pointer & operator=(itkImageToImageFilterIUS3VIUS3 * r);
     itkImageToImageFilterIUS3VIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF22ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF22 const * image);
     itkImageVF22 const * GetInput();
     itkImageVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF22ID2(itkImageToImageFilterIVF22ID2 const & arg0);
     void operator=(itkImageToImageFilterIVF22ID2 const & arg0);
   protected:
     itkImageToImageFilterIVF22ID2();
     ~itkImageToImageFilterIVF22ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF22ID2_Pointer {
   public:
     itkImageToImageFilterIVF22ID2_Pointer();
     itkImageToImageFilterIVF22ID2_Pointer(itkImageToImageFilterIVF22ID2_Pointer const & p);
     itkImageToImageFilterIVF22ID2_Pointer(itkImageToImageFilterIVF22ID2 * p);
     ~itkImageToImageFilterIVF22ID2_Pointer();
     itkImageToImageFilterIVF22ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF22ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF22ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF22ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF22ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF22ID2_Pointer const & r) const;
     itkImageToImageFilterIVF22ID2_Pointer & operator=(itkImageToImageFilterIVF22ID2_Pointer const & r);
     itkImageToImageFilterIVF22ID2_Pointer & operator=(itkImageToImageFilterIVF22ID2 * r);
     itkImageToImageFilterIVF22ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF22IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF22 const * image);
     itkImageVF22 const * GetInput();
     itkImageVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF22IF2(itkImageToImageFilterIVF22IF2 const & arg0);
     void operator=(itkImageToImageFilterIVF22IF2 const & arg0);
   protected:
     itkImageToImageFilterIVF22IF2();
     ~itkImageToImageFilterIVF22IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF22IF2_Pointer {
   public:
     itkImageToImageFilterIVF22IF2_Pointer();
     itkImageToImageFilterIVF22IF2_Pointer(itkImageToImageFilterIVF22IF2_Pointer const & p);
     itkImageToImageFilterIVF22IF2_Pointer(itkImageToImageFilterIVF22IF2 * p);
     ~itkImageToImageFilterIVF22IF2_Pointer();
     itkImageToImageFilterIVF22IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF22IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF22IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF22IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF22IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF22IF2_Pointer const & r) const;
     itkImageToImageFilterIVF22IF2_Pointer & operator=(itkImageToImageFilterIVF22IF2_Pointer const & r);
     itkImageToImageFilterIVF22IF2_Pointer & operator=(itkImageToImageFilterIVF22IF2 * r);
     itkImageToImageFilterIVF22IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF22IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF22 const * image);
     itkImageVF22 const * GetInput();
     itkImageVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF22IUC2(itkImageToImageFilterIVF22IUC2 const & arg0);
     void operator=(itkImageToImageFilterIVF22IUC2 const & arg0);
   protected:
     itkImageToImageFilterIVF22IUC2();
     ~itkImageToImageFilterIVF22IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF22IUC2_Pointer {
   public:
     itkImageToImageFilterIVF22IUC2_Pointer();
     itkImageToImageFilterIVF22IUC2_Pointer(itkImageToImageFilterIVF22IUC2_Pointer const & p);
     itkImageToImageFilterIVF22IUC2_Pointer(itkImageToImageFilterIVF22IUC2 * p);
     ~itkImageToImageFilterIVF22IUC2_Pointer();
     itkImageToImageFilterIVF22IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF22IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF22IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF22IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF22IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF22IUC2_Pointer const & r) const;
     itkImageToImageFilterIVF22IUC2_Pointer & operator=(itkImageToImageFilterIVF22IUC2_Pointer const & r);
     itkImageToImageFilterIVF22IUC2_Pointer & operator=(itkImageToImageFilterIVF22IUC2 * r);
     itkImageToImageFilterIVF22IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF22IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF22 const * image);
     itkImageVF22 const * GetInput();
     itkImageVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF22IUL2(itkImageToImageFilterIVF22IUL2 const & arg0);
     void operator=(itkImageToImageFilterIVF22IUL2 const & arg0);
   protected:
     itkImageToImageFilterIVF22IUL2();
     ~itkImageToImageFilterIVF22IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF22IUL2_Pointer {
   public:
     itkImageToImageFilterIVF22IUL2_Pointer();
     itkImageToImageFilterIVF22IUL2_Pointer(itkImageToImageFilterIVF22IUL2_Pointer const & p);
     itkImageToImageFilterIVF22IUL2_Pointer(itkImageToImageFilterIVF22IUL2 * p);
     ~itkImageToImageFilterIVF22IUL2_Pointer();
     itkImageToImageFilterIVF22IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF22IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF22IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF22IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF22IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF22IUL2_Pointer const & r) const;
     itkImageToImageFilterIVF22IUL2_Pointer & operator=(itkImageToImageFilterIVF22IUL2_Pointer const & r);
     itkImageToImageFilterIVF22IUL2_Pointer & operator=(itkImageToImageFilterIVF22IUL2 * r);
     itkImageToImageFilterIVF22IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF22IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF22 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF22 const * image);
     itkImageVF22 const * GetInput();
     itkImageVF22 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF22 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF22 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF22IUS2(itkImageToImageFilterIVF22IUS2 const & arg0);
     void operator=(itkImageToImageFilterIVF22IUS2 const & arg0);
   protected:
     itkImageToImageFilterIVF22IUS2();
     ~itkImageToImageFilterIVF22IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF22IUS2_Pointer {
   public:
     itkImageToImageFilterIVF22IUS2_Pointer();
     itkImageToImageFilterIVF22IUS2_Pointer(itkImageToImageFilterIVF22IUS2_Pointer const & p);
     itkImageToImageFilterIVF22IUS2_Pointer(itkImageToImageFilterIVF22IUS2 * p);
     ~itkImageToImageFilterIVF22IUS2_Pointer();
     itkImageToImageFilterIVF22IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF22IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF22IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF22IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF22IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF22IUS2_Pointer const & r) const;
     itkImageToImageFilterIVF22IUS2_Pointer & operator=(itkImageToImageFilterIVF22IUS2_Pointer const & r);
     itkImageToImageFilterIVF22IUS2_Pointer & operator=(itkImageToImageFilterIVF22IUS2 * r);
     itkImageToImageFilterIVF22IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF33ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF33 const * image);
     itkImageVF33 const * GetInput();
     itkImageVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF33ID3(itkImageToImageFilterIVF33ID3 const & arg0);
     void operator=(itkImageToImageFilterIVF33ID3 const & arg0);
   protected:
     itkImageToImageFilterIVF33ID3();
     ~itkImageToImageFilterIVF33ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF33ID3_Pointer {
   public:
     itkImageToImageFilterIVF33ID3_Pointer();
     itkImageToImageFilterIVF33ID3_Pointer(itkImageToImageFilterIVF33ID3_Pointer const & p);
     itkImageToImageFilterIVF33ID3_Pointer(itkImageToImageFilterIVF33ID3 * p);
     ~itkImageToImageFilterIVF33ID3_Pointer();
     itkImageToImageFilterIVF33ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF33ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF33ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF33ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF33ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF33ID3_Pointer const & r) const;
     itkImageToImageFilterIVF33ID3_Pointer & operator=(itkImageToImageFilterIVF33ID3_Pointer const & r);
     itkImageToImageFilterIVF33ID3_Pointer & operator=(itkImageToImageFilterIVF33ID3 * r);
     itkImageToImageFilterIVF33ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF33IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF33 const * image);
     itkImageVF33 const * GetInput();
     itkImageVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF33IF3(itkImageToImageFilterIVF33IF3 const & arg0);
     void operator=(itkImageToImageFilterIVF33IF3 const & arg0);
   protected:
     itkImageToImageFilterIVF33IF3();
     ~itkImageToImageFilterIVF33IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF33IF3_Pointer {
   public:
     itkImageToImageFilterIVF33IF3_Pointer();
     itkImageToImageFilterIVF33IF3_Pointer(itkImageToImageFilterIVF33IF3_Pointer const & p);
     itkImageToImageFilterIVF33IF3_Pointer(itkImageToImageFilterIVF33IF3 * p);
     ~itkImageToImageFilterIVF33IF3_Pointer();
     itkImageToImageFilterIVF33IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF33IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF33IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF33IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF33IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF33IF3_Pointer const & r) const;
     itkImageToImageFilterIVF33IF3_Pointer & operator=(itkImageToImageFilterIVF33IF3_Pointer const & r);
     itkImageToImageFilterIVF33IF3_Pointer & operator=(itkImageToImageFilterIVF33IF3 * r);
     itkImageToImageFilterIVF33IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF33IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF33 const * image);
     itkImageVF33 const * GetInput();
     itkImageVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF33IUC3(itkImageToImageFilterIVF33IUC3 const & arg0);
     void operator=(itkImageToImageFilterIVF33IUC3 const & arg0);
   protected:
     itkImageToImageFilterIVF33IUC3();
     ~itkImageToImageFilterIVF33IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF33IUC3_Pointer {
   public:
     itkImageToImageFilterIVF33IUC3_Pointer();
     itkImageToImageFilterIVF33IUC3_Pointer(itkImageToImageFilterIVF33IUC3_Pointer const & p);
     itkImageToImageFilterIVF33IUC3_Pointer(itkImageToImageFilterIVF33IUC3 * p);
     ~itkImageToImageFilterIVF33IUC3_Pointer();
     itkImageToImageFilterIVF33IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF33IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF33IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF33IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF33IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF33IUC3_Pointer const & r) const;
     itkImageToImageFilterIVF33IUC3_Pointer & operator=(itkImageToImageFilterIVF33IUC3_Pointer const & r);
     itkImageToImageFilterIVF33IUC3_Pointer & operator=(itkImageToImageFilterIVF33IUC3 * r);
     itkImageToImageFilterIVF33IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF33IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF33 const * image);
     itkImageVF33 const * GetInput();
     itkImageVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF33IUL3(itkImageToImageFilterIVF33IUL3 const & arg0);
     void operator=(itkImageToImageFilterIVF33IUL3 const & arg0);
   protected:
     itkImageToImageFilterIVF33IUL3();
     ~itkImageToImageFilterIVF33IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF33IUL3_Pointer {
   public:
     itkImageToImageFilterIVF33IUL3_Pointer();
     itkImageToImageFilterIVF33IUL3_Pointer(itkImageToImageFilterIVF33IUL3_Pointer const & p);
     itkImageToImageFilterIVF33IUL3_Pointer(itkImageToImageFilterIVF33IUL3 * p);
     ~itkImageToImageFilterIVF33IUL3_Pointer();
     itkImageToImageFilterIVF33IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF33IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF33IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF33IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF33IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF33IUL3_Pointer const & r) const;
     itkImageToImageFilterIVF33IUL3_Pointer & operator=(itkImageToImageFilterIVF33IUL3_Pointer const & r);
     itkImageToImageFilterIVF33IUL3_Pointer & operator=(itkImageToImageFilterIVF33IUL3 * r);
     itkImageToImageFilterIVF33IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterIVF33IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkImageVF33 const * image);
     virtual void SetInput(unsigned int arg0, itkImageVF33 const * image);
     itkImageVF33 const * GetInput();
     itkImageVF33 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkImageVF33 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkImageVF33 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterIVF33IUS3(itkImageToImageFilterIVF33IUS3 const & arg0);
     void operator=(itkImageToImageFilterIVF33IUS3 const & arg0);
   protected:
     itkImageToImageFilterIVF33IUS3();
     ~itkImageToImageFilterIVF33IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterIVF33IUS3_Pointer {
   public:
     itkImageToImageFilterIVF33IUS3_Pointer();
     itkImageToImageFilterIVF33IUS3_Pointer(itkImageToImageFilterIVF33IUS3_Pointer const & p);
     itkImageToImageFilterIVF33IUS3_Pointer(itkImageToImageFilterIVF33IUS3 * p);
     ~itkImageToImageFilterIVF33IUS3_Pointer();
     itkImageToImageFilterIVF33IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterIVF33IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterIVF33IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterIVF33IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterIVF33IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterIVF33IUS3_Pointer const & r) const;
     itkImageToImageFilterIVF33IUS3_Pointer & operator=(itkImageToImageFilterIVF33IUS3_Pointer const & r);
     itkImageToImageFilterIVF33IUS3_Pointer & operator=(itkImageToImageFilterIVF33IUS3 * r);
     itkImageToImageFilterIVF33IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID2ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD2 const * image);
     itkVectorImageD2 const * GetInput();
     itkVectorImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID2ID2(itkImageToImageFilterVID2ID2 const & arg0);
     void operator=(itkImageToImageFilterVID2ID2 const & arg0);
   protected:
     itkImageToImageFilterVID2ID2();
     ~itkImageToImageFilterVID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID2ID2_Pointer {
   public:
     itkImageToImageFilterVID2ID2_Pointer();
     itkImageToImageFilterVID2ID2_Pointer(itkImageToImageFilterVID2ID2_Pointer const & p);
     itkImageToImageFilterVID2ID2_Pointer(itkImageToImageFilterVID2ID2 * p);
     ~itkImageToImageFilterVID2ID2_Pointer();
     itkImageToImageFilterVID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID2ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID2ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID2ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID2ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID2ID2_Pointer const & r) const;
     itkImageToImageFilterVID2ID2_Pointer & operator=(itkImageToImageFilterVID2ID2_Pointer const & r);
     itkImageToImageFilterVID2ID2_Pointer & operator=(itkImageToImageFilterVID2ID2 * r);
     itkImageToImageFilterVID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID2IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD2 const * image);
     itkVectorImageD2 const * GetInput();
     itkVectorImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID2IF2(itkImageToImageFilterVID2IF2 const & arg0);
     void operator=(itkImageToImageFilterVID2IF2 const & arg0);
   protected:
     itkImageToImageFilterVID2IF2();
     ~itkImageToImageFilterVID2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID2IF2_Pointer {
   public:
     itkImageToImageFilterVID2IF2_Pointer();
     itkImageToImageFilterVID2IF2_Pointer(itkImageToImageFilterVID2IF2_Pointer const & p);
     itkImageToImageFilterVID2IF2_Pointer(itkImageToImageFilterVID2IF2 * p);
     ~itkImageToImageFilterVID2IF2_Pointer();
     itkImageToImageFilterVID2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID2IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID2IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID2IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID2IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID2IF2_Pointer const & r) const;
     itkImageToImageFilterVID2IF2_Pointer & operator=(itkImageToImageFilterVID2IF2_Pointer const & r);
     itkImageToImageFilterVID2IF2_Pointer & operator=(itkImageToImageFilterVID2IF2 * r);
     itkImageToImageFilterVID2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID2IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD2 const * image);
     itkVectorImageD2 const * GetInput();
     itkVectorImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID2IUC2(itkImageToImageFilterVID2IUC2 const & arg0);
     void operator=(itkImageToImageFilterVID2IUC2 const & arg0);
   protected:
     itkImageToImageFilterVID2IUC2();
     ~itkImageToImageFilterVID2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID2IUC2_Pointer {
   public:
     itkImageToImageFilterVID2IUC2_Pointer();
     itkImageToImageFilterVID2IUC2_Pointer(itkImageToImageFilterVID2IUC2_Pointer const & p);
     itkImageToImageFilterVID2IUC2_Pointer(itkImageToImageFilterVID2IUC2 * p);
     ~itkImageToImageFilterVID2IUC2_Pointer();
     itkImageToImageFilterVID2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID2IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID2IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID2IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID2IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID2IUC2_Pointer const & r) const;
     itkImageToImageFilterVID2IUC2_Pointer & operator=(itkImageToImageFilterVID2IUC2_Pointer const & r);
     itkImageToImageFilterVID2IUC2_Pointer & operator=(itkImageToImageFilterVID2IUC2 * r);
     itkImageToImageFilterVID2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID2IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD2 const * image);
     itkVectorImageD2 const * GetInput();
     itkVectorImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID2IUL2(itkImageToImageFilterVID2IUL2 const & arg0);
     void operator=(itkImageToImageFilterVID2IUL2 const & arg0);
   protected:
     itkImageToImageFilterVID2IUL2();
     ~itkImageToImageFilterVID2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID2IUL2_Pointer {
   public:
     itkImageToImageFilterVID2IUL2_Pointer();
     itkImageToImageFilterVID2IUL2_Pointer(itkImageToImageFilterVID2IUL2_Pointer const & p);
     itkImageToImageFilterVID2IUL2_Pointer(itkImageToImageFilterVID2IUL2 * p);
     ~itkImageToImageFilterVID2IUL2_Pointer();
     itkImageToImageFilterVID2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID2IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID2IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID2IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID2IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID2IUL2_Pointer const & r) const;
     itkImageToImageFilterVID2IUL2_Pointer & operator=(itkImageToImageFilterVID2IUL2_Pointer const & r);
     itkImageToImageFilterVID2IUL2_Pointer & operator=(itkImageToImageFilterVID2IUL2 * r);
     itkImageToImageFilterVID2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID2IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD2 const * image);
     itkVectorImageD2 const * GetInput();
     itkVectorImageD2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID2IUS2(itkImageToImageFilterVID2IUS2 const & arg0);
     void operator=(itkImageToImageFilterVID2IUS2 const & arg0);
   protected:
     itkImageToImageFilterVID2IUS2();
     ~itkImageToImageFilterVID2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID2IUS2_Pointer {
   public:
     itkImageToImageFilterVID2IUS2_Pointer();
     itkImageToImageFilterVID2IUS2_Pointer(itkImageToImageFilterVID2IUS2_Pointer const & p);
     itkImageToImageFilterVID2IUS2_Pointer(itkImageToImageFilterVID2IUS2 * p);
     ~itkImageToImageFilterVID2IUS2_Pointer();
     itkImageToImageFilterVID2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID2IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID2IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID2IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID2IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID2IUS2_Pointer const & r) const;
     itkImageToImageFilterVID2IUS2_Pointer & operator=(itkImageToImageFilterVID2IUS2_Pointer const & r);
     itkImageToImageFilterVID2IUS2_Pointer & operator=(itkImageToImageFilterVID2IUS2 * r);
     itkImageToImageFilterVID2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID3ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD3 const * image);
     itkVectorImageD3 const * GetInput();
     itkVectorImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID3ID3(itkImageToImageFilterVID3ID3 const & arg0);
     void operator=(itkImageToImageFilterVID3ID3 const & arg0);
   protected:
     itkImageToImageFilterVID3ID3();
     ~itkImageToImageFilterVID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID3ID3_Pointer {
   public:
     itkImageToImageFilterVID3ID3_Pointer();
     itkImageToImageFilterVID3ID3_Pointer(itkImageToImageFilterVID3ID3_Pointer const & p);
     itkImageToImageFilterVID3ID3_Pointer(itkImageToImageFilterVID3ID3 * p);
     ~itkImageToImageFilterVID3ID3_Pointer();
     itkImageToImageFilterVID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID3ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID3ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID3ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID3ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID3ID3_Pointer const & r) const;
     itkImageToImageFilterVID3ID3_Pointer & operator=(itkImageToImageFilterVID3ID3_Pointer const & r);
     itkImageToImageFilterVID3ID3_Pointer & operator=(itkImageToImageFilterVID3ID3 * r);
     itkImageToImageFilterVID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID3IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD3 const * image);
     itkVectorImageD3 const * GetInput();
     itkVectorImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID3IF3(itkImageToImageFilterVID3IF3 const & arg0);
     void operator=(itkImageToImageFilterVID3IF3 const & arg0);
   protected:
     itkImageToImageFilterVID3IF3();
     ~itkImageToImageFilterVID3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID3IF3_Pointer {
   public:
     itkImageToImageFilterVID3IF3_Pointer();
     itkImageToImageFilterVID3IF3_Pointer(itkImageToImageFilterVID3IF3_Pointer const & p);
     itkImageToImageFilterVID3IF3_Pointer(itkImageToImageFilterVID3IF3 * p);
     ~itkImageToImageFilterVID3IF3_Pointer();
     itkImageToImageFilterVID3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID3IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID3IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID3IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID3IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID3IF3_Pointer const & r) const;
     itkImageToImageFilterVID3IF3_Pointer & operator=(itkImageToImageFilterVID3IF3_Pointer const & r);
     itkImageToImageFilterVID3IF3_Pointer & operator=(itkImageToImageFilterVID3IF3 * r);
     itkImageToImageFilterVID3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID3IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD3 const * image);
     itkVectorImageD3 const * GetInput();
     itkVectorImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID3IUC3(itkImageToImageFilterVID3IUC3 const & arg0);
     void operator=(itkImageToImageFilterVID3IUC3 const & arg0);
   protected:
     itkImageToImageFilterVID3IUC3();
     ~itkImageToImageFilterVID3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID3IUC3_Pointer {
   public:
     itkImageToImageFilterVID3IUC3_Pointer();
     itkImageToImageFilterVID3IUC3_Pointer(itkImageToImageFilterVID3IUC3_Pointer const & p);
     itkImageToImageFilterVID3IUC3_Pointer(itkImageToImageFilterVID3IUC3 * p);
     ~itkImageToImageFilterVID3IUC3_Pointer();
     itkImageToImageFilterVID3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID3IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID3IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID3IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID3IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID3IUC3_Pointer const & r) const;
     itkImageToImageFilterVID3IUC3_Pointer & operator=(itkImageToImageFilterVID3IUC3_Pointer const & r);
     itkImageToImageFilterVID3IUC3_Pointer & operator=(itkImageToImageFilterVID3IUC3 * r);
     itkImageToImageFilterVID3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID3IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD3 const * image);
     itkVectorImageD3 const * GetInput();
     itkVectorImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID3IUL3(itkImageToImageFilterVID3IUL3 const & arg0);
     void operator=(itkImageToImageFilterVID3IUL3 const & arg0);
   protected:
     itkImageToImageFilterVID3IUL3();
     ~itkImageToImageFilterVID3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID3IUL3_Pointer {
   public:
     itkImageToImageFilterVID3IUL3_Pointer();
     itkImageToImageFilterVID3IUL3_Pointer(itkImageToImageFilterVID3IUL3_Pointer const & p);
     itkImageToImageFilterVID3IUL3_Pointer(itkImageToImageFilterVID3IUL3 * p);
     ~itkImageToImageFilterVID3IUL3_Pointer();
     itkImageToImageFilterVID3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID3IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID3IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID3IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID3IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID3IUL3_Pointer const & r) const;
     itkImageToImageFilterVID3IUL3_Pointer & operator=(itkImageToImageFilterVID3IUL3_Pointer const & r);
     itkImageToImageFilterVID3IUL3_Pointer & operator=(itkImageToImageFilterVID3IUL3 * r);
     itkImageToImageFilterVID3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVID3IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageD3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageD3 const * image);
     itkVectorImageD3 const * GetInput();
     itkVectorImageD3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageD3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageD3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVID3IUS3(itkImageToImageFilterVID3IUS3 const & arg0);
     void operator=(itkImageToImageFilterVID3IUS3 const & arg0);
   protected:
     itkImageToImageFilterVID3IUS3();
     ~itkImageToImageFilterVID3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVID3IUS3_Pointer {
   public:
     itkImageToImageFilterVID3IUS3_Pointer();
     itkImageToImageFilterVID3IUS3_Pointer(itkImageToImageFilterVID3IUS3_Pointer const & p);
     itkImageToImageFilterVID3IUS3_Pointer(itkImageToImageFilterVID3IUS3 * p);
     ~itkImageToImageFilterVID3IUS3_Pointer();
     itkImageToImageFilterVID3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVID3IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVID3IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVID3IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVID3IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVID3IUS3_Pointer const & r) const;
     itkImageToImageFilterVID3IUS3_Pointer & operator=(itkImageToImageFilterVID3IUS3_Pointer const & r);
     itkImageToImageFilterVID3IUS3_Pointer & operator=(itkImageToImageFilterVID3IUS3 * r);
     itkImageToImageFilterVID3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF2ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF2 const * image);
     itkVectorImageF2 const * GetInput();
     itkVectorImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF2ID2(itkImageToImageFilterVIF2ID2 const & arg0);
     void operator=(itkImageToImageFilterVIF2ID2 const & arg0);
   protected:
     itkImageToImageFilterVIF2ID2();
     ~itkImageToImageFilterVIF2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF2ID2_Pointer {
   public:
     itkImageToImageFilterVIF2ID2_Pointer();
     itkImageToImageFilterVIF2ID2_Pointer(itkImageToImageFilterVIF2ID2_Pointer const & p);
     itkImageToImageFilterVIF2ID2_Pointer(itkImageToImageFilterVIF2ID2 * p);
     ~itkImageToImageFilterVIF2ID2_Pointer();
     itkImageToImageFilterVIF2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF2ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF2ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF2ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF2ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF2ID2_Pointer const & r) const;
     itkImageToImageFilterVIF2ID2_Pointer & operator=(itkImageToImageFilterVIF2ID2_Pointer const & r);
     itkImageToImageFilterVIF2ID2_Pointer & operator=(itkImageToImageFilterVIF2ID2 * r);
     itkImageToImageFilterVIF2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF2IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF2 const * image);
     itkVectorImageF2 const * GetInput();
     itkVectorImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF2IF2(itkImageToImageFilterVIF2IF2 const & arg0);
     void operator=(itkImageToImageFilterVIF2IF2 const & arg0);
   protected:
     itkImageToImageFilterVIF2IF2();
     ~itkImageToImageFilterVIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF2IF2_Pointer {
   public:
     itkImageToImageFilterVIF2IF2_Pointer();
     itkImageToImageFilterVIF2IF2_Pointer(itkImageToImageFilterVIF2IF2_Pointer const & p);
     itkImageToImageFilterVIF2IF2_Pointer(itkImageToImageFilterVIF2IF2 * p);
     ~itkImageToImageFilterVIF2IF2_Pointer();
     itkImageToImageFilterVIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF2IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF2IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF2IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF2IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF2IF2_Pointer const & r) const;
     itkImageToImageFilterVIF2IF2_Pointer & operator=(itkImageToImageFilterVIF2IF2_Pointer const & r);
     itkImageToImageFilterVIF2IF2_Pointer & operator=(itkImageToImageFilterVIF2IF2 * r);
     itkImageToImageFilterVIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF2IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF2 const * image);
     itkVectorImageF2 const * GetInput();
     itkVectorImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF2IUC2(itkImageToImageFilterVIF2IUC2 const & arg0);
     void operator=(itkImageToImageFilterVIF2IUC2 const & arg0);
   protected:
     itkImageToImageFilterVIF2IUC2();
     ~itkImageToImageFilterVIF2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF2IUC2_Pointer {
   public:
     itkImageToImageFilterVIF2IUC2_Pointer();
     itkImageToImageFilterVIF2IUC2_Pointer(itkImageToImageFilterVIF2IUC2_Pointer const & p);
     itkImageToImageFilterVIF2IUC2_Pointer(itkImageToImageFilterVIF2IUC2 * p);
     ~itkImageToImageFilterVIF2IUC2_Pointer();
     itkImageToImageFilterVIF2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF2IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF2IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF2IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF2IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF2IUC2_Pointer const & r) const;
     itkImageToImageFilterVIF2IUC2_Pointer & operator=(itkImageToImageFilterVIF2IUC2_Pointer const & r);
     itkImageToImageFilterVIF2IUC2_Pointer & operator=(itkImageToImageFilterVIF2IUC2 * r);
     itkImageToImageFilterVIF2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF2IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF2 const * image);
     itkVectorImageF2 const * GetInput();
     itkVectorImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF2IUL2(itkImageToImageFilterVIF2IUL2 const & arg0);
     void operator=(itkImageToImageFilterVIF2IUL2 const & arg0);
   protected:
     itkImageToImageFilterVIF2IUL2();
     ~itkImageToImageFilterVIF2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF2IUL2_Pointer {
   public:
     itkImageToImageFilterVIF2IUL2_Pointer();
     itkImageToImageFilterVIF2IUL2_Pointer(itkImageToImageFilterVIF2IUL2_Pointer const & p);
     itkImageToImageFilterVIF2IUL2_Pointer(itkImageToImageFilterVIF2IUL2 * p);
     ~itkImageToImageFilterVIF2IUL2_Pointer();
     itkImageToImageFilterVIF2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF2IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF2IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF2IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF2IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF2IUL2_Pointer const & r) const;
     itkImageToImageFilterVIF2IUL2_Pointer & operator=(itkImageToImageFilterVIF2IUL2_Pointer const & r);
     itkImageToImageFilterVIF2IUL2_Pointer & operator=(itkImageToImageFilterVIF2IUL2 * r);
     itkImageToImageFilterVIF2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF2IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF2 const * image);
     itkVectorImageF2 const * GetInput();
     itkVectorImageF2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF2IUS2(itkImageToImageFilterVIF2IUS2 const & arg0);
     void operator=(itkImageToImageFilterVIF2IUS2 const & arg0);
   protected:
     itkImageToImageFilterVIF2IUS2();
     ~itkImageToImageFilterVIF2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF2IUS2_Pointer {
   public:
     itkImageToImageFilterVIF2IUS2_Pointer();
     itkImageToImageFilterVIF2IUS2_Pointer(itkImageToImageFilterVIF2IUS2_Pointer const & p);
     itkImageToImageFilterVIF2IUS2_Pointer(itkImageToImageFilterVIF2IUS2 * p);
     ~itkImageToImageFilterVIF2IUS2_Pointer();
     itkImageToImageFilterVIF2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF2IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF2IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF2IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF2IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF2IUS2_Pointer const & r) const;
     itkImageToImageFilterVIF2IUS2_Pointer & operator=(itkImageToImageFilterVIF2IUS2_Pointer const & r);
     itkImageToImageFilterVIF2IUS2_Pointer & operator=(itkImageToImageFilterVIF2IUS2 * r);
     itkImageToImageFilterVIF2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF3ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF3 const * image);
     itkVectorImageF3 const * GetInput();
     itkVectorImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF3ID3(itkImageToImageFilterVIF3ID3 const & arg0);
     void operator=(itkImageToImageFilterVIF3ID3 const & arg0);
   protected:
     itkImageToImageFilterVIF3ID3();
     ~itkImageToImageFilterVIF3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF3ID3_Pointer {
   public:
     itkImageToImageFilterVIF3ID3_Pointer();
     itkImageToImageFilterVIF3ID3_Pointer(itkImageToImageFilterVIF3ID3_Pointer const & p);
     itkImageToImageFilterVIF3ID3_Pointer(itkImageToImageFilterVIF3ID3 * p);
     ~itkImageToImageFilterVIF3ID3_Pointer();
     itkImageToImageFilterVIF3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF3ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF3ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF3ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF3ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF3ID3_Pointer const & r) const;
     itkImageToImageFilterVIF3ID3_Pointer & operator=(itkImageToImageFilterVIF3ID3_Pointer const & r);
     itkImageToImageFilterVIF3ID3_Pointer & operator=(itkImageToImageFilterVIF3ID3 * r);
     itkImageToImageFilterVIF3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF3IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF3 const * image);
     itkVectorImageF3 const * GetInput();
     itkVectorImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF3IF3(itkImageToImageFilterVIF3IF3 const & arg0);
     void operator=(itkImageToImageFilterVIF3IF3 const & arg0);
   protected:
     itkImageToImageFilterVIF3IF3();
     ~itkImageToImageFilterVIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF3IF3_Pointer {
   public:
     itkImageToImageFilterVIF3IF3_Pointer();
     itkImageToImageFilterVIF3IF3_Pointer(itkImageToImageFilterVIF3IF3_Pointer const & p);
     itkImageToImageFilterVIF3IF3_Pointer(itkImageToImageFilterVIF3IF3 * p);
     ~itkImageToImageFilterVIF3IF3_Pointer();
     itkImageToImageFilterVIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF3IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF3IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF3IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF3IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF3IF3_Pointer const & r) const;
     itkImageToImageFilterVIF3IF3_Pointer & operator=(itkImageToImageFilterVIF3IF3_Pointer const & r);
     itkImageToImageFilterVIF3IF3_Pointer & operator=(itkImageToImageFilterVIF3IF3 * r);
     itkImageToImageFilterVIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF3IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF3 const * image);
     itkVectorImageF3 const * GetInput();
     itkVectorImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF3IUC3(itkImageToImageFilterVIF3IUC3 const & arg0);
     void operator=(itkImageToImageFilterVIF3IUC3 const & arg0);
   protected:
     itkImageToImageFilterVIF3IUC3();
     ~itkImageToImageFilterVIF3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF3IUC3_Pointer {
   public:
     itkImageToImageFilterVIF3IUC3_Pointer();
     itkImageToImageFilterVIF3IUC3_Pointer(itkImageToImageFilterVIF3IUC3_Pointer const & p);
     itkImageToImageFilterVIF3IUC3_Pointer(itkImageToImageFilterVIF3IUC3 * p);
     ~itkImageToImageFilterVIF3IUC3_Pointer();
     itkImageToImageFilterVIF3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF3IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF3IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF3IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF3IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF3IUC3_Pointer const & r) const;
     itkImageToImageFilterVIF3IUC3_Pointer & operator=(itkImageToImageFilterVIF3IUC3_Pointer const & r);
     itkImageToImageFilterVIF3IUC3_Pointer & operator=(itkImageToImageFilterVIF3IUC3 * r);
     itkImageToImageFilterVIF3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF3IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF3 const * image);
     itkVectorImageF3 const * GetInput();
     itkVectorImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF3IUL3(itkImageToImageFilterVIF3IUL3 const & arg0);
     void operator=(itkImageToImageFilterVIF3IUL3 const & arg0);
   protected:
     itkImageToImageFilterVIF3IUL3();
     ~itkImageToImageFilterVIF3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF3IUL3_Pointer {
   public:
     itkImageToImageFilterVIF3IUL3_Pointer();
     itkImageToImageFilterVIF3IUL3_Pointer(itkImageToImageFilterVIF3IUL3_Pointer const & p);
     itkImageToImageFilterVIF3IUL3_Pointer(itkImageToImageFilterVIF3IUL3 * p);
     ~itkImageToImageFilterVIF3IUL3_Pointer();
     itkImageToImageFilterVIF3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF3IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF3IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF3IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF3IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF3IUL3_Pointer const & r) const;
     itkImageToImageFilterVIF3IUL3_Pointer & operator=(itkImageToImageFilterVIF3IUL3_Pointer const & r);
     itkImageToImageFilterVIF3IUL3_Pointer & operator=(itkImageToImageFilterVIF3IUL3 * r);
     itkImageToImageFilterVIF3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIF3IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageF3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageF3 const * image);
     itkVectorImageF3 const * GetInput();
     itkVectorImageF3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageF3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageF3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIF3IUS3(itkImageToImageFilterVIF3IUS3 const & arg0);
     void operator=(itkImageToImageFilterVIF3IUS3 const & arg0);
   protected:
     itkImageToImageFilterVIF3IUS3();
     ~itkImageToImageFilterVIF3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIF3IUS3_Pointer {
   public:
     itkImageToImageFilterVIF3IUS3_Pointer();
     itkImageToImageFilterVIF3IUS3_Pointer(itkImageToImageFilterVIF3IUS3_Pointer const & p);
     itkImageToImageFilterVIF3IUS3_Pointer(itkImageToImageFilterVIF3IUS3 * p);
     ~itkImageToImageFilterVIF3IUS3_Pointer();
     itkImageToImageFilterVIF3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIF3IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIF3IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIF3IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIF3IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIF3IUS3_Pointer const & r) const;
     itkImageToImageFilterVIF3IUS3_Pointer & operator=(itkImageToImageFilterVIF3IUS3_Pointer const & r);
     itkImageToImageFilterVIF3IUS3_Pointer & operator=(itkImageToImageFilterVIF3IUS3 * r);
     itkImageToImageFilterVIF3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC2ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC2 const * image);
     itkVectorImageUC2 const * GetInput();
     itkVectorImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC2ID2(itkImageToImageFilterVIUC2ID2 const & arg0);
     void operator=(itkImageToImageFilterVIUC2ID2 const & arg0);
   protected:
     itkImageToImageFilterVIUC2ID2();
     ~itkImageToImageFilterVIUC2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC2ID2_Pointer {
   public:
     itkImageToImageFilterVIUC2ID2_Pointer();
     itkImageToImageFilterVIUC2ID2_Pointer(itkImageToImageFilterVIUC2ID2_Pointer const & p);
     itkImageToImageFilterVIUC2ID2_Pointer(itkImageToImageFilterVIUC2ID2 * p);
     ~itkImageToImageFilterVIUC2ID2_Pointer();
     itkImageToImageFilterVIUC2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC2ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC2ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC2ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC2ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC2ID2_Pointer const & r) const;
     itkImageToImageFilterVIUC2ID2_Pointer & operator=(itkImageToImageFilterVIUC2ID2_Pointer const & r);
     itkImageToImageFilterVIUC2ID2_Pointer & operator=(itkImageToImageFilterVIUC2ID2 * r);
     itkImageToImageFilterVIUC2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC2IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC2 const * image);
     itkVectorImageUC2 const * GetInput();
     itkVectorImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC2IF2(itkImageToImageFilterVIUC2IF2 const & arg0);
     void operator=(itkImageToImageFilterVIUC2IF2 const & arg0);
   protected:
     itkImageToImageFilterVIUC2IF2();
     ~itkImageToImageFilterVIUC2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC2IF2_Pointer {
   public:
     itkImageToImageFilterVIUC2IF2_Pointer();
     itkImageToImageFilterVIUC2IF2_Pointer(itkImageToImageFilterVIUC2IF2_Pointer const & p);
     itkImageToImageFilterVIUC2IF2_Pointer(itkImageToImageFilterVIUC2IF2 * p);
     ~itkImageToImageFilterVIUC2IF2_Pointer();
     itkImageToImageFilterVIUC2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC2IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC2IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC2IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC2IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC2IF2_Pointer const & r) const;
     itkImageToImageFilterVIUC2IF2_Pointer & operator=(itkImageToImageFilterVIUC2IF2_Pointer const & r);
     itkImageToImageFilterVIUC2IF2_Pointer & operator=(itkImageToImageFilterVIUC2IF2 * r);
     itkImageToImageFilterVIUC2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC2IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC2 const * image);
     itkVectorImageUC2 const * GetInput();
     itkVectorImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC2IUC2(itkImageToImageFilterVIUC2IUC2 const & arg0);
     void operator=(itkImageToImageFilterVIUC2IUC2 const & arg0);
   protected:
     itkImageToImageFilterVIUC2IUC2();
     ~itkImageToImageFilterVIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC2IUC2_Pointer {
   public:
     itkImageToImageFilterVIUC2IUC2_Pointer();
     itkImageToImageFilterVIUC2IUC2_Pointer(itkImageToImageFilterVIUC2IUC2_Pointer const & p);
     itkImageToImageFilterVIUC2IUC2_Pointer(itkImageToImageFilterVIUC2IUC2 * p);
     ~itkImageToImageFilterVIUC2IUC2_Pointer();
     itkImageToImageFilterVIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC2IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC2IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC2IUC2_Pointer const & r) const;
     itkImageToImageFilterVIUC2IUC2_Pointer & operator=(itkImageToImageFilterVIUC2IUC2_Pointer const & r);
     itkImageToImageFilterVIUC2IUC2_Pointer & operator=(itkImageToImageFilterVIUC2IUC2 * r);
     itkImageToImageFilterVIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC2IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC2 const * image);
     itkVectorImageUC2 const * GetInput();
     itkVectorImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC2IUL2(itkImageToImageFilterVIUC2IUL2 const & arg0);
     void operator=(itkImageToImageFilterVIUC2IUL2 const & arg0);
   protected:
     itkImageToImageFilterVIUC2IUL2();
     ~itkImageToImageFilterVIUC2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC2IUL2_Pointer {
   public:
     itkImageToImageFilterVIUC2IUL2_Pointer();
     itkImageToImageFilterVIUC2IUL2_Pointer(itkImageToImageFilterVIUC2IUL2_Pointer const & p);
     itkImageToImageFilterVIUC2IUL2_Pointer(itkImageToImageFilterVIUC2IUL2 * p);
     ~itkImageToImageFilterVIUC2IUL2_Pointer();
     itkImageToImageFilterVIUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC2IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC2IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC2IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC2IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC2IUL2_Pointer const & r) const;
     itkImageToImageFilterVIUC2IUL2_Pointer & operator=(itkImageToImageFilterVIUC2IUL2_Pointer const & r);
     itkImageToImageFilterVIUC2IUL2_Pointer & operator=(itkImageToImageFilterVIUC2IUL2 * r);
     itkImageToImageFilterVIUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC2IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC2 const * image);
     itkVectorImageUC2 const * GetInput();
     itkVectorImageUC2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC2IUS2(itkImageToImageFilterVIUC2IUS2 const & arg0);
     void operator=(itkImageToImageFilterVIUC2IUS2 const & arg0);
   protected:
     itkImageToImageFilterVIUC2IUS2();
     ~itkImageToImageFilterVIUC2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC2IUS2_Pointer {
   public:
     itkImageToImageFilterVIUC2IUS2_Pointer();
     itkImageToImageFilterVIUC2IUS2_Pointer(itkImageToImageFilterVIUC2IUS2_Pointer const & p);
     itkImageToImageFilterVIUC2IUS2_Pointer(itkImageToImageFilterVIUC2IUS2 * p);
     ~itkImageToImageFilterVIUC2IUS2_Pointer();
     itkImageToImageFilterVIUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC2IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC2IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC2IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC2IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC2IUS2_Pointer const & r) const;
     itkImageToImageFilterVIUC2IUS2_Pointer & operator=(itkImageToImageFilterVIUC2IUS2_Pointer const & r);
     itkImageToImageFilterVIUC2IUS2_Pointer & operator=(itkImageToImageFilterVIUC2IUS2 * r);
     itkImageToImageFilterVIUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC3ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC3 const * image);
     itkVectorImageUC3 const * GetInput();
     itkVectorImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC3ID3(itkImageToImageFilterVIUC3ID3 const & arg0);
     void operator=(itkImageToImageFilterVIUC3ID3 const & arg0);
   protected:
     itkImageToImageFilterVIUC3ID3();
     ~itkImageToImageFilterVIUC3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC3ID3_Pointer {
   public:
     itkImageToImageFilterVIUC3ID3_Pointer();
     itkImageToImageFilterVIUC3ID3_Pointer(itkImageToImageFilterVIUC3ID3_Pointer const & p);
     itkImageToImageFilterVIUC3ID3_Pointer(itkImageToImageFilterVIUC3ID3 * p);
     ~itkImageToImageFilterVIUC3ID3_Pointer();
     itkImageToImageFilterVIUC3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC3ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC3ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC3ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC3ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC3ID3_Pointer const & r) const;
     itkImageToImageFilterVIUC3ID3_Pointer & operator=(itkImageToImageFilterVIUC3ID3_Pointer const & r);
     itkImageToImageFilterVIUC3ID3_Pointer & operator=(itkImageToImageFilterVIUC3ID3 * r);
     itkImageToImageFilterVIUC3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC3IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC3 const * image);
     itkVectorImageUC3 const * GetInput();
     itkVectorImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC3IF3(itkImageToImageFilterVIUC3IF3 const & arg0);
     void operator=(itkImageToImageFilterVIUC3IF3 const & arg0);
   protected:
     itkImageToImageFilterVIUC3IF3();
     ~itkImageToImageFilterVIUC3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC3IF3_Pointer {
   public:
     itkImageToImageFilterVIUC3IF3_Pointer();
     itkImageToImageFilterVIUC3IF3_Pointer(itkImageToImageFilterVIUC3IF3_Pointer const & p);
     itkImageToImageFilterVIUC3IF3_Pointer(itkImageToImageFilterVIUC3IF3 * p);
     ~itkImageToImageFilterVIUC3IF3_Pointer();
     itkImageToImageFilterVIUC3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC3IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC3IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC3IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC3IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC3IF3_Pointer const & r) const;
     itkImageToImageFilterVIUC3IF3_Pointer & operator=(itkImageToImageFilterVIUC3IF3_Pointer const & r);
     itkImageToImageFilterVIUC3IF3_Pointer & operator=(itkImageToImageFilterVIUC3IF3 * r);
     itkImageToImageFilterVIUC3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC3IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC3 const * image);
     itkVectorImageUC3 const * GetInput();
     itkVectorImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC3IUC3(itkImageToImageFilterVIUC3IUC3 const & arg0);
     void operator=(itkImageToImageFilterVIUC3IUC3 const & arg0);
   protected:
     itkImageToImageFilterVIUC3IUC3();
     ~itkImageToImageFilterVIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC3IUC3_Pointer {
   public:
     itkImageToImageFilterVIUC3IUC3_Pointer();
     itkImageToImageFilterVIUC3IUC3_Pointer(itkImageToImageFilterVIUC3IUC3_Pointer const & p);
     itkImageToImageFilterVIUC3IUC3_Pointer(itkImageToImageFilterVIUC3IUC3 * p);
     ~itkImageToImageFilterVIUC3IUC3_Pointer();
     itkImageToImageFilterVIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC3IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC3IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC3IUC3_Pointer const & r) const;
     itkImageToImageFilterVIUC3IUC3_Pointer & operator=(itkImageToImageFilterVIUC3IUC3_Pointer const & r);
     itkImageToImageFilterVIUC3IUC3_Pointer & operator=(itkImageToImageFilterVIUC3IUC3 * r);
     itkImageToImageFilterVIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC3IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC3 const * image);
     itkVectorImageUC3 const * GetInput();
     itkVectorImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC3IUL3(itkImageToImageFilterVIUC3IUL3 const & arg0);
     void operator=(itkImageToImageFilterVIUC3IUL3 const & arg0);
   protected:
     itkImageToImageFilterVIUC3IUL3();
     ~itkImageToImageFilterVIUC3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC3IUL3_Pointer {
   public:
     itkImageToImageFilterVIUC3IUL3_Pointer();
     itkImageToImageFilterVIUC3IUL3_Pointer(itkImageToImageFilterVIUC3IUL3_Pointer const & p);
     itkImageToImageFilterVIUC3IUL3_Pointer(itkImageToImageFilterVIUC3IUL3 * p);
     ~itkImageToImageFilterVIUC3IUL3_Pointer();
     itkImageToImageFilterVIUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC3IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC3IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC3IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC3IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC3IUL3_Pointer const & r) const;
     itkImageToImageFilterVIUC3IUL3_Pointer & operator=(itkImageToImageFilterVIUC3IUL3_Pointer const & r);
     itkImageToImageFilterVIUC3IUL3_Pointer & operator=(itkImageToImageFilterVIUC3IUL3 * r);
     itkImageToImageFilterVIUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUC3IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUC3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUC3 const * image);
     itkVectorImageUC3 const * GetInput();
     itkVectorImageUC3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUC3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUC3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUC3IUS3(itkImageToImageFilterVIUC3IUS3 const & arg0);
     void operator=(itkImageToImageFilterVIUC3IUS3 const & arg0);
   protected:
     itkImageToImageFilterVIUC3IUS3();
     ~itkImageToImageFilterVIUC3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUC3IUS3_Pointer {
   public:
     itkImageToImageFilterVIUC3IUS3_Pointer();
     itkImageToImageFilterVIUC3IUS3_Pointer(itkImageToImageFilterVIUC3IUS3_Pointer const & p);
     itkImageToImageFilterVIUC3IUS3_Pointer(itkImageToImageFilterVIUC3IUS3 * p);
     ~itkImageToImageFilterVIUC3IUS3_Pointer();
     itkImageToImageFilterVIUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUC3IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUC3IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUC3IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUC3IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUC3IUS3_Pointer const & r) const;
     itkImageToImageFilterVIUC3IUS3_Pointer & operator=(itkImageToImageFilterVIUC3IUS3_Pointer const & r);
     itkImageToImageFilterVIUC3IUS3_Pointer & operator=(itkImageToImageFilterVIUC3IUS3 * r);
     itkImageToImageFilterVIUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL2ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL2 const * image);
     itkVectorImageUL2 const * GetInput();
     itkVectorImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL2ID2(itkImageToImageFilterVIUL2ID2 const & arg0);
     void operator=(itkImageToImageFilterVIUL2ID2 const & arg0);
   protected:
     itkImageToImageFilterVIUL2ID2();
     ~itkImageToImageFilterVIUL2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL2ID2_Pointer {
   public:
     itkImageToImageFilterVIUL2ID2_Pointer();
     itkImageToImageFilterVIUL2ID2_Pointer(itkImageToImageFilterVIUL2ID2_Pointer const & p);
     itkImageToImageFilterVIUL2ID2_Pointer(itkImageToImageFilterVIUL2ID2 * p);
     ~itkImageToImageFilterVIUL2ID2_Pointer();
     itkImageToImageFilterVIUL2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL2ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL2ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL2ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL2ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL2ID2_Pointer const & r) const;
     itkImageToImageFilterVIUL2ID2_Pointer & operator=(itkImageToImageFilterVIUL2ID2_Pointer const & r);
     itkImageToImageFilterVIUL2ID2_Pointer & operator=(itkImageToImageFilterVIUL2ID2 * r);
     itkImageToImageFilterVIUL2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL2IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL2 const * image);
     itkVectorImageUL2 const * GetInput();
     itkVectorImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL2IF2(itkImageToImageFilterVIUL2IF2 const & arg0);
     void operator=(itkImageToImageFilterVIUL2IF2 const & arg0);
   protected:
     itkImageToImageFilterVIUL2IF2();
     ~itkImageToImageFilterVIUL2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL2IF2_Pointer {
   public:
     itkImageToImageFilterVIUL2IF2_Pointer();
     itkImageToImageFilterVIUL2IF2_Pointer(itkImageToImageFilterVIUL2IF2_Pointer const & p);
     itkImageToImageFilterVIUL2IF2_Pointer(itkImageToImageFilterVIUL2IF2 * p);
     ~itkImageToImageFilterVIUL2IF2_Pointer();
     itkImageToImageFilterVIUL2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL2IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL2IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL2IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL2IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL2IF2_Pointer const & r) const;
     itkImageToImageFilterVIUL2IF2_Pointer & operator=(itkImageToImageFilterVIUL2IF2_Pointer const & r);
     itkImageToImageFilterVIUL2IF2_Pointer & operator=(itkImageToImageFilterVIUL2IF2 * r);
     itkImageToImageFilterVIUL2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL2IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL2 const * image);
     itkVectorImageUL2 const * GetInput();
     itkVectorImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL2IUC2(itkImageToImageFilterVIUL2IUC2 const & arg0);
     void operator=(itkImageToImageFilterVIUL2IUC2 const & arg0);
   protected:
     itkImageToImageFilterVIUL2IUC2();
     ~itkImageToImageFilterVIUL2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL2IUC2_Pointer {
   public:
     itkImageToImageFilterVIUL2IUC2_Pointer();
     itkImageToImageFilterVIUL2IUC2_Pointer(itkImageToImageFilterVIUL2IUC2_Pointer const & p);
     itkImageToImageFilterVIUL2IUC2_Pointer(itkImageToImageFilterVIUL2IUC2 * p);
     ~itkImageToImageFilterVIUL2IUC2_Pointer();
     itkImageToImageFilterVIUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL2IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL2IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL2IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL2IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL2IUC2_Pointer const & r) const;
     itkImageToImageFilterVIUL2IUC2_Pointer & operator=(itkImageToImageFilterVIUL2IUC2_Pointer const & r);
     itkImageToImageFilterVIUL2IUC2_Pointer & operator=(itkImageToImageFilterVIUL2IUC2 * r);
     itkImageToImageFilterVIUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL2IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL2 const * image);
     itkVectorImageUL2 const * GetInput();
     itkVectorImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL2IUL2(itkImageToImageFilterVIUL2IUL2 const & arg0);
     void operator=(itkImageToImageFilterVIUL2IUL2 const & arg0);
   protected:
     itkImageToImageFilterVIUL2IUL2();
     ~itkImageToImageFilterVIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL2IUL2_Pointer {
   public:
     itkImageToImageFilterVIUL2IUL2_Pointer();
     itkImageToImageFilterVIUL2IUL2_Pointer(itkImageToImageFilterVIUL2IUL2_Pointer const & p);
     itkImageToImageFilterVIUL2IUL2_Pointer(itkImageToImageFilterVIUL2IUL2 * p);
     ~itkImageToImageFilterVIUL2IUL2_Pointer();
     itkImageToImageFilterVIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL2IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL2IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL2IUL2_Pointer const & r) const;
     itkImageToImageFilterVIUL2IUL2_Pointer & operator=(itkImageToImageFilterVIUL2IUL2_Pointer const & r);
     itkImageToImageFilterVIUL2IUL2_Pointer & operator=(itkImageToImageFilterVIUL2IUL2 * r);
     itkImageToImageFilterVIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL2IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL2 const * image);
     itkVectorImageUL2 const * GetInput();
     itkVectorImageUL2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL2IUS2(itkImageToImageFilterVIUL2IUS2 const & arg0);
     void operator=(itkImageToImageFilterVIUL2IUS2 const & arg0);
   protected:
     itkImageToImageFilterVIUL2IUS2();
     ~itkImageToImageFilterVIUL2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL2IUS2_Pointer {
   public:
     itkImageToImageFilterVIUL2IUS2_Pointer();
     itkImageToImageFilterVIUL2IUS2_Pointer(itkImageToImageFilterVIUL2IUS2_Pointer const & p);
     itkImageToImageFilterVIUL2IUS2_Pointer(itkImageToImageFilterVIUL2IUS2 * p);
     ~itkImageToImageFilterVIUL2IUS2_Pointer();
     itkImageToImageFilterVIUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL2IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL2IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL2IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL2IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL2IUS2_Pointer const & r) const;
     itkImageToImageFilterVIUL2IUS2_Pointer & operator=(itkImageToImageFilterVIUL2IUS2_Pointer const & r);
     itkImageToImageFilterVIUL2IUS2_Pointer & operator=(itkImageToImageFilterVIUL2IUS2 * r);
     itkImageToImageFilterVIUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL3ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL3 const * image);
     itkVectorImageUL3 const * GetInput();
     itkVectorImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL3ID3(itkImageToImageFilterVIUL3ID3 const & arg0);
     void operator=(itkImageToImageFilterVIUL3ID3 const & arg0);
   protected:
     itkImageToImageFilterVIUL3ID3();
     ~itkImageToImageFilterVIUL3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL3ID3_Pointer {
   public:
     itkImageToImageFilterVIUL3ID3_Pointer();
     itkImageToImageFilterVIUL3ID3_Pointer(itkImageToImageFilterVIUL3ID3_Pointer const & p);
     itkImageToImageFilterVIUL3ID3_Pointer(itkImageToImageFilterVIUL3ID3 * p);
     ~itkImageToImageFilterVIUL3ID3_Pointer();
     itkImageToImageFilterVIUL3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL3ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL3ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL3ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL3ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL3ID3_Pointer const & r) const;
     itkImageToImageFilterVIUL3ID3_Pointer & operator=(itkImageToImageFilterVIUL3ID3_Pointer const & r);
     itkImageToImageFilterVIUL3ID3_Pointer & operator=(itkImageToImageFilterVIUL3ID3 * r);
     itkImageToImageFilterVIUL3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL3IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL3 const * image);
     itkVectorImageUL3 const * GetInput();
     itkVectorImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL3IF3(itkImageToImageFilterVIUL3IF3 const & arg0);
     void operator=(itkImageToImageFilterVIUL3IF3 const & arg0);
   protected:
     itkImageToImageFilterVIUL3IF3();
     ~itkImageToImageFilterVIUL3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL3IF3_Pointer {
   public:
     itkImageToImageFilterVIUL3IF3_Pointer();
     itkImageToImageFilterVIUL3IF3_Pointer(itkImageToImageFilterVIUL3IF3_Pointer const & p);
     itkImageToImageFilterVIUL3IF3_Pointer(itkImageToImageFilterVIUL3IF3 * p);
     ~itkImageToImageFilterVIUL3IF3_Pointer();
     itkImageToImageFilterVIUL3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL3IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL3IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL3IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL3IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL3IF3_Pointer const & r) const;
     itkImageToImageFilterVIUL3IF3_Pointer & operator=(itkImageToImageFilterVIUL3IF3_Pointer const & r);
     itkImageToImageFilterVIUL3IF3_Pointer & operator=(itkImageToImageFilterVIUL3IF3 * r);
     itkImageToImageFilterVIUL3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL3IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL3 const * image);
     itkVectorImageUL3 const * GetInput();
     itkVectorImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL3IUC3(itkImageToImageFilterVIUL3IUC3 const & arg0);
     void operator=(itkImageToImageFilterVIUL3IUC3 const & arg0);
   protected:
     itkImageToImageFilterVIUL3IUC3();
     ~itkImageToImageFilterVIUL3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL3IUC3_Pointer {
   public:
     itkImageToImageFilterVIUL3IUC3_Pointer();
     itkImageToImageFilterVIUL3IUC3_Pointer(itkImageToImageFilterVIUL3IUC3_Pointer const & p);
     itkImageToImageFilterVIUL3IUC3_Pointer(itkImageToImageFilterVIUL3IUC3 * p);
     ~itkImageToImageFilterVIUL3IUC3_Pointer();
     itkImageToImageFilterVIUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL3IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL3IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL3IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL3IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL3IUC3_Pointer const & r) const;
     itkImageToImageFilterVIUL3IUC3_Pointer & operator=(itkImageToImageFilterVIUL3IUC3_Pointer const & r);
     itkImageToImageFilterVIUL3IUC3_Pointer & operator=(itkImageToImageFilterVIUL3IUC3 * r);
     itkImageToImageFilterVIUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL3IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL3 const * image);
     itkVectorImageUL3 const * GetInput();
     itkVectorImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL3IUL3(itkImageToImageFilterVIUL3IUL3 const & arg0);
     void operator=(itkImageToImageFilterVIUL3IUL3 const & arg0);
   protected:
     itkImageToImageFilterVIUL3IUL3();
     ~itkImageToImageFilterVIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL3IUL3_Pointer {
   public:
     itkImageToImageFilterVIUL3IUL3_Pointer();
     itkImageToImageFilterVIUL3IUL3_Pointer(itkImageToImageFilterVIUL3IUL3_Pointer const & p);
     itkImageToImageFilterVIUL3IUL3_Pointer(itkImageToImageFilterVIUL3IUL3 * p);
     ~itkImageToImageFilterVIUL3IUL3_Pointer();
     itkImageToImageFilterVIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL3IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL3IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL3IUL3_Pointer const & r) const;
     itkImageToImageFilterVIUL3IUL3_Pointer & operator=(itkImageToImageFilterVIUL3IUL3_Pointer const & r);
     itkImageToImageFilterVIUL3IUL3_Pointer & operator=(itkImageToImageFilterVIUL3IUL3 * r);
     itkImageToImageFilterVIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUL3IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUL3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUL3 const * image);
     itkVectorImageUL3 const * GetInput();
     itkVectorImageUL3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUL3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUL3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUL3IUS3(itkImageToImageFilterVIUL3IUS3 const & arg0);
     void operator=(itkImageToImageFilterVIUL3IUS3 const & arg0);
   protected:
     itkImageToImageFilterVIUL3IUS3();
     ~itkImageToImageFilterVIUL3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUL3IUS3_Pointer {
   public:
     itkImageToImageFilterVIUL3IUS3_Pointer();
     itkImageToImageFilterVIUL3IUS3_Pointer(itkImageToImageFilterVIUL3IUS3_Pointer const & p);
     itkImageToImageFilterVIUL3IUS3_Pointer(itkImageToImageFilterVIUL3IUS3 * p);
     ~itkImageToImageFilterVIUL3IUS3_Pointer();
     itkImageToImageFilterVIUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUL3IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUL3IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUL3IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUL3IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUL3IUS3_Pointer const & r) const;
     itkImageToImageFilterVIUL3IUS3_Pointer & operator=(itkImageToImageFilterVIUL3IUS3_Pointer const & r);
     itkImageToImageFilterVIUL3IUS3_Pointer & operator=(itkImageToImageFilterVIUL3IUS3 * r);
     itkImageToImageFilterVIUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS2ID2 : public itkImageSourceID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS2 const * image);
     itkVectorImageUS2 const * GetInput();
     itkVectorImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS2ID2(itkImageToImageFilterVIUS2ID2 const & arg0);
     void operator=(itkImageToImageFilterVIUS2ID2 const & arg0);
   protected:
     itkImageToImageFilterVIUS2ID2();
     ~itkImageToImageFilterVIUS2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS2ID2_Pointer {
   public:
     itkImageToImageFilterVIUS2ID2_Pointer();
     itkImageToImageFilterVIUS2ID2_Pointer(itkImageToImageFilterVIUS2ID2_Pointer const & p);
     itkImageToImageFilterVIUS2ID2_Pointer(itkImageToImageFilterVIUS2ID2 * p);
     ~itkImageToImageFilterVIUS2ID2_Pointer();
     itkImageToImageFilterVIUS2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS2ID2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS2ID2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS2ID2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS2ID2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS2ID2_Pointer const & r) const;
     itkImageToImageFilterVIUS2ID2_Pointer & operator=(itkImageToImageFilterVIUS2ID2_Pointer const & r);
     itkImageToImageFilterVIUS2ID2_Pointer & operator=(itkImageToImageFilterVIUS2ID2 * r);
     itkImageToImageFilterVIUS2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS2IF2 : public itkImageSourceIF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS2 const * image);
     itkVectorImageUS2 const * GetInput();
     itkVectorImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS2IF2(itkImageToImageFilterVIUS2IF2 const & arg0);
     void operator=(itkImageToImageFilterVIUS2IF2 const & arg0);
   protected:
     itkImageToImageFilterVIUS2IF2();
     ~itkImageToImageFilterVIUS2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS2IF2_Pointer {
   public:
     itkImageToImageFilterVIUS2IF2_Pointer();
     itkImageToImageFilterVIUS2IF2_Pointer(itkImageToImageFilterVIUS2IF2_Pointer const & p);
     itkImageToImageFilterVIUS2IF2_Pointer(itkImageToImageFilterVIUS2IF2 * p);
     ~itkImageToImageFilterVIUS2IF2_Pointer();
     itkImageToImageFilterVIUS2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS2IF2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS2IF2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS2IF2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS2IF2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS2IF2_Pointer const & r) const;
     itkImageToImageFilterVIUS2IF2_Pointer & operator=(itkImageToImageFilterVIUS2IF2_Pointer const & r);
     itkImageToImageFilterVIUS2IF2_Pointer & operator=(itkImageToImageFilterVIUS2IF2 * r);
     itkImageToImageFilterVIUS2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS2IUC2 : public itkImageSourceIUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS2 const * image);
     itkVectorImageUS2 const * GetInput();
     itkVectorImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS2IUC2(itkImageToImageFilterVIUS2IUC2 const & arg0);
     void operator=(itkImageToImageFilterVIUS2IUC2 const & arg0);
   protected:
     itkImageToImageFilterVIUS2IUC2();
     ~itkImageToImageFilterVIUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS2IUC2_Pointer {
   public:
     itkImageToImageFilterVIUS2IUC2_Pointer();
     itkImageToImageFilterVIUS2IUC2_Pointer(itkImageToImageFilterVIUS2IUC2_Pointer const & p);
     itkImageToImageFilterVIUS2IUC2_Pointer(itkImageToImageFilterVIUS2IUC2 * p);
     ~itkImageToImageFilterVIUS2IUC2_Pointer();
     itkImageToImageFilterVIUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS2IUC2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS2IUC2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS2IUC2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS2IUC2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS2IUC2_Pointer const & r) const;
     itkImageToImageFilterVIUS2IUC2_Pointer & operator=(itkImageToImageFilterVIUS2IUC2_Pointer const & r);
     itkImageToImageFilterVIUS2IUC2_Pointer & operator=(itkImageToImageFilterVIUS2IUC2 * r);
     itkImageToImageFilterVIUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS2IUL2 : public itkImageSourceIUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS2 const * image);
     itkVectorImageUS2 const * GetInput();
     itkVectorImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS2IUL2(itkImageToImageFilterVIUS2IUL2 const & arg0);
     void operator=(itkImageToImageFilterVIUS2IUL2 const & arg0);
   protected:
     itkImageToImageFilterVIUS2IUL2();
     ~itkImageToImageFilterVIUS2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS2IUL2_Pointer {
   public:
     itkImageToImageFilterVIUS2IUL2_Pointer();
     itkImageToImageFilterVIUS2IUL2_Pointer(itkImageToImageFilterVIUS2IUL2_Pointer const & p);
     itkImageToImageFilterVIUS2IUL2_Pointer(itkImageToImageFilterVIUS2IUL2 * p);
     ~itkImageToImageFilterVIUS2IUL2_Pointer();
     itkImageToImageFilterVIUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS2IUL2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS2IUL2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS2IUL2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS2IUL2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS2IUL2_Pointer const & r) const;
     itkImageToImageFilterVIUS2IUL2_Pointer & operator=(itkImageToImageFilterVIUS2IUL2_Pointer const & r);
     itkImageToImageFilterVIUS2IUL2_Pointer & operator=(itkImageToImageFilterVIUS2IUL2 * r);
     itkImageToImageFilterVIUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS2IUS2 : public itkImageSourceIUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS2 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS2 const * image);
     itkVectorImageUS2 const * GetInput();
     itkVectorImageUS2 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS2 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS2 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS2IUS2(itkImageToImageFilterVIUS2IUS2 const & arg0);
     void operator=(itkImageToImageFilterVIUS2IUS2 const & arg0);
   protected:
     itkImageToImageFilterVIUS2IUS2();
     ~itkImageToImageFilterVIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion2 & destRegion, itkImageRegion2 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS2IUS2_Pointer {
   public:
     itkImageToImageFilterVIUS2IUS2_Pointer();
     itkImageToImageFilterVIUS2IUS2_Pointer(itkImageToImageFilterVIUS2IUS2_Pointer const & p);
     itkImageToImageFilterVIUS2IUS2_Pointer(itkImageToImageFilterVIUS2IUS2 * p);
     ~itkImageToImageFilterVIUS2IUS2_Pointer();
     itkImageToImageFilterVIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS2IUS2 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS2IUS2_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS2IUS2_Pointer const & r) const;
     itkImageToImageFilterVIUS2IUS2_Pointer & operator=(itkImageToImageFilterVIUS2IUS2_Pointer const & r);
     itkImageToImageFilterVIUS2IUS2_Pointer & operator=(itkImageToImageFilterVIUS2IUS2 * r);
     itkImageToImageFilterVIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS3ID3 : public itkImageSourceID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS3 const * image);
     itkVectorImageUS3 const * GetInput();
     itkVectorImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS3ID3(itkImageToImageFilterVIUS3ID3 const & arg0);
     void operator=(itkImageToImageFilterVIUS3ID3 const & arg0);
   protected:
     itkImageToImageFilterVIUS3ID3();
     ~itkImageToImageFilterVIUS3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS3ID3_Pointer {
   public:
     itkImageToImageFilterVIUS3ID3_Pointer();
     itkImageToImageFilterVIUS3ID3_Pointer(itkImageToImageFilterVIUS3ID3_Pointer const & p);
     itkImageToImageFilterVIUS3ID3_Pointer(itkImageToImageFilterVIUS3ID3 * p);
     ~itkImageToImageFilterVIUS3ID3_Pointer();
     itkImageToImageFilterVIUS3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS3ID3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS3ID3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS3ID3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS3ID3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS3ID3_Pointer const & r) const;
     itkImageToImageFilterVIUS3ID3_Pointer & operator=(itkImageToImageFilterVIUS3ID3_Pointer const & r);
     itkImageToImageFilterVIUS3ID3_Pointer & operator=(itkImageToImageFilterVIUS3ID3 * r);
     itkImageToImageFilterVIUS3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS3IF3 : public itkImageSourceIF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS3 const * image);
     itkVectorImageUS3 const * GetInput();
     itkVectorImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS3IF3(itkImageToImageFilterVIUS3IF3 const & arg0);
     void operator=(itkImageToImageFilterVIUS3IF3 const & arg0);
   protected:
     itkImageToImageFilterVIUS3IF3();
     ~itkImageToImageFilterVIUS3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS3IF3_Pointer {
   public:
     itkImageToImageFilterVIUS3IF3_Pointer();
     itkImageToImageFilterVIUS3IF3_Pointer(itkImageToImageFilterVIUS3IF3_Pointer const & p);
     itkImageToImageFilterVIUS3IF3_Pointer(itkImageToImageFilterVIUS3IF3 * p);
     ~itkImageToImageFilterVIUS3IF3_Pointer();
     itkImageToImageFilterVIUS3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS3IF3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS3IF3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS3IF3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS3IF3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS3IF3_Pointer const & r) const;
     itkImageToImageFilterVIUS3IF3_Pointer & operator=(itkImageToImageFilterVIUS3IF3_Pointer const & r);
     itkImageToImageFilterVIUS3IF3_Pointer & operator=(itkImageToImageFilterVIUS3IF3 * r);
     itkImageToImageFilterVIUS3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS3IUC3 : public itkImageSourceIUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS3 const * image);
     itkVectorImageUS3 const * GetInput();
     itkVectorImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS3IUC3(itkImageToImageFilterVIUS3IUC3 const & arg0);
     void operator=(itkImageToImageFilterVIUS3IUC3 const & arg0);
   protected:
     itkImageToImageFilterVIUS3IUC3();
     ~itkImageToImageFilterVIUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS3IUC3_Pointer {
   public:
     itkImageToImageFilterVIUS3IUC3_Pointer();
     itkImageToImageFilterVIUS3IUC3_Pointer(itkImageToImageFilterVIUS3IUC3_Pointer const & p);
     itkImageToImageFilterVIUS3IUC3_Pointer(itkImageToImageFilterVIUS3IUC3 * p);
     ~itkImageToImageFilterVIUS3IUC3_Pointer();
     itkImageToImageFilterVIUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS3IUC3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS3IUC3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS3IUC3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS3IUC3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS3IUC3_Pointer const & r) const;
     itkImageToImageFilterVIUS3IUC3_Pointer & operator=(itkImageToImageFilterVIUS3IUC3_Pointer const & r);
     itkImageToImageFilterVIUS3IUC3_Pointer & operator=(itkImageToImageFilterVIUS3IUC3 * r);
     itkImageToImageFilterVIUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS3IUL3 : public itkImageSourceIUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS3 const * image);
     itkVectorImageUS3 const * GetInput();
     itkVectorImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS3IUL3(itkImageToImageFilterVIUS3IUL3 const & arg0);
     void operator=(itkImageToImageFilterVIUS3IUL3 const & arg0);
   protected:
     itkImageToImageFilterVIUS3IUL3();
     ~itkImageToImageFilterVIUS3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS3IUL3_Pointer {
   public:
     itkImageToImageFilterVIUS3IUL3_Pointer();
     itkImageToImageFilterVIUS3IUL3_Pointer(itkImageToImageFilterVIUS3IUL3_Pointer const & p);
     itkImageToImageFilterVIUS3IUL3_Pointer(itkImageToImageFilterVIUS3IUL3 * p);
     ~itkImageToImageFilterVIUS3IUL3_Pointer();
     itkImageToImageFilterVIUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS3IUL3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS3IUL3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS3IUL3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS3IUL3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS3IUL3_Pointer const & r) const;
     itkImageToImageFilterVIUS3IUL3_Pointer & operator=(itkImageToImageFilterVIUS3IUL3_Pointer const & r);
     itkImageToImageFilterVIUS3IUL3_Pointer & operator=(itkImageToImageFilterVIUS3IUL3 * r);
     itkImageToImageFilterVIUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageToImageFilterVIUS3IUS3 : public itkImageSourceIUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     virtual void SetInput(itkVectorImageUS3 const * image);
     virtual void SetInput(unsigned int arg0, itkVectorImageUS3 const * image);
     itkVectorImageUS3 const * GetInput();
     itkVectorImageUS3 const * GetInput(unsigned int idx);
     virtual void PushBackInput(itkVectorImageUS3 const * image);
     virtual void PopBackInput();
     virtual void PushFrontInput(itkVectorImageUS3 const * image);
     virtual void PopFrontInput();
   private:
     itkImageToImageFilterVIUS3IUS3(itkImageToImageFilterVIUS3IUS3 const & arg0);
     void operator=(itkImageToImageFilterVIUS3IUS3 const & arg0);
   protected:
     itkImageToImageFilterVIUS3IUS3();
     ~itkImageToImageFilterVIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void CallCopyOutputRegionToInputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void CallCopyInputRegionToOutputRegion(itkImageRegion3 & destRegion, itkImageRegion3 const & srcRegion);
     virtual void PushBackInput(itkDataObject const * input);
     virtual void PushFrontInput(itkDataObject const * input);
 };


 class itkImageToImageFilterVIUS3IUS3_Pointer {
   public:
     itkImageToImageFilterVIUS3IUS3_Pointer();
     itkImageToImageFilterVIUS3IUS3_Pointer(itkImageToImageFilterVIUS3IUS3_Pointer const & p);
     itkImageToImageFilterVIUS3IUS3_Pointer(itkImageToImageFilterVIUS3IUS3 * p);
     ~itkImageToImageFilterVIUS3IUS3_Pointer();
     itkImageToImageFilterVIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageToImageFilterVIUS3IUS3 * GetPointer() const;
     bool operator<(itkImageToImageFilterVIUS3IUS3_Pointer const & r) const;
     bool operator>(itkImageToImageFilterVIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkImageToImageFilterVIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkImageToImageFilterVIUS3IUS3_Pointer const & r) const;
     itkImageToImageFilterVIUS3IUS3_Pointer & operator=(itkImageToImageFilterVIUS3IUS3_Pointer const & r);
     itkImageToImageFilterVIUS3IUS3_Pointer & operator=(itkImageToImageFilterVIUS3IUS3 * r);
     itkImageToImageFilterVIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


