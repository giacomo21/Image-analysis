// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkScalarImageKmeansImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkScalarImageKmeansImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkScalarImageKmeansImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkScalarImageKmeansImageFilterJava
#endif
#ifdef SWIGLUA
%module itkScalarImageKmeansImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkScalarImageKmeansImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkScalarImageKmeansImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkScalarImageKmeansImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkScalarImageKmeansImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkScalarImageKmeansImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkScalarImageKmeansImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkScalarImageKmeansImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkScalarImageKmeansImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkScalarImageKmeansImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkScalarImageKmeansImageFilterPython
#endif
#ifdef SWIGR
%module itkScalarImageKmeansImageFilterR
#endif
#ifdef SWIGRUBY
%module itkScalarImageKmeansImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkScalarImageKmeansImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkScalarImageKmeansImageFilterTcl
#endif
#ifdef SWIGXML
%module itkScalarImageKmeansImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkArray.i


%include itk.i
%include wrap_itkScalarImageKmeansImageFilter_ext.i


 class itkScalarImageKmeansImageFilterID2IUC2 : public itkImageToImageFilterID2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterID2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterID2IUC2(itkScalarImageKmeansImageFilterID2IUC2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterID2IUC2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterID2IUC2();
     ~itkScalarImageKmeansImageFilterID2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterID2IUC2_Pointer {
   public:
     itkScalarImageKmeansImageFilterID2IUC2_Pointer();
     itkScalarImageKmeansImageFilterID2IUC2_Pointer(itkScalarImageKmeansImageFilterID2IUC2_Pointer const & p);
     itkScalarImageKmeansImageFilterID2IUC2_Pointer(itkScalarImageKmeansImageFilterID2IUC2 * p);
     ~itkScalarImageKmeansImageFilterID2IUC2_Pointer();
     itkScalarImageKmeansImageFilterID2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterID2IUC2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterID2IUC2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterID2IUC2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterID2IUC2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterID2IUC2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterID2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterID2IUC2_Pointer const & r);
     itkScalarImageKmeansImageFilterID2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterID2IUC2 * r);
     itkScalarImageKmeansImageFilterID2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterID2IUL2 : public itkImageToImageFilterID2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterID2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterID2IUL2(itkScalarImageKmeansImageFilterID2IUL2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterID2IUL2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterID2IUL2();
     ~itkScalarImageKmeansImageFilterID2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterID2IUL2_Pointer {
   public:
     itkScalarImageKmeansImageFilterID2IUL2_Pointer();
     itkScalarImageKmeansImageFilterID2IUL2_Pointer(itkScalarImageKmeansImageFilterID2IUL2_Pointer const & p);
     itkScalarImageKmeansImageFilterID2IUL2_Pointer(itkScalarImageKmeansImageFilterID2IUL2 * p);
     ~itkScalarImageKmeansImageFilterID2IUL2_Pointer();
     itkScalarImageKmeansImageFilterID2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterID2IUL2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterID2IUL2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterID2IUL2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterID2IUL2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterID2IUL2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterID2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterID2IUL2_Pointer const & r);
     itkScalarImageKmeansImageFilterID2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterID2IUL2 * r);
     itkScalarImageKmeansImageFilterID2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterID2IUS2 : public itkImageToImageFilterID2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterID2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterID2IUS2(itkScalarImageKmeansImageFilterID2IUS2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterID2IUS2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterID2IUS2();
     ~itkScalarImageKmeansImageFilterID2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterID2IUS2_Pointer {
   public:
     itkScalarImageKmeansImageFilterID2IUS2_Pointer();
     itkScalarImageKmeansImageFilterID2IUS2_Pointer(itkScalarImageKmeansImageFilterID2IUS2_Pointer const & p);
     itkScalarImageKmeansImageFilterID2IUS2_Pointer(itkScalarImageKmeansImageFilterID2IUS2 * p);
     ~itkScalarImageKmeansImageFilterID2IUS2_Pointer();
     itkScalarImageKmeansImageFilterID2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterID2IUS2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterID2IUS2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterID2IUS2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterID2IUS2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterID2IUS2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterID2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterID2IUS2_Pointer const & r);
     itkScalarImageKmeansImageFilterID2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterID2IUS2 * r);
     itkScalarImageKmeansImageFilterID2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterID3IUC3 : public itkImageToImageFilterID3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterID3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterID3IUC3(itkScalarImageKmeansImageFilterID3IUC3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterID3IUC3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterID3IUC3();
     ~itkScalarImageKmeansImageFilterID3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterID3IUC3_Pointer {
   public:
     itkScalarImageKmeansImageFilterID3IUC3_Pointer();
     itkScalarImageKmeansImageFilterID3IUC3_Pointer(itkScalarImageKmeansImageFilterID3IUC3_Pointer const & p);
     itkScalarImageKmeansImageFilterID3IUC3_Pointer(itkScalarImageKmeansImageFilterID3IUC3 * p);
     ~itkScalarImageKmeansImageFilterID3IUC3_Pointer();
     itkScalarImageKmeansImageFilterID3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterID3IUC3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterID3IUC3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterID3IUC3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterID3IUC3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterID3IUC3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterID3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterID3IUC3_Pointer const & r);
     itkScalarImageKmeansImageFilterID3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterID3IUC3 * r);
     itkScalarImageKmeansImageFilterID3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterID3IUL3 : public itkImageToImageFilterID3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterID3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterID3IUL3(itkScalarImageKmeansImageFilterID3IUL3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterID3IUL3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterID3IUL3();
     ~itkScalarImageKmeansImageFilterID3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterID3IUL3_Pointer {
   public:
     itkScalarImageKmeansImageFilterID3IUL3_Pointer();
     itkScalarImageKmeansImageFilterID3IUL3_Pointer(itkScalarImageKmeansImageFilterID3IUL3_Pointer const & p);
     itkScalarImageKmeansImageFilterID3IUL3_Pointer(itkScalarImageKmeansImageFilterID3IUL3 * p);
     ~itkScalarImageKmeansImageFilterID3IUL3_Pointer();
     itkScalarImageKmeansImageFilterID3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterID3IUL3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterID3IUL3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterID3IUL3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterID3IUL3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterID3IUL3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterID3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterID3IUL3_Pointer const & r);
     itkScalarImageKmeansImageFilterID3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterID3IUL3 * r);
     itkScalarImageKmeansImageFilterID3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterID3IUS3 : public itkImageToImageFilterID3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterID3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterID3IUS3(itkScalarImageKmeansImageFilterID3IUS3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterID3IUS3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterID3IUS3();
     ~itkScalarImageKmeansImageFilterID3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterID3IUS3_Pointer {
   public:
     itkScalarImageKmeansImageFilterID3IUS3_Pointer();
     itkScalarImageKmeansImageFilterID3IUS3_Pointer(itkScalarImageKmeansImageFilterID3IUS3_Pointer const & p);
     itkScalarImageKmeansImageFilterID3IUS3_Pointer(itkScalarImageKmeansImageFilterID3IUS3 * p);
     ~itkScalarImageKmeansImageFilterID3IUS3_Pointer();
     itkScalarImageKmeansImageFilterID3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterID3IUS3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterID3IUS3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterID3IUS3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterID3IUS3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterID3IUS3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterID3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterID3IUS3_Pointer const & r);
     itkScalarImageKmeansImageFilterID3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterID3IUS3 * r);
     itkScalarImageKmeansImageFilterID3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIF2IUC2 : public itkImageToImageFilterIF2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIF2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIF2IUC2(itkScalarImageKmeansImageFilterIF2IUC2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIF2IUC2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIF2IUC2();
     ~itkScalarImageKmeansImageFilterIF2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIF2IUC2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIF2IUC2_Pointer();
     itkScalarImageKmeansImageFilterIF2IUC2_Pointer(itkScalarImageKmeansImageFilterIF2IUC2_Pointer const & p);
     itkScalarImageKmeansImageFilterIF2IUC2_Pointer(itkScalarImageKmeansImageFilterIF2IUC2 * p);
     ~itkScalarImageKmeansImageFilterIF2IUC2_Pointer();
     itkScalarImageKmeansImageFilterIF2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIF2IUC2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIF2IUC2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIF2IUC2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIF2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterIF2IUC2_Pointer const & r);
     itkScalarImageKmeansImageFilterIF2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterIF2IUC2 * r);
     itkScalarImageKmeansImageFilterIF2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIF2IUL2 : public itkImageToImageFilterIF2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIF2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIF2IUL2(itkScalarImageKmeansImageFilterIF2IUL2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIF2IUL2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIF2IUL2();
     ~itkScalarImageKmeansImageFilterIF2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIF2IUL2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIF2IUL2_Pointer();
     itkScalarImageKmeansImageFilterIF2IUL2_Pointer(itkScalarImageKmeansImageFilterIF2IUL2_Pointer const & p);
     itkScalarImageKmeansImageFilterIF2IUL2_Pointer(itkScalarImageKmeansImageFilterIF2IUL2 * p);
     ~itkScalarImageKmeansImageFilterIF2IUL2_Pointer();
     itkScalarImageKmeansImageFilterIF2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIF2IUL2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIF2IUL2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIF2IUL2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIF2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterIF2IUL2_Pointer const & r);
     itkScalarImageKmeansImageFilterIF2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterIF2IUL2 * r);
     itkScalarImageKmeansImageFilterIF2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIF2IUS2 : public itkImageToImageFilterIF2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIF2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIF2IUS2(itkScalarImageKmeansImageFilterIF2IUS2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIF2IUS2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIF2IUS2();
     ~itkScalarImageKmeansImageFilterIF2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIF2IUS2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIF2IUS2_Pointer();
     itkScalarImageKmeansImageFilterIF2IUS2_Pointer(itkScalarImageKmeansImageFilterIF2IUS2_Pointer const & p);
     itkScalarImageKmeansImageFilterIF2IUS2_Pointer(itkScalarImageKmeansImageFilterIF2IUS2 * p);
     ~itkScalarImageKmeansImageFilterIF2IUS2_Pointer();
     itkScalarImageKmeansImageFilterIF2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIF2IUS2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIF2IUS2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIF2IUS2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIF2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterIF2IUS2_Pointer const & r);
     itkScalarImageKmeansImageFilterIF2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterIF2IUS2 * r);
     itkScalarImageKmeansImageFilterIF2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIF3IUC3 : public itkImageToImageFilterIF3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIF3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIF3IUC3(itkScalarImageKmeansImageFilterIF3IUC3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIF3IUC3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIF3IUC3();
     ~itkScalarImageKmeansImageFilterIF3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIF3IUC3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIF3IUC3_Pointer();
     itkScalarImageKmeansImageFilterIF3IUC3_Pointer(itkScalarImageKmeansImageFilterIF3IUC3_Pointer const & p);
     itkScalarImageKmeansImageFilterIF3IUC3_Pointer(itkScalarImageKmeansImageFilterIF3IUC3 * p);
     ~itkScalarImageKmeansImageFilterIF3IUC3_Pointer();
     itkScalarImageKmeansImageFilterIF3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIF3IUC3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIF3IUC3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIF3IUC3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIF3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterIF3IUC3_Pointer const & r);
     itkScalarImageKmeansImageFilterIF3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterIF3IUC3 * r);
     itkScalarImageKmeansImageFilterIF3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIF3IUL3 : public itkImageToImageFilterIF3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIF3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIF3IUL3(itkScalarImageKmeansImageFilterIF3IUL3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIF3IUL3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIF3IUL3();
     ~itkScalarImageKmeansImageFilterIF3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIF3IUL3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIF3IUL3_Pointer();
     itkScalarImageKmeansImageFilterIF3IUL3_Pointer(itkScalarImageKmeansImageFilterIF3IUL3_Pointer const & p);
     itkScalarImageKmeansImageFilterIF3IUL3_Pointer(itkScalarImageKmeansImageFilterIF3IUL3 * p);
     ~itkScalarImageKmeansImageFilterIF3IUL3_Pointer();
     itkScalarImageKmeansImageFilterIF3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIF3IUL3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIF3IUL3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIF3IUL3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIF3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterIF3IUL3_Pointer const & r);
     itkScalarImageKmeansImageFilterIF3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterIF3IUL3 * r);
     itkScalarImageKmeansImageFilterIF3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIF3IUS3 : public itkImageToImageFilterIF3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIF3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIF3IUS3(itkScalarImageKmeansImageFilterIF3IUS3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIF3IUS3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIF3IUS3();
     ~itkScalarImageKmeansImageFilterIF3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIF3IUS3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIF3IUS3_Pointer();
     itkScalarImageKmeansImageFilterIF3IUS3_Pointer(itkScalarImageKmeansImageFilterIF3IUS3_Pointer const & p);
     itkScalarImageKmeansImageFilterIF3IUS3_Pointer(itkScalarImageKmeansImageFilterIF3IUS3 * p);
     ~itkScalarImageKmeansImageFilterIF3IUS3_Pointer();
     itkScalarImageKmeansImageFilterIF3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIF3IUS3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIF3IUS3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIF3IUS3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIF3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterIF3IUS3_Pointer const & r);
     itkScalarImageKmeansImageFilterIF3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterIF3IUS3 * r);
     itkScalarImageKmeansImageFilterIF3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUC2IUC2(itkScalarImageKmeansImageFilterIUC2IUC2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUC2IUC2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUC2IUC2();
     ~itkScalarImageKmeansImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUC2IUC2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUC2IUC2_Pointer();
     itkScalarImageKmeansImageFilterIUC2IUC2_Pointer(itkScalarImageKmeansImageFilterIUC2IUC2_Pointer const & p);
     itkScalarImageKmeansImageFilterIUC2IUC2_Pointer(itkScalarImageKmeansImageFilterIUC2IUC2 * p);
     ~itkScalarImageKmeansImageFilterIUC2IUC2_Pointer();
     itkScalarImageKmeansImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUC2IUC2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUC2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterIUC2IUC2_Pointer const & r);
     itkScalarImageKmeansImageFilterIUC2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterIUC2IUC2 * r);
     itkScalarImageKmeansImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUC2IUL2 : public itkImageToImageFilterIUC2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUC2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUC2IUL2(itkScalarImageKmeansImageFilterIUC2IUL2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUC2IUL2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUC2IUL2();
     ~itkScalarImageKmeansImageFilterIUC2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUC2IUL2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUC2IUL2_Pointer();
     itkScalarImageKmeansImageFilterIUC2IUL2_Pointer(itkScalarImageKmeansImageFilterIUC2IUL2_Pointer const & p);
     itkScalarImageKmeansImageFilterIUC2IUL2_Pointer(itkScalarImageKmeansImageFilterIUC2IUL2 * p);
     ~itkScalarImageKmeansImageFilterIUC2IUL2_Pointer();
     itkScalarImageKmeansImageFilterIUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUC2IUL2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUC2IUL2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUC2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterIUC2IUL2_Pointer const & r);
     itkScalarImageKmeansImageFilterIUC2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterIUC2IUL2 * r);
     itkScalarImageKmeansImageFilterIUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUC2IUS2 : public itkImageToImageFilterIUC2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUC2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUC2IUS2(itkScalarImageKmeansImageFilterIUC2IUS2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUC2IUS2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUC2IUS2();
     ~itkScalarImageKmeansImageFilterIUC2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUC2IUS2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUC2IUS2_Pointer();
     itkScalarImageKmeansImageFilterIUC2IUS2_Pointer(itkScalarImageKmeansImageFilterIUC2IUS2_Pointer const & p);
     itkScalarImageKmeansImageFilterIUC2IUS2_Pointer(itkScalarImageKmeansImageFilterIUC2IUS2 * p);
     ~itkScalarImageKmeansImageFilterIUC2IUS2_Pointer();
     itkScalarImageKmeansImageFilterIUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUC2IUS2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUC2IUS2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUC2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterIUC2IUS2_Pointer const & r);
     itkScalarImageKmeansImageFilterIUC2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterIUC2IUS2 * r);
     itkScalarImageKmeansImageFilterIUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUC3IUC3(itkScalarImageKmeansImageFilterIUC3IUC3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUC3IUC3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUC3IUC3();
     ~itkScalarImageKmeansImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUC3IUC3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUC3IUC3_Pointer();
     itkScalarImageKmeansImageFilterIUC3IUC3_Pointer(itkScalarImageKmeansImageFilterIUC3IUC3_Pointer const & p);
     itkScalarImageKmeansImageFilterIUC3IUC3_Pointer(itkScalarImageKmeansImageFilterIUC3IUC3 * p);
     ~itkScalarImageKmeansImageFilterIUC3IUC3_Pointer();
     itkScalarImageKmeansImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUC3IUC3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUC3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterIUC3IUC3_Pointer const & r);
     itkScalarImageKmeansImageFilterIUC3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterIUC3IUC3 * r);
     itkScalarImageKmeansImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUC3IUL3 : public itkImageToImageFilterIUC3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUC3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUC3IUL3(itkScalarImageKmeansImageFilterIUC3IUL3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUC3IUL3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUC3IUL3();
     ~itkScalarImageKmeansImageFilterIUC3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUC3IUL3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUC3IUL3_Pointer();
     itkScalarImageKmeansImageFilterIUC3IUL3_Pointer(itkScalarImageKmeansImageFilterIUC3IUL3_Pointer const & p);
     itkScalarImageKmeansImageFilterIUC3IUL3_Pointer(itkScalarImageKmeansImageFilterIUC3IUL3 * p);
     ~itkScalarImageKmeansImageFilterIUC3IUL3_Pointer();
     itkScalarImageKmeansImageFilterIUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUC3IUL3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUC3IUL3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUC3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterIUC3IUL3_Pointer const & r);
     itkScalarImageKmeansImageFilterIUC3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterIUC3IUL3 * r);
     itkScalarImageKmeansImageFilterIUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUC3IUS3 : public itkImageToImageFilterIUC3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUC3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUC3IUS3(itkScalarImageKmeansImageFilterIUC3IUS3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUC3IUS3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUC3IUS3();
     ~itkScalarImageKmeansImageFilterIUC3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUC3IUS3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUC3IUS3_Pointer();
     itkScalarImageKmeansImageFilterIUC3IUS3_Pointer(itkScalarImageKmeansImageFilterIUC3IUS3_Pointer const & p);
     itkScalarImageKmeansImageFilterIUC3IUS3_Pointer(itkScalarImageKmeansImageFilterIUC3IUS3 * p);
     ~itkScalarImageKmeansImageFilterIUC3IUS3_Pointer();
     itkScalarImageKmeansImageFilterIUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUC3IUS3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUC3IUS3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUC3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterIUC3IUS3_Pointer const & r);
     itkScalarImageKmeansImageFilterIUC3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterIUC3IUS3 * r);
     itkScalarImageKmeansImageFilterIUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUL2IUC2 : public itkImageToImageFilterIUL2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUL2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUL2IUC2(itkScalarImageKmeansImageFilterIUL2IUC2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUL2IUC2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUL2IUC2();
     ~itkScalarImageKmeansImageFilterIUL2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUL2IUC2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUL2IUC2_Pointer();
     itkScalarImageKmeansImageFilterIUL2IUC2_Pointer(itkScalarImageKmeansImageFilterIUL2IUC2_Pointer const & p);
     itkScalarImageKmeansImageFilterIUL2IUC2_Pointer(itkScalarImageKmeansImageFilterIUL2IUC2 * p);
     ~itkScalarImageKmeansImageFilterIUL2IUC2_Pointer();
     itkScalarImageKmeansImageFilterIUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUL2IUC2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUL2IUC2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUL2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterIUL2IUC2_Pointer const & r);
     itkScalarImageKmeansImageFilterIUL2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterIUL2IUC2 * r);
     itkScalarImageKmeansImageFilterIUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUL2IUL2(itkScalarImageKmeansImageFilterIUL2IUL2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUL2IUL2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUL2IUL2();
     ~itkScalarImageKmeansImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUL2IUL2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUL2IUL2_Pointer();
     itkScalarImageKmeansImageFilterIUL2IUL2_Pointer(itkScalarImageKmeansImageFilterIUL2IUL2_Pointer const & p);
     itkScalarImageKmeansImageFilterIUL2IUL2_Pointer(itkScalarImageKmeansImageFilterIUL2IUL2 * p);
     ~itkScalarImageKmeansImageFilterIUL2IUL2_Pointer();
     itkScalarImageKmeansImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUL2IUL2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUL2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterIUL2IUL2_Pointer const & r);
     itkScalarImageKmeansImageFilterIUL2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterIUL2IUL2 * r);
     itkScalarImageKmeansImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUL2IUS2 : public itkImageToImageFilterIUL2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUL2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUL2IUS2(itkScalarImageKmeansImageFilterIUL2IUS2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUL2IUS2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUL2IUS2();
     ~itkScalarImageKmeansImageFilterIUL2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUL2IUS2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUL2IUS2_Pointer();
     itkScalarImageKmeansImageFilterIUL2IUS2_Pointer(itkScalarImageKmeansImageFilterIUL2IUS2_Pointer const & p);
     itkScalarImageKmeansImageFilterIUL2IUS2_Pointer(itkScalarImageKmeansImageFilterIUL2IUS2 * p);
     ~itkScalarImageKmeansImageFilterIUL2IUS2_Pointer();
     itkScalarImageKmeansImageFilterIUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUL2IUS2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUL2IUS2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUL2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterIUL2IUS2_Pointer const & r);
     itkScalarImageKmeansImageFilterIUL2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterIUL2IUS2 * r);
     itkScalarImageKmeansImageFilterIUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUL3IUC3 : public itkImageToImageFilterIUL3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUL3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUL3IUC3(itkScalarImageKmeansImageFilterIUL3IUC3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUL3IUC3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUL3IUC3();
     ~itkScalarImageKmeansImageFilterIUL3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUL3IUC3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUL3IUC3_Pointer();
     itkScalarImageKmeansImageFilterIUL3IUC3_Pointer(itkScalarImageKmeansImageFilterIUL3IUC3_Pointer const & p);
     itkScalarImageKmeansImageFilterIUL3IUC3_Pointer(itkScalarImageKmeansImageFilterIUL3IUC3 * p);
     ~itkScalarImageKmeansImageFilterIUL3IUC3_Pointer();
     itkScalarImageKmeansImageFilterIUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUL3IUC3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUL3IUC3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUL3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterIUL3IUC3_Pointer const & r);
     itkScalarImageKmeansImageFilterIUL3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterIUL3IUC3 * r);
     itkScalarImageKmeansImageFilterIUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUL3IUL3(itkScalarImageKmeansImageFilterIUL3IUL3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUL3IUL3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUL3IUL3();
     ~itkScalarImageKmeansImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUL3IUL3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUL3IUL3_Pointer();
     itkScalarImageKmeansImageFilterIUL3IUL3_Pointer(itkScalarImageKmeansImageFilterIUL3IUL3_Pointer const & p);
     itkScalarImageKmeansImageFilterIUL3IUL3_Pointer(itkScalarImageKmeansImageFilterIUL3IUL3 * p);
     ~itkScalarImageKmeansImageFilterIUL3IUL3_Pointer();
     itkScalarImageKmeansImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUL3IUL3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUL3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterIUL3IUL3_Pointer const & r);
     itkScalarImageKmeansImageFilterIUL3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterIUL3IUL3 * r);
     itkScalarImageKmeansImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUL3IUS3 : public itkImageToImageFilterIUL3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUL3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUL3IUS3(itkScalarImageKmeansImageFilterIUL3IUS3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUL3IUS3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUL3IUS3();
     ~itkScalarImageKmeansImageFilterIUL3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUL3IUS3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUL3IUS3_Pointer();
     itkScalarImageKmeansImageFilterIUL3IUS3_Pointer(itkScalarImageKmeansImageFilterIUL3IUS3_Pointer const & p);
     itkScalarImageKmeansImageFilterIUL3IUS3_Pointer(itkScalarImageKmeansImageFilterIUL3IUS3 * p);
     ~itkScalarImageKmeansImageFilterIUL3IUS3_Pointer();
     itkScalarImageKmeansImageFilterIUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUL3IUS3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUL3IUS3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUL3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterIUL3IUS3_Pointer const & r);
     itkScalarImageKmeansImageFilterIUL3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterIUL3IUS3 * r);
     itkScalarImageKmeansImageFilterIUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUS2IUC2 : public itkImageToImageFilterIUS2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUS2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUS2IUC2(itkScalarImageKmeansImageFilterIUS2IUC2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUS2IUC2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUS2IUC2();
     ~itkScalarImageKmeansImageFilterIUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUS2IUC2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUS2IUC2_Pointer();
     itkScalarImageKmeansImageFilterIUS2IUC2_Pointer(itkScalarImageKmeansImageFilterIUS2IUC2_Pointer const & p);
     itkScalarImageKmeansImageFilterIUS2IUC2_Pointer(itkScalarImageKmeansImageFilterIUS2IUC2 * p);
     ~itkScalarImageKmeansImageFilterIUS2IUC2_Pointer();
     itkScalarImageKmeansImageFilterIUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUS2IUC2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUS2IUC2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUS2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterIUS2IUC2_Pointer const & r);
     itkScalarImageKmeansImageFilterIUS2IUC2_Pointer & operator=(itkScalarImageKmeansImageFilterIUS2IUC2 * r);
     itkScalarImageKmeansImageFilterIUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUS2IUL2 : public itkImageToImageFilterIUS2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUS2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUS2IUL2(itkScalarImageKmeansImageFilterIUS2IUL2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUS2IUL2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUS2IUL2();
     ~itkScalarImageKmeansImageFilterIUS2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUS2IUL2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUS2IUL2_Pointer();
     itkScalarImageKmeansImageFilterIUS2IUL2_Pointer(itkScalarImageKmeansImageFilterIUS2IUL2_Pointer const & p);
     itkScalarImageKmeansImageFilterIUS2IUL2_Pointer(itkScalarImageKmeansImageFilterIUS2IUL2 * p);
     ~itkScalarImageKmeansImageFilterIUS2IUL2_Pointer();
     itkScalarImageKmeansImageFilterIUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUS2IUL2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUS2IUL2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUS2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterIUS2IUL2_Pointer const & r);
     itkScalarImageKmeansImageFilterIUS2IUL2_Pointer & operator=(itkScalarImageKmeansImageFilterIUS2IUL2 * r);
     itkScalarImageKmeansImageFilterIUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion2 const & region);
     virtual itkImageRegion2 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUS2IUS2(itkScalarImageKmeansImageFilterIUS2IUS2 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUS2IUS2 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUS2IUS2();
     ~itkScalarImageKmeansImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUS2IUS2_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUS2IUS2_Pointer();
     itkScalarImageKmeansImageFilterIUS2IUS2_Pointer(itkScalarImageKmeansImageFilterIUS2IUS2_Pointer const & p);
     itkScalarImageKmeansImageFilterIUS2IUS2_Pointer(itkScalarImageKmeansImageFilterIUS2IUS2 * p);
     ~itkScalarImageKmeansImageFilterIUS2IUS2_Pointer();
     itkScalarImageKmeansImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUS2IUS2_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUS2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterIUS2IUS2_Pointer const & r);
     itkScalarImageKmeansImageFilterIUS2IUS2_Pointer & operator=(itkScalarImageKmeansImageFilterIUS2IUS2 * r);
     itkScalarImageKmeansImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUS3IUC3 : public itkImageToImageFilterIUS3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUS3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUS3IUC3(itkScalarImageKmeansImageFilterIUS3IUC3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUS3IUC3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUS3IUC3();
     ~itkScalarImageKmeansImageFilterIUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUS3IUC3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUS3IUC3_Pointer();
     itkScalarImageKmeansImageFilterIUS3IUC3_Pointer(itkScalarImageKmeansImageFilterIUS3IUC3_Pointer const & p);
     itkScalarImageKmeansImageFilterIUS3IUC3_Pointer(itkScalarImageKmeansImageFilterIUS3IUC3 * p);
     ~itkScalarImageKmeansImageFilterIUS3IUC3_Pointer();
     itkScalarImageKmeansImageFilterIUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUS3IUC3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUS3IUC3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUS3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterIUS3IUC3_Pointer const & r);
     itkScalarImageKmeansImageFilterIUS3IUC3_Pointer & operator=(itkScalarImageKmeansImageFilterIUS3IUC3 * r);
     itkScalarImageKmeansImageFilterIUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUS3IUL3 : public itkImageToImageFilterIUS3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUS3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUS3IUL3(itkScalarImageKmeansImageFilterIUS3IUL3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUS3IUL3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUS3IUL3();
     ~itkScalarImageKmeansImageFilterIUS3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUS3IUL3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUS3IUL3_Pointer();
     itkScalarImageKmeansImageFilterIUS3IUL3_Pointer(itkScalarImageKmeansImageFilterIUS3IUL3_Pointer const & p);
     itkScalarImageKmeansImageFilterIUS3IUL3_Pointer(itkScalarImageKmeansImageFilterIUS3IUL3 * p);
     ~itkScalarImageKmeansImageFilterIUS3IUL3_Pointer();
     itkScalarImageKmeansImageFilterIUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUS3IUL3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUS3IUL3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUS3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterIUS3IUL3_Pointer const & r);
     itkScalarImageKmeansImageFilterIUS3IUL3_Pointer & operator=(itkScalarImageKmeansImageFilterIUS3IUL3 * r);
     itkScalarImageKmeansImageFilterIUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageKmeansImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkScalarImageKmeansImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void AddClassWithInitialMean(double mean);
     virtual itkArrayD const & GetFinalMeans() const;
     virtual void SetUseNonContiguousLabels(bool const _arg);
     virtual bool const & GetUseNonContiguousLabels() const;
     virtual void UseNonContiguousLabelsOn();
     virtual void UseNonContiguousLabelsOff();
     void SetImageRegion(itkImageRegion3 const & region);
     virtual itkImageRegion3 const & GetImageRegion() const;
   private:
     itkScalarImageKmeansImageFilterIUS3IUS3(itkScalarImageKmeansImageFilterIUS3IUS3 const & arg0);
     void operator=(itkScalarImageKmeansImageFilterIUS3IUS3 const & arg0);
   protected:
     itkScalarImageKmeansImageFilterIUS3IUS3();
     ~itkScalarImageKmeansImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkScalarImageKmeansImageFilterIUS3IUS3_Pointer {
   public:
     itkScalarImageKmeansImageFilterIUS3IUS3_Pointer();
     itkScalarImageKmeansImageFilterIUS3IUS3_Pointer(itkScalarImageKmeansImageFilterIUS3IUS3_Pointer const & p);
     itkScalarImageKmeansImageFilterIUS3IUS3_Pointer(itkScalarImageKmeansImageFilterIUS3IUS3 * p);
     ~itkScalarImageKmeansImageFilterIUS3IUS3_Pointer();
     itkScalarImageKmeansImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageKmeansImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkScalarImageKmeansImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkScalarImageKmeansImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkScalarImageKmeansImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkScalarImageKmeansImageFilterIUS3IUS3_Pointer const & r) const;
     itkScalarImageKmeansImageFilterIUS3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterIUS3IUS3_Pointer const & r);
     itkScalarImageKmeansImageFilterIUS3IUS3_Pointer & operator=(itkScalarImageKmeansImageFilterIUS3IUS3 * r);
     itkScalarImageKmeansImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


