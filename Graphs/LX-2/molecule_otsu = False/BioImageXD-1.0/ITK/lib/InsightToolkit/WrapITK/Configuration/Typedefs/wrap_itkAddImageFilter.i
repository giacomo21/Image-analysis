// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAddImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkAddImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkAddImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkAddImageFilterJava
#endif
#ifdef SWIGLUA
%module itkAddImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkAddImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAddImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkAddImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkAddImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkAddImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkAddImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkAddImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkAddImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkAddImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkAddImageFilterPython
#endif
#ifdef SWIGR
%module itkAddImageFilterR
#endif
#ifdef SWIGRUBY
%module itkAddImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkAddImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkAddImageFilterTcl
#endif
#ifdef SWIGXML
%module itkAddImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "PixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkAddImageFilter_ext.i


 class itkAddImageFilterID2ID2ID2_Pointer {
   public:
     itkAddImageFilterID2ID2ID2_Pointer();
     itkAddImageFilterID2ID2ID2_Pointer(itkAddImageFilterID2ID2ID2_Pointer const & p);
     itkAddImageFilterID2ID2ID2_Pointer(itkAddImageFilterID2ID2ID2 * p);
     ~itkAddImageFilterID2ID2ID2_Pointer();
     itkAddImageFilterID2ID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterID2ID2ID2 * GetPointer() const;
     bool operator<(itkAddImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>(itkAddImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator<=(itkAddImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>=(itkAddImageFilterID2ID2ID2_Pointer const & r) const;
     itkAddImageFilterID2ID2ID2_Pointer & operator=(itkAddImageFilterID2ID2ID2_Pointer const & r);
     itkAddImageFilterID2ID2ID2_Pointer & operator=(itkAddImageFilterID2ID2ID2 * r);
     itkAddImageFilterID2ID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterID2ID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterID2ID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageD2 const * image2);
     itk::Functor::Add2< double, double, double > & GetFunctor();
     itk::Functor::Add2< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< double, double, double > const & functor);
   private:
     itkAddImageFilterID2ID2ID2_Superclass(itkAddImageFilterID2ID2ID2_Superclass const & arg0);
     void operator=(itkAddImageFilterID2ID2ID2_Superclass const & arg0);
   protected:
     itkAddImageFilterID2ID2ID2_Superclass();
     ~itkAddImageFilterID2ID2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterID2ID2ID2_Superclass_Pointer {
   public:
     itkAddImageFilterID2ID2ID2_Superclass_Pointer();
     itkAddImageFilterID2ID2ID2_Superclass_Pointer(itkAddImageFilterID2ID2ID2_Superclass_Pointer const & p);
     itkAddImageFilterID2ID2ID2_Superclass_Pointer(itkAddImageFilterID2ID2ID2_Superclass * p);
     ~itkAddImageFilterID2ID2ID2_Superclass_Pointer();
     itkAddImageFilterID2ID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterID2ID2ID2_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     itkAddImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkAddImageFilterID2ID2ID2_Superclass_Pointer const & r);
     itkAddImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkAddImageFilterID2ID2ID2_Superclass * r);
     itkAddImageFilterID2ID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterID3ID3ID3_Pointer {
   public:
     itkAddImageFilterID3ID3ID3_Pointer();
     itkAddImageFilterID3ID3ID3_Pointer(itkAddImageFilterID3ID3ID3_Pointer const & p);
     itkAddImageFilterID3ID3ID3_Pointer(itkAddImageFilterID3ID3ID3 * p);
     ~itkAddImageFilterID3ID3ID3_Pointer();
     itkAddImageFilterID3ID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterID3ID3ID3 * GetPointer() const;
     bool operator<(itkAddImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>(itkAddImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator<=(itkAddImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>=(itkAddImageFilterID3ID3ID3_Pointer const & r) const;
     itkAddImageFilterID3ID3ID3_Pointer & operator=(itkAddImageFilterID3ID3ID3_Pointer const & r);
     itkAddImageFilterID3ID3ID3_Pointer & operator=(itkAddImageFilterID3ID3ID3 * r);
     itkAddImageFilterID3ID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterID3ID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterID3ID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageD3 const * image2);
     itk::Functor::Add2< double, double, double > & GetFunctor();
     itk::Functor::Add2< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< double, double, double > const & functor);
   private:
     itkAddImageFilterID3ID3ID3_Superclass(itkAddImageFilterID3ID3ID3_Superclass const & arg0);
     void operator=(itkAddImageFilterID3ID3ID3_Superclass const & arg0);
   protected:
     itkAddImageFilterID3ID3ID3_Superclass();
     ~itkAddImageFilterID3ID3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterID3ID3ID3_Superclass_Pointer {
   public:
     itkAddImageFilterID3ID3ID3_Superclass_Pointer();
     itkAddImageFilterID3ID3ID3_Superclass_Pointer(itkAddImageFilterID3ID3ID3_Superclass_Pointer const & p);
     itkAddImageFilterID3ID3ID3_Superclass_Pointer(itkAddImageFilterID3ID3ID3_Superclass * p);
     ~itkAddImageFilterID3ID3ID3_Superclass_Pointer();
     itkAddImageFilterID3ID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterID3ID3ID3_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     itkAddImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkAddImageFilterID3ID3ID3_Superclass_Pointer const & r);
     itkAddImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkAddImageFilterID3ID3ID3_Superclass * r);
     itkAddImageFilterID3ID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIF2IF2IF2_Pointer {
   public:
     itkAddImageFilterIF2IF2IF2_Pointer();
     itkAddImageFilterIF2IF2IF2_Pointer(itkAddImageFilterIF2IF2IF2_Pointer const & p);
     itkAddImageFilterIF2IF2IF2_Pointer(itkAddImageFilterIF2IF2IF2 * p);
     ~itkAddImageFilterIF2IF2IF2_Pointer();
     itkAddImageFilterIF2IF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIF2IF2IF2 * GetPointer() const;
     bool operator<(itkAddImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>(itkAddImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIF2IF2IF2_Pointer const & r) const;
     itkAddImageFilterIF2IF2IF2_Pointer & operator=(itkAddImageFilterIF2IF2IF2_Pointer const & r);
     itkAddImageFilterIF2IF2IF2_Pointer & operator=(itkAddImageFilterIF2IF2IF2 * r);
     itkAddImageFilterIF2IF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIF2IF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterIF2IF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageF2 const * image2);
     itk::Functor::Add2< float, float, float > & GetFunctor();
     itk::Functor::Add2< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< float, float, float > const & functor);
   private:
     itkAddImageFilterIF2IF2IF2_Superclass(itkAddImageFilterIF2IF2IF2_Superclass const & arg0);
     void operator=(itkAddImageFilterIF2IF2IF2_Superclass const & arg0);
   protected:
     itkAddImageFilterIF2IF2IF2_Superclass();
     ~itkAddImageFilterIF2IF2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterIF2IF2IF2_Superclass_Pointer {
   public:
     itkAddImageFilterIF2IF2IF2_Superclass_Pointer();
     itkAddImageFilterIF2IF2IF2_Superclass_Pointer(itkAddImageFilterIF2IF2IF2_Superclass_Pointer const & p);
     itkAddImageFilterIF2IF2IF2_Superclass_Pointer(itkAddImageFilterIF2IF2IF2_Superclass * p);
     ~itkAddImageFilterIF2IF2IF2_Superclass_Pointer();
     itkAddImageFilterIF2IF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIF2IF2IF2_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     itkAddImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkAddImageFilterIF2IF2IF2_Superclass_Pointer const & r);
     itkAddImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkAddImageFilterIF2IF2IF2_Superclass * r);
     itkAddImageFilterIF2IF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIF3IF3IF3_Pointer {
   public:
     itkAddImageFilterIF3IF3IF3_Pointer();
     itkAddImageFilterIF3IF3IF3_Pointer(itkAddImageFilterIF3IF3IF3_Pointer const & p);
     itkAddImageFilterIF3IF3IF3_Pointer(itkAddImageFilterIF3IF3IF3 * p);
     ~itkAddImageFilterIF3IF3IF3_Pointer();
     itkAddImageFilterIF3IF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIF3IF3IF3 * GetPointer() const;
     bool operator<(itkAddImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>(itkAddImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIF3IF3IF3_Pointer const & r) const;
     itkAddImageFilterIF3IF3IF3_Pointer & operator=(itkAddImageFilterIF3IF3IF3_Pointer const & r);
     itkAddImageFilterIF3IF3IF3_Pointer & operator=(itkAddImageFilterIF3IF3IF3 * r);
     itkAddImageFilterIF3IF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIF3IF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterIF3IF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     itk::Functor::Add2< float, float, float > & GetFunctor();
     itk::Functor::Add2< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< float, float, float > const & functor);
   private:
     itkAddImageFilterIF3IF3IF3_Superclass(itkAddImageFilterIF3IF3IF3_Superclass const & arg0);
     void operator=(itkAddImageFilterIF3IF3IF3_Superclass const & arg0);
   protected:
     itkAddImageFilterIF3IF3IF3_Superclass();
     ~itkAddImageFilterIF3IF3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterIF3IF3IF3_Superclass_Pointer {
   public:
     itkAddImageFilterIF3IF3IF3_Superclass_Pointer();
     itkAddImageFilterIF3IF3IF3_Superclass_Pointer(itkAddImageFilterIF3IF3IF3_Superclass_Pointer const & p);
     itkAddImageFilterIF3IF3IF3_Superclass_Pointer(itkAddImageFilterIF3IF3IF3_Superclass * p);
     ~itkAddImageFilterIF3IF3IF3_Superclass_Pointer();
     itkAddImageFilterIF3IF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIF3IF3IF3_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     itkAddImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkAddImageFilterIF3IF3IF3_Superclass_Pointer const & r);
     itkAddImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkAddImageFilterIF3IF3IF3_Superclass * r);
     itkAddImageFilterIF3IF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkAddImageFilterIUC2IUC2IUC2_Pointer();
     itkAddImageFilterIUC2IUC2IUC2_Pointer(itkAddImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkAddImageFilterIUC2IUC2IUC2_Pointer(itkAddImageFilterIUC2IUC2IUC2 * p);
     ~itkAddImageFilterIUC2IUC2IUC2_Pointer();
     itkAddImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkAddImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkAddImageFilterIUC2IUC2IUC2_Pointer & operator=(itkAddImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkAddImageFilterIUC2IUC2IUC2_Pointer & operator=(itkAddImageFilterIUC2IUC2IUC2 * r);
     itkAddImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUC2IUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::Add2< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::Add2< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkAddImageFilterIUC2IUC2IUC2_Superclass(itkAddImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkAddImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkAddImageFilterIUC2IUC2IUC2_Superclass();
     ~itkAddImageFilterIUC2IUC2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkAddImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkAddImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkAddImageFilterIUC2IUC2IUC2_Superclass * r);
     itkAddImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkAddImageFilterIUC3IUC3IUC3_Pointer();
     itkAddImageFilterIUC3IUC3IUC3_Pointer(itkAddImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkAddImageFilterIUC3IUC3IUC3_Pointer(itkAddImageFilterIUC3IUC3IUC3 * p);
     ~itkAddImageFilterIUC3IUC3IUC3_Pointer();
     itkAddImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkAddImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkAddImageFilterIUC3IUC3IUC3_Pointer & operator=(itkAddImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkAddImageFilterIUC3IUC3IUC3_Pointer & operator=(itkAddImageFilterIUC3IUC3IUC3 * r);
     itkAddImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUC3IUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::Add2< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::Add2< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkAddImageFilterIUC3IUC3IUC3_Superclass(itkAddImageFilterIUC3IUC3IUC3_Superclass const & arg0);
     void operator=(itkAddImageFilterIUC3IUC3IUC3_Superclass const & arg0);
   protected:
     itkAddImageFilterIUC3IUC3IUC3_Superclass();
     ~itkAddImageFilterIUC3IUC3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer {
   public:
     itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer const & p);
     itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkAddImageFilterIUC3IUC3IUC3_Superclass * p);
     ~itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkAddImageFilterIUC3IUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUC3IUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r);
     itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkAddImageFilterIUC3IUC3IUC3_Superclass * r);
     itkAddImageFilterIUC3IUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkAddImageFilterIUL2IUL2IUL2_Pointer();
     itkAddImageFilterIUL2IUL2IUL2_Pointer(itkAddImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkAddImageFilterIUL2IUL2IUL2_Pointer(itkAddImageFilterIUL2IUL2IUL2 * p);
     ~itkAddImageFilterIUL2IUL2IUL2_Pointer();
     itkAddImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkAddImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkAddImageFilterIUL2IUL2IUL2_Pointer & operator=(itkAddImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkAddImageFilterIUL2IUL2IUL2_Pointer & operator=(itkAddImageFilterIUL2IUL2IUL2 * r);
     itkAddImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUL2IUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::Add2< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::Add2< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkAddImageFilterIUL2IUL2IUL2_Superclass(itkAddImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkAddImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkAddImageFilterIUL2IUL2IUL2_Superclass();
     ~itkAddImageFilterIUL2IUL2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkAddImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkAddImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkAddImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkAddImageFilterIUL2IUL2IUL2_Superclass * r);
     itkAddImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkAddImageFilterIUL3IUL3IUL3_Pointer();
     itkAddImageFilterIUL3IUL3IUL3_Pointer(itkAddImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkAddImageFilterIUL3IUL3IUL3_Pointer(itkAddImageFilterIUL3IUL3IUL3 * p);
     ~itkAddImageFilterIUL3IUL3IUL3_Pointer();
     itkAddImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkAddImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkAddImageFilterIUL3IUL3IUL3_Pointer & operator=(itkAddImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkAddImageFilterIUL3IUL3IUL3_Pointer & operator=(itkAddImageFilterIUL3IUL3IUL3 * r);
     itkAddImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUL3IUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::Add2< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::Add2< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkAddImageFilterIUL3IUL3IUL3_Superclass(itkAddImageFilterIUL3IUL3IUL3_Superclass const & arg0);
     void operator=(itkAddImageFilterIUL3IUL3IUL3_Superclass const & arg0);
   protected:
     itkAddImageFilterIUL3IUL3IUL3_Superclass();
     ~itkAddImageFilterIUL3IUL3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer {
   public:
     itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer const & p);
     itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkAddImageFilterIUL3IUL3IUL3_Superclass * p);
     ~itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkAddImageFilterIUL3IUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUL3IUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r);
     itkAddImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkAddImageFilterIUL3IUL3IUL3_Superclass * r);
     itkAddImageFilterIUL3IUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkAddImageFilterIUS2IUS2IUS2_Pointer();
     itkAddImageFilterIUS2IUS2IUS2_Pointer(itkAddImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkAddImageFilterIUS2IUS2IUS2_Pointer(itkAddImageFilterIUS2IUS2IUS2 * p);
     ~itkAddImageFilterIUS2IUS2IUS2_Pointer();
     itkAddImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkAddImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkAddImageFilterIUS2IUS2IUS2_Pointer & operator=(itkAddImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkAddImageFilterIUS2IUS2IUS2_Pointer & operator=(itkAddImageFilterIUS2IUS2IUS2 * r);
     itkAddImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUS2IUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::Add2< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::Add2< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkAddImageFilterIUS2IUS2IUS2_Superclass(itkAddImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkAddImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkAddImageFilterIUS2IUS2IUS2_Superclass();
     ~itkAddImageFilterIUS2IUS2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkAddImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkAddImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkAddImageFilterIUS2IUS2IUS2_Superclass * r);
     itkAddImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkAddImageFilterIUS3IUS3IUS3_Pointer();
     itkAddImageFilterIUS3IUS3IUS3_Pointer(itkAddImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkAddImageFilterIUS3IUS3IUS3_Pointer(itkAddImageFilterIUS3IUS3IUS3 * p);
     ~itkAddImageFilterIUS3IUS3IUS3_Pointer();
     itkAddImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkAddImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkAddImageFilterIUS3IUS3IUS3_Pointer & operator=(itkAddImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkAddImageFilterIUS3IUS3IUS3_Pointer & operator=(itkAddImageFilterIUS3IUS3IUS3 * r);
     itkAddImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterIUS3IUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::Add2< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::Add2< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Add2< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkAddImageFilterIUS3IUS3IUS3_Superclass(itkAddImageFilterIUS3IUS3IUS3_Superclass const & arg0);
     void operator=(itkAddImageFilterIUS3IUS3IUS3_Superclass const & arg0);
   protected:
     itkAddImageFilterIUS3IUS3IUS3_Superclass();
     ~itkAddImageFilterIUS3IUS3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer {
   public:
     itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer const & p);
     itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkAddImageFilterIUS3IUS3IUS3_Superclass * p);
     ~itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkAddImageFilterIUS3IUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAddImageFilterIUS3IUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r);
     itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkAddImageFilterIUS3IUS3IUS3_Superclass * r);
     itkAddImageFilterIUS3IUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAddImageFilterID2ID2ID2 : public itkAddImageFilterID2ID2ID2_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterID2ID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterID2ID2ID2(itkAddImageFilterID2ID2ID2 const & arg0);
     void operator=(itkAddImageFilterID2ID2ID2 const & arg0);
   protected:
     itkAddImageFilterID2ID2ID2();
     ~itkAddImageFilterID2ID2ID2();
 };


 class itkAddImageFilterID3ID3ID3 : public itkAddImageFilterID3ID3ID3_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterID3ID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterID3ID3ID3(itkAddImageFilterID3ID3ID3 const & arg0);
     void operator=(itkAddImageFilterID3ID3ID3 const & arg0);
   protected:
     itkAddImageFilterID3ID3ID3();
     ~itkAddImageFilterID3ID3ID3();
 };


 class itkAddImageFilterIF2IF2IF2 : public itkAddImageFilterIF2IF2IF2_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterIF2IF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterIF2IF2IF2(itkAddImageFilterIF2IF2IF2 const & arg0);
     void operator=(itkAddImageFilterIF2IF2IF2 const & arg0);
   protected:
     itkAddImageFilterIF2IF2IF2();
     ~itkAddImageFilterIF2IF2IF2();
 };


 class itkAddImageFilterIF3IF3IF3 : public itkAddImageFilterIF3IF3IF3_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterIF3IF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterIF3IF3IF3(itkAddImageFilterIF3IF3IF3 const & arg0);
     void operator=(itkAddImageFilterIF3IF3IF3 const & arg0);
   protected:
     itkAddImageFilterIF3IF3IF3();
     ~itkAddImageFilterIF3IF3IF3();
 };


 class itkAddImageFilterIUC2IUC2IUC2 : public itkAddImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterIUC2IUC2IUC2(itkAddImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkAddImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkAddImageFilterIUC2IUC2IUC2();
     ~itkAddImageFilterIUC2IUC2IUC2();
 };


 class itkAddImageFilterIUC3IUC3IUC3 : public itkAddImageFilterIUC3IUC3IUC3_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterIUC3IUC3IUC3(itkAddImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkAddImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkAddImageFilterIUC3IUC3IUC3();
     ~itkAddImageFilterIUC3IUC3IUC3();
 };


 class itkAddImageFilterIUL2IUL2IUL2 : public itkAddImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterIUL2IUL2IUL2(itkAddImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkAddImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkAddImageFilterIUL2IUL2IUL2();
     ~itkAddImageFilterIUL2IUL2IUL2();
 };


 class itkAddImageFilterIUL3IUL3IUL3 : public itkAddImageFilterIUL3IUL3IUL3_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterIUL3IUL3IUL3(itkAddImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkAddImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkAddImageFilterIUL3IUL3IUL3();
     ~itkAddImageFilterIUL3IUL3IUL3();
 };


 class itkAddImageFilterIUS2IUS2IUS2 : public itkAddImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterIUS2IUS2IUS2(itkAddImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkAddImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkAddImageFilterIUS2IUS2IUS2();
     ~itkAddImageFilterIUS2IUS2IUS2();
 };


 class itkAddImageFilterIUS3IUS3IUS3 : public itkAddImageFilterIUS3IUS3IUS3_Superclass {
   public:
     enum  {  Input1Input2OutputAdditiveOperatorsCheck = 1 };
     static itkAddImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkAddImageFilterIUS3IUS3IUS3(itkAddImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkAddImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkAddImageFilterIUS3IUS3IUS3();
     ~itkAddImageFilterIUS3IUS3IUS3();
 };


