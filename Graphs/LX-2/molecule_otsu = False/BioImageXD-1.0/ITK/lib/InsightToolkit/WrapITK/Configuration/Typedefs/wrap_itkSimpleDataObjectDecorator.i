// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSimpleDataObjectDecoratorChicken
#endif
#ifdef SWIGCSHARP
%module itkSimpleDataObjectDecoratorCsharp
#endif
#ifdef SWIGGUILE
%module itkSimpleDataObjectDecoratorGuile
#endif
#ifdef SWIGJAVA
%module itkSimpleDataObjectDecoratorJava
#endif
#ifdef SWIGLUA
%module itkSimpleDataObjectDecoratorLua
#endif
#ifdef SWIGMODULA3
%module itkSimpleDataObjectDecoratorModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSimpleDataObjectDecoratorMzscheme
#endif
#ifdef SWIGOCAML
%module itkSimpleDataObjectDecoratorOcaml
#endif
#ifdef SWIGPERL
%module itkSimpleDataObjectDecoratorPerl
#endif
#ifdef SWIGPERL5
%module itkSimpleDataObjectDecoratorPerl5
#endif
#ifdef SWIGPHP
%module itkSimpleDataObjectDecoratorPhp
#endif
#ifdef SWIGPHP4
%module itkSimpleDataObjectDecoratorPhp4
#endif
#ifdef SWIGPHP5
%module itkSimpleDataObjectDecoratorPhp5
#endif
#ifdef SWIGPIKE
%module itkSimpleDataObjectDecoratorPike
#endif
#ifdef SWIGPYTHON
%module itkSimpleDataObjectDecoratorPython
#endif
#ifdef SWIGR
%module itkSimpleDataObjectDecoratorR
#endif
#ifdef SWIGRUBY
%module itkSimpleDataObjectDecoratorRuby
#endif
#ifdef SWIGSEXP
%module itkSimpleDataObjectDecoratorSexp
#endif
#ifdef SWIGTCL
%module itkSimpleDataObjectDecoratorTcl
#endif
#ifdef SWIGXML
%module itkSimpleDataObjectDecoratorXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkSimpleDataObjectDecorator_ext.i


 class itkSimpleDataObjectDecoratorB : public itkDataObject {
   public:
     static itkSimpleDataObjectDecoratorB_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Set(bool const & val);
     virtual bool & Get();
     virtual bool const & Get() const;
   private:
     itkSimpleDataObjectDecoratorB(itkSimpleDataObjectDecoratorB const & arg0);
     void operator=(itkSimpleDataObjectDecoratorB const & arg0);
   protected:
     itkSimpleDataObjectDecoratorB();
     ~itkSimpleDataObjectDecoratorB();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSimpleDataObjectDecoratorB_Pointer {
   public:
     itkSimpleDataObjectDecoratorB_Pointer();
     itkSimpleDataObjectDecoratorB_Pointer(itkSimpleDataObjectDecoratorB_Pointer const & p);
     itkSimpleDataObjectDecoratorB_Pointer(itkSimpleDataObjectDecoratorB * p);
     ~itkSimpleDataObjectDecoratorB_Pointer();
     itkSimpleDataObjectDecoratorB * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleDataObjectDecoratorB * GetPointer() const;
     bool operator<(itkSimpleDataObjectDecoratorB_Pointer const & r) const;
     bool operator>(itkSimpleDataObjectDecoratorB_Pointer const & r) const;
     bool operator<=(itkSimpleDataObjectDecoratorB_Pointer const & r) const;
     bool operator>=(itkSimpleDataObjectDecoratorB_Pointer const & r) const;
     itkSimpleDataObjectDecoratorB_Pointer & operator=(itkSimpleDataObjectDecoratorB_Pointer const & r);
     itkSimpleDataObjectDecoratorB_Pointer & operator=(itkSimpleDataObjectDecoratorB * r);
     itkSimpleDataObjectDecoratorB * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleDataObjectDecoratorD : public itkDataObject {
   public:
     static itkSimpleDataObjectDecoratorD_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Set(double const & val);
     virtual double & Get();
     virtual double const & Get() const;
   private:
     itkSimpleDataObjectDecoratorD(itkSimpleDataObjectDecoratorD const & arg0);
     void operator=(itkSimpleDataObjectDecoratorD const & arg0);
   protected:
     itkSimpleDataObjectDecoratorD();
     ~itkSimpleDataObjectDecoratorD();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSimpleDataObjectDecoratorD_Pointer {
   public:
     itkSimpleDataObjectDecoratorD_Pointer();
     itkSimpleDataObjectDecoratorD_Pointer(itkSimpleDataObjectDecoratorD_Pointer const & p);
     itkSimpleDataObjectDecoratorD_Pointer(itkSimpleDataObjectDecoratorD * p);
     ~itkSimpleDataObjectDecoratorD_Pointer();
     itkSimpleDataObjectDecoratorD * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleDataObjectDecoratorD * GetPointer() const;
     bool operator<(itkSimpleDataObjectDecoratorD_Pointer const & r) const;
     bool operator>(itkSimpleDataObjectDecoratorD_Pointer const & r) const;
     bool operator<=(itkSimpleDataObjectDecoratorD_Pointer const & r) const;
     bool operator>=(itkSimpleDataObjectDecoratorD_Pointer const & r) const;
     itkSimpleDataObjectDecoratorD_Pointer & operator=(itkSimpleDataObjectDecoratorD_Pointer const & r);
     itkSimpleDataObjectDecoratorD_Pointer & operator=(itkSimpleDataObjectDecoratorD * r);
     itkSimpleDataObjectDecoratorD * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleDataObjectDecoratorF : public itkDataObject {
   public:
     static itkSimpleDataObjectDecoratorF_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Set(float const & val);
     virtual float & Get();
     virtual float const & Get() const;
   private:
     itkSimpleDataObjectDecoratorF(itkSimpleDataObjectDecoratorF const & arg0);
     void operator=(itkSimpleDataObjectDecoratorF const & arg0);
   protected:
     itkSimpleDataObjectDecoratorF();
     ~itkSimpleDataObjectDecoratorF();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSimpleDataObjectDecoratorF_Pointer {
   public:
     itkSimpleDataObjectDecoratorF_Pointer();
     itkSimpleDataObjectDecoratorF_Pointer(itkSimpleDataObjectDecoratorF_Pointer const & p);
     itkSimpleDataObjectDecoratorF_Pointer(itkSimpleDataObjectDecoratorF * p);
     ~itkSimpleDataObjectDecoratorF_Pointer();
     itkSimpleDataObjectDecoratorF * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleDataObjectDecoratorF * GetPointer() const;
     bool operator<(itkSimpleDataObjectDecoratorF_Pointer const & r) const;
     bool operator>(itkSimpleDataObjectDecoratorF_Pointer const & r) const;
     bool operator<=(itkSimpleDataObjectDecoratorF_Pointer const & r) const;
     bool operator>=(itkSimpleDataObjectDecoratorF_Pointer const & r) const;
     itkSimpleDataObjectDecoratorF_Pointer & operator=(itkSimpleDataObjectDecoratorF_Pointer const & r);
     itkSimpleDataObjectDecoratorF_Pointer & operator=(itkSimpleDataObjectDecoratorF * r);
     itkSimpleDataObjectDecoratorF * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleDataObjectDecoratorSC : public itkDataObject {
   public:
     static itkSimpleDataObjectDecoratorSC_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Set(signed char const & val);
     virtual signed char & Get();
     virtual signed char const & Get() const;
   private:
     itkSimpleDataObjectDecoratorSC(itkSimpleDataObjectDecoratorSC const & arg0);
     void operator=(itkSimpleDataObjectDecoratorSC const & arg0);
   protected:
     itkSimpleDataObjectDecoratorSC();
     ~itkSimpleDataObjectDecoratorSC();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSimpleDataObjectDecoratorSC_Pointer {
   public:
     itkSimpleDataObjectDecoratorSC_Pointer();
     itkSimpleDataObjectDecoratorSC_Pointer(itkSimpleDataObjectDecoratorSC_Pointer const & p);
     itkSimpleDataObjectDecoratorSC_Pointer(itkSimpleDataObjectDecoratorSC * p);
     ~itkSimpleDataObjectDecoratorSC_Pointer();
     itkSimpleDataObjectDecoratorSC * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleDataObjectDecoratorSC * GetPointer() const;
     bool operator<(itkSimpleDataObjectDecoratorSC_Pointer const & r) const;
     bool operator>(itkSimpleDataObjectDecoratorSC_Pointer const & r) const;
     bool operator<=(itkSimpleDataObjectDecoratorSC_Pointer const & r) const;
     bool operator>=(itkSimpleDataObjectDecoratorSC_Pointer const & r) const;
     itkSimpleDataObjectDecoratorSC_Pointer & operator=(itkSimpleDataObjectDecoratorSC_Pointer const & r);
     itkSimpleDataObjectDecoratorSC_Pointer & operator=(itkSimpleDataObjectDecoratorSC * r);
     itkSimpleDataObjectDecoratorSC * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleDataObjectDecoratorSL : public itkDataObject {
   public:
     static itkSimpleDataObjectDecoratorSL_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Set(long const & val);
     virtual long & Get();
     virtual long const & Get() const;
   private:
     itkSimpleDataObjectDecoratorSL(itkSimpleDataObjectDecoratorSL const & arg0);
     void operator=(itkSimpleDataObjectDecoratorSL const & arg0);
   protected:
     itkSimpleDataObjectDecoratorSL();
     ~itkSimpleDataObjectDecoratorSL();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSimpleDataObjectDecoratorSL_Pointer {
   public:
     itkSimpleDataObjectDecoratorSL_Pointer();
     itkSimpleDataObjectDecoratorSL_Pointer(itkSimpleDataObjectDecoratorSL_Pointer const & p);
     itkSimpleDataObjectDecoratorSL_Pointer(itkSimpleDataObjectDecoratorSL * p);
     ~itkSimpleDataObjectDecoratorSL_Pointer();
     itkSimpleDataObjectDecoratorSL * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleDataObjectDecoratorSL * GetPointer() const;
     bool operator<(itkSimpleDataObjectDecoratorSL_Pointer const & r) const;
     bool operator>(itkSimpleDataObjectDecoratorSL_Pointer const & r) const;
     bool operator<=(itkSimpleDataObjectDecoratorSL_Pointer const & r) const;
     bool operator>=(itkSimpleDataObjectDecoratorSL_Pointer const & r) const;
     itkSimpleDataObjectDecoratorSL_Pointer & operator=(itkSimpleDataObjectDecoratorSL_Pointer const & r);
     itkSimpleDataObjectDecoratorSL_Pointer & operator=(itkSimpleDataObjectDecoratorSL * r);
     itkSimpleDataObjectDecoratorSL * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleDataObjectDecoratorSS : public itkDataObject {
   public:
     static itkSimpleDataObjectDecoratorSS_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Set(short const & val);
     virtual short & Get();
     virtual short const & Get() const;
   private:
     itkSimpleDataObjectDecoratorSS(itkSimpleDataObjectDecoratorSS const & arg0);
     void operator=(itkSimpleDataObjectDecoratorSS const & arg0);
   protected:
     itkSimpleDataObjectDecoratorSS();
     ~itkSimpleDataObjectDecoratorSS();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSimpleDataObjectDecoratorSS_Pointer {
   public:
     itkSimpleDataObjectDecoratorSS_Pointer();
     itkSimpleDataObjectDecoratorSS_Pointer(itkSimpleDataObjectDecoratorSS_Pointer const & p);
     itkSimpleDataObjectDecoratorSS_Pointer(itkSimpleDataObjectDecoratorSS * p);
     ~itkSimpleDataObjectDecoratorSS_Pointer();
     itkSimpleDataObjectDecoratorSS * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleDataObjectDecoratorSS * GetPointer() const;
     bool operator<(itkSimpleDataObjectDecoratorSS_Pointer const & r) const;
     bool operator>(itkSimpleDataObjectDecoratorSS_Pointer const & r) const;
     bool operator<=(itkSimpleDataObjectDecoratorSS_Pointer const & r) const;
     bool operator>=(itkSimpleDataObjectDecoratorSS_Pointer const & r) const;
     itkSimpleDataObjectDecoratorSS_Pointer & operator=(itkSimpleDataObjectDecoratorSS_Pointer const & r);
     itkSimpleDataObjectDecoratorSS_Pointer & operator=(itkSimpleDataObjectDecoratorSS * r);
     itkSimpleDataObjectDecoratorSS * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleDataObjectDecoratorUC : public itkDataObject {
   public:
     static itkSimpleDataObjectDecoratorUC_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Set(unsigned char const & val);
     virtual unsigned char & Get();
     virtual unsigned char const & Get() const;
   private:
     itkSimpleDataObjectDecoratorUC(itkSimpleDataObjectDecoratorUC const & arg0);
     void operator=(itkSimpleDataObjectDecoratorUC const & arg0);
   protected:
     itkSimpleDataObjectDecoratorUC();
     ~itkSimpleDataObjectDecoratorUC();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSimpleDataObjectDecoratorUC_Pointer {
   public:
     itkSimpleDataObjectDecoratorUC_Pointer();
     itkSimpleDataObjectDecoratorUC_Pointer(itkSimpleDataObjectDecoratorUC_Pointer const & p);
     itkSimpleDataObjectDecoratorUC_Pointer(itkSimpleDataObjectDecoratorUC * p);
     ~itkSimpleDataObjectDecoratorUC_Pointer();
     itkSimpleDataObjectDecoratorUC * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleDataObjectDecoratorUC * GetPointer() const;
     bool operator<(itkSimpleDataObjectDecoratorUC_Pointer const & r) const;
     bool operator>(itkSimpleDataObjectDecoratorUC_Pointer const & r) const;
     bool operator<=(itkSimpleDataObjectDecoratorUC_Pointer const & r) const;
     bool operator>=(itkSimpleDataObjectDecoratorUC_Pointer const & r) const;
     itkSimpleDataObjectDecoratorUC_Pointer & operator=(itkSimpleDataObjectDecoratorUC_Pointer const & r);
     itkSimpleDataObjectDecoratorUC_Pointer & operator=(itkSimpleDataObjectDecoratorUC * r);
     itkSimpleDataObjectDecoratorUC * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleDataObjectDecoratorUL : public itkDataObject {
   public:
     static itkSimpleDataObjectDecoratorUL_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Set(unsigned long const & val);
     virtual unsigned long & Get();
     virtual unsigned long const & Get() const;
   private:
     itkSimpleDataObjectDecoratorUL(itkSimpleDataObjectDecoratorUL const & arg0);
     void operator=(itkSimpleDataObjectDecoratorUL const & arg0);
   protected:
     itkSimpleDataObjectDecoratorUL();
     ~itkSimpleDataObjectDecoratorUL();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSimpleDataObjectDecoratorUL_Pointer {
   public:
     itkSimpleDataObjectDecoratorUL_Pointer();
     itkSimpleDataObjectDecoratorUL_Pointer(itkSimpleDataObjectDecoratorUL_Pointer const & p);
     itkSimpleDataObjectDecoratorUL_Pointer(itkSimpleDataObjectDecoratorUL * p);
     ~itkSimpleDataObjectDecoratorUL_Pointer();
     itkSimpleDataObjectDecoratorUL * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleDataObjectDecoratorUL * GetPointer() const;
     bool operator<(itkSimpleDataObjectDecoratorUL_Pointer const & r) const;
     bool operator>(itkSimpleDataObjectDecoratorUL_Pointer const & r) const;
     bool operator<=(itkSimpleDataObjectDecoratorUL_Pointer const & r) const;
     bool operator>=(itkSimpleDataObjectDecoratorUL_Pointer const & r) const;
     itkSimpleDataObjectDecoratorUL_Pointer & operator=(itkSimpleDataObjectDecoratorUL_Pointer const & r);
     itkSimpleDataObjectDecoratorUL_Pointer & operator=(itkSimpleDataObjectDecoratorUL * r);
     itkSimpleDataObjectDecoratorUL * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSimpleDataObjectDecoratorUS : public itkDataObject {
   public:
     static itkSimpleDataObjectDecoratorUS_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void Set(unsigned short const & val);
     virtual unsigned short & Get();
     virtual unsigned short const & Get() const;
   private:
     itkSimpleDataObjectDecoratorUS(itkSimpleDataObjectDecoratorUS const & arg0);
     void operator=(itkSimpleDataObjectDecoratorUS const & arg0);
   protected:
     itkSimpleDataObjectDecoratorUS();
     ~itkSimpleDataObjectDecoratorUS();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSimpleDataObjectDecoratorUS_Pointer {
   public:
     itkSimpleDataObjectDecoratorUS_Pointer();
     itkSimpleDataObjectDecoratorUS_Pointer(itkSimpleDataObjectDecoratorUS_Pointer const & p);
     itkSimpleDataObjectDecoratorUS_Pointer(itkSimpleDataObjectDecoratorUS * p);
     ~itkSimpleDataObjectDecoratorUS_Pointer();
     itkSimpleDataObjectDecoratorUS * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSimpleDataObjectDecoratorUS * GetPointer() const;
     bool operator<(itkSimpleDataObjectDecoratorUS_Pointer const & r) const;
     bool operator>(itkSimpleDataObjectDecoratorUS_Pointer const & r) const;
     bool operator<=(itkSimpleDataObjectDecoratorUS_Pointer const & r) const;
     bool operator>=(itkSimpleDataObjectDecoratorUS_Pointer const & r) const;
     itkSimpleDataObjectDecoratorUS_Pointer & operator=(itkSimpleDataObjectDecoratorUS_Pointer const & r);
     itkSimpleDataObjectDecoratorUS_Pointer & operator=(itkSimpleDataObjectDecoratorUS * r);
     itkSimpleDataObjectDecoratorUS * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


