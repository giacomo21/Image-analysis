# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkFlatStructuringElementPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkFlatStructuringElementPython', [dirname(__file__)])
        except ImportError:
            import _itkFlatStructuringElementPython
            return _itkFlatStructuringElementPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkFlatStructuringElementPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkFlatStructuringElementPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkFlatStructuringElementPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSizePython
import itkNeighborhoodPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkOffsetPython
import itkRGBPixelPython
class itkFlatStructuringElement2(itkNeighborhoodPython.itkNeighborhoodB2):
    """Proxy of C++ itkFlatStructuringElement2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    NeighborhoodDimension = _itkFlatStructuringElementPython.itkFlatStructuringElement2_NeighborhoodDimension
    __swig_destroy__ = _itkFlatStructuringElementPython.delete_itkFlatStructuringElement2
    def __init__(self, *args): 
        """
        __init__(self, itkFlatStructuringElement2 arg0) -> itkFlatStructuringElement2
        __init__(self) -> itkFlatStructuringElement2
        """
        _itkFlatStructuringElementPython.itkFlatStructuringElement2_swiginit(self,_itkFlatStructuringElementPython.new_itkFlatStructuringElement2(*args))
    def Box(*args):
        """Box(itkSize2 radius) -> itkFlatStructuringElement2"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Box(*args)

    Box = staticmethod(Box)
    def Ball(*args):
        """Ball(itkSize2 radius) -> itkFlatStructuringElement2"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Ball(*args)

    Ball = staticmethod(Ball)
    def Cross(*args):
        """Cross(itkSize2 radius) -> itkFlatStructuringElement2"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Cross(*args)

    Cross = staticmethod(Cross)
    def Annulus(*args):
        """
        Annulus(itkSize2 radius, unsigned int thickness = 1, bool includeCenter = False) -> itkFlatStructuringElement2
        Annulus(itkSize2 radius, unsigned int thickness = 1) -> itkFlatStructuringElement2
        Annulus(itkSize2 radius) -> itkFlatStructuringElement2
        """
        return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Annulus(*args)

    Annulus = staticmethod(Annulus)
    def Poly(*args):
        """Poly(itkSize2 radius, unsigned int lines) -> itkFlatStructuringElement2"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Poly(*args)

    Poly = staticmethod(Poly)
    def GetDecomposable(self):
        """GetDecomposable(self) -> bool"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement2_GetDecomposable(self)

    def GetLines(self):
        """GetLines(self) -> std::vector<(itkVectorF2,std::allocator<(itkVectorF2)>)>"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement2_GetLines(self)

    def PrintSelf(self, *args):
        """PrintSelf(self, ostream os, itkIndent indent)"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement2_PrintSelf(self, *args)

itkFlatStructuringElement2.GetDecomposable = new_instancemethod(_itkFlatStructuringElementPython.itkFlatStructuringElement2_GetDecomposable,None,itkFlatStructuringElement2)
itkFlatStructuringElement2.GetLines = new_instancemethod(_itkFlatStructuringElementPython.itkFlatStructuringElement2_GetLines,None,itkFlatStructuringElement2)
itkFlatStructuringElement2.PrintSelf = new_instancemethod(_itkFlatStructuringElementPython.itkFlatStructuringElement2_PrintSelf,None,itkFlatStructuringElement2)
itkFlatStructuringElement2_swigregister = _itkFlatStructuringElementPython.itkFlatStructuringElement2_swigregister
itkFlatStructuringElement2_swigregister(itkFlatStructuringElement2)

def itkFlatStructuringElement2_Box(*args):
  """itkFlatStructuringElement2_Box(itkSize2 radius) -> itkFlatStructuringElement2"""
  return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Box(*args)

def itkFlatStructuringElement2_Ball(*args):
  """itkFlatStructuringElement2_Ball(itkSize2 radius) -> itkFlatStructuringElement2"""
  return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Ball(*args)

def itkFlatStructuringElement2_Cross(*args):
  """itkFlatStructuringElement2_Cross(itkSize2 radius) -> itkFlatStructuringElement2"""
  return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Cross(*args)

def itkFlatStructuringElement2_Annulus(*args):
  """
    Annulus(itkSize2 radius, unsigned int thickness = 1, bool includeCenter = False) -> itkFlatStructuringElement2
    Annulus(itkSize2 radius, unsigned int thickness = 1) -> itkFlatStructuringElement2
    itkFlatStructuringElement2_Annulus(itkSize2 radius) -> itkFlatStructuringElement2
    """
  return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Annulus(*args)

def itkFlatStructuringElement2_Poly(*args):
  """itkFlatStructuringElement2_Poly(itkSize2 radius, unsigned int lines) -> itkFlatStructuringElement2"""
  return _itkFlatStructuringElementPython.itkFlatStructuringElement2_Poly(*args)

class itkFlatStructuringElement3(itkNeighborhoodPython.itkNeighborhoodB3):
    """Proxy of C++ itkFlatStructuringElement3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    NeighborhoodDimension = _itkFlatStructuringElementPython.itkFlatStructuringElement3_NeighborhoodDimension
    __swig_destroy__ = _itkFlatStructuringElementPython.delete_itkFlatStructuringElement3
    def __init__(self, *args): 
        """
        __init__(self, itkFlatStructuringElement3 arg0) -> itkFlatStructuringElement3
        __init__(self) -> itkFlatStructuringElement3
        """
        _itkFlatStructuringElementPython.itkFlatStructuringElement3_swiginit(self,_itkFlatStructuringElementPython.new_itkFlatStructuringElement3(*args))
    def Box(*args):
        """Box(itkSize3 radius) -> itkFlatStructuringElement3"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Box(*args)

    Box = staticmethod(Box)
    def Ball(*args):
        """Ball(itkSize3 radius) -> itkFlatStructuringElement3"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Ball(*args)

    Ball = staticmethod(Ball)
    def Cross(*args):
        """Cross(itkSize3 radius) -> itkFlatStructuringElement3"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Cross(*args)

    Cross = staticmethod(Cross)
    def Annulus(*args):
        """
        Annulus(itkSize3 radius, unsigned int thickness = 1, bool includeCenter = False) -> itkFlatStructuringElement3
        Annulus(itkSize3 radius, unsigned int thickness = 1) -> itkFlatStructuringElement3
        Annulus(itkSize3 radius) -> itkFlatStructuringElement3
        """
        return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Annulus(*args)

    Annulus = staticmethod(Annulus)
    def Poly(*args):
        """Poly(itkSize3 radius, unsigned int lines) -> itkFlatStructuringElement3"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Poly(*args)

    Poly = staticmethod(Poly)
    def GetDecomposable(self):
        """GetDecomposable(self) -> bool"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement3_GetDecomposable(self)

    def GetLines(self):
        """GetLines(self) -> std::vector<(itkVectorF3,std::allocator<(itkVectorF3)>)>"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement3_GetLines(self)

    def PrintSelf(self, *args):
        """PrintSelf(self, ostream os, itkIndent indent)"""
        return _itkFlatStructuringElementPython.itkFlatStructuringElement3_PrintSelf(self, *args)

itkFlatStructuringElement3.GetDecomposable = new_instancemethod(_itkFlatStructuringElementPython.itkFlatStructuringElement3_GetDecomposable,None,itkFlatStructuringElement3)
itkFlatStructuringElement3.GetLines = new_instancemethod(_itkFlatStructuringElementPython.itkFlatStructuringElement3_GetLines,None,itkFlatStructuringElement3)
itkFlatStructuringElement3.PrintSelf = new_instancemethod(_itkFlatStructuringElementPython.itkFlatStructuringElement3_PrintSelf,None,itkFlatStructuringElement3)
itkFlatStructuringElement3_swigregister = _itkFlatStructuringElementPython.itkFlatStructuringElement3_swigregister
itkFlatStructuringElement3_swigregister(itkFlatStructuringElement3)

def itkFlatStructuringElement3_Box(*args):
  """itkFlatStructuringElement3_Box(itkSize3 radius) -> itkFlatStructuringElement3"""
  return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Box(*args)

def itkFlatStructuringElement3_Ball(*args):
  """itkFlatStructuringElement3_Ball(itkSize3 radius) -> itkFlatStructuringElement3"""
  return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Ball(*args)

def itkFlatStructuringElement3_Cross(*args):
  """itkFlatStructuringElement3_Cross(itkSize3 radius) -> itkFlatStructuringElement3"""
  return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Cross(*args)

def itkFlatStructuringElement3_Annulus(*args):
  """
    Annulus(itkSize3 radius, unsigned int thickness = 1, bool includeCenter = False) -> itkFlatStructuringElement3
    Annulus(itkSize3 radius, unsigned int thickness = 1) -> itkFlatStructuringElement3
    itkFlatStructuringElement3_Annulus(itkSize3 radius) -> itkFlatStructuringElement3
    """
  return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Annulus(*args)

def itkFlatStructuringElement3_Poly(*args):
  """itkFlatStructuringElement3_Poly(itkSize3 radius, unsigned int lines) -> itkFlatStructuringElement3"""
  return _itkFlatStructuringElementPython.itkFlatStructuringElement3_Poly(*args)



