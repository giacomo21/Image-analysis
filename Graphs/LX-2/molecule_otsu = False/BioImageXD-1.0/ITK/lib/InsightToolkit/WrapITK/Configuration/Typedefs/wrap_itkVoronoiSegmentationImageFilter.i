// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVoronoiSegmentationImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkVoronoiSegmentationImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkVoronoiSegmentationImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkVoronoiSegmentationImageFilterJava
#endif
#ifdef SWIGLUA
%module itkVoronoiSegmentationImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkVoronoiSegmentationImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVoronoiSegmentationImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkVoronoiSegmentationImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkVoronoiSegmentationImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkVoronoiSegmentationImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkVoronoiSegmentationImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkVoronoiSegmentationImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkVoronoiSegmentationImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkVoronoiSegmentationImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkVoronoiSegmentationImageFilterPython
#endif
#ifdef SWIGR
%module itkVoronoiSegmentationImageFilterR
#endif
#ifdef SWIGRUBY
%module itkVoronoiSegmentationImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkVoronoiSegmentationImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkVoronoiSegmentationImageFilterTcl
#endif
#ifdef SWIGXML
%module itkVoronoiSegmentationImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_itkPoint.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkIndex.i
%import wrap_itkImage.i
%import wrap_ITKCommonBase.i
%import wrap_itkSize.i


%include itk.i
%include wrap_itkVoronoiSegmentationImageFilter_ext.i


 class itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer();
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2 * p);
     ~itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer();
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer & operator=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer & operator=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2 * r);
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfSeeds(int const _arg);
     virtual int GetNumberOfSeeds() const;
     virtual void SetMinRegion(int const _arg);
     virtual int GetMinRegion() const;
     virtual void SetSteps(int const _arg);
     virtual int GetSteps() const;
     virtual int GetLastStepSeeds() const;
     virtual int GetNumberOfSeedsToAdded() const;
     virtual void SetUseBackgroundInAPrior(bool const _arg);
     virtual bool GetUseBackgroundInAPrior() const;
     virtual void SetOutputBoundary(bool const _arg);
     virtual bool GetOutputBoundary() const;
     virtual void SetInteractiveSegmentation(bool const _arg);
     virtual bool GetInteractiveSegmentation() const;
     virtual void InteractiveSegmentationOn();
     virtual void InteractiveSegmentationOff();
     virtual void SetMeanDeviation(double const _arg);
     virtual double GetMeanDeviation() const;
     virtual void SetSize(itkSize2 const _arg);
     virtual itkSize2 GetSize() const;
     virtual void TakeAPrior(itkImageUC2 const * arg0);
     void RunSegment();
     void RunSegmentOneStep();
     virtual void MakeSegmentBoundary();
     virtual void MakeSegmentObject();
     itk::SmartPointer< itk::VoronoiDiagram2D< double > > GetVoronoiDiagram();
     void SetSeeds(std::vector< itkPointD2 > & seeds);
     itkPointD2 GetSeed(int SeedID);
     void DrawDiagram(itkImageUC2_Pointer result, unsigned char incolor, unsigned char outcolor, unsigned char boundcolor);
     void BeforeNextStep();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
   private:
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass();
     ~itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void ClassifyDiagram();
     virtual void GenerateAddingSeeds();
     void GetPixelIndexFromPolygon(std::deque< itkPointD2 > VertList, std::vector< itkIndex2 > * PixelPool);
     virtual bool TestHomogeneity(std::vector< itkIndex2 > & arg0);
     void FillPolygon(std::deque< itkPointD2 > vertlist, unsigned char color = 1);
     void drawLine(itkPointD2 p1, itkPointD2 p2);
     void drawVDline(itkImageUC2_Pointer result, itkPointD2 p1, itkPointD2 p2, unsigned char color);
 };


 class itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass * r);
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer();
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2 * p);
     ~itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer();
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer & operator=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer & operator=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2 * r);
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfSeeds(int const _arg);
     virtual int GetNumberOfSeeds() const;
     virtual void SetMinRegion(int const _arg);
     virtual int GetMinRegion() const;
     virtual void SetSteps(int const _arg);
     virtual int GetSteps() const;
     virtual int GetLastStepSeeds() const;
     virtual int GetNumberOfSeedsToAdded() const;
     virtual void SetUseBackgroundInAPrior(bool const _arg);
     virtual bool GetUseBackgroundInAPrior() const;
     virtual void SetOutputBoundary(bool const _arg);
     virtual bool GetOutputBoundary() const;
     virtual void SetInteractiveSegmentation(bool const _arg);
     virtual bool GetInteractiveSegmentation() const;
     virtual void InteractiveSegmentationOn();
     virtual void InteractiveSegmentationOff();
     virtual void SetMeanDeviation(double const _arg);
     virtual double GetMeanDeviation() const;
     virtual void SetSize(itkSize2 const _arg);
     virtual itkSize2 GetSize() const;
     virtual void TakeAPrior(itkImageUL2 const * arg0);
     void RunSegment();
     void RunSegmentOneStep();
     virtual void MakeSegmentBoundary();
     virtual void MakeSegmentObject();
     itk::SmartPointer< itk::VoronoiDiagram2D< double > > GetVoronoiDiagram();
     void SetSeeds(std::vector< itkPointD2 > & seeds);
     itkPointD2 GetSeed(int SeedID);
     void DrawDiagram(itkImageUC2_Pointer result, unsigned char incolor, unsigned char outcolor, unsigned char boundcolor);
     void BeforeNextStep();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
   private:
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass();
     ~itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void ClassifyDiagram();
     virtual void GenerateAddingSeeds();
     void GetPixelIndexFromPolygon(std::deque< itkPointD2 > VertList, std::vector< itkIndex2 > * PixelPool);
     virtual bool TestHomogeneity(std::vector< itkIndex2 > & arg0);
     void FillPolygon(std::deque< itkPointD2 > vertlist, unsigned long color = 1);
     void drawLine(itkPointD2 p1, itkPointD2 p2);
     void drawVDline(itkImageUC2_Pointer result, itkPointD2 p1, itkPointD2 p2, unsigned char color);
 };


 class itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass * r);
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer();
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2 * p);
     ~itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer();
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer & operator=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer & operator=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2 * r);
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfSeeds(int const _arg);
     virtual int GetNumberOfSeeds() const;
     virtual void SetMinRegion(int const _arg);
     virtual int GetMinRegion() const;
     virtual void SetSteps(int const _arg);
     virtual int GetSteps() const;
     virtual int GetLastStepSeeds() const;
     virtual int GetNumberOfSeedsToAdded() const;
     virtual void SetUseBackgroundInAPrior(bool const _arg);
     virtual bool GetUseBackgroundInAPrior() const;
     virtual void SetOutputBoundary(bool const _arg);
     virtual bool GetOutputBoundary() const;
     virtual void SetInteractiveSegmentation(bool const _arg);
     virtual bool GetInteractiveSegmentation() const;
     virtual void InteractiveSegmentationOn();
     virtual void InteractiveSegmentationOff();
     virtual void SetMeanDeviation(double const _arg);
     virtual double GetMeanDeviation() const;
     virtual void SetSize(itkSize2 const _arg);
     virtual itkSize2 GetSize() const;
     virtual void TakeAPrior(itkImageUS2 const * arg0);
     void RunSegment();
     void RunSegmentOneStep();
     virtual void MakeSegmentBoundary();
     virtual void MakeSegmentObject();
     itk::SmartPointer< itk::VoronoiDiagram2D< double > > GetVoronoiDiagram();
     void SetSeeds(std::vector< itkPointD2 > & seeds);
     itkPointD2 GetSeed(int SeedID);
     void DrawDiagram(itkImageUC2_Pointer result, unsigned char incolor, unsigned char outcolor, unsigned char boundcolor);
     void BeforeNextStep();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
   private:
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass();
     ~itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void ClassifyDiagram();
     virtual void GenerateAddingSeeds();
     void GetPixelIndexFromPolygon(std::deque< itkPointD2 > VertList, std::vector< itkIndex2 > * PixelPool);
     virtual bool TestHomogeneity(std::vector< itkIndex2 > & arg0);
     void FillPolygon(std::deque< itkPointD2 > vertlist, unsigned short color = 1);
     void drawLine(itkPointD2 p1, itkPointD2 p2);
     void drawVDline(itkImageUC2_Pointer result, itkPointD2 p1, itkPointD2 p2, unsigned char color);
 };


 class itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass * r);
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVoronoiSegmentationImageFilterIUC2IUC2IUC2 : public itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     static itkVoronoiSegmentationImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetMean(double const _arg);
     virtual double GetMean() const;
     virtual void SetSTD(double const _arg);
     virtual double GetSTD() const;
     virtual void SetMeanTolerance(double const _arg);
     virtual double GetMeanTolerance() const;
     virtual void SetSTDTolerance(double const _arg);
     virtual double GetSTDTolerance() const;
     void SetMeanPercentError(double x);
     virtual double GetMeanPercentError() const;
     virtual double GetSTDPercentError() const;
     void SetSTDPercentError(double x);
     virtual void TakeAPrior(itkImageUC2 const * aprior);
   private:
     virtual bool TestHomogeneity(std::vector< itkIndex2 > & Plist);
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkVoronoiSegmentationImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkVoronoiSegmentationImageFilterIUC2IUC2IUC2();
     ~itkVoronoiSegmentationImageFilterIUC2IUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkVoronoiSegmentationImageFilterIUL2IUL2IUL2 : public itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     static itkVoronoiSegmentationImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetMean(double const _arg);
     virtual double GetMean() const;
     virtual void SetSTD(double const _arg);
     virtual double GetSTD() const;
     virtual void SetMeanTolerance(double const _arg);
     virtual double GetMeanTolerance() const;
     virtual void SetSTDTolerance(double const _arg);
     virtual double GetSTDTolerance() const;
     void SetMeanPercentError(double x);
     virtual double GetMeanPercentError() const;
     virtual double GetSTDPercentError() const;
     void SetSTDPercentError(double x);
     virtual void TakeAPrior(itkImageUL2 const * aprior);
   private:
     virtual bool TestHomogeneity(std::vector< itkIndex2 > & Plist);
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkVoronoiSegmentationImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkVoronoiSegmentationImageFilterIUL2IUL2IUL2();
     ~itkVoronoiSegmentationImageFilterIUL2IUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkVoronoiSegmentationImageFilterIUS2IUS2IUS2 : public itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  IntConvertibleToOutputCheck = 1 };
     static itkVoronoiSegmentationImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetMean(double const _arg);
     virtual double GetMean() const;
     virtual void SetSTD(double const _arg);
     virtual double GetSTD() const;
     virtual void SetMeanTolerance(double const _arg);
     virtual double GetMeanTolerance() const;
     virtual void SetSTDTolerance(double const _arg);
     virtual double GetSTDTolerance() const;
     void SetMeanPercentError(double x);
     virtual double GetMeanPercentError() const;
     virtual double GetSTDPercentError() const;
     void SetSTDPercentError(double x);
     virtual void TakeAPrior(itkImageUS2 const * aprior);
   private:
     virtual bool TestHomogeneity(std::vector< itkIndex2 > & Plist);
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkVoronoiSegmentationImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkVoronoiSegmentationImageFilterIUS2IUS2IUS2();
     ~itkVoronoiSegmentationImageFilterIUS2IUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


