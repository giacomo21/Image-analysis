// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVectorGradientAnisotropicDiffusionImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkVectorGradientAnisotropicDiffusionImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkVectorGradientAnisotropicDiffusionImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkVectorGradientAnisotropicDiffusionImageFilterJava
#endif
#ifdef SWIGLUA
%module itkVectorGradientAnisotropicDiffusionImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkVectorGradientAnisotropicDiffusionImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVectorGradientAnisotropicDiffusionImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkVectorGradientAnisotropicDiffusionImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkVectorGradientAnisotropicDiffusionImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkVectorGradientAnisotropicDiffusionImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkVectorGradientAnisotropicDiffusionImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkVectorGradientAnisotropicDiffusionImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkVectorGradientAnisotropicDiffusionImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkVectorGradientAnisotropicDiffusionImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkVectorGradientAnisotropicDiffusionImageFilterPython
#endif
#ifdef SWIGR
%module itkVectorGradientAnisotropicDiffusionImageFilterR
#endif
#ifdef SWIGRUBY
%module itkVectorGradientAnisotropicDiffusionImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkVectorGradientAnisotropicDiffusionImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkVectorGradientAnisotropicDiffusionImageFilterTcl
#endif
#ifdef SWIGXML
%module itkVectorGradientAnisotropicDiffusionImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Denoising.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkAnisotropicDiffusionImageFilter.i


%include itk.i
%include wrap_itkVectorGradientAnisotropicDiffusionImageFilter_ext.i


 class itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 : public itkAnisotropicDiffusionImageFilterICVF22ICVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 const & arg0);
     void operator=(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 const & arg0);
   protected:
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22();
     ~itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22();
 };


 class itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer {
   public:
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer();
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & p);
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 * p);
     ~itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer();
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 * GetPointer() const;
     bool operator<(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator>(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator<=(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r) const;
     bool operator>=(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r) const;
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer & operator=(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer const & r);
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer & operator=(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 * r);
     itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 : public itkAnisotropicDiffusionImageFilterICVF33ICVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 const & arg0);
     void operator=(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 const & arg0);
   protected:
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33();
     ~itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33();
 };


 class itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer {
   public:
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer();
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & p);
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 * p);
     ~itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer();
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 * GetPointer() const;
     bool operator<(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator>(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator<=(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r) const;
     bool operator>=(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r) const;
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer & operator=(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer const & r);
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer & operator=(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 * r);
     itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 : public itkAnisotropicDiffusionImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 const & arg0);
     void operator=(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 const & arg0);
   protected:
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22();
     ~itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22();
 };


 class itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer {
   public:
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer();
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & p);
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 * p);
     ~itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer();
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 * GetPointer() const;
     bool operator<(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator<=(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>=(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r) const;
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer & operator=(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer const & r);
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer & operator=(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 * r);
     itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 : public itkAnisotropicDiffusionImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 const & arg0);
     void operator=(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 const & arg0);
   protected:
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33();
     ~itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33();
 };


 class itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer {
   public:
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer();
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & p);
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 * p);
     ~itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer();
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 * GetPointer() const;
     bool operator<(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator<=(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>=(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r) const;
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer & operator=(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer const & r);
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer & operator=(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 * r);
     itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


