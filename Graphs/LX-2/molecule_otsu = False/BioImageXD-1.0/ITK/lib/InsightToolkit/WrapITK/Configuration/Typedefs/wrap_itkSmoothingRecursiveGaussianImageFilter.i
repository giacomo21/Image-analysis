// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSmoothingRecursiveGaussianImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkSmoothingRecursiveGaussianImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkSmoothingRecursiveGaussianImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkSmoothingRecursiveGaussianImageFilterJava
#endif
#ifdef SWIGLUA
%module itkSmoothingRecursiveGaussianImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkSmoothingRecursiveGaussianImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSmoothingRecursiveGaussianImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkSmoothingRecursiveGaussianImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkSmoothingRecursiveGaussianImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkSmoothingRecursiveGaussianImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkSmoothingRecursiveGaussianImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkSmoothingRecursiveGaussianImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkSmoothingRecursiveGaussianImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkSmoothingRecursiveGaussianImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkSmoothingRecursiveGaussianImageFilterPython
#endif
#ifdef SWIGR
%module itkSmoothingRecursiveGaussianImageFilterR
#endif
#ifdef SWIGRUBY
%module itkSmoothingRecursiveGaussianImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkSmoothingRecursiveGaussianImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkSmoothingRecursiveGaussianImageFilterTcl
#endif
#ifdef SWIGXML
%module itkSmoothingRecursiveGaussianImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Filtering.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkFixedArray.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkSmoothingRecursiveGaussianImageFilter_ext.i


 class itkSmoothingRecursiveGaussianImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD2 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD2 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterID2ID2(itkSmoothingRecursiveGaussianImageFilterID2ID2 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterID2ID2 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterID2ID2();
     ~itkSmoothingRecursiveGaussianImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer(itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer(itkSmoothingRecursiveGaussianImageFilterID2ID2 * p);
     ~itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterID2ID2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterID2ID2 * r);
     itkSmoothingRecursiveGaussianImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothingRecursiveGaussianImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD3 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD3 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterID3ID3(itkSmoothingRecursiveGaussianImageFilterID3ID3 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterID3ID3 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterID3ID3();
     ~itkSmoothingRecursiveGaussianImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer(itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer(itkSmoothingRecursiveGaussianImageFilterID3ID3 * p);
     ~itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterID3ID3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterID3ID3 * r);
     itkSmoothingRecursiveGaussianImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothingRecursiveGaussianImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD2 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD2 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterIF2IF2(itkSmoothingRecursiveGaussianImageFilterIF2IF2 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterIF2IF2 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterIF2IF2();
     ~itkSmoothingRecursiveGaussianImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer(itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer(itkSmoothingRecursiveGaussianImageFilterIF2IF2 * p);
     ~itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterIF2IF2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIF2IF2 * r);
     itkSmoothingRecursiveGaussianImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothingRecursiveGaussianImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD3 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD3 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterIF3IF3(itkSmoothingRecursiveGaussianImageFilterIF3IF3 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterIF3IF3 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterIF3IF3();
     ~itkSmoothingRecursiveGaussianImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer(itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer(itkSmoothingRecursiveGaussianImageFilterIF3IF3 * p);
     ~itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterIF3IF3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIF3IF3 * r);
     itkSmoothingRecursiveGaussianImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD2 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD2 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2();
     ~itkSmoothingRecursiveGaussianImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 * p);
     ~itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 * r);
     itkSmoothingRecursiveGaussianImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD3 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD3 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3();
     ~itkSmoothingRecursiveGaussianImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 * p);
     ~itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 * r);
     itkSmoothingRecursiveGaussianImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD2 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD2 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2();
     ~itkSmoothingRecursiveGaussianImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 * p);
     ~itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 * r);
     itkSmoothingRecursiveGaussianImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD3 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD3 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3();
     ~itkSmoothingRecursiveGaussianImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 * p);
     ~itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 * r);
     itkSmoothingRecursiveGaussianImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD2 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD2 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2();
     ~itkSmoothingRecursiveGaussianImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 * p);
     ~itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 * r);
     itkSmoothingRecursiveGaussianImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void SetSigmaArray(itkFixedArrayD3 const & sigmas);
     void SetSigma(double sigma);
     itkFixedArrayD3 GetSigmaArray() const;
     double GetSigma() const;
     void SetNormalizeAcrossScale(bool normalizeInScaleSpace);
     virtual bool GetNormalizeAcrossScale() const;
     virtual void SetNumberOfThreads(int nb);
   private:
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 const & arg0);
     void operator=(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 const & arg0);
   protected:
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3();
     ~itkSmoothingRecursiveGaussianImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
 };


 class itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer {
   public:
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer const & p);
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 * p);
     ~itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer();
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r) const;
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer const & r);
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3_Pointer & operator=(itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 * r);
     itkSmoothingRecursiveGaussianImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


