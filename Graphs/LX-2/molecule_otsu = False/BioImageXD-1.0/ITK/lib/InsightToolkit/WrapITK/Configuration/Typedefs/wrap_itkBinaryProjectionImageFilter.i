// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBinaryProjectionImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBinaryProjectionImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBinaryProjectionImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBinaryProjectionImageFilterJava
#endif
#ifdef SWIGLUA
%module itkBinaryProjectionImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBinaryProjectionImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBinaryProjectionImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBinaryProjectionImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBinaryProjectionImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBinaryProjectionImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBinaryProjectionImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBinaryProjectionImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBinaryProjectionImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBinaryProjectionImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBinaryProjectionImageFilterPython
#endif
#ifdef SWIGR
%module itkBinaryProjectionImageFilterR
#endif
#ifdef SWIGRUBY
%module itkBinaryProjectionImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBinaryProjectionImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkBinaryProjectionImageFilterTcl
#endif
#ifdef SWIGXML
%module itkBinaryProjectionImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterB.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkBinaryProjectionImageFilter_ext.i


 class itkBinaryProjectionImageFilterID2ID2_Pointer {
   public:
     itkBinaryProjectionImageFilterID2ID2_Pointer();
     itkBinaryProjectionImageFilterID2ID2_Pointer(itkBinaryProjectionImageFilterID2ID2_Pointer const & p);
     itkBinaryProjectionImageFilterID2ID2_Pointer(itkBinaryProjectionImageFilterID2ID2 * p);
     ~itkBinaryProjectionImageFilterID2ID2_Pointer();
     itkBinaryProjectionImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterID2ID2_Pointer const & r) const;
     itkBinaryProjectionImageFilterID2ID2_Pointer & operator=(itkBinaryProjectionImageFilterID2ID2_Pointer const & r);
     itkBinaryProjectionImageFilterID2ID2_Pointer & operator=(itkBinaryProjectionImageFilterID2ID2 * r);
     itkBinaryProjectionImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterID2ID2_Superclass : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterID2ID2_Superclass(itkBinaryProjectionImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterID2ID2_Superclass();
     ~itkBinaryProjectionImageFilterID2ID2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< double, double > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer();
     itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer(itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer(itkBinaryProjectionImageFilterID2ID2_Superclass * p);
     ~itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer();
     itkBinaryProjectionImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterID2ID2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterID2ID2_Superclass * r);
     itkBinaryProjectionImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterID3ID3_Pointer {
   public:
     itkBinaryProjectionImageFilterID3ID3_Pointer();
     itkBinaryProjectionImageFilterID3ID3_Pointer(itkBinaryProjectionImageFilterID3ID3_Pointer const & p);
     itkBinaryProjectionImageFilterID3ID3_Pointer(itkBinaryProjectionImageFilterID3ID3 * p);
     ~itkBinaryProjectionImageFilterID3ID3_Pointer();
     itkBinaryProjectionImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterID3ID3_Pointer const & r) const;
     itkBinaryProjectionImageFilterID3ID3_Pointer & operator=(itkBinaryProjectionImageFilterID3ID3_Pointer const & r);
     itkBinaryProjectionImageFilterID3ID3_Pointer & operator=(itkBinaryProjectionImageFilterID3ID3 * r);
     itkBinaryProjectionImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterID3ID3_Superclass : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterID3ID3_Superclass(itkBinaryProjectionImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterID3ID3_Superclass();
     ~itkBinaryProjectionImageFilterID3ID3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< double, double > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer();
     itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer(itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer(itkBinaryProjectionImageFilterID3ID3_Superclass * p);
     ~itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer();
     itkBinaryProjectionImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterID3ID3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterID3ID3_Superclass * r);
     itkBinaryProjectionImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIF2IF2_Pointer {
   public:
     itkBinaryProjectionImageFilterIF2IF2_Pointer();
     itkBinaryProjectionImageFilterIF2IF2_Pointer(itkBinaryProjectionImageFilterIF2IF2_Pointer const & p);
     itkBinaryProjectionImageFilterIF2IF2_Pointer(itkBinaryProjectionImageFilterIF2IF2 * p);
     ~itkBinaryProjectionImageFilterIF2IF2_Pointer();
     itkBinaryProjectionImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIF2IF2_Pointer const & r) const;
     itkBinaryProjectionImageFilterIF2IF2_Pointer & operator=(itkBinaryProjectionImageFilterIF2IF2_Pointer const & r);
     itkBinaryProjectionImageFilterIF2IF2_Pointer & operator=(itkBinaryProjectionImageFilterIF2IF2 * r);
     itkBinaryProjectionImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIF2IF2_Superclass : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIF2IF2_Superclass(itkBinaryProjectionImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIF2IF2_Superclass();
     ~itkBinaryProjectionImageFilterIF2IF2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< float, float > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer(itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer(itkBinaryProjectionImageFilterIF2IF2_Superclass * p);
     ~itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIF2IF2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIF2IF2_Superclass * r);
     itkBinaryProjectionImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIF3IF3_Pointer {
   public:
     itkBinaryProjectionImageFilterIF3IF3_Pointer();
     itkBinaryProjectionImageFilterIF3IF3_Pointer(itkBinaryProjectionImageFilterIF3IF3_Pointer const & p);
     itkBinaryProjectionImageFilterIF3IF3_Pointer(itkBinaryProjectionImageFilterIF3IF3 * p);
     ~itkBinaryProjectionImageFilterIF3IF3_Pointer();
     itkBinaryProjectionImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIF3IF3_Pointer const & r) const;
     itkBinaryProjectionImageFilterIF3IF3_Pointer & operator=(itkBinaryProjectionImageFilterIF3IF3_Pointer const & r);
     itkBinaryProjectionImageFilterIF3IF3_Pointer & operator=(itkBinaryProjectionImageFilterIF3IF3 * r);
     itkBinaryProjectionImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIF3IF3_Superclass : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIF3IF3_Superclass(itkBinaryProjectionImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIF3IF3_Superclass();
     ~itkBinaryProjectionImageFilterIF3IF3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< float, float > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer();
     itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer(itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer(itkBinaryProjectionImageFilterIF3IF3_Superclass * p);
     ~itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer();
     itkBinaryProjectionImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIF3IF3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIF3IF3_Superclass * r);
     itkBinaryProjectionImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUC2IUC2_Pointer {
   public:
     itkBinaryProjectionImageFilterIUC2IUC2_Pointer();
     itkBinaryProjectionImageFilterIUC2IUC2_Pointer(itkBinaryProjectionImageFilterIUC2IUC2_Pointer const & p);
     itkBinaryProjectionImageFilterIUC2IUC2_Pointer(itkBinaryProjectionImageFilterIUC2IUC2 * p);
     ~itkBinaryProjectionImageFilterIUC2IUC2_Pointer();
     itkBinaryProjectionImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUC2IUC2_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUC2IUC2_Pointer & operator=(itkBinaryProjectionImageFilterIUC2IUC2_Pointer const & r);
     itkBinaryProjectionImageFilterIUC2IUC2_Pointer & operator=(itkBinaryProjectionImageFilterIUC2IUC2 * r);
     itkBinaryProjectionImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUC2IUC2_Superclass : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass(itkBinaryProjectionImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass();
     ~itkBinaryProjectionImageFilterIUC2IUC2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer(itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer(itkBinaryProjectionImageFilterIUC2IUC2_Superclass * p);
     ~itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUC2IUC2_Superclass * r);
     itkBinaryProjectionImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUC3IUC2_Pointer {
   public:
     itkBinaryProjectionImageFilterIUC3IUC2_Pointer();
     itkBinaryProjectionImageFilterIUC3IUC2_Pointer(itkBinaryProjectionImageFilterIUC3IUC2_Pointer const & p);
     itkBinaryProjectionImageFilterIUC3IUC2_Pointer(itkBinaryProjectionImageFilterIUC3IUC2 * p);
     ~itkBinaryProjectionImageFilterIUC3IUC2_Pointer();
     itkBinaryProjectionImageFilterIUC3IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUC3IUC2 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUC3IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUC3IUC2_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUC3IUC2_Pointer & operator=(itkBinaryProjectionImageFilterIUC3IUC2_Pointer const & r);
     itkBinaryProjectionImageFilterIUC3IUC2_Pointer & operator=(itkBinaryProjectionImageFilterIUC3IUC2 * r);
     itkBinaryProjectionImageFilterIUC3IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUC3IUC2_Superclass : public itkImageToImageFilterIUC3IUC2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass(itkBinaryProjectionImageFilterIUC3IUC2_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUC3IUC2_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass();
     ~itkBinaryProjectionImageFilterIUC3IUC2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer(itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer(itkBinaryProjectionImageFilterIUC3IUC2_Superclass * p);
     ~itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUC3IUC2_Superclass * r);
     itkBinaryProjectionImageFilterIUC3IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUC3IUC3_Pointer {
   public:
     itkBinaryProjectionImageFilterIUC3IUC3_Pointer();
     itkBinaryProjectionImageFilterIUC3IUC3_Pointer(itkBinaryProjectionImageFilterIUC3IUC3_Pointer const & p);
     itkBinaryProjectionImageFilterIUC3IUC3_Pointer(itkBinaryProjectionImageFilterIUC3IUC3 * p);
     ~itkBinaryProjectionImageFilterIUC3IUC3_Pointer();
     itkBinaryProjectionImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUC3IUC3_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUC3IUC3_Pointer & operator=(itkBinaryProjectionImageFilterIUC3IUC3_Pointer const & r);
     itkBinaryProjectionImageFilterIUC3IUC3_Pointer & operator=(itkBinaryProjectionImageFilterIUC3IUC3 * r);
     itkBinaryProjectionImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUC3IUC3_Superclass : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass(itkBinaryProjectionImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass();
     ~itkBinaryProjectionImageFilterIUC3IUC3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer(itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer(itkBinaryProjectionImageFilterIUC3IUC3_Superclass * p);
     ~itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUC3IUC3_Superclass * r);
     itkBinaryProjectionImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUL2IUL2_Pointer {
   public:
     itkBinaryProjectionImageFilterIUL2IUL2_Pointer();
     itkBinaryProjectionImageFilterIUL2IUL2_Pointer(itkBinaryProjectionImageFilterIUL2IUL2_Pointer const & p);
     itkBinaryProjectionImageFilterIUL2IUL2_Pointer(itkBinaryProjectionImageFilterIUL2IUL2 * p);
     ~itkBinaryProjectionImageFilterIUL2IUL2_Pointer();
     itkBinaryProjectionImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUL2IUL2_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUL2IUL2_Pointer & operator=(itkBinaryProjectionImageFilterIUL2IUL2_Pointer const & r);
     itkBinaryProjectionImageFilterIUL2IUL2_Pointer & operator=(itkBinaryProjectionImageFilterIUL2IUL2 * r);
     itkBinaryProjectionImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUL2IUL2_Superclass : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass(itkBinaryProjectionImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass();
     ~itkBinaryProjectionImageFilterIUL2IUL2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer(itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer(itkBinaryProjectionImageFilterIUL2IUL2_Superclass * p);
     ~itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUL2IUL2_Superclass * r);
     itkBinaryProjectionImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUL3IUL2_Pointer {
   public:
     itkBinaryProjectionImageFilterIUL3IUL2_Pointer();
     itkBinaryProjectionImageFilterIUL3IUL2_Pointer(itkBinaryProjectionImageFilterIUL3IUL2_Pointer const & p);
     itkBinaryProjectionImageFilterIUL3IUL2_Pointer(itkBinaryProjectionImageFilterIUL3IUL2 * p);
     ~itkBinaryProjectionImageFilterIUL3IUL2_Pointer();
     itkBinaryProjectionImageFilterIUL3IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUL3IUL2 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUL3IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUL3IUL2_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUL3IUL2_Pointer & operator=(itkBinaryProjectionImageFilterIUL3IUL2_Pointer const & r);
     itkBinaryProjectionImageFilterIUL3IUL2_Pointer & operator=(itkBinaryProjectionImageFilterIUL3IUL2 * r);
     itkBinaryProjectionImageFilterIUL3IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUL3IUL2_Superclass : public itkImageToImageFilterIUL3IUL2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass(itkBinaryProjectionImageFilterIUL3IUL2_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUL3IUL2_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass();
     ~itkBinaryProjectionImageFilterIUL3IUL2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer(itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer(itkBinaryProjectionImageFilterIUL3IUL2_Superclass * p);
     ~itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUL3IUL2_Superclass * r);
     itkBinaryProjectionImageFilterIUL3IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUL3IUL3_Pointer {
   public:
     itkBinaryProjectionImageFilterIUL3IUL3_Pointer();
     itkBinaryProjectionImageFilterIUL3IUL3_Pointer(itkBinaryProjectionImageFilterIUL3IUL3_Pointer const & p);
     itkBinaryProjectionImageFilterIUL3IUL3_Pointer(itkBinaryProjectionImageFilterIUL3IUL3 * p);
     ~itkBinaryProjectionImageFilterIUL3IUL3_Pointer();
     itkBinaryProjectionImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUL3IUL3_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUL3IUL3_Pointer & operator=(itkBinaryProjectionImageFilterIUL3IUL3_Pointer const & r);
     itkBinaryProjectionImageFilterIUL3IUL3_Pointer & operator=(itkBinaryProjectionImageFilterIUL3IUL3 * r);
     itkBinaryProjectionImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUL3IUL3_Superclass : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass(itkBinaryProjectionImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass();
     ~itkBinaryProjectionImageFilterIUL3IUL3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer(itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer(itkBinaryProjectionImageFilterIUL3IUL3_Superclass * p);
     ~itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUL3IUL3_Superclass * r);
     itkBinaryProjectionImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUS2IUS2_Pointer {
   public:
     itkBinaryProjectionImageFilterIUS2IUS2_Pointer();
     itkBinaryProjectionImageFilterIUS2IUS2_Pointer(itkBinaryProjectionImageFilterIUS2IUS2_Pointer const & p);
     itkBinaryProjectionImageFilterIUS2IUS2_Pointer(itkBinaryProjectionImageFilterIUS2IUS2 * p);
     ~itkBinaryProjectionImageFilterIUS2IUS2_Pointer();
     itkBinaryProjectionImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUS2IUS2_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUS2IUS2_Pointer & operator=(itkBinaryProjectionImageFilterIUS2IUS2_Pointer const & r);
     itkBinaryProjectionImageFilterIUS2IUS2_Pointer & operator=(itkBinaryProjectionImageFilterIUS2IUS2 * r);
     itkBinaryProjectionImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUS2IUS2_Superclass : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass(itkBinaryProjectionImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass();
     ~itkBinaryProjectionImageFilterIUS2IUS2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer(itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer(itkBinaryProjectionImageFilterIUS2IUS2_Superclass * p);
     ~itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUS2IUS2_Superclass * r);
     itkBinaryProjectionImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUS3IUS2_Pointer {
   public:
     itkBinaryProjectionImageFilterIUS3IUS2_Pointer();
     itkBinaryProjectionImageFilterIUS3IUS2_Pointer(itkBinaryProjectionImageFilterIUS3IUS2_Pointer const & p);
     itkBinaryProjectionImageFilterIUS3IUS2_Pointer(itkBinaryProjectionImageFilterIUS3IUS2 * p);
     ~itkBinaryProjectionImageFilterIUS3IUS2_Pointer();
     itkBinaryProjectionImageFilterIUS3IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUS3IUS2 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUS3IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUS3IUS2_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUS3IUS2_Pointer & operator=(itkBinaryProjectionImageFilterIUS3IUS2_Pointer const & r);
     itkBinaryProjectionImageFilterIUS3IUS2_Pointer & operator=(itkBinaryProjectionImageFilterIUS3IUS2 * r);
     itkBinaryProjectionImageFilterIUS3IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUS3IUS2_Superclass : public itkImageToImageFilterIUS3IUS2 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass(itkBinaryProjectionImageFilterIUS3IUS2_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUS3IUS2_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass();
     ~itkBinaryProjectionImageFilterIUS3IUS2_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer(itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer(itkBinaryProjectionImageFilterIUS3IUS2_Superclass * p);
     ~itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUS3IUS2_Superclass * r);
     itkBinaryProjectionImageFilterIUS3IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUS3IUS3_Pointer {
   public:
     itkBinaryProjectionImageFilterIUS3IUS3_Pointer();
     itkBinaryProjectionImageFilterIUS3IUS3_Pointer(itkBinaryProjectionImageFilterIUS3IUS3_Pointer const & p);
     itkBinaryProjectionImageFilterIUS3IUS3_Pointer(itkBinaryProjectionImageFilterIUS3IUS3 * p);
     ~itkBinaryProjectionImageFilterIUS3IUS3_Pointer();
     itkBinaryProjectionImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUS3IUS3_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUS3IUS3_Pointer & operator=(itkBinaryProjectionImageFilterIUS3IUS3_Pointer const & r);
     itkBinaryProjectionImageFilterIUS3IUS3_Pointer & operator=(itkBinaryProjectionImageFilterIUS3IUS3 * r);
     itkBinaryProjectionImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterIUS3IUS3_Superclass : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimensionCheck = 1 };
     static itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetProjectionDimension(unsigned int const _arg);
     virtual unsigned int const & GetProjectionDimension() const;
   private:
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass(itkBinaryProjectionImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass();
     ~itkBinaryProjectionImageFilterIUS3IUS3_Superclass();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::Function::BinaryAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long arg0) const;
 };


 class itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer(itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer(itkBinaryProjectionImageFilterIUS3IUS3_Superclass * p);
     ~itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer();
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkBinaryProjectionImageFilterIUS3IUS3_Superclass * r);
     itkBinaryProjectionImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryProjectionImageFilterID2ID2 : public itkBinaryProjectionImageFilterID2ID2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(double const _arg);
     virtual double GetForegroundValue() const;
     virtual void SetBackgroundValue(double const _arg);
     virtual double GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterID2ID2(itkBinaryProjectionImageFilterID2ID2 const & arg0);
     void operator=(itkBinaryProjectionImageFilterID2ID2 const & arg0);
   protected:
     itkBinaryProjectionImageFilterID2ID2();
     ~itkBinaryProjectionImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< double, double > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterID3ID3 : public itkBinaryProjectionImageFilterID3ID3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(double const _arg);
     virtual double GetForegroundValue() const;
     virtual void SetBackgroundValue(double const _arg);
     virtual double GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterID3ID3(itkBinaryProjectionImageFilterID3ID3 const & arg0);
     void operator=(itkBinaryProjectionImageFilterID3ID3 const & arg0);
   protected:
     itkBinaryProjectionImageFilterID3ID3();
     ~itkBinaryProjectionImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< double, double > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIF2IF2 : public itkBinaryProjectionImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(float const _arg);
     virtual float GetForegroundValue() const;
     virtual void SetBackgroundValue(float const _arg);
     virtual float GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIF2IF2(itkBinaryProjectionImageFilterIF2IF2 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIF2IF2 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIF2IF2();
     ~itkBinaryProjectionImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< float, float > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIF3IF3 : public itkBinaryProjectionImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(float const _arg);
     virtual float GetForegroundValue() const;
     virtual void SetBackgroundValue(float const _arg);
     virtual float GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIF3IF3(itkBinaryProjectionImageFilterIF3IF3 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIF3IF3 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIF3IF3();
     ~itkBinaryProjectionImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< float, float > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIUC2IUC2 : public itkBinaryProjectionImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIUC2IUC2(itkBinaryProjectionImageFilterIUC2IUC2 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUC2IUC2 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUC2IUC2();
     ~itkBinaryProjectionImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIUC3IUC2 : public itkBinaryProjectionImageFilterIUC3IUC2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIUC3IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIUC3IUC2(itkBinaryProjectionImageFilterIUC3IUC2 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUC3IUC2 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUC3IUC2();
     ~itkBinaryProjectionImageFilterIUC3IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIUC3IUC3 : public itkBinaryProjectionImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIUC3IUC3(itkBinaryProjectionImageFilterIUC3IUC3 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUC3IUC3 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUC3IUC3();
     ~itkBinaryProjectionImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< unsigned char, unsigned char > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIUL2IUL2 : public itkBinaryProjectionImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIUL2IUL2(itkBinaryProjectionImageFilterIUL2IUL2 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUL2IUL2 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUL2IUL2();
     ~itkBinaryProjectionImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIUL3IUL2 : public itkBinaryProjectionImageFilterIUL3IUL2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIUL3IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIUL3IUL2(itkBinaryProjectionImageFilterIUL3IUL2 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUL3IUL2 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUL3IUL2();
     ~itkBinaryProjectionImageFilterIUL3IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIUL3IUL3 : public itkBinaryProjectionImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIUL3IUL3(itkBinaryProjectionImageFilterIUL3IUL3 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUL3IUL3 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUL3IUL3();
     ~itkBinaryProjectionImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< unsigned long, unsigned long > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIUS2IUS2 : public itkBinaryProjectionImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIUS2IUS2(itkBinaryProjectionImageFilterIUS2IUS2 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUS2IUS2 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUS2IUS2();
     ~itkBinaryProjectionImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIUS3IUS2 : public itkBinaryProjectionImageFilterIUS3IUS2_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIUS3IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIUS3IUS2(itkBinaryProjectionImageFilterIUS3IUS2 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUS3IUS2 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUS3IUS2();
     ~itkBinaryProjectionImageFilterIUS3IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long size) const;
 };


 class itkBinaryProjectionImageFilterIUS3IUS3 : public itkBinaryProjectionImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  InputPixelTypeGreaterThanComparable = 1 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     static itkBinaryProjectionImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
   private:
     itkBinaryProjectionImageFilterIUS3IUS3(itkBinaryProjectionImageFilterIUS3IUS3 const & arg0);
     void operator=(itkBinaryProjectionImageFilterIUS3IUS3 const & arg0);
   protected:
     itkBinaryProjectionImageFilterIUS3IUS3();
     ~itkBinaryProjectionImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual itk::Function::BinaryAccumulator< unsigned short, unsigned short > NewAccumulator(unsigned long size) const;
 };


