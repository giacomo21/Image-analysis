// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkThresholdLabelerImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkThresholdLabelerImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkThresholdLabelerImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkThresholdLabelerImageFilterJava
#endif
#ifdef SWIGLUA
%module itkThresholdLabelerImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkThresholdLabelerImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkThresholdLabelerImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkThresholdLabelerImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkThresholdLabelerImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkThresholdLabelerImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkThresholdLabelerImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkThresholdLabelerImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkThresholdLabelerImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkThresholdLabelerImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkThresholdLabelerImageFilterPython
#endif
#ifdef SWIGR
%module itkThresholdLabelerImageFilterR
#endif
#ifdef SWIGRUBY
%module itkThresholdLabelerImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkThresholdLabelerImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkThresholdLabelerImageFilterTcl
#endif
#ifdef SWIGXML
%module itkThresholdLabelerImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkThresholdLabelerImageFilter_ext.i


 class itkThresholdLabelerImageFilterID2ID2_Pointer {
   public:
     itkThresholdLabelerImageFilterID2ID2_Pointer();
     itkThresholdLabelerImageFilterID2ID2_Pointer(itkThresholdLabelerImageFilterID2ID2_Pointer const & p);
     itkThresholdLabelerImageFilterID2ID2_Pointer(itkThresholdLabelerImageFilterID2ID2 * p);
     ~itkThresholdLabelerImageFilterID2ID2_Pointer();
     itkThresholdLabelerImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterID2ID2_Pointer const & r) const;
     itkThresholdLabelerImageFilterID2ID2_Pointer & operator=(itkThresholdLabelerImageFilterID2ID2_Pointer const & r);
     itkThresholdLabelerImageFilterID2ID2_Pointer & operator=(itkThresholdLabelerImageFilterID2ID2 * r);
     itkThresholdLabelerImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< double, double > & GetFunctor();
     itk::Functor::ThresholdLabeler< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< double, double > const & functor);
   private:
     itkThresholdLabelerImageFilterID2ID2_Superclass(itkThresholdLabelerImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterID2ID2_Superclass();
     ~itkThresholdLabelerImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer();
     itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer(itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer(itkThresholdLabelerImageFilterID2ID2_Superclass * p);
     ~itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer();
     itkThresholdLabelerImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterID2ID2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterID2ID2_Superclass * r);
     itkThresholdLabelerImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterID3ID3_Pointer {
   public:
     itkThresholdLabelerImageFilterID3ID3_Pointer();
     itkThresholdLabelerImageFilterID3ID3_Pointer(itkThresholdLabelerImageFilterID3ID3_Pointer const & p);
     itkThresholdLabelerImageFilterID3ID3_Pointer(itkThresholdLabelerImageFilterID3ID3 * p);
     ~itkThresholdLabelerImageFilterID3ID3_Pointer();
     itkThresholdLabelerImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterID3ID3_Pointer const & r) const;
     itkThresholdLabelerImageFilterID3ID3_Pointer & operator=(itkThresholdLabelerImageFilterID3ID3_Pointer const & r);
     itkThresholdLabelerImageFilterID3ID3_Pointer & operator=(itkThresholdLabelerImageFilterID3ID3 * r);
     itkThresholdLabelerImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< double, double > & GetFunctor();
     itk::Functor::ThresholdLabeler< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< double, double > const & functor);
   private:
     itkThresholdLabelerImageFilterID3ID3_Superclass(itkThresholdLabelerImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterID3ID3_Superclass();
     ~itkThresholdLabelerImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer();
     itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer(itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer(itkThresholdLabelerImageFilterID3ID3_Superclass * p);
     ~itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer();
     itkThresholdLabelerImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterID3ID3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterID3ID3_Superclass * r);
     itkThresholdLabelerImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIF2IF2_Pointer {
   public:
     itkThresholdLabelerImageFilterIF2IF2_Pointer();
     itkThresholdLabelerImageFilterIF2IF2_Pointer(itkThresholdLabelerImageFilterIF2IF2_Pointer const & p);
     itkThresholdLabelerImageFilterIF2IF2_Pointer(itkThresholdLabelerImageFilterIF2IF2 * p);
     ~itkThresholdLabelerImageFilterIF2IF2_Pointer();
     itkThresholdLabelerImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIF2IF2_Pointer const & r) const;
     itkThresholdLabelerImageFilterIF2IF2_Pointer & operator=(itkThresholdLabelerImageFilterIF2IF2_Pointer const & r);
     itkThresholdLabelerImageFilterIF2IF2_Pointer & operator=(itkThresholdLabelerImageFilterIF2IF2 * r);
     itkThresholdLabelerImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< float, float > & GetFunctor();
     itk::Functor::ThresholdLabeler< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< float, float > const & functor);
   private:
     itkThresholdLabelerImageFilterIF2IF2_Superclass(itkThresholdLabelerImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterIF2IF2_Superclass();
     ~itkThresholdLabelerImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer();
     itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer(itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer(itkThresholdLabelerImageFilterIF2IF2_Superclass * p);
     ~itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer();
     itkThresholdLabelerImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterIF2IF2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIF2IF2_Superclass * r);
     itkThresholdLabelerImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIF3IF3_Pointer {
   public:
     itkThresholdLabelerImageFilterIF3IF3_Pointer();
     itkThresholdLabelerImageFilterIF3IF3_Pointer(itkThresholdLabelerImageFilterIF3IF3_Pointer const & p);
     itkThresholdLabelerImageFilterIF3IF3_Pointer(itkThresholdLabelerImageFilterIF3IF3 * p);
     ~itkThresholdLabelerImageFilterIF3IF3_Pointer();
     itkThresholdLabelerImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIF3IF3_Pointer const & r) const;
     itkThresholdLabelerImageFilterIF3IF3_Pointer & operator=(itkThresholdLabelerImageFilterIF3IF3_Pointer const & r);
     itkThresholdLabelerImageFilterIF3IF3_Pointer & operator=(itkThresholdLabelerImageFilterIF3IF3 * r);
     itkThresholdLabelerImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< float, float > & GetFunctor();
     itk::Functor::ThresholdLabeler< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< float, float > const & functor);
   private:
     itkThresholdLabelerImageFilterIF3IF3_Superclass(itkThresholdLabelerImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterIF3IF3_Superclass();
     ~itkThresholdLabelerImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer();
     itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer(itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer(itkThresholdLabelerImageFilterIF3IF3_Superclass * p);
     ~itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer();
     itkThresholdLabelerImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterIF3IF3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIF3IF3_Superclass * r);
     itkThresholdLabelerImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUC2IUC2_Pointer {
   public:
     itkThresholdLabelerImageFilterIUC2IUC2_Pointer();
     itkThresholdLabelerImageFilterIUC2IUC2_Pointer(itkThresholdLabelerImageFilterIUC2IUC2_Pointer const & p);
     itkThresholdLabelerImageFilterIUC2IUC2_Pointer(itkThresholdLabelerImageFilterIUC2IUC2 * p);
     ~itkThresholdLabelerImageFilterIUC2IUC2_Pointer();
     itkThresholdLabelerImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUC2IUC2_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUC2IUC2_Pointer & operator=(itkThresholdLabelerImageFilterIUC2IUC2_Pointer const & r);
     itkThresholdLabelerImageFilterIUC2IUC2_Pointer & operator=(itkThresholdLabelerImageFilterIUC2IUC2 * r);
     itkThresholdLabelerImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     static itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::ThresholdLabeler< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< unsigned char, unsigned char > const & functor);
   private:
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass(itkThresholdLabelerImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass();
     ~itkThresholdLabelerImageFilterIUC2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer(itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer(itkThresholdLabelerImageFilterIUC2IUC2_Superclass * p);
     ~itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUC2IUC2_Superclass * r);
     itkThresholdLabelerImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUC3IUC3_Pointer {
   public:
     itkThresholdLabelerImageFilterIUC3IUC3_Pointer();
     itkThresholdLabelerImageFilterIUC3IUC3_Pointer(itkThresholdLabelerImageFilterIUC3IUC3_Pointer const & p);
     itkThresholdLabelerImageFilterIUC3IUC3_Pointer(itkThresholdLabelerImageFilterIUC3IUC3 * p);
     ~itkThresholdLabelerImageFilterIUC3IUC3_Pointer();
     itkThresholdLabelerImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUC3IUC3_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUC3IUC3_Pointer & operator=(itkThresholdLabelerImageFilterIUC3IUC3_Pointer const & r);
     itkThresholdLabelerImageFilterIUC3IUC3_Pointer & operator=(itkThresholdLabelerImageFilterIUC3IUC3 * r);
     itkThresholdLabelerImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     static itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::ThresholdLabeler< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< unsigned char, unsigned char > const & functor);
   private:
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass(itkThresholdLabelerImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass();
     ~itkThresholdLabelerImageFilterIUC3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer(itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer(itkThresholdLabelerImageFilterIUC3IUC3_Superclass * p);
     ~itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUC3IUC3_Superclass * r);
     itkThresholdLabelerImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUL2IUL2_Pointer {
   public:
     itkThresholdLabelerImageFilterIUL2IUL2_Pointer();
     itkThresholdLabelerImageFilterIUL2IUL2_Pointer(itkThresholdLabelerImageFilterIUL2IUL2_Pointer const & p);
     itkThresholdLabelerImageFilterIUL2IUL2_Pointer(itkThresholdLabelerImageFilterIUL2IUL2 * p);
     ~itkThresholdLabelerImageFilterIUL2IUL2_Pointer();
     itkThresholdLabelerImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUL2IUL2_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUL2IUL2_Pointer & operator=(itkThresholdLabelerImageFilterIUL2IUL2_Pointer const & r);
     itkThresholdLabelerImageFilterIUL2IUL2_Pointer & operator=(itkThresholdLabelerImageFilterIUL2IUL2 * r);
     itkThresholdLabelerImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     static itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::ThresholdLabeler< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< unsigned long, unsigned long > const & functor);
   private:
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass(itkThresholdLabelerImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass();
     ~itkThresholdLabelerImageFilterIUL2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer(itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer(itkThresholdLabelerImageFilterIUL2IUL2_Superclass * p);
     ~itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUL2IUL2_Superclass * r);
     itkThresholdLabelerImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUL3IUL3_Pointer {
   public:
     itkThresholdLabelerImageFilterIUL3IUL3_Pointer();
     itkThresholdLabelerImageFilterIUL3IUL3_Pointer(itkThresholdLabelerImageFilterIUL3IUL3_Pointer const & p);
     itkThresholdLabelerImageFilterIUL3IUL3_Pointer(itkThresholdLabelerImageFilterIUL3IUL3 * p);
     ~itkThresholdLabelerImageFilterIUL3IUL3_Pointer();
     itkThresholdLabelerImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUL3IUL3_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUL3IUL3_Pointer & operator=(itkThresholdLabelerImageFilterIUL3IUL3_Pointer const & r);
     itkThresholdLabelerImageFilterIUL3IUL3_Pointer & operator=(itkThresholdLabelerImageFilterIUL3IUL3 * r);
     itkThresholdLabelerImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     static itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::ThresholdLabeler< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< unsigned long, unsigned long > const & functor);
   private:
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass(itkThresholdLabelerImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass();
     ~itkThresholdLabelerImageFilterIUL3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer(itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer(itkThresholdLabelerImageFilterIUL3IUL3_Superclass * p);
     ~itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUL3IUL3_Superclass * r);
     itkThresholdLabelerImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUS2IUS2_Pointer {
   public:
     itkThresholdLabelerImageFilterIUS2IUS2_Pointer();
     itkThresholdLabelerImageFilterIUS2IUS2_Pointer(itkThresholdLabelerImageFilterIUS2IUS2_Pointer const & p);
     itkThresholdLabelerImageFilterIUS2IUS2_Pointer(itkThresholdLabelerImageFilterIUS2IUS2 * p);
     ~itkThresholdLabelerImageFilterIUS2IUS2_Pointer();
     itkThresholdLabelerImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUS2IUS2_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUS2IUS2_Pointer & operator=(itkThresholdLabelerImageFilterIUS2IUS2_Pointer const & r);
     itkThresholdLabelerImageFilterIUS2IUS2_Pointer & operator=(itkThresholdLabelerImageFilterIUS2IUS2 * r);
     itkThresholdLabelerImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     static itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::ThresholdLabeler< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< unsigned short, unsigned short > const & functor);
   private:
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass(itkThresholdLabelerImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass();
     ~itkThresholdLabelerImageFilterIUS2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer(itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer(itkThresholdLabelerImageFilterIUS2IUS2_Superclass * p);
     ~itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUS2IUS2_Superclass * r);
     itkThresholdLabelerImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUS3IUS3_Pointer {
   public:
     itkThresholdLabelerImageFilterIUS3IUS3_Pointer();
     itkThresholdLabelerImageFilterIUS3IUS3_Pointer(itkThresholdLabelerImageFilterIUS3IUS3_Pointer const & p);
     itkThresholdLabelerImageFilterIUS3IUS3_Pointer(itkThresholdLabelerImageFilterIUS3IUS3 * p);
     ~itkThresholdLabelerImageFilterIUS3IUS3_Pointer();
     itkThresholdLabelerImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUS3IUS3_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUS3IUS3_Pointer & operator=(itkThresholdLabelerImageFilterIUS3IUS3_Pointer const & r);
     itkThresholdLabelerImageFilterIUS3IUS3_Pointer & operator=(itkThresholdLabelerImageFilterIUS3IUS3 * r);
     itkThresholdLabelerImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterIUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     static itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::ThresholdLabeler< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::ThresholdLabeler< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::ThresholdLabeler< unsigned short, unsigned short > const & functor);
   private:
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass(itkThresholdLabelerImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass();
     ~itkThresholdLabelerImageFilterIUS3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer(itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer(itkThresholdLabelerImageFilterIUS3IUS3_Superclass * p);
     ~itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer();
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkThresholdLabelerImageFilterIUS3IUS3_Superclass * r);
     itkThresholdLabelerImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkThresholdLabelerImageFilterID2ID2 : public itkThresholdLabelerImageFilterID2ID2_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(double _arg);
     virtual double GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterID2ID2(itkThresholdLabelerImageFilterID2ID2 const & arg0);
     void operator=(itkThresholdLabelerImageFilterID2ID2 const & arg0);
   protected:
     itkThresholdLabelerImageFilterID2ID2();
     ~itkThresholdLabelerImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkThresholdLabelerImageFilterID3ID3 : public itkThresholdLabelerImageFilterID3ID3_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(double _arg);
     virtual double GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterID3ID3(itkThresholdLabelerImageFilterID3ID3 const & arg0);
     void operator=(itkThresholdLabelerImageFilterID3ID3 const & arg0);
   protected:
     itkThresholdLabelerImageFilterID3ID3();
     ~itkThresholdLabelerImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkThresholdLabelerImageFilterIF2IF2 : public itkThresholdLabelerImageFilterIF2IF2_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< float > const & thresholds);
     std::vector< float > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(float _arg);
     virtual float GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterIF2IF2(itkThresholdLabelerImageFilterIF2IF2 const & arg0);
     void operator=(itkThresholdLabelerImageFilterIF2IF2 const & arg0);
   protected:
     itkThresholdLabelerImageFilterIF2IF2();
     ~itkThresholdLabelerImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkThresholdLabelerImageFilterIF3IF3 : public itkThresholdLabelerImageFilterIF3IF3_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< float > const & thresholds);
     std::vector< float > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(float _arg);
     virtual float GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterIF3IF3(itkThresholdLabelerImageFilterIF3IF3 const & arg0);
     void operator=(itkThresholdLabelerImageFilterIF3IF3 const & arg0);
   protected:
     itkThresholdLabelerImageFilterIF3IF3();
     ~itkThresholdLabelerImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkThresholdLabelerImageFilterIUC2IUC2 : public itkThresholdLabelerImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< unsigned char > const & thresholds);
     std::vector< unsigned char > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(unsigned char _arg);
     virtual unsigned char GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterIUC2IUC2(itkThresholdLabelerImageFilterIUC2IUC2 const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUC2IUC2 const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUC2IUC2();
     ~itkThresholdLabelerImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkThresholdLabelerImageFilterIUC3IUC3 : public itkThresholdLabelerImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< unsigned char > const & thresholds);
     std::vector< unsigned char > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(unsigned char _arg);
     virtual unsigned char GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterIUC3IUC3(itkThresholdLabelerImageFilterIUC3IUC3 const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUC3IUC3 const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUC3IUC3();
     ~itkThresholdLabelerImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkThresholdLabelerImageFilterIUL2IUL2 : public itkThresholdLabelerImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< unsigned long > const & thresholds);
     std::vector< unsigned long > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(unsigned long _arg);
     virtual unsigned long GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterIUL2IUL2(itkThresholdLabelerImageFilterIUL2IUL2 const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUL2IUL2 const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUL2IUL2();
     ~itkThresholdLabelerImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkThresholdLabelerImageFilterIUL3IUL3 : public itkThresholdLabelerImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< unsigned long > const & thresholds);
     std::vector< unsigned long > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(unsigned long _arg);
     virtual unsigned long GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterIUL3IUL3(itkThresholdLabelerImageFilterIUL3IUL3 const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUL3IUL3 const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUL3IUL3();
     ~itkThresholdLabelerImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkThresholdLabelerImageFilterIUS2IUS2 : public itkThresholdLabelerImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< unsigned short > const & thresholds);
     std::vector< unsigned short > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(unsigned short _arg);
     virtual unsigned short GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterIUS2IUS2(itkThresholdLabelerImageFilterIUS2IUS2 const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUS2IUS2 const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUS2IUS2();
     ~itkThresholdLabelerImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkThresholdLabelerImageFilterIUS3IUS3 : public itkThresholdLabelerImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  PixelTypeComparable = 1 };
     enum  {  OutputPixelTypeComparable = 1 };
     enum  {  OutputPixelTypeOStreamWritable = 1 };
     static itkThresholdLabelerImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetThresholds(std::vector< unsigned short > const & thresholds);
     std::vector< unsigned short > const & GetThresholds() const;
     void SetRealThresholds(std::vector< double > const & thresholds);
     std::vector< double > const & GetRealThresholds() const;
     virtual void SetLabelOffset(unsigned short _arg);
     virtual unsigned short GetLabelOffset() const;
   private:
     itkThresholdLabelerImageFilterIUS3IUS3(itkThresholdLabelerImageFilterIUS3IUS3 const & arg0);
     void operator=(itkThresholdLabelerImageFilterIUS3IUS3 const & arg0);
   protected:
     itkThresholdLabelerImageFilterIUS3IUS3();
     ~itkThresholdLabelerImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


