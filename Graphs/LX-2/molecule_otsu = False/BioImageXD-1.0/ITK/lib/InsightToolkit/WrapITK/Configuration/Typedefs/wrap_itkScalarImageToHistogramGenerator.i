// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkScalarImageToHistogramGeneratorChicken
#endif
#ifdef SWIGCSHARP
%module itkScalarImageToHistogramGeneratorCsharp
#endif
#ifdef SWIGGUILE
%module itkScalarImageToHistogramGeneratorGuile
#endif
#ifdef SWIGJAVA
%module itkScalarImageToHistogramGeneratorJava
#endif
#ifdef SWIGLUA
%module itkScalarImageToHistogramGeneratorLua
#endif
#ifdef SWIGMODULA3
%module itkScalarImageToHistogramGeneratorModula3
#endif
#ifdef SWIGMZSCHEME
%module itkScalarImageToHistogramGeneratorMzscheme
#endif
#ifdef SWIGOCAML
%module itkScalarImageToHistogramGeneratorOcaml
#endif
#ifdef SWIGPERL
%module itkScalarImageToHistogramGeneratorPerl
#endif
#ifdef SWIGPERL5
%module itkScalarImageToHistogramGeneratorPerl5
#endif
#ifdef SWIGPHP
%module itkScalarImageToHistogramGeneratorPhp
#endif
#ifdef SWIGPHP4
%module itkScalarImageToHistogramGeneratorPhp4
#endif
#ifdef SWIGPHP5
%module itkScalarImageToHistogramGeneratorPhp5
#endif
#ifdef SWIGPIKE
%module itkScalarImageToHistogramGeneratorPike
#endif
#ifdef SWIGPYTHON
%module itkScalarImageToHistogramGeneratorPython
#endif
#ifdef SWIGR
%module itkScalarImageToHistogramGeneratorR
#endif
#ifdef SWIGRUBY
%module itkScalarImageToHistogramGeneratorRuby
#endif
#ifdef SWIGSEXP
%module itkScalarImageToHistogramGeneratorSexp
#endif
#ifdef SWIGTCL
%module itkScalarImageToHistogramGeneratorTcl
#endif
#ifdef SWIGXML
%module itkScalarImageToHistogramGeneratorXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Calculators.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkHistogram.i


%include itk.i
%include wrap_itkScalarImageToHistogramGenerator_ext.i


 class itkScalarImageToHistogramGeneratorID2 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageD2 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorID2(itkScalarImageToHistogramGeneratorID2 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorID2 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorID2();
     ~itkScalarImageToHistogramGeneratorID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorID2_Pointer {
   public:
     itkScalarImageToHistogramGeneratorID2_Pointer();
     itkScalarImageToHistogramGeneratorID2_Pointer(itkScalarImageToHistogramGeneratorID2_Pointer const & p);
     itkScalarImageToHistogramGeneratorID2_Pointer(itkScalarImageToHistogramGeneratorID2 * p);
     ~itkScalarImageToHistogramGeneratorID2_Pointer();
     itkScalarImageToHistogramGeneratorID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorID2 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorID2_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorID2_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorID2_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorID2_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorID2_Pointer & operator=(itkScalarImageToHistogramGeneratorID2_Pointer const & r);
     itkScalarImageToHistogramGeneratorID2_Pointer & operator=(itkScalarImageToHistogramGeneratorID2 * r);
     itkScalarImageToHistogramGeneratorID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToHistogramGeneratorID3 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageD3 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorID3(itkScalarImageToHistogramGeneratorID3 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorID3 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorID3();
     ~itkScalarImageToHistogramGeneratorID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorID3_Pointer {
   public:
     itkScalarImageToHistogramGeneratorID3_Pointer();
     itkScalarImageToHistogramGeneratorID3_Pointer(itkScalarImageToHistogramGeneratorID3_Pointer const & p);
     itkScalarImageToHistogramGeneratorID3_Pointer(itkScalarImageToHistogramGeneratorID3 * p);
     ~itkScalarImageToHistogramGeneratorID3_Pointer();
     itkScalarImageToHistogramGeneratorID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorID3 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorID3_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorID3_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorID3_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorID3_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorID3_Pointer & operator=(itkScalarImageToHistogramGeneratorID3_Pointer const & r);
     itkScalarImageToHistogramGeneratorID3_Pointer & operator=(itkScalarImageToHistogramGeneratorID3 * r);
     itkScalarImageToHistogramGeneratorID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToHistogramGeneratorIF2 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageF2 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorIF2(itkScalarImageToHistogramGeneratorIF2 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorIF2 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorIF2();
     ~itkScalarImageToHistogramGeneratorIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorIF2_Pointer {
   public:
     itkScalarImageToHistogramGeneratorIF2_Pointer();
     itkScalarImageToHistogramGeneratorIF2_Pointer(itkScalarImageToHistogramGeneratorIF2_Pointer const & p);
     itkScalarImageToHistogramGeneratorIF2_Pointer(itkScalarImageToHistogramGeneratorIF2 * p);
     ~itkScalarImageToHistogramGeneratorIF2_Pointer();
     itkScalarImageToHistogramGeneratorIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorIF2 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorIF2_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorIF2_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorIF2_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorIF2_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorIF2_Pointer & operator=(itkScalarImageToHistogramGeneratorIF2_Pointer const & r);
     itkScalarImageToHistogramGeneratorIF2_Pointer & operator=(itkScalarImageToHistogramGeneratorIF2 * r);
     itkScalarImageToHistogramGeneratorIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToHistogramGeneratorIF3 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageF3 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorIF3(itkScalarImageToHistogramGeneratorIF3 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorIF3 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorIF3();
     ~itkScalarImageToHistogramGeneratorIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorIF3_Pointer {
   public:
     itkScalarImageToHistogramGeneratorIF3_Pointer();
     itkScalarImageToHistogramGeneratorIF3_Pointer(itkScalarImageToHistogramGeneratorIF3_Pointer const & p);
     itkScalarImageToHistogramGeneratorIF3_Pointer(itkScalarImageToHistogramGeneratorIF3 * p);
     ~itkScalarImageToHistogramGeneratorIF3_Pointer();
     itkScalarImageToHistogramGeneratorIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorIF3 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorIF3_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorIF3_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorIF3_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorIF3_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorIF3_Pointer & operator=(itkScalarImageToHistogramGeneratorIF3_Pointer const & r);
     itkScalarImageToHistogramGeneratorIF3_Pointer & operator=(itkScalarImageToHistogramGeneratorIF3 * r);
     itkScalarImageToHistogramGeneratorIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToHistogramGeneratorIUC2 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageUC2 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorIUC2(itkScalarImageToHistogramGeneratorIUC2 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorIUC2 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorIUC2();
     ~itkScalarImageToHistogramGeneratorIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorIUC2_Pointer {
   public:
     itkScalarImageToHistogramGeneratorIUC2_Pointer();
     itkScalarImageToHistogramGeneratorIUC2_Pointer(itkScalarImageToHistogramGeneratorIUC2_Pointer const & p);
     itkScalarImageToHistogramGeneratorIUC2_Pointer(itkScalarImageToHistogramGeneratorIUC2 * p);
     ~itkScalarImageToHistogramGeneratorIUC2_Pointer();
     itkScalarImageToHistogramGeneratorIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorIUC2 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorIUC2_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorIUC2_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorIUC2_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorIUC2_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorIUC2_Pointer & operator=(itkScalarImageToHistogramGeneratorIUC2_Pointer const & r);
     itkScalarImageToHistogramGeneratorIUC2_Pointer & operator=(itkScalarImageToHistogramGeneratorIUC2 * r);
     itkScalarImageToHistogramGeneratorIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToHistogramGeneratorIUC3 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageUC3 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorIUC3(itkScalarImageToHistogramGeneratorIUC3 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorIUC3 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorIUC3();
     ~itkScalarImageToHistogramGeneratorIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorIUC3_Pointer {
   public:
     itkScalarImageToHistogramGeneratorIUC3_Pointer();
     itkScalarImageToHistogramGeneratorIUC3_Pointer(itkScalarImageToHistogramGeneratorIUC3_Pointer const & p);
     itkScalarImageToHistogramGeneratorIUC3_Pointer(itkScalarImageToHistogramGeneratorIUC3 * p);
     ~itkScalarImageToHistogramGeneratorIUC3_Pointer();
     itkScalarImageToHistogramGeneratorIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorIUC3 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorIUC3_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorIUC3_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorIUC3_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorIUC3_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorIUC3_Pointer & operator=(itkScalarImageToHistogramGeneratorIUC3_Pointer const & r);
     itkScalarImageToHistogramGeneratorIUC3_Pointer & operator=(itkScalarImageToHistogramGeneratorIUC3 * r);
     itkScalarImageToHistogramGeneratorIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToHistogramGeneratorIUL2 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageUL2 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorIUL2(itkScalarImageToHistogramGeneratorIUL2 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorIUL2 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorIUL2();
     ~itkScalarImageToHistogramGeneratorIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorIUL2_Pointer {
   public:
     itkScalarImageToHistogramGeneratorIUL2_Pointer();
     itkScalarImageToHistogramGeneratorIUL2_Pointer(itkScalarImageToHistogramGeneratorIUL2_Pointer const & p);
     itkScalarImageToHistogramGeneratorIUL2_Pointer(itkScalarImageToHistogramGeneratorIUL2 * p);
     ~itkScalarImageToHistogramGeneratorIUL2_Pointer();
     itkScalarImageToHistogramGeneratorIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorIUL2 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorIUL2_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorIUL2_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorIUL2_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorIUL2_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorIUL2_Pointer & operator=(itkScalarImageToHistogramGeneratorIUL2_Pointer const & r);
     itkScalarImageToHistogramGeneratorIUL2_Pointer & operator=(itkScalarImageToHistogramGeneratorIUL2 * r);
     itkScalarImageToHistogramGeneratorIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToHistogramGeneratorIUL3 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageUL3 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorIUL3(itkScalarImageToHistogramGeneratorIUL3 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorIUL3 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorIUL3();
     ~itkScalarImageToHistogramGeneratorIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorIUL3_Pointer {
   public:
     itkScalarImageToHistogramGeneratorIUL3_Pointer();
     itkScalarImageToHistogramGeneratorIUL3_Pointer(itkScalarImageToHistogramGeneratorIUL3_Pointer const & p);
     itkScalarImageToHistogramGeneratorIUL3_Pointer(itkScalarImageToHistogramGeneratorIUL3 * p);
     ~itkScalarImageToHistogramGeneratorIUL3_Pointer();
     itkScalarImageToHistogramGeneratorIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorIUL3 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorIUL3_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorIUL3_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorIUL3_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorIUL3_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorIUL3_Pointer & operator=(itkScalarImageToHistogramGeneratorIUL3_Pointer const & r);
     itkScalarImageToHistogramGeneratorIUL3_Pointer & operator=(itkScalarImageToHistogramGeneratorIUL3 * r);
     itkScalarImageToHistogramGeneratorIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToHistogramGeneratorIUS2 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageUS2 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorIUS2(itkScalarImageToHistogramGeneratorIUS2 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorIUS2 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorIUS2();
     ~itkScalarImageToHistogramGeneratorIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorIUS2_Pointer {
   public:
     itkScalarImageToHistogramGeneratorIUS2_Pointer();
     itkScalarImageToHistogramGeneratorIUS2_Pointer(itkScalarImageToHistogramGeneratorIUS2_Pointer const & p);
     itkScalarImageToHistogramGeneratorIUS2_Pointer(itkScalarImageToHistogramGeneratorIUS2 * p);
     ~itkScalarImageToHistogramGeneratorIUS2_Pointer();
     itkScalarImageToHistogramGeneratorIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorIUS2 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorIUS2_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorIUS2_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorIUS2_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorIUS2_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorIUS2_Pointer & operator=(itkScalarImageToHistogramGeneratorIUS2_Pointer const & r);
     itkScalarImageToHistogramGeneratorIUS2_Pointer & operator=(itkScalarImageToHistogramGeneratorIUS2 * r);
     itkScalarImageToHistogramGeneratorIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkScalarImageToHistogramGeneratorIUS3 : public itkObject {
   public:
     virtual char const * GetNameOfClass() const;
     static itkScalarImageToHistogramGeneratorIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     void Compute();
     void SetInput(itkImageUS3 const * arg0);
     itkHistogramD const * GetOutput() const;
     void SetNumberOfBins(unsigned int numberOfBins);
     void SetMarginalScale(double marginalScale);
     void SetHistogramMin(double minimumValue);
     void SetHistogramMax(double maximumValue);
   private:
     itkScalarImageToHistogramGeneratorIUS3(itkScalarImageToHistogramGeneratorIUS3 const & arg0);
     void operator=(itkScalarImageToHistogramGeneratorIUS3 const & arg0);
   protected:
     itkScalarImageToHistogramGeneratorIUS3();
     ~itkScalarImageToHistogramGeneratorIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkScalarImageToHistogramGeneratorIUS3_Pointer {
   public:
     itkScalarImageToHistogramGeneratorIUS3_Pointer();
     itkScalarImageToHistogramGeneratorIUS3_Pointer(itkScalarImageToHistogramGeneratorIUS3_Pointer const & p);
     itkScalarImageToHistogramGeneratorIUS3_Pointer(itkScalarImageToHistogramGeneratorIUS3 * p);
     ~itkScalarImageToHistogramGeneratorIUS3_Pointer();
     itkScalarImageToHistogramGeneratorIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkScalarImageToHistogramGeneratorIUS3 * GetPointer() const;
     bool operator<(itkScalarImageToHistogramGeneratorIUS3_Pointer const & r) const;
     bool operator>(itkScalarImageToHistogramGeneratorIUS3_Pointer const & r) const;
     bool operator<=(itkScalarImageToHistogramGeneratorIUS3_Pointer const & r) const;
     bool operator>=(itkScalarImageToHistogramGeneratorIUS3_Pointer const & r) const;
     itkScalarImageToHistogramGeneratorIUS3_Pointer & operator=(itkScalarImageToHistogramGeneratorIUS3_Pointer const & r);
     itkScalarImageToHistogramGeneratorIUS3_Pointer & operator=(itkScalarImageToHistogramGeneratorIUS3 * r);
     itkScalarImageToHistogramGeneratorIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


