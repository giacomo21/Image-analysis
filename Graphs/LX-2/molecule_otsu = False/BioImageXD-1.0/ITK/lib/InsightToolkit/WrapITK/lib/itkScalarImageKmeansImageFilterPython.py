# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkScalarImageKmeansImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkScalarImageKmeansImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkScalarImageKmeansImageFilterPython
            return _itkScalarImageKmeansImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkScalarImageKmeansImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkScalarImageKmeansImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkScalarImageKmeansImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImageToImageFilterAPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkArrayPython
def itkScalarImageKmeansImageFilterID3IUS3_New():
  return itkScalarImageKmeansImageFilterID3IUS3.New()

def itkScalarImageKmeansImageFilterID2IUS2_New():
  return itkScalarImageKmeansImageFilterID2IUS2.New()

def itkScalarImageKmeansImageFilterID3IUL3_New():
  return itkScalarImageKmeansImageFilterID3IUL3.New()

def itkScalarImageKmeansImageFilterID2IUL2_New():
  return itkScalarImageKmeansImageFilterID2IUL2.New()

def itkScalarImageKmeansImageFilterID3IUC3_New():
  return itkScalarImageKmeansImageFilterID3IUC3.New()

def itkScalarImageKmeansImageFilterID2IUC2_New():
  return itkScalarImageKmeansImageFilterID2IUC2.New()

def itkScalarImageKmeansImageFilterIF3IUS3_New():
  return itkScalarImageKmeansImageFilterIF3IUS3.New()

def itkScalarImageKmeansImageFilterIF2IUS2_New():
  return itkScalarImageKmeansImageFilterIF2IUS2.New()

def itkScalarImageKmeansImageFilterIF3IUL3_New():
  return itkScalarImageKmeansImageFilterIF3IUL3.New()

def itkScalarImageKmeansImageFilterIF2IUL2_New():
  return itkScalarImageKmeansImageFilterIF2IUL2.New()

def itkScalarImageKmeansImageFilterIF3IUC3_New():
  return itkScalarImageKmeansImageFilterIF3IUC3.New()

def itkScalarImageKmeansImageFilterIF2IUC2_New():
  return itkScalarImageKmeansImageFilterIF2IUC2.New()

def itkScalarImageKmeansImageFilterIUS3IUS3_New():
  return itkScalarImageKmeansImageFilterIUS3IUS3.New()

def itkScalarImageKmeansImageFilterIUS2IUS2_New():
  return itkScalarImageKmeansImageFilterIUS2IUS2.New()

def itkScalarImageKmeansImageFilterIUS3IUL3_New():
  return itkScalarImageKmeansImageFilterIUS3IUL3.New()

def itkScalarImageKmeansImageFilterIUS2IUL2_New():
  return itkScalarImageKmeansImageFilterIUS2IUL2.New()

def itkScalarImageKmeansImageFilterIUS3IUC3_New():
  return itkScalarImageKmeansImageFilterIUS3IUC3.New()

def itkScalarImageKmeansImageFilterIUS2IUC2_New():
  return itkScalarImageKmeansImageFilterIUS2IUC2.New()

def itkScalarImageKmeansImageFilterIUL3IUS3_New():
  return itkScalarImageKmeansImageFilterIUL3IUS3.New()

def itkScalarImageKmeansImageFilterIUL2IUS2_New():
  return itkScalarImageKmeansImageFilterIUL2IUS2.New()

def itkScalarImageKmeansImageFilterIUL3IUL3_New():
  return itkScalarImageKmeansImageFilterIUL3IUL3.New()

def itkScalarImageKmeansImageFilterIUL2IUL2_New():
  return itkScalarImageKmeansImageFilterIUL2IUL2.New()

def itkScalarImageKmeansImageFilterIUL3IUC3_New():
  return itkScalarImageKmeansImageFilterIUL3IUC3.New()

def itkScalarImageKmeansImageFilterIUL2IUC2_New():
  return itkScalarImageKmeansImageFilterIUL2IUC2.New()

def itkScalarImageKmeansImageFilterIUC3IUS3_New():
  return itkScalarImageKmeansImageFilterIUC3IUS3.New()

def itkScalarImageKmeansImageFilterIUC2IUS2_New():
  return itkScalarImageKmeansImageFilterIUC2IUS2.New()

def itkScalarImageKmeansImageFilterIUC3IUL3_New():
  return itkScalarImageKmeansImageFilterIUC3IUL3.New()

def itkScalarImageKmeansImageFilterIUC2IUL2_New():
  return itkScalarImageKmeansImageFilterIUC2IUL2.New()

def itkScalarImageKmeansImageFilterIUC3IUC3_New():
  return itkScalarImageKmeansImageFilterIUC3IUC3.New()

def itkScalarImageKmeansImageFilterIUC2IUC2_New():
  return itkScalarImageKmeansImageFilterIUC2IUC2.New()

class itkScalarImageKmeansImageFilterID2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2):
    """Proxy of C++ itkScalarImageKmeansImageFilterID2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterID2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterID2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterID2IUC2
        
        Create a new object of the class itkScalarImageKmeansImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterID2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterID2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterID2IUC2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterID2IUC2)
itkScalarImageKmeansImageFilterID2IUC2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_GetFinalMeans,None,itkScalarImageKmeansImageFilterID2IUC2)
itkScalarImageKmeansImageFilterID2IUC2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID2IUC2)
itkScalarImageKmeansImageFilterID2IUC2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID2IUC2)
itkScalarImageKmeansImageFilterID2IUC2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterID2IUC2)
itkScalarImageKmeansImageFilterID2IUC2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterID2IUC2)
itkScalarImageKmeansImageFilterID2IUC2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_SetImageRegion,None,itkScalarImageKmeansImageFilterID2IUC2)
itkScalarImageKmeansImageFilterID2IUC2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_GetImageRegion,None,itkScalarImageKmeansImageFilterID2IUC2)
itkScalarImageKmeansImageFilterID2IUC2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_GetPointer,None,itkScalarImageKmeansImageFilterID2IUC2)
itkScalarImageKmeansImageFilterID2IUC2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_swigregister
itkScalarImageKmeansImageFilterID2IUC2_swigregister(itkScalarImageKmeansImageFilterID2IUC2)

def itkScalarImageKmeansImageFilterID2IUC2___New_orig__():
  """itkScalarImageKmeansImageFilterID2IUC2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2___New_orig__()

def itkScalarImageKmeansImageFilterID2IUC2_cast(*args):
  """itkScalarImageKmeansImageFilterID2IUC2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID2IUC2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUC2_cast(*args)

class itkScalarImageKmeansImageFilterID2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2):
    """Proxy of C++ itkScalarImageKmeansImageFilterID2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterID2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterID2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterID2IUL2
        
        Create a new object of the class itkScalarImageKmeansImageFilterID2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterID2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterID2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterID2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterID2IUL2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterID2IUL2)
itkScalarImageKmeansImageFilterID2IUL2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_GetFinalMeans,None,itkScalarImageKmeansImageFilterID2IUL2)
itkScalarImageKmeansImageFilterID2IUL2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID2IUL2)
itkScalarImageKmeansImageFilterID2IUL2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID2IUL2)
itkScalarImageKmeansImageFilterID2IUL2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterID2IUL2)
itkScalarImageKmeansImageFilterID2IUL2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterID2IUL2)
itkScalarImageKmeansImageFilterID2IUL2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_SetImageRegion,None,itkScalarImageKmeansImageFilterID2IUL2)
itkScalarImageKmeansImageFilterID2IUL2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_GetImageRegion,None,itkScalarImageKmeansImageFilterID2IUL2)
itkScalarImageKmeansImageFilterID2IUL2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_GetPointer,None,itkScalarImageKmeansImageFilterID2IUL2)
itkScalarImageKmeansImageFilterID2IUL2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_swigregister
itkScalarImageKmeansImageFilterID2IUL2_swigregister(itkScalarImageKmeansImageFilterID2IUL2)

def itkScalarImageKmeansImageFilterID2IUL2___New_orig__():
  """itkScalarImageKmeansImageFilterID2IUL2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2___New_orig__()

def itkScalarImageKmeansImageFilterID2IUL2_cast(*args):
  """itkScalarImageKmeansImageFilterID2IUL2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID2IUL2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUL2_cast(*args)

class itkScalarImageKmeansImageFilterID2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2):
    """Proxy of C++ itkScalarImageKmeansImageFilterID2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterID2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterID2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterID2IUS2
        
        Create a new object of the class itkScalarImageKmeansImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterID2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterID2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterID2IUS2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterID2IUS2)
itkScalarImageKmeansImageFilterID2IUS2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_GetFinalMeans,None,itkScalarImageKmeansImageFilterID2IUS2)
itkScalarImageKmeansImageFilterID2IUS2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID2IUS2)
itkScalarImageKmeansImageFilterID2IUS2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID2IUS2)
itkScalarImageKmeansImageFilterID2IUS2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterID2IUS2)
itkScalarImageKmeansImageFilterID2IUS2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterID2IUS2)
itkScalarImageKmeansImageFilterID2IUS2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_SetImageRegion,None,itkScalarImageKmeansImageFilterID2IUS2)
itkScalarImageKmeansImageFilterID2IUS2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_GetImageRegion,None,itkScalarImageKmeansImageFilterID2IUS2)
itkScalarImageKmeansImageFilterID2IUS2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_GetPointer,None,itkScalarImageKmeansImageFilterID2IUS2)
itkScalarImageKmeansImageFilterID2IUS2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_swigregister
itkScalarImageKmeansImageFilterID2IUS2_swigregister(itkScalarImageKmeansImageFilterID2IUS2)

def itkScalarImageKmeansImageFilterID2IUS2___New_orig__():
  """itkScalarImageKmeansImageFilterID2IUS2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2___New_orig__()

def itkScalarImageKmeansImageFilterID2IUS2_cast(*args):
  """itkScalarImageKmeansImageFilterID2IUS2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID2IUS2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID2IUS2_cast(*args)

class itkScalarImageKmeansImageFilterID3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    """Proxy of C++ itkScalarImageKmeansImageFilterID3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterID3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterID3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterID3IUC3
        
        Create a new object of the class itkScalarImageKmeansImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterID3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterID3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterID3IUC3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterID3IUC3)
itkScalarImageKmeansImageFilterID3IUC3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_GetFinalMeans,None,itkScalarImageKmeansImageFilterID3IUC3)
itkScalarImageKmeansImageFilterID3IUC3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID3IUC3)
itkScalarImageKmeansImageFilterID3IUC3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID3IUC3)
itkScalarImageKmeansImageFilterID3IUC3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterID3IUC3)
itkScalarImageKmeansImageFilterID3IUC3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterID3IUC3)
itkScalarImageKmeansImageFilterID3IUC3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_SetImageRegion,None,itkScalarImageKmeansImageFilterID3IUC3)
itkScalarImageKmeansImageFilterID3IUC3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_GetImageRegion,None,itkScalarImageKmeansImageFilterID3IUC3)
itkScalarImageKmeansImageFilterID3IUC3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_GetPointer,None,itkScalarImageKmeansImageFilterID3IUC3)
itkScalarImageKmeansImageFilterID3IUC3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_swigregister
itkScalarImageKmeansImageFilterID3IUC3_swigregister(itkScalarImageKmeansImageFilterID3IUC3)

def itkScalarImageKmeansImageFilterID3IUC3___New_orig__():
  """itkScalarImageKmeansImageFilterID3IUC3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3___New_orig__()

def itkScalarImageKmeansImageFilterID3IUC3_cast(*args):
  """itkScalarImageKmeansImageFilterID3IUC3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID3IUC3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUC3_cast(*args)

class itkScalarImageKmeansImageFilterID3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3):
    """Proxy of C++ itkScalarImageKmeansImageFilterID3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterID3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterID3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterID3IUL3
        
        Create a new object of the class itkScalarImageKmeansImageFilterID3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterID3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterID3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterID3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterID3IUL3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterID3IUL3)
itkScalarImageKmeansImageFilterID3IUL3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_GetFinalMeans,None,itkScalarImageKmeansImageFilterID3IUL3)
itkScalarImageKmeansImageFilterID3IUL3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID3IUL3)
itkScalarImageKmeansImageFilterID3IUL3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID3IUL3)
itkScalarImageKmeansImageFilterID3IUL3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterID3IUL3)
itkScalarImageKmeansImageFilterID3IUL3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterID3IUL3)
itkScalarImageKmeansImageFilterID3IUL3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_SetImageRegion,None,itkScalarImageKmeansImageFilterID3IUL3)
itkScalarImageKmeansImageFilterID3IUL3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_GetImageRegion,None,itkScalarImageKmeansImageFilterID3IUL3)
itkScalarImageKmeansImageFilterID3IUL3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_GetPointer,None,itkScalarImageKmeansImageFilterID3IUL3)
itkScalarImageKmeansImageFilterID3IUL3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_swigregister
itkScalarImageKmeansImageFilterID3IUL3_swigregister(itkScalarImageKmeansImageFilterID3IUL3)

def itkScalarImageKmeansImageFilterID3IUL3___New_orig__():
  """itkScalarImageKmeansImageFilterID3IUL3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3___New_orig__()

def itkScalarImageKmeansImageFilterID3IUL3_cast(*args):
  """itkScalarImageKmeansImageFilterID3IUL3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID3IUL3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUL3_cast(*args)

class itkScalarImageKmeansImageFilterID3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3):
    """Proxy of C++ itkScalarImageKmeansImageFilterID3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterID3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterID3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterID3IUS3
        
        Create a new object of the class itkScalarImageKmeansImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterID3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterID3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterID3IUS3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterID3IUS3)
itkScalarImageKmeansImageFilterID3IUS3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_GetFinalMeans,None,itkScalarImageKmeansImageFilterID3IUS3)
itkScalarImageKmeansImageFilterID3IUS3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID3IUS3)
itkScalarImageKmeansImageFilterID3IUS3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterID3IUS3)
itkScalarImageKmeansImageFilterID3IUS3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterID3IUS3)
itkScalarImageKmeansImageFilterID3IUS3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterID3IUS3)
itkScalarImageKmeansImageFilterID3IUS3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_SetImageRegion,None,itkScalarImageKmeansImageFilterID3IUS3)
itkScalarImageKmeansImageFilterID3IUS3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_GetImageRegion,None,itkScalarImageKmeansImageFilterID3IUS3)
itkScalarImageKmeansImageFilterID3IUS3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_GetPointer,None,itkScalarImageKmeansImageFilterID3IUS3)
itkScalarImageKmeansImageFilterID3IUS3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_swigregister
itkScalarImageKmeansImageFilterID3IUS3_swigregister(itkScalarImageKmeansImageFilterID3IUS3)

def itkScalarImageKmeansImageFilterID3IUS3___New_orig__():
  """itkScalarImageKmeansImageFilterID3IUS3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3___New_orig__()

def itkScalarImageKmeansImageFilterID3IUS3_cast(*args):
  """itkScalarImageKmeansImageFilterID3IUS3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterID3IUS3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterID3IUS3_cast(*args)

class itkScalarImageKmeansImageFilterIF2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIF2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIF2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIF2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIF2IUC2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIF2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIF2IUC2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIF2IUC2)
itkScalarImageKmeansImageFilterIF2IUC2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIF2IUC2)
itkScalarImageKmeansImageFilterIF2IUC2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF2IUC2)
itkScalarImageKmeansImageFilterIF2IUC2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF2IUC2)
itkScalarImageKmeansImageFilterIF2IUC2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIF2IUC2)
itkScalarImageKmeansImageFilterIF2IUC2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIF2IUC2)
itkScalarImageKmeansImageFilterIF2IUC2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_SetImageRegion,None,itkScalarImageKmeansImageFilterIF2IUC2)
itkScalarImageKmeansImageFilterIF2IUC2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_GetImageRegion,None,itkScalarImageKmeansImageFilterIF2IUC2)
itkScalarImageKmeansImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_GetPointer,None,itkScalarImageKmeansImageFilterIF2IUC2)
itkScalarImageKmeansImageFilterIF2IUC2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_swigregister
itkScalarImageKmeansImageFilterIF2IUC2_swigregister(itkScalarImageKmeansImageFilterIF2IUC2)

def itkScalarImageKmeansImageFilterIF2IUC2___New_orig__():
  """itkScalarImageKmeansImageFilterIF2IUC2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2___New_orig__()

def itkScalarImageKmeansImageFilterIF2IUC2_cast(*args):
  """itkScalarImageKmeansImageFilterIF2IUC2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF2IUC2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUC2_cast(*args)

class itkScalarImageKmeansImageFilterIF2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIF2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIF2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIF2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIF2IUL2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIF2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIF2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIF2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIF2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIF2IUL2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIF2IUL2)
itkScalarImageKmeansImageFilterIF2IUL2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIF2IUL2)
itkScalarImageKmeansImageFilterIF2IUL2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF2IUL2)
itkScalarImageKmeansImageFilterIF2IUL2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF2IUL2)
itkScalarImageKmeansImageFilterIF2IUL2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIF2IUL2)
itkScalarImageKmeansImageFilterIF2IUL2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIF2IUL2)
itkScalarImageKmeansImageFilterIF2IUL2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_SetImageRegion,None,itkScalarImageKmeansImageFilterIF2IUL2)
itkScalarImageKmeansImageFilterIF2IUL2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_GetImageRegion,None,itkScalarImageKmeansImageFilterIF2IUL2)
itkScalarImageKmeansImageFilterIF2IUL2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_GetPointer,None,itkScalarImageKmeansImageFilterIF2IUL2)
itkScalarImageKmeansImageFilterIF2IUL2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_swigregister
itkScalarImageKmeansImageFilterIF2IUL2_swigregister(itkScalarImageKmeansImageFilterIF2IUL2)

def itkScalarImageKmeansImageFilterIF2IUL2___New_orig__():
  """itkScalarImageKmeansImageFilterIF2IUL2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2___New_orig__()

def itkScalarImageKmeansImageFilterIF2IUL2_cast(*args):
  """itkScalarImageKmeansImageFilterIF2IUL2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF2IUL2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUL2_cast(*args)

class itkScalarImageKmeansImageFilterIF2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIF2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIF2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIF2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIF2IUS2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIF2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIF2IUS2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIF2IUS2)
itkScalarImageKmeansImageFilterIF2IUS2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIF2IUS2)
itkScalarImageKmeansImageFilterIF2IUS2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF2IUS2)
itkScalarImageKmeansImageFilterIF2IUS2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF2IUS2)
itkScalarImageKmeansImageFilterIF2IUS2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIF2IUS2)
itkScalarImageKmeansImageFilterIF2IUS2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIF2IUS2)
itkScalarImageKmeansImageFilterIF2IUS2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_SetImageRegion,None,itkScalarImageKmeansImageFilterIF2IUS2)
itkScalarImageKmeansImageFilterIF2IUS2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_GetImageRegion,None,itkScalarImageKmeansImageFilterIF2IUS2)
itkScalarImageKmeansImageFilterIF2IUS2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_GetPointer,None,itkScalarImageKmeansImageFilterIF2IUS2)
itkScalarImageKmeansImageFilterIF2IUS2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_swigregister
itkScalarImageKmeansImageFilterIF2IUS2_swigregister(itkScalarImageKmeansImageFilterIF2IUS2)

def itkScalarImageKmeansImageFilterIF2IUS2___New_orig__():
  """itkScalarImageKmeansImageFilterIF2IUS2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2___New_orig__()

def itkScalarImageKmeansImageFilterIF2IUS2_cast(*args):
  """itkScalarImageKmeansImageFilterIF2IUS2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF2IUS2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF2IUS2_cast(*args)

class itkScalarImageKmeansImageFilterIF3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIF3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIF3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIF3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIF3IUC3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIF3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIF3IUC3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIF3IUC3)
itkScalarImageKmeansImageFilterIF3IUC3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIF3IUC3)
itkScalarImageKmeansImageFilterIF3IUC3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF3IUC3)
itkScalarImageKmeansImageFilterIF3IUC3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF3IUC3)
itkScalarImageKmeansImageFilterIF3IUC3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIF3IUC3)
itkScalarImageKmeansImageFilterIF3IUC3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIF3IUC3)
itkScalarImageKmeansImageFilterIF3IUC3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_SetImageRegion,None,itkScalarImageKmeansImageFilterIF3IUC3)
itkScalarImageKmeansImageFilterIF3IUC3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_GetImageRegion,None,itkScalarImageKmeansImageFilterIF3IUC3)
itkScalarImageKmeansImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_GetPointer,None,itkScalarImageKmeansImageFilterIF3IUC3)
itkScalarImageKmeansImageFilterIF3IUC3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_swigregister
itkScalarImageKmeansImageFilterIF3IUC3_swigregister(itkScalarImageKmeansImageFilterIF3IUC3)

def itkScalarImageKmeansImageFilterIF3IUC3___New_orig__():
  """itkScalarImageKmeansImageFilterIF3IUC3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3___New_orig__()

def itkScalarImageKmeansImageFilterIF3IUC3_cast(*args):
  """itkScalarImageKmeansImageFilterIF3IUC3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF3IUC3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUC3_cast(*args)

class itkScalarImageKmeansImageFilterIF3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIF3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIF3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIF3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIF3IUL3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIF3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIF3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIF3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIF3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIF3IUL3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIF3IUL3)
itkScalarImageKmeansImageFilterIF3IUL3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIF3IUL3)
itkScalarImageKmeansImageFilterIF3IUL3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF3IUL3)
itkScalarImageKmeansImageFilterIF3IUL3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF3IUL3)
itkScalarImageKmeansImageFilterIF3IUL3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIF3IUL3)
itkScalarImageKmeansImageFilterIF3IUL3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIF3IUL3)
itkScalarImageKmeansImageFilterIF3IUL3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_SetImageRegion,None,itkScalarImageKmeansImageFilterIF3IUL3)
itkScalarImageKmeansImageFilterIF3IUL3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_GetImageRegion,None,itkScalarImageKmeansImageFilterIF3IUL3)
itkScalarImageKmeansImageFilterIF3IUL3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_GetPointer,None,itkScalarImageKmeansImageFilterIF3IUL3)
itkScalarImageKmeansImageFilterIF3IUL3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_swigregister
itkScalarImageKmeansImageFilterIF3IUL3_swigregister(itkScalarImageKmeansImageFilterIF3IUL3)

def itkScalarImageKmeansImageFilterIF3IUL3___New_orig__():
  """itkScalarImageKmeansImageFilterIF3IUL3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3___New_orig__()

def itkScalarImageKmeansImageFilterIF3IUL3_cast(*args):
  """itkScalarImageKmeansImageFilterIF3IUL3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF3IUL3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUL3_cast(*args)

class itkScalarImageKmeansImageFilterIF3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIF3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIF3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIF3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIF3IUS3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIF3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIF3IUS3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIF3IUS3)
itkScalarImageKmeansImageFilterIF3IUS3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIF3IUS3)
itkScalarImageKmeansImageFilterIF3IUS3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF3IUS3)
itkScalarImageKmeansImageFilterIF3IUS3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIF3IUS3)
itkScalarImageKmeansImageFilterIF3IUS3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIF3IUS3)
itkScalarImageKmeansImageFilterIF3IUS3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIF3IUS3)
itkScalarImageKmeansImageFilterIF3IUS3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_SetImageRegion,None,itkScalarImageKmeansImageFilterIF3IUS3)
itkScalarImageKmeansImageFilterIF3IUS3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_GetImageRegion,None,itkScalarImageKmeansImageFilterIF3IUS3)
itkScalarImageKmeansImageFilterIF3IUS3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_GetPointer,None,itkScalarImageKmeansImageFilterIF3IUS3)
itkScalarImageKmeansImageFilterIF3IUS3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_swigregister
itkScalarImageKmeansImageFilterIF3IUS3_swigregister(itkScalarImageKmeansImageFilterIF3IUS3)

def itkScalarImageKmeansImageFilterIF3IUS3___New_orig__():
  """itkScalarImageKmeansImageFilterIF3IUS3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3___New_orig__()

def itkScalarImageKmeansImageFilterIF3IUS3_cast(*args):
  """itkScalarImageKmeansImageFilterIF3IUS3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIF3IUS3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIF3IUS3_cast(*args)

class itkScalarImageKmeansImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUC2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUC2IUC2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUC2IUC2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUC2IUC2)
itkScalarImageKmeansImageFilterIUC2IUC2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUC2IUC2)
itkScalarImageKmeansImageFilterIUC2IUC2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC2IUC2)
itkScalarImageKmeansImageFilterIUC2IUC2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC2IUC2)
itkScalarImageKmeansImageFilterIUC2IUC2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUC2IUC2)
itkScalarImageKmeansImageFilterIUC2IUC2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUC2IUC2)
itkScalarImageKmeansImageFilterIUC2IUC2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_SetImageRegion,None,itkScalarImageKmeansImageFilterIUC2IUC2)
itkScalarImageKmeansImageFilterIUC2IUC2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_GetImageRegion,None,itkScalarImageKmeansImageFilterIUC2IUC2)
itkScalarImageKmeansImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_GetPointer,None,itkScalarImageKmeansImageFilterIUC2IUC2)
itkScalarImageKmeansImageFilterIUC2IUC2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_swigregister
itkScalarImageKmeansImageFilterIUC2IUC2_swigregister(itkScalarImageKmeansImageFilterIUC2IUC2)

def itkScalarImageKmeansImageFilterIUC2IUC2___New_orig__():
  """itkScalarImageKmeansImageFilterIUC2IUC2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2___New_orig__()

def itkScalarImageKmeansImageFilterIUC2IUC2_cast(*args):
  """itkScalarImageKmeansImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC2IUC2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUC2_cast(*args)

class itkScalarImageKmeansImageFilterIUC2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUC2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUC2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUC2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUC2IUL2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUC2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUC2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUC2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUC2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUC2IUL2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUC2IUL2)
itkScalarImageKmeansImageFilterIUC2IUL2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUC2IUL2)
itkScalarImageKmeansImageFilterIUC2IUL2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC2IUL2)
itkScalarImageKmeansImageFilterIUC2IUL2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC2IUL2)
itkScalarImageKmeansImageFilterIUC2IUL2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUC2IUL2)
itkScalarImageKmeansImageFilterIUC2IUL2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUC2IUL2)
itkScalarImageKmeansImageFilterIUC2IUL2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_SetImageRegion,None,itkScalarImageKmeansImageFilterIUC2IUL2)
itkScalarImageKmeansImageFilterIUC2IUL2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_GetImageRegion,None,itkScalarImageKmeansImageFilterIUC2IUL2)
itkScalarImageKmeansImageFilterIUC2IUL2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_GetPointer,None,itkScalarImageKmeansImageFilterIUC2IUL2)
itkScalarImageKmeansImageFilterIUC2IUL2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_swigregister
itkScalarImageKmeansImageFilterIUC2IUL2_swigregister(itkScalarImageKmeansImageFilterIUC2IUL2)

def itkScalarImageKmeansImageFilterIUC2IUL2___New_orig__():
  """itkScalarImageKmeansImageFilterIUC2IUL2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2___New_orig__()

def itkScalarImageKmeansImageFilterIUC2IUL2_cast(*args):
  """itkScalarImageKmeansImageFilterIUC2IUL2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC2IUL2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUL2_cast(*args)

class itkScalarImageKmeansImageFilterIUC2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUC2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUC2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUC2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUC2IUS2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUC2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUC2IUS2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUC2IUS2)
itkScalarImageKmeansImageFilterIUC2IUS2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUC2IUS2)
itkScalarImageKmeansImageFilterIUC2IUS2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC2IUS2)
itkScalarImageKmeansImageFilterIUC2IUS2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC2IUS2)
itkScalarImageKmeansImageFilterIUC2IUS2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUC2IUS2)
itkScalarImageKmeansImageFilterIUC2IUS2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUC2IUS2)
itkScalarImageKmeansImageFilterIUC2IUS2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_SetImageRegion,None,itkScalarImageKmeansImageFilterIUC2IUS2)
itkScalarImageKmeansImageFilterIUC2IUS2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_GetImageRegion,None,itkScalarImageKmeansImageFilterIUC2IUS2)
itkScalarImageKmeansImageFilterIUC2IUS2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_GetPointer,None,itkScalarImageKmeansImageFilterIUC2IUS2)
itkScalarImageKmeansImageFilterIUC2IUS2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_swigregister
itkScalarImageKmeansImageFilterIUC2IUS2_swigregister(itkScalarImageKmeansImageFilterIUC2IUS2)

def itkScalarImageKmeansImageFilterIUC2IUS2___New_orig__():
  """itkScalarImageKmeansImageFilterIUC2IUS2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2___New_orig__()

def itkScalarImageKmeansImageFilterIUC2IUS2_cast(*args):
  """itkScalarImageKmeansImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC2IUS2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC2IUS2_cast(*args)

class itkScalarImageKmeansImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUC3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUC3IUC3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUC3IUC3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUC3IUC3)
itkScalarImageKmeansImageFilterIUC3IUC3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUC3IUC3)
itkScalarImageKmeansImageFilterIUC3IUC3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC3IUC3)
itkScalarImageKmeansImageFilterIUC3IUC3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC3IUC3)
itkScalarImageKmeansImageFilterIUC3IUC3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUC3IUC3)
itkScalarImageKmeansImageFilterIUC3IUC3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUC3IUC3)
itkScalarImageKmeansImageFilterIUC3IUC3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_SetImageRegion,None,itkScalarImageKmeansImageFilterIUC3IUC3)
itkScalarImageKmeansImageFilterIUC3IUC3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_GetImageRegion,None,itkScalarImageKmeansImageFilterIUC3IUC3)
itkScalarImageKmeansImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_GetPointer,None,itkScalarImageKmeansImageFilterIUC3IUC3)
itkScalarImageKmeansImageFilterIUC3IUC3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_swigregister
itkScalarImageKmeansImageFilterIUC3IUC3_swigregister(itkScalarImageKmeansImageFilterIUC3IUC3)

def itkScalarImageKmeansImageFilterIUC3IUC3___New_orig__():
  """itkScalarImageKmeansImageFilterIUC3IUC3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3___New_orig__()

def itkScalarImageKmeansImageFilterIUC3IUC3_cast(*args):
  """itkScalarImageKmeansImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC3IUC3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUC3_cast(*args)

class itkScalarImageKmeansImageFilterIUC3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUC3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUC3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUC3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUC3IUL3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUC3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUC3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUC3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUC3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUC3IUL3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUC3IUL3)
itkScalarImageKmeansImageFilterIUC3IUL3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUC3IUL3)
itkScalarImageKmeansImageFilterIUC3IUL3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC3IUL3)
itkScalarImageKmeansImageFilterIUC3IUL3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC3IUL3)
itkScalarImageKmeansImageFilterIUC3IUL3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUC3IUL3)
itkScalarImageKmeansImageFilterIUC3IUL3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUC3IUL3)
itkScalarImageKmeansImageFilterIUC3IUL3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_SetImageRegion,None,itkScalarImageKmeansImageFilterIUC3IUL3)
itkScalarImageKmeansImageFilterIUC3IUL3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_GetImageRegion,None,itkScalarImageKmeansImageFilterIUC3IUL3)
itkScalarImageKmeansImageFilterIUC3IUL3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_GetPointer,None,itkScalarImageKmeansImageFilterIUC3IUL3)
itkScalarImageKmeansImageFilterIUC3IUL3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_swigregister
itkScalarImageKmeansImageFilterIUC3IUL3_swigregister(itkScalarImageKmeansImageFilterIUC3IUL3)

def itkScalarImageKmeansImageFilterIUC3IUL3___New_orig__():
  """itkScalarImageKmeansImageFilterIUC3IUL3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3___New_orig__()

def itkScalarImageKmeansImageFilterIUC3IUL3_cast(*args):
  """itkScalarImageKmeansImageFilterIUC3IUL3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC3IUL3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUL3_cast(*args)

class itkScalarImageKmeansImageFilterIUC3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUC3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUC3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUC3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUC3IUS3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUC3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUC3IUS3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUC3IUS3)
itkScalarImageKmeansImageFilterIUC3IUS3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUC3IUS3)
itkScalarImageKmeansImageFilterIUC3IUS3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC3IUS3)
itkScalarImageKmeansImageFilterIUC3IUS3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUC3IUS3)
itkScalarImageKmeansImageFilterIUC3IUS3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUC3IUS3)
itkScalarImageKmeansImageFilterIUC3IUS3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUC3IUS3)
itkScalarImageKmeansImageFilterIUC3IUS3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_SetImageRegion,None,itkScalarImageKmeansImageFilterIUC3IUS3)
itkScalarImageKmeansImageFilterIUC3IUS3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_GetImageRegion,None,itkScalarImageKmeansImageFilterIUC3IUS3)
itkScalarImageKmeansImageFilterIUC3IUS3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_GetPointer,None,itkScalarImageKmeansImageFilterIUC3IUS3)
itkScalarImageKmeansImageFilterIUC3IUS3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_swigregister
itkScalarImageKmeansImageFilterIUC3IUS3_swigregister(itkScalarImageKmeansImageFilterIUC3IUS3)

def itkScalarImageKmeansImageFilterIUC3IUS3___New_orig__():
  """itkScalarImageKmeansImageFilterIUC3IUS3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3___New_orig__()

def itkScalarImageKmeansImageFilterIUC3IUS3_cast(*args):
  """itkScalarImageKmeansImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUC3IUS3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUC3IUS3_cast(*args)

class itkScalarImageKmeansImageFilterIUL2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUL2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUL2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUL2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUL2IUC2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUL2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUL2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUL2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUL2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUL2IUC2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUL2IUC2)
itkScalarImageKmeansImageFilterIUL2IUC2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUL2IUC2)
itkScalarImageKmeansImageFilterIUL2IUC2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL2IUC2)
itkScalarImageKmeansImageFilterIUL2IUC2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL2IUC2)
itkScalarImageKmeansImageFilterIUL2IUC2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUL2IUC2)
itkScalarImageKmeansImageFilterIUL2IUC2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUL2IUC2)
itkScalarImageKmeansImageFilterIUL2IUC2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_SetImageRegion,None,itkScalarImageKmeansImageFilterIUL2IUC2)
itkScalarImageKmeansImageFilterIUL2IUC2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_GetImageRegion,None,itkScalarImageKmeansImageFilterIUL2IUC2)
itkScalarImageKmeansImageFilterIUL2IUC2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_GetPointer,None,itkScalarImageKmeansImageFilterIUL2IUC2)
itkScalarImageKmeansImageFilterIUL2IUC2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_swigregister
itkScalarImageKmeansImageFilterIUL2IUC2_swigregister(itkScalarImageKmeansImageFilterIUL2IUC2)

def itkScalarImageKmeansImageFilterIUL2IUC2___New_orig__():
  """itkScalarImageKmeansImageFilterIUL2IUC2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2___New_orig__()

def itkScalarImageKmeansImageFilterIUL2IUC2_cast(*args):
  """itkScalarImageKmeansImageFilterIUL2IUC2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL2IUC2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUC2_cast(*args)

class itkScalarImageKmeansImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUL2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUL2IUL2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUL2IUL2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUL2IUL2)
itkScalarImageKmeansImageFilterIUL2IUL2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUL2IUL2)
itkScalarImageKmeansImageFilterIUL2IUL2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL2IUL2)
itkScalarImageKmeansImageFilterIUL2IUL2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL2IUL2)
itkScalarImageKmeansImageFilterIUL2IUL2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUL2IUL2)
itkScalarImageKmeansImageFilterIUL2IUL2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUL2IUL2)
itkScalarImageKmeansImageFilterIUL2IUL2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_SetImageRegion,None,itkScalarImageKmeansImageFilterIUL2IUL2)
itkScalarImageKmeansImageFilterIUL2IUL2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_GetImageRegion,None,itkScalarImageKmeansImageFilterIUL2IUL2)
itkScalarImageKmeansImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_GetPointer,None,itkScalarImageKmeansImageFilterIUL2IUL2)
itkScalarImageKmeansImageFilterIUL2IUL2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_swigregister
itkScalarImageKmeansImageFilterIUL2IUL2_swigregister(itkScalarImageKmeansImageFilterIUL2IUL2)

def itkScalarImageKmeansImageFilterIUL2IUL2___New_orig__():
  """itkScalarImageKmeansImageFilterIUL2IUL2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2___New_orig__()

def itkScalarImageKmeansImageFilterIUL2IUL2_cast(*args):
  """itkScalarImageKmeansImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL2IUL2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUL2_cast(*args)

class itkScalarImageKmeansImageFilterIUL2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUL2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUL2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUL2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUL2IUS2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUL2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUL2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUL2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUL2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUL2IUS2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUL2IUS2)
itkScalarImageKmeansImageFilterIUL2IUS2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUL2IUS2)
itkScalarImageKmeansImageFilterIUL2IUS2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL2IUS2)
itkScalarImageKmeansImageFilterIUL2IUS2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL2IUS2)
itkScalarImageKmeansImageFilterIUL2IUS2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUL2IUS2)
itkScalarImageKmeansImageFilterIUL2IUS2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUL2IUS2)
itkScalarImageKmeansImageFilterIUL2IUS2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_SetImageRegion,None,itkScalarImageKmeansImageFilterIUL2IUS2)
itkScalarImageKmeansImageFilterIUL2IUS2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_GetImageRegion,None,itkScalarImageKmeansImageFilterIUL2IUS2)
itkScalarImageKmeansImageFilterIUL2IUS2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_GetPointer,None,itkScalarImageKmeansImageFilterIUL2IUS2)
itkScalarImageKmeansImageFilterIUL2IUS2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_swigregister
itkScalarImageKmeansImageFilterIUL2IUS2_swigregister(itkScalarImageKmeansImageFilterIUL2IUS2)

def itkScalarImageKmeansImageFilterIUL2IUS2___New_orig__():
  """itkScalarImageKmeansImageFilterIUL2IUS2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2___New_orig__()

def itkScalarImageKmeansImageFilterIUL2IUS2_cast(*args):
  """itkScalarImageKmeansImageFilterIUL2IUS2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL2IUS2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL2IUS2_cast(*args)

class itkScalarImageKmeansImageFilterIUL3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUL3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUL3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUL3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUL3IUC3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUL3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUL3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUL3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUL3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUL3IUC3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUL3IUC3)
itkScalarImageKmeansImageFilterIUL3IUC3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUL3IUC3)
itkScalarImageKmeansImageFilterIUL3IUC3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL3IUC3)
itkScalarImageKmeansImageFilterIUL3IUC3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL3IUC3)
itkScalarImageKmeansImageFilterIUL3IUC3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUL3IUC3)
itkScalarImageKmeansImageFilterIUL3IUC3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUL3IUC3)
itkScalarImageKmeansImageFilterIUL3IUC3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_SetImageRegion,None,itkScalarImageKmeansImageFilterIUL3IUC3)
itkScalarImageKmeansImageFilterIUL3IUC3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_GetImageRegion,None,itkScalarImageKmeansImageFilterIUL3IUC3)
itkScalarImageKmeansImageFilterIUL3IUC3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_GetPointer,None,itkScalarImageKmeansImageFilterIUL3IUC3)
itkScalarImageKmeansImageFilterIUL3IUC3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_swigregister
itkScalarImageKmeansImageFilterIUL3IUC3_swigregister(itkScalarImageKmeansImageFilterIUL3IUC3)

def itkScalarImageKmeansImageFilterIUL3IUC3___New_orig__():
  """itkScalarImageKmeansImageFilterIUL3IUC3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3___New_orig__()

def itkScalarImageKmeansImageFilterIUL3IUC3_cast(*args):
  """itkScalarImageKmeansImageFilterIUL3IUC3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL3IUC3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUC3_cast(*args)

class itkScalarImageKmeansImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUL3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUL3IUL3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUL3IUL3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUL3IUL3)
itkScalarImageKmeansImageFilterIUL3IUL3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUL3IUL3)
itkScalarImageKmeansImageFilterIUL3IUL3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL3IUL3)
itkScalarImageKmeansImageFilterIUL3IUL3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL3IUL3)
itkScalarImageKmeansImageFilterIUL3IUL3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUL3IUL3)
itkScalarImageKmeansImageFilterIUL3IUL3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUL3IUL3)
itkScalarImageKmeansImageFilterIUL3IUL3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_SetImageRegion,None,itkScalarImageKmeansImageFilterIUL3IUL3)
itkScalarImageKmeansImageFilterIUL3IUL3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_GetImageRegion,None,itkScalarImageKmeansImageFilterIUL3IUL3)
itkScalarImageKmeansImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_GetPointer,None,itkScalarImageKmeansImageFilterIUL3IUL3)
itkScalarImageKmeansImageFilterIUL3IUL3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_swigregister
itkScalarImageKmeansImageFilterIUL3IUL3_swigregister(itkScalarImageKmeansImageFilterIUL3IUL3)

def itkScalarImageKmeansImageFilterIUL3IUL3___New_orig__():
  """itkScalarImageKmeansImageFilterIUL3IUL3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3___New_orig__()

def itkScalarImageKmeansImageFilterIUL3IUL3_cast(*args):
  """itkScalarImageKmeansImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL3IUL3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUL3_cast(*args)

class itkScalarImageKmeansImageFilterIUL3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUL3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUL3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUL3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUL3IUS3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUL3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUL3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUL3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUL3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUL3IUS3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUL3IUS3)
itkScalarImageKmeansImageFilterIUL3IUS3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUL3IUS3)
itkScalarImageKmeansImageFilterIUL3IUS3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL3IUS3)
itkScalarImageKmeansImageFilterIUL3IUS3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUL3IUS3)
itkScalarImageKmeansImageFilterIUL3IUS3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUL3IUS3)
itkScalarImageKmeansImageFilterIUL3IUS3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUL3IUS3)
itkScalarImageKmeansImageFilterIUL3IUS3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_SetImageRegion,None,itkScalarImageKmeansImageFilterIUL3IUS3)
itkScalarImageKmeansImageFilterIUL3IUS3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_GetImageRegion,None,itkScalarImageKmeansImageFilterIUL3IUS3)
itkScalarImageKmeansImageFilterIUL3IUS3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_GetPointer,None,itkScalarImageKmeansImageFilterIUL3IUS3)
itkScalarImageKmeansImageFilterIUL3IUS3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_swigregister
itkScalarImageKmeansImageFilterIUL3IUS3_swigregister(itkScalarImageKmeansImageFilterIUL3IUS3)

def itkScalarImageKmeansImageFilterIUL3IUS3___New_orig__():
  """itkScalarImageKmeansImageFilterIUL3IUS3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3___New_orig__()

def itkScalarImageKmeansImageFilterIUL3IUS3_cast(*args):
  """itkScalarImageKmeansImageFilterIUL3IUS3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUL3IUS3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUL3IUS3_cast(*args)

class itkScalarImageKmeansImageFilterIUS2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUS2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUS2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUS2IUC2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUS2IUC2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUS2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUS2IUC2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUS2IUC2)
itkScalarImageKmeansImageFilterIUS2IUC2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUS2IUC2)
itkScalarImageKmeansImageFilterIUS2IUC2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS2IUC2)
itkScalarImageKmeansImageFilterIUS2IUC2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS2IUC2)
itkScalarImageKmeansImageFilterIUS2IUC2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUS2IUC2)
itkScalarImageKmeansImageFilterIUS2IUC2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUS2IUC2)
itkScalarImageKmeansImageFilterIUS2IUC2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_SetImageRegion,None,itkScalarImageKmeansImageFilterIUS2IUC2)
itkScalarImageKmeansImageFilterIUS2IUC2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_GetImageRegion,None,itkScalarImageKmeansImageFilterIUS2IUC2)
itkScalarImageKmeansImageFilterIUS2IUC2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_GetPointer,None,itkScalarImageKmeansImageFilterIUS2IUC2)
itkScalarImageKmeansImageFilterIUS2IUC2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_swigregister
itkScalarImageKmeansImageFilterIUS2IUC2_swigregister(itkScalarImageKmeansImageFilterIUS2IUC2)

def itkScalarImageKmeansImageFilterIUS2IUC2___New_orig__():
  """itkScalarImageKmeansImageFilterIUS2IUC2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2___New_orig__()

def itkScalarImageKmeansImageFilterIUS2IUC2_cast(*args):
  """itkScalarImageKmeansImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS2IUC2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUC2_cast(*args)

class itkScalarImageKmeansImageFilterIUS2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUS2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUS2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUS2IUL2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUS2IUL2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUS2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUS2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUS2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUS2IUL2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUS2IUL2)
itkScalarImageKmeansImageFilterIUS2IUL2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUS2IUL2)
itkScalarImageKmeansImageFilterIUS2IUL2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS2IUL2)
itkScalarImageKmeansImageFilterIUS2IUL2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS2IUL2)
itkScalarImageKmeansImageFilterIUS2IUL2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUS2IUL2)
itkScalarImageKmeansImageFilterIUS2IUL2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUS2IUL2)
itkScalarImageKmeansImageFilterIUS2IUL2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_SetImageRegion,None,itkScalarImageKmeansImageFilterIUS2IUL2)
itkScalarImageKmeansImageFilterIUS2IUL2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_GetImageRegion,None,itkScalarImageKmeansImageFilterIUS2IUL2)
itkScalarImageKmeansImageFilterIUS2IUL2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_GetPointer,None,itkScalarImageKmeansImageFilterIUS2IUL2)
itkScalarImageKmeansImageFilterIUS2IUL2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_swigregister
itkScalarImageKmeansImageFilterIUS2IUL2_swigregister(itkScalarImageKmeansImageFilterIUS2IUL2)

def itkScalarImageKmeansImageFilterIUS2IUL2___New_orig__():
  """itkScalarImageKmeansImageFilterIUS2IUL2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2___New_orig__()

def itkScalarImageKmeansImageFilterIUS2IUL2_cast(*args):
  """itkScalarImageKmeansImageFilterIUS2IUL2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS2IUL2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUL2_cast(*args)

class itkScalarImageKmeansImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion2 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUS2IUS2"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUS2IUS2
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUS2IUS2.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUS2IUS2)
itkScalarImageKmeansImageFilterIUS2IUS2.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUS2IUS2)
itkScalarImageKmeansImageFilterIUS2IUS2.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS2IUS2)
itkScalarImageKmeansImageFilterIUS2IUS2.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS2IUS2)
itkScalarImageKmeansImageFilterIUS2IUS2.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUS2IUS2)
itkScalarImageKmeansImageFilterIUS2IUS2.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUS2IUS2)
itkScalarImageKmeansImageFilterIUS2IUS2.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_SetImageRegion,None,itkScalarImageKmeansImageFilterIUS2IUS2)
itkScalarImageKmeansImageFilterIUS2IUS2.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_GetImageRegion,None,itkScalarImageKmeansImageFilterIUS2IUS2)
itkScalarImageKmeansImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_GetPointer,None,itkScalarImageKmeansImageFilterIUS2IUS2)
itkScalarImageKmeansImageFilterIUS2IUS2_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_swigregister
itkScalarImageKmeansImageFilterIUS2IUS2_swigregister(itkScalarImageKmeansImageFilterIUS2IUS2)

def itkScalarImageKmeansImageFilterIUS2IUS2___New_orig__():
  """itkScalarImageKmeansImageFilterIUS2IUS2___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2___New_orig__()

def itkScalarImageKmeansImageFilterIUS2IUS2_cast(*args):
  """itkScalarImageKmeansImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS2IUS2"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS2IUS2_cast(*args)

class itkScalarImageKmeansImageFilterIUS3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUS3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUS3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUS3IUC3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUS3IUC3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUS3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUS3IUC3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUS3IUC3)
itkScalarImageKmeansImageFilterIUS3IUC3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUS3IUC3)
itkScalarImageKmeansImageFilterIUS3IUC3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS3IUC3)
itkScalarImageKmeansImageFilterIUS3IUC3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS3IUC3)
itkScalarImageKmeansImageFilterIUS3IUC3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUS3IUC3)
itkScalarImageKmeansImageFilterIUS3IUC3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUS3IUC3)
itkScalarImageKmeansImageFilterIUS3IUC3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_SetImageRegion,None,itkScalarImageKmeansImageFilterIUS3IUC3)
itkScalarImageKmeansImageFilterIUS3IUC3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_GetImageRegion,None,itkScalarImageKmeansImageFilterIUS3IUC3)
itkScalarImageKmeansImageFilterIUS3IUC3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_GetPointer,None,itkScalarImageKmeansImageFilterIUS3IUC3)
itkScalarImageKmeansImageFilterIUS3IUC3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_swigregister
itkScalarImageKmeansImageFilterIUS3IUC3_swigregister(itkScalarImageKmeansImageFilterIUS3IUC3)

def itkScalarImageKmeansImageFilterIUS3IUC3___New_orig__():
  """itkScalarImageKmeansImageFilterIUS3IUC3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3___New_orig__()

def itkScalarImageKmeansImageFilterIUS3IUC3_cast(*args):
  """itkScalarImageKmeansImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS3IUC3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUC3_cast(*args)

class itkScalarImageKmeansImageFilterIUS3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUS3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUS3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUS3IUL3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUS3IUL3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUS3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUS3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUS3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUS3IUL3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUS3IUL3)
itkScalarImageKmeansImageFilterIUS3IUL3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUS3IUL3)
itkScalarImageKmeansImageFilterIUS3IUL3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS3IUL3)
itkScalarImageKmeansImageFilterIUS3IUL3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS3IUL3)
itkScalarImageKmeansImageFilterIUS3IUL3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUS3IUL3)
itkScalarImageKmeansImageFilterIUS3IUL3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUS3IUL3)
itkScalarImageKmeansImageFilterIUS3IUL3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_SetImageRegion,None,itkScalarImageKmeansImageFilterIUS3IUL3)
itkScalarImageKmeansImageFilterIUS3IUL3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_GetImageRegion,None,itkScalarImageKmeansImageFilterIUS3IUL3)
itkScalarImageKmeansImageFilterIUS3IUL3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_GetPointer,None,itkScalarImageKmeansImageFilterIUS3IUL3)
itkScalarImageKmeansImageFilterIUS3IUL3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_swigregister
itkScalarImageKmeansImageFilterIUS3IUL3_swigregister(itkScalarImageKmeansImageFilterIUS3IUL3)

def itkScalarImageKmeansImageFilterIUS3IUL3___New_orig__():
  """itkScalarImageKmeansImageFilterIUS3IUL3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3___New_orig__()

def itkScalarImageKmeansImageFilterIUS3IUL3_cast(*args):
  """itkScalarImageKmeansImageFilterIUS3IUL3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS3IUL3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUL3_cast(*args)

class itkScalarImageKmeansImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkScalarImageKmeansImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_ImageDimension
    InputHasNumericTraitsCheck = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def AddClassWithInitialMean(self, *args):
        """AddClassWithInitialMean(self, double mean)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_AddClassWithInitialMean(self, *args)

    def GetFinalMeans(self):
        """GetFinalMeans(self) -> itkArrayD"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_GetFinalMeans(self)

    def SetUseNonContiguousLabels(self, *args):
        """SetUseNonContiguousLabels(self, bool _arg)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_SetUseNonContiguousLabels(self, *args)

    def GetUseNonContiguousLabels(self):
        """GetUseNonContiguousLabels(self) -> bool"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_GetUseNonContiguousLabels(self)

    def UseNonContiguousLabelsOn(self):
        """UseNonContiguousLabelsOn(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_UseNonContiguousLabelsOn(self)

    def UseNonContiguousLabelsOff(self):
        """UseNonContiguousLabelsOff(self)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_UseNonContiguousLabelsOff(self)

    def SetImageRegion(self, *args):
        """SetImageRegion(self, itkImageRegion3 region)"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_SetImageRegion(self, *args)

    def GetImageRegion(self):
        """GetImageRegion(self) -> itkImageRegion3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_GetImageRegion(self)

    __swig_destroy__ = _itkScalarImageKmeansImageFilterPython.delete_itkScalarImageKmeansImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageKmeansImageFilterIUS3IUS3"""
        return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageKmeansImageFilterIUS3IUS3
        
        Create a new object of the class itkScalarImageKmeansImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageKmeansImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageKmeansImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageKmeansImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageKmeansImageFilterIUS3IUS3.AddClassWithInitialMean = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_AddClassWithInitialMean,None,itkScalarImageKmeansImageFilterIUS3IUS3)
itkScalarImageKmeansImageFilterIUS3IUS3.GetFinalMeans = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_GetFinalMeans,None,itkScalarImageKmeansImageFilterIUS3IUS3)
itkScalarImageKmeansImageFilterIUS3IUS3.SetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_SetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS3IUS3)
itkScalarImageKmeansImageFilterIUS3IUS3.GetUseNonContiguousLabels = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_GetUseNonContiguousLabels,None,itkScalarImageKmeansImageFilterIUS3IUS3)
itkScalarImageKmeansImageFilterIUS3IUS3.UseNonContiguousLabelsOn = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_UseNonContiguousLabelsOn,None,itkScalarImageKmeansImageFilterIUS3IUS3)
itkScalarImageKmeansImageFilterIUS3IUS3.UseNonContiguousLabelsOff = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_UseNonContiguousLabelsOff,None,itkScalarImageKmeansImageFilterIUS3IUS3)
itkScalarImageKmeansImageFilterIUS3IUS3.SetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_SetImageRegion,None,itkScalarImageKmeansImageFilterIUS3IUS3)
itkScalarImageKmeansImageFilterIUS3IUS3.GetImageRegion = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_GetImageRegion,None,itkScalarImageKmeansImageFilterIUS3IUS3)
itkScalarImageKmeansImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_GetPointer,None,itkScalarImageKmeansImageFilterIUS3IUS3)
itkScalarImageKmeansImageFilterIUS3IUS3_swigregister = _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_swigregister
itkScalarImageKmeansImageFilterIUS3IUS3_swigregister(itkScalarImageKmeansImageFilterIUS3IUS3)

def itkScalarImageKmeansImageFilterIUS3IUS3___New_orig__():
  """itkScalarImageKmeansImageFilterIUS3IUS3___New_orig__()"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3___New_orig__()

def itkScalarImageKmeansImageFilterIUS3IUS3_cast(*args):
  """itkScalarImageKmeansImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkScalarImageKmeansImageFilterIUS3IUS3"""
  return _itkScalarImageKmeansImageFilterPython.itkScalarImageKmeansImageFilterIUS3IUS3_cast(*args)



