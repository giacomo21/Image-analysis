// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSegmentationLevelSetImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkSegmentationLevelSetImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkSegmentationLevelSetImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkSegmentationLevelSetImageFilterJava
#endif
#ifdef SWIGLUA
%module itkSegmentationLevelSetImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkSegmentationLevelSetImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSegmentationLevelSetImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkSegmentationLevelSetImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkSegmentationLevelSetImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkSegmentationLevelSetImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkSegmentationLevelSetImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkSegmentationLevelSetImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkSegmentationLevelSetImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkSegmentationLevelSetImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkSegmentationLevelSetImageFilterPython
#endif
#ifdef SWIGR
%module itkSegmentationLevelSetImageFilterR
#endif
#ifdef SWIGRUBY
%module itkSegmentationLevelSetImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkSegmentationLevelSetImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkSegmentationLevelSetImageFilterTcl
#endif
#ifdef SWIGXML
%module itkSegmentationLevelSetImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSegmentationLevelSetFunction.i
%import wrap_itkImage.i
%import wrap_itkSparseFieldLevelSetImageFilter.i


%include itk.i
%include wrap_itkSegmentationLevelSetImageFilter_ext.i


 class itkSegmentationLevelSetImageFilterID2ID2D : public itkSparseFieldLevelSetImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
     virtual void SetFeatureImage(itkImageD2 const * f);
     virtual itkImageD2 * GetFeatureImage();
     virtual void SetInitialImage(itkImageD2 * f);
     void SetInput2(itkImageD2 const * input);
     void SetSpeedImage(itkImageD2 * s);
     void SetAdvectionImage(itk::Image< itk::FixedArray< double, 2u >, 2u > * v);
     virtual itkImageD2 const * GetSpeedImage() const;
     virtual itk::Image< itk::FixedArray< double, 2u >, 2u > const * GetAdvectionImage() const;
     void SetUseNegativeFeaturesOn();
     void SetUseNegativeFeaturesOff();
     void SetUseNegativeFeatures(bool u);
     bool GetUseNegativeFeatures() const;
     virtual void SetReverseExpansionDirection(bool const _arg);
     virtual bool GetReverseExpansionDirection() const;
     virtual void ReverseExpansionDirectionOn();
     virtual void ReverseExpansionDirectionOff();
     virtual void SetAutoGenerateSpeedAdvection(bool const _arg);
     virtual bool GetAutoGenerateSpeedAdvection() const;
     virtual void AutoGenerateSpeedAdvectionOn();
     virtual void AutoGenerateSpeedAdvectionOff();
     void SetFeatureScaling(double v);
     void SetPropagationScaling(double v);
     double GetPropagationScaling() const;
     void SetAdvectionScaling(double v);
     double GetAdvectionScaling() const;
     void SetCurvatureScaling(double v);
     double GetCurvatureScaling() const;
     void SetUseMinimalCurvature(bool b);
     bool GetUseMinimalCurvature() const;
     void UseMinimalCurvatureOn();
     void UseMinimalCurvatureOff();
     virtual void SetSegmentationFunction(itkSegmentationLevelSetFunctionID2ID2 * s);
     virtual itkSegmentationLevelSetFunctionID2ID2 * GetSegmentationFunction();
     void SetMaximumCurvatureTimeStep(double n);
     double GetMaximumCurvatureTimeStep() const;
     void SetMaximumPropagationTimeStep(double n);
     double GetMaximumPropagationTimeStep() const;
     void GenerateSpeedImage();
     void GenerateAdvectionImage();
   private:
     itkSegmentationLevelSetImageFilterID2ID2D(itkSegmentationLevelSetImageFilterID2ID2D const & arg0);
     void operator=(itkSegmentationLevelSetImageFilterID2ID2D const & arg0);
   protected:
     ~itkSegmentationLevelSetImageFilterID2ID2D();
     itkSegmentationLevelSetImageFilterID2ID2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void GenerateData();
 };


 class itkSegmentationLevelSetImageFilterID2ID2D_Pointer {
   public:
     itkSegmentationLevelSetImageFilterID2ID2D_Pointer();
     itkSegmentationLevelSetImageFilterID2ID2D_Pointer(itkSegmentationLevelSetImageFilterID2ID2D_Pointer const & p);
     itkSegmentationLevelSetImageFilterID2ID2D_Pointer(itkSegmentationLevelSetImageFilterID2ID2D * p);
     ~itkSegmentationLevelSetImageFilterID2ID2D_Pointer();
     itkSegmentationLevelSetImageFilterID2ID2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetImageFilterID2ID2D * GetPointer() const;
     bool operator<(itkSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetImageFilterID2ID2D_Pointer const & r) const;
     itkSegmentationLevelSetImageFilterID2ID2D_Pointer & operator=(itkSegmentationLevelSetImageFilterID2ID2D_Pointer const & r);
     itkSegmentationLevelSetImageFilterID2ID2D_Pointer & operator=(itkSegmentationLevelSetImageFilterID2ID2D * r);
     itkSegmentationLevelSetImageFilterID2ID2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetImageFilterID2IVF22D : public itkSparseFieldLevelSetImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
     virtual void SetFeatureImage(itkImageVF22 const * f);
     virtual itkImageVF22 * GetFeatureImage();
     virtual void SetInitialImage(itkImageD2 * f);
     void SetInput2(itkImageVF22 const * input);
     void SetSpeedImage(itkImageD2 * s);
     void SetAdvectionImage(itk::Image< itk::FixedArray< double, 2u >, 2u > * v);
     virtual itkImageD2 const * GetSpeedImage() const;
     virtual itk::Image< itk::FixedArray< double, 2u >, 2u > const * GetAdvectionImage() const;
     void SetUseNegativeFeaturesOn();
     void SetUseNegativeFeaturesOff();
     void SetUseNegativeFeatures(bool u);
     bool GetUseNegativeFeatures() const;
     virtual void SetReverseExpansionDirection(bool const _arg);
     virtual bool GetReverseExpansionDirection() const;
     virtual void ReverseExpansionDirectionOn();
     virtual void ReverseExpansionDirectionOff();
     virtual void SetAutoGenerateSpeedAdvection(bool const _arg);
     virtual bool GetAutoGenerateSpeedAdvection() const;
     virtual void AutoGenerateSpeedAdvectionOn();
     virtual void AutoGenerateSpeedAdvectionOff();
     void SetFeatureScaling(double v);
     void SetPropagationScaling(double v);
     double GetPropagationScaling() const;
     void SetAdvectionScaling(double v);
     double GetAdvectionScaling() const;
     void SetCurvatureScaling(double v);
     double GetCurvatureScaling() const;
     void SetUseMinimalCurvature(bool b);
     bool GetUseMinimalCurvature() const;
     void UseMinimalCurvatureOn();
     void UseMinimalCurvatureOff();
     virtual void SetSegmentationFunction(itk::SegmentationLevelSetFunction< itk::Image< double, 2u >, itk::Image< itk::Vector< float, 2u >, 2u > > * s);
     virtual itk::SegmentationLevelSetFunction< itk::Image< double, 2u >, itk::Image< itk::Vector< float, 2u >, 2u > > * GetSegmentationFunction();
     void SetMaximumCurvatureTimeStep(double n);
     double GetMaximumCurvatureTimeStep() const;
     void SetMaximumPropagationTimeStep(double n);
     double GetMaximumPropagationTimeStep() const;
     void GenerateSpeedImage();
     void GenerateAdvectionImage();
   private:
     itkSegmentationLevelSetImageFilterID2IVF22D(itkSegmentationLevelSetImageFilterID2IVF22D const & arg0);
     void operator=(itkSegmentationLevelSetImageFilterID2IVF22D const & arg0);
   protected:
     ~itkSegmentationLevelSetImageFilterID2IVF22D();
     itkSegmentationLevelSetImageFilterID2IVF22D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void GenerateData();
 };


 class itkSegmentationLevelSetImageFilterID2IVF22D_Pointer {
   public:
     itkSegmentationLevelSetImageFilterID2IVF22D_Pointer();
     itkSegmentationLevelSetImageFilterID2IVF22D_Pointer(itkSegmentationLevelSetImageFilterID2IVF22D_Pointer const & p);
     itkSegmentationLevelSetImageFilterID2IVF22D_Pointer(itkSegmentationLevelSetImageFilterID2IVF22D * p);
     ~itkSegmentationLevelSetImageFilterID2IVF22D_Pointer();
     itkSegmentationLevelSetImageFilterID2IVF22D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetImageFilterID2IVF22D * GetPointer() const;
     bool operator<(itkSegmentationLevelSetImageFilterID2IVF22D_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetImageFilterID2IVF22D_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetImageFilterID2IVF22D_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetImageFilterID2IVF22D_Pointer const & r) const;
     itkSegmentationLevelSetImageFilterID2IVF22D_Pointer & operator=(itkSegmentationLevelSetImageFilterID2IVF22D_Pointer const & r);
     itkSegmentationLevelSetImageFilterID2IVF22D_Pointer & operator=(itkSegmentationLevelSetImageFilterID2IVF22D * r);
     itkSegmentationLevelSetImageFilterID2IVF22D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetImageFilterID3ID3D : public itkSparseFieldLevelSetImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
     virtual void SetFeatureImage(itkImageD3 const * f);
     virtual itkImageD3 * GetFeatureImage();
     virtual void SetInitialImage(itkImageD3 * f);
     void SetInput2(itkImageD3 const * input);
     void SetSpeedImage(itkImageD3 * s);
     void SetAdvectionImage(itk::Image< itk::FixedArray< double, 3u >, 3u > * v);
     virtual itkImageD3 const * GetSpeedImage() const;
     virtual itk::Image< itk::FixedArray< double, 3u >, 3u > const * GetAdvectionImage() const;
     void SetUseNegativeFeaturesOn();
     void SetUseNegativeFeaturesOff();
     void SetUseNegativeFeatures(bool u);
     bool GetUseNegativeFeatures() const;
     virtual void SetReverseExpansionDirection(bool const _arg);
     virtual bool GetReverseExpansionDirection() const;
     virtual void ReverseExpansionDirectionOn();
     virtual void ReverseExpansionDirectionOff();
     virtual void SetAutoGenerateSpeedAdvection(bool const _arg);
     virtual bool GetAutoGenerateSpeedAdvection() const;
     virtual void AutoGenerateSpeedAdvectionOn();
     virtual void AutoGenerateSpeedAdvectionOff();
     void SetFeatureScaling(double v);
     void SetPropagationScaling(double v);
     double GetPropagationScaling() const;
     void SetAdvectionScaling(double v);
     double GetAdvectionScaling() const;
     void SetCurvatureScaling(double v);
     double GetCurvatureScaling() const;
     void SetUseMinimalCurvature(bool b);
     bool GetUseMinimalCurvature() const;
     void UseMinimalCurvatureOn();
     void UseMinimalCurvatureOff();
     virtual void SetSegmentationFunction(itkSegmentationLevelSetFunctionID3ID3 * s);
     virtual itkSegmentationLevelSetFunctionID3ID3 * GetSegmentationFunction();
     void SetMaximumCurvatureTimeStep(double n);
     double GetMaximumCurvatureTimeStep() const;
     void SetMaximumPropagationTimeStep(double n);
     double GetMaximumPropagationTimeStep() const;
     void GenerateSpeedImage();
     void GenerateAdvectionImage();
   private:
     itkSegmentationLevelSetImageFilterID3ID3D(itkSegmentationLevelSetImageFilterID3ID3D const & arg0);
     void operator=(itkSegmentationLevelSetImageFilterID3ID3D const & arg0);
   protected:
     ~itkSegmentationLevelSetImageFilterID3ID3D();
     itkSegmentationLevelSetImageFilterID3ID3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void GenerateData();
 };


 class itkSegmentationLevelSetImageFilterID3ID3D_Pointer {
   public:
     itkSegmentationLevelSetImageFilterID3ID3D_Pointer();
     itkSegmentationLevelSetImageFilterID3ID3D_Pointer(itkSegmentationLevelSetImageFilterID3ID3D_Pointer const & p);
     itkSegmentationLevelSetImageFilterID3ID3D_Pointer(itkSegmentationLevelSetImageFilterID3ID3D * p);
     ~itkSegmentationLevelSetImageFilterID3ID3D_Pointer();
     itkSegmentationLevelSetImageFilterID3ID3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetImageFilterID3ID3D * GetPointer() const;
     bool operator<(itkSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetImageFilterID3ID3D_Pointer const & r) const;
     itkSegmentationLevelSetImageFilterID3ID3D_Pointer & operator=(itkSegmentationLevelSetImageFilterID3ID3D_Pointer const & r);
     itkSegmentationLevelSetImageFilterID3ID3D_Pointer & operator=(itkSegmentationLevelSetImageFilterID3ID3D * r);
     itkSegmentationLevelSetImageFilterID3ID3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetImageFilterID3IVF33D : public itkSparseFieldLevelSetImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
     virtual void SetFeatureImage(itkImageVF33 const * f);
     virtual itkImageVF33 * GetFeatureImage();
     virtual void SetInitialImage(itkImageD3 * f);
     void SetInput2(itkImageVF33 const * input);
     void SetSpeedImage(itkImageD3 * s);
     void SetAdvectionImage(itk::Image< itk::FixedArray< double, 3u >, 3u > * v);
     virtual itkImageD3 const * GetSpeedImage() const;
     virtual itk::Image< itk::FixedArray< double, 3u >, 3u > const * GetAdvectionImage() const;
     void SetUseNegativeFeaturesOn();
     void SetUseNegativeFeaturesOff();
     void SetUseNegativeFeatures(bool u);
     bool GetUseNegativeFeatures() const;
     virtual void SetReverseExpansionDirection(bool const _arg);
     virtual bool GetReverseExpansionDirection() const;
     virtual void ReverseExpansionDirectionOn();
     virtual void ReverseExpansionDirectionOff();
     virtual void SetAutoGenerateSpeedAdvection(bool const _arg);
     virtual bool GetAutoGenerateSpeedAdvection() const;
     virtual void AutoGenerateSpeedAdvectionOn();
     virtual void AutoGenerateSpeedAdvectionOff();
     void SetFeatureScaling(double v);
     void SetPropagationScaling(double v);
     double GetPropagationScaling() const;
     void SetAdvectionScaling(double v);
     double GetAdvectionScaling() const;
     void SetCurvatureScaling(double v);
     double GetCurvatureScaling() const;
     void SetUseMinimalCurvature(bool b);
     bool GetUseMinimalCurvature() const;
     void UseMinimalCurvatureOn();
     void UseMinimalCurvatureOff();
     virtual void SetSegmentationFunction(itk::SegmentationLevelSetFunction< itk::Image< double, 3u >, itk::Image< itk::Vector< float, 3u >, 3u > > * s);
     virtual itk::SegmentationLevelSetFunction< itk::Image< double, 3u >, itk::Image< itk::Vector< float, 3u >, 3u > > * GetSegmentationFunction();
     void SetMaximumCurvatureTimeStep(double n);
     double GetMaximumCurvatureTimeStep() const;
     void SetMaximumPropagationTimeStep(double n);
     double GetMaximumPropagationTimeStep() const;
     void GenerateSpeedImage();
     void GenerateAdvectionImage();
   private:
     itkSegmentationLevelSetImageFilterID3IVF33D(itkSegmentationLevelSetImageFilterID3IVF33D const & arg0);
     void operator=(itkSegmentationLevelSetImageFilterID3IVF33D const & arg0);
   protected:
     ~itkSegmentationLevelSetImageFilterID3IVF33D();
     itkSegmentationLevelSetImageFilterID3IVF33D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void GenerateData();
 };


 class itkSegmentationLevelSetImageFilterID3IVF33D_Pointer {
   public:
     itkSegmentationLevelSetImageFilterID3IVF33D_Pointer();
     itkSegmentationLevelSetImageFilterID3IVF33D_Pointer(itkSegmentationLevelSetImageFilterID3IVF33D_Pointer const & p);
     itkSegmentationLevelSetImageFilterID3IVF33D_Pointer(itkSegmentationLevelSetImageFilterID3IVF33D * p);
     ~itkSegmentationLevelSetImageFilterID3IVF33D_Pointer();
     itkSegmentationLevelSetImageFilterID3IVF33D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetImageFilterID3IVF33D * GetPointer() const;
     bool operator<(itkSegmentationLevelSetImageFilterID3IVF33D_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetImageFilterID3IVF33D_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetImageFilterID3IVF33D_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetImageFilterID3IVF33D_Pointer const & r) const;
     itkSegmentationLevelSetImageFilterID3IVF33D_Pointer & operator=(itkSegmentationLevelSetImageFilterID3IVF33D_Pointer const & r);
     itkSegmentationLevelSetImageFilterID3IVF33D_Pointer & operator=(itkSegmentationLevelSetImageFilterID3IVF33D * r);
     itkSegmentationLevelSetImageFilterID3IVF33D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetImageFilterIF2IF2F : public itkSparseFieldLevelSetImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
     virtual void SetFeatureImage(itkImageF2 const * f);
     virtual itkImageF2 * GetFeatureImage();
     virtual void SetInitialImage(itkImageF2 * f);
     void SetInput2(itkImageF2 const * input);
     void SetSpeedImage(itkImageF2 * s);
     void SetAdvectionImage(itkImageFAF22 * v);
     virtual itkImageF2 const * GetSpeedImage() const;
     virtual itkImageFAF22 const * GetAdvectionImage() const;
     void SetUseNegativeFeaturesOn();
     void SetUseNegativeFeaturesOff();
     void SetUseNegativeFeatures(bool u);
     bool GetUseNegativeFeatures() const;
     virtual void SetReverseExpansionDirection(bool const _arg);
     virtual bool GetReverseExpansionDirection() const;
     virtual void ReverseExpansionDirectionOn();
     virtual void ReverseExpansionDirectionOff();
     virtual void SetAutoGenerateSpeedAdvection(bool const _arg);
     virtual bool GetAutoGenerateSpeedAdvection() const;
     virtual void AutoGenerateSpeedAdvectionOn();
     virtual void AutoGenerateSpeedAdvectionOff();
     void SetFeatureScaling(float v);
     void SetPropagationScaling(float v);
     float GetPropagationScaling() const;
     void SetAdvectionScaling(float v);
     float GetAdvectionScaling() const;
     void SetCurvatureScaling(float v);
     float GetCurvatureScaling() const;
     void SetUseMinimalCurvature(bool b);
     bool GetUseMinimalCurvature() const;
     void UseMinimalCurvatureOn();
     void UseMinimalCurvatureOff();
     virtual void SetSegmentationFunction(itkSegmentationLevelSetFunctionIF2IF2 * s);
     virtual itkSegmentationLevelSetFunctionIF2IF2 * GetSegmentationFunction();
     void SetMaximumCurvatureTimeStep(double n);
     double GetMaximumCurvatureTimeStep() const;
     void SetMaximumPropagationTimeStep(double n);
     double GetMaximumPropagationTimeStep() const;
     void GenerateSpeedImage();
     void GenerateAdvectionImage();
   private:
     itkSegmentationLevelSetImageFilterIF2IF2F(itkSegmentationLevelSetImageFilterIF2IF2F const & arg0);
     void operator=(itkSegmentationLevelSetImageFilterIF2IF2F const & arg0);
   protected:
     ~itkSegmentationLevelSetImageFilterIF2IF2F();
     itkSegmentationLevelSetImageFilterIF2IF2F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void GenerateData();
 };


 class itkSegmentationLevelSetImageFilterIF2IF2F_Pointer {
   public:
     itkSegmentationLevelSetImageFilterIF2IF2F_Pointer();
     itkSegmentationLevelSetImageFilterIF2IF2F_Pointer(itkSegmentationLevelSetImageFilterIF2IF2F_Pointer const & p);
     itkSegmentationLevelSetImageFilterIF2IF2F_Pointer(itkSegmentationLevelSetImageFilterIF2IF2F * p);
     ~itkSegmentationLevelSetImageFilterIF2IF2F_Pointer();
     itkSegmentationLevelSetImageFilterIF2IF2F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetImageFilterIF2IF2F * GetPointer() const;
     bool operator<(itkSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r) const;
     itkSegmentationLevelSetImageFilterIF2IF2F_Pointer & operator=(itkSegmentationLevelSetImageFilterIF2IF2F_Pointer const & r);
     itkSegmentationLevelSetImageFilterIF2IF2F_Pointer & operator=(itkSegmentationLevelSetImageFilterIF2IF2F * r);
     itkSegmentationLevelSetImageFilterIF2IF2F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetImageFilterIF2IVF22F : public itkSparseFieldLevelSetImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
     virtual void SetFeatureImage(itkImageVF22 const * f);
     virtual itkImageVF22 * GetFeatureImage();
     virtual void SetInitialImage(itkImageF2 * f);
     void SetInput2(itkImageVF22 const * input);
     void SetSpeedImage(itkImageF2 * s);
     void SetAdvectionImage(itkImageFAF22 * v);
     virtual itkImageF2 const * GetSpeedImage() const;
     virtual itkImageFAF22 const * GetAdvectionImage() const;
     void SetUseNegativeFeaturesOn();
     void SetUseNegativeFeaturesOff();
     void SetUseNegativeFeatures(bool u);
     bool GetUseNegativeFeatures() const;
     virtual void SetReverseExpansionDirection(bool const _arg);
     virtual bool GetReverseExpansionDirection() const;
     virtual void ReverseExpansionDirectionOn();
     virtual void ReverseExpansionDirectionOff();
     virtual void SetAutoGenerateSpeedAdvection(bool const _arg);
     virtual bool GetAutoGenerateSpeedAdvection() const;
     virtual void AutoGenerateSpeedAdvectionOn();
     virtual void AutoGenerateSpeedAdvectionOff();
     void SetFeatureScaling(float v);
     void SetPropagationScaling(float v);
     float GetPropagationScaling() const;
     void SetAdvectionScaling(float v);
     float GetAdvectionScaling() const;
     void SetCurvatureScaling(float v);
     float GetCurvatureScaling() const;
     void SetUseMinimalCurvature(bool b);
     bool GetUseMinimalCurvature() const;
     void UseMinimalCurvatureOn();
     void UseMinimalCurvatureOff();
     virtual void SetSegmentationFunction(itk::SegmentationLevelSetFunction< itk::Image< float, 2u >, itk::Image< itk::Vector< float, 2u >, 2u > > * s);
     virtual itk::SegmentationLevelSetFunction< itk::Image< float, 2u >, itk::Image< itk::Vector< float, 2u >, 2u > > * GetSegmentationFunction();
     void SetMaximumCurvatureTimeStep(double n);
     double GetMaximumCurvatureTimeStep() const;
     void SetMaximumPropagationTimeStep(double n);
     double GetMaximumPropagationTimeStep() const;
     void GenerateSpeedImage();
     void GenerateAdvectionImage();
   private:
     itkSegmentationLevelSetImageFilterIF2IVF22F(itkSegmentationLevelSetImageFilterIF2IVF22F const & arg0);
     void operator=(itkSegmentationLevelSetImageFilterIF2IVF22F const & arg0);
   protected:
     ~itkSegmentationLevelSetImageFilterIF2IVF22F();
     itkSegmentationLevelSetImageFilterIF2IVF22F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void GenerateData();
 };


 class itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer {
   public:
     itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer();
     itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer(itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer const & p);
     itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer(itkSegmentationLevelSetImageFilterIF2IVF22F * p);
     ~itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer();
     itkSegmentationLevelSetImageFilterIF2IVF22F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetImageFilterIF2IVF22F * GetPointer() const;
     bool operator<(itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer const & r) const;
     itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer & operator=(itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer const & r);
     itkSegmentationLevelSetImageFilterIF2IVF22F_Pointer & operator=(itkSegmentationLevelSetImageFilterIF2IVF22F * r);
     itkSegmentationLevelSetImageFilterIF2IVF22F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetImageFilterIF3IF3F : public itkSparseFieldLevelSetImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
     virtual void SetFeatureImage(itkImageF3 const * f);
     virtual itkImageF3 * GetFeatureImage();
     virtual void SetInitialImage(itkImageF3 * f);
     void SetInput2(itkImageF3 const * input);
     void SetSpeedImage(itkImageF3 * s);
     void SetAdvectionImage(itkImageFAF33 * v);
     virtual itkImageF3 const * GetSpeedImage() const;
     virtual itkImageFAF33 const * GetAdvectionImage() const;
     void SetUseNegativeFeaturesOn();
     void SetUseNegativeFeaturesOff();
     void SetUseNegativeFeatures(bool u);
     bool GetUseNegativeFeatures() const;
     virtual void SetReverseExpansionDirection(bool const _arg);
     virtual bool GetReverseExpansionDirection() const;
     virtual void ReverseExpansionDirectionOn();
     virtual void ReverseExpansionDirectionOff();
     virtual void SetAutoGenerateSpeedAdvection(bool const _arg);
     virtual bool GetAutoGenerateSpeedAdvection() const;
     virtual void AutoGenerateSpeedAdvectionOn();
     virtual void AutoGenerateSpeedAdvectionOff();
     void SetFeatureScaling(float v);
     void SetPropagationScaling(float v);
     float GetPropagationScaling() const;
     void SetAdvectionScaling(float v);
     float GetAdvectionScaling() const;
     void SetCurvatureScaling(float v);
     float GetCurvatureScaling() const;
     void SetUseMinimalCurvature(bool b);
     bool GetUseMinimalCurvature() const;
     void UseMinimalCurvatureOn();
     void UseMinimalCurvatureOff();
     virtual void SetSegmentationFunction(itkSegmentationLevelSetFunctionIF3IF3 * s);
     virtual itkSegmentationLevelSetFunctionIF3IF3 * GetSegmentationFunction();
     void SetMaximumCurvatureTimeStep(double n);
     double GetMaximumCurvatureTimeStep() const;
     void SetMaximumPropagationTimeStep(double n);
     double GetMaximumPropagationTimeStep() const;
     void GenerateSpeedImage();
     void GenerateAdvectionImage();
   private:
     itkSegmentationLevelSetImageFilterIF3IF3F(itkSegmentationLevelSetImageFilterIF3IF3F const & arg0);
     void operator=(itkSegmentationLevelSetImageFilterIF3IF3F const & arg0);
   protected:
     ~itkSegmentationLevelSetImageFilterIF3IF3F();
     itkSegmentationLevelSetImageFilterIF3IF3F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void GenerateData();
 };


 class itkSegmentationLevelSetImageFilterIF3IF3F_Pointer {
   public:
     itkSegmentationLevelSetImageFilterIF3IF3F_Pointer();
     itkSegmentationLevelSetImageFilterIF3IF3F_Pointer(itkSegmentationLevelSetImageFilterIF3IF3F_Pointer const & p);
     itkSegmentationLevelSetImageFilterIF3IF3F_Pointer(itkSegmentationLevelSetImageFilterIF3IF3F * p);
     ~itkSegmentationLevelSetImageFilterIF3IF3F_Pointer();
     itkSegmentationLevelSetImageFilterIF3IF3F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetImageFilterIF3IF3F * GetPointer() const;
     bool operator<(itkSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r) const;
     itkSegmentationLevelSetImageFilterIF3IF3F_Pointer & operator=(itkSegmentationLevelSetImageFilterIF3IF3F_Pointer const & r);
     itkSegmentationLevelSetImageFilterIF3IF3F_Pointer & operator=(itkSegmentationLevelSetImageFilterIF3IF3F * r);
     itkSegmentationLevelSetImageFilterIF3IF3F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSegmentationLevelSetImageFilterIF3IVF33F : public itkSparseFieldLevelSetImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     virtual char const * GetNameOfClass() const;
     void SetMaximumIterations(unsigned int i);
     unsigned int GetMaximumIterations();
     virtual void SetFeatureImage(itkImageVF33 const * f);
     virtual itkImageVF33 * GetFeatureImage();
     virtual void SetInitialImage(itkImageF3 * f);
     void SetInput2(itkImageVF33 const * input);
     void SetSpeedImage(itkImageF3 * s);
     void SetAdvectionImage(itkImageFAF33 * v);
     virtual itkImageF3 const * GetSpeedImage() const;
     virtual itkImageFAF33 const * GetAdvectionImage() const;
     void SetUseNegativeFeaturesOn();
     void SetUseNegativeFeaturesOff();
     void SetUseNegativeFeatures(bool u);
     bool GetUseNegativeFeatures() const;
     virtual void SetReverseExpansionDirection(bool const _arg);
     virtual bool GetReverseExpansionDirection() const;
     virtual void ReverseExpansionDirectionOn();
     virtual void ReverseExpansionDirectionOff();
     virtual void SetAutoGenerateSpeedAdvection(bool const _arg);
     virtual bool GetAutoGenerateSpeedAdvection() const;
     virtual void AutoGenerateSpeedAdvectionOn();
     virtual void AutoGenerateSpeedAdvectionOff();
     void SetFeatureScaling(float v);
     void SetPropagationScaling(float v);
     float GetPropagationScaling() const;
     void SetAdvectionScaling(float v);
     float GetAdvectionScaling() const;
     void SetCurvatureScaling(float v);
     float GetCurvatureScaling() const;
     void SetUseMinimalCurvature(bool b);
     bool GetUseMinimalCurvature() const;
     void UseMinimalCurvatureOn();
     void UseMinimalCurvatureOff();
     virtual void SetSegmentationFunction(itk::SegmentationLevelSetFunction< itk::Image< float, 3u >, itk::Image< itk::Vector< float, 3u >, 3u > > * s);
     virtual itk::SegmentationLevelSetFunction< itk::Image< float, 3u >, itk::Image< itk::Vector< float, 3u >, 3u > > * GetSegmentationFunction();
     void SetMaximumCurvatureTimeStep(double n);
     double GetMaximumCurvatureTimeStep() const;
     void SetMaximumPropagationTimeStep(double n);
     double GetMaximumPropagationTimeStep() const;
     void GenerateSpeedImage();
     void GenerateAdvectionImage();
   private:
     itkSegmentationLevelSetImageFilterIF3IVF33F(itkSegmentationLevelSetImageFilterIF3IVF33F const & arg0);
     void operator=(itkSegmentationLevelSetImageFilterIF3IVF33F const & arg0);
   protected:
     ~itkSegmentationLevelSetImageFilterIF3IVF33F();
     itkSegmentationLevelSetImageFilterIF3IVF33F();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void GenerateData();
 };


 class itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer {
   public:
     itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer();
     itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer(itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer const & p);
     itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer(itkSegmentationLevelSetImageFilterIF3IVF33F * p);
     ~itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer();
     itkSegmentationLevelSetImageFilterIF3IVF33F * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSegmentationLevelSetImageFilterIF3IVF33F * GetPointer() const;
     bool operator<(itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer const & r) const;
     bool operator>(itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer const & r) const;
     bool operator<=(itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer const & r) const;
     bool operator>=(itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer const & r) const;
     itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer & operator=(itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer const & r);
     itkSegmentationLevelSetImageFilterIF3IVF33F_Pointer & operator=(itkSegmentationLevelSetImageFilterIF3IVF33F * r);
     itkSegmentationLevelSetImageFilterIF3IVF33F * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


