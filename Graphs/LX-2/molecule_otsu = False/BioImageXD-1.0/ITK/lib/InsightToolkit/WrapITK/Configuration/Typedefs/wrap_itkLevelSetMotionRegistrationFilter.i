// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkLevelSetMotionRegistrationFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkLevelSetMotionRegistrationFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkLevelSetMotionRegistrationFilterGuile
#endif
#ifdef SWIGJAVA
%module itkLevelSetMotionRegistrationFilterJava
#endif
#ifdef SWIGLUA
%module itkLevelSetMotionRegistrationFilterLua
#endif
#ifdef SWIGMODULA3
%module itkLevelSetMotionRegistrationFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkLevelSetMotionRegistrationFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkLevelSetMotionRegistrationFilterOcaml
#endif
#ifdef SWIGPERL
%module itkLevelSetMotionRegistrationFilterPerl
#endif
#ifdef SWIGPERL5
%module itkLevelSetMotionRegistrationFilterPerl5
#endif
#ifdef SWIGPHP
%module itkLevelSetMotionRegistrationFilterPhp
#endif
#ifdef SWIGPHP4
%module itkLevelSetMotionRegistrationFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkLevelSetMotionRegistrationFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkLevelSetMotionRegistrationFilterPike
#endif
#ifdef SWIGPYTHON
%module itkLevelSetMotionRegistrationFilterPython
#endif
#ifdef SWIGR
%module itkLevelSetMotionRegistrationFilterR
#endif
#ifdef SWIGRUBY
%module itkLevelSetMotionRegistrationFilterRuby
#endif
#ifdef SWIGSEXP
%module itkLevelSetMotionRegistrationFilterSexp
#endif
#ifdef SWIGTCL
%module itkLevelSetMotionRegistrationFilterTcl
#endif
#ifdef SWIGXML
%module itkLevelSetMotionRegistrationFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Transforms.includes"
#include "SpatialObject.includes"
#include "Resize.includes"
#include "Calculators.includes"
#include "Registration.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkPDEDeformableRegistrationFilter.i


%include itk.i
%include wrap_itkLevelSetMotionRegistrationFilter_ext.i


 class itkLevelSetMotionRegistrationFilterID2ID2IVF22 : public itkPDEDeformableRegistrationFilterID2ID2IVF22 {
   public:
     static itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterID2ID2IVF22(itkLevelSetMotionRegistrationFilterID2ID2IVF22 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterID2ID2IVF22 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterID2ID2IVF22();
     ~itkLevelSetMotionRegistrationFilterID2ID2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer(itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer const & p);
     itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer(itkLevelSetMotionRegistrationFilterID2ID2IVF22 * p);
     ~itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterID2ID2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterID2ID2IVF22 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer const & r);
     itkLevelSetMotionRegistrationFilterID2ID2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterID2ID2IVF22 * r);
     itkLevelSetMotionRegistrationFilterID2ID2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLevelSetMotionRegistrationFilterID3ID3IVF33 : public itkPDEDeformableRegistrationFilterID3ID3IVF33 {
   public:
     static itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterID3ID3IVF33(itkLevelSetMotionRegistrationFilterID3ID3IVF33 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterID3ID3IVF33 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterID3ID3IVF33();
     ~itkLevelSetMotionRegistrationFilterID3ID3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer(itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer const & p);
     itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer(itkLevelSetMotionRegistrationFilterID3ID3IVF33 * p);
     ~itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterID3ID3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterID3ID3IVF33 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer const & r);
     itkLevelSetMotionRegistrationFilterID3ID3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterID3ID3IVF33 * r);
     itkLevelSetMotionRegistrationFilterID3ID3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLevelSetMotionRegistrationFilterIF2IF2IVF22 : public itkPDEDeformableRegistrationFilterIF2IF2IVF22 {
   public:
     static itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22(itkLevelSetMotionRegistrationFilterIF2IF2IVF22 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterIF2IF2IVF22 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22();
     ~itkLevelSetMotionRegistrationFilterIF2IF2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer(itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer const & p);
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer(itkLevelSetMotionRegistrationFilterIF2IF2IVF22 * p);
     ~itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer const & r);
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterIF2IF2IVF22 * r);
     itkLevelSetMotionRegistrationFilterIF2IF2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLevelSetMotionRegistrationFilterIF3IF3IVF33 : public itkPDEDeformableRegistrationFilterIF3IF3IVF33 {
   public:
     static itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33(itkLevelSetMotionRegistrationFilterIF3IF3IVF33 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterIF3IF3IVF33 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33();
     ~itkLevelSetMotionRegistrationFilterIF3IF3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer(itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer const & p);
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer(itkLevelSetMotionRegistrationFilterIF3IF3IVF33 * p);
     ~itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer const & r);
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterIF3IF3IVF33 * r);
     itkLevelSetMotionRegistrationFilterIF3IF3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22 : public itkPDEDeformableRegistrationFilterIUC2IUC2IVF22 {
   public:
     static itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22();
     ~itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer const & p);
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22 * p);
     ~itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer const & r);
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22 * r);
     itkLevelSetMotionRegistrationFilterIUC2IUC2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33 : public itkPDEDeformableRegistrationFilterIUC3IUC3IVF33 {
   public:
     static itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33();
     ~itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer const & p);
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33 * p);
     ~itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer const & r);
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33 * r);
     itkLevelSetMotionRegistrationFilterIUC3IUC3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22 : public itkPDEDeformableRegistrationFilterIUL2IUL2IVF22 {
   public:
     static itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22();
     ~itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer const & p);
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22 * p);
     ~itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer const & r);
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22 * r);
     itkLevelSetMotionRegistrationFilterIUL2IUL2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33 : public itkPDEDeformableRegistrationFilterIUL3IUL3IVF33 {
   public:
     static itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33();
     ~itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer const & p);
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33 * p);
     ~itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer const & r);
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33 * r);
     itkLevelSetMotionRegistrationFilterIUL3IUL3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22 : public itkPDEDeformableRegistrationFilterIUS2IUS2IVF22 {
   public:
     static itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22();
     ~itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer const & p);
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22 * p);
     ~itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer();
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer const & r);
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22 * r);
     itkLevelSetMotionRegistrationFilterIUS2IUS2IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33 : public itkPDEDeformableRegistrationFilterIUS3IUS3IVF33 {
   public:
     static itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetMetric() const;
     virtual void SetAlpha(double arg0);
     virtual double GetAlpha() const;
     virtual void SetIntensityDifferenceThreshold(double arg0);
     virtual double GetIntensityDifferenceThreshold() const;
     virtual void SetGradientMagnitudeThreshold(double arg0);
     virtual double GetGradientMagnitudeThreshold() const;
     virtual void SetGradientSmoothingStandardDeviations(double sigma);
     virtual double GetGradientSmoothingStandardDeviations() const;
   private:
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33 const & arg0);
     void operator=(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33 const & arg0);
   protected:
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33();
     ~itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void InitializeIteration();
     virtual void ApplyUpdate(double dt);
     virtual bool Halt();
 };


 class itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer {
   public:
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer const & p);
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33 * p);
     ~itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer();
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33 * GetPointer() const;
     bool operator<(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer const & r) const;
     bool operator>(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer const & r) const;
     bool operator<=(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer const & r) const;
     bool operator>=(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer const & r) const;
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer const & r);
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33_Pointer & operator=(itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33 * r);
     itkLevelSetMotionRegistrationFilterIUS3IUS3IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


