// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBinaryMagnitudeImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBinaryMagnitudeImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBinaryMagnitudeImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBinaryMagnitudeImageFilterJava
#endif
#ifdef SWIGLUA
%module itkBinaryMagnitudeImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBinaryMagnitudeImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBinaryMagnitudeImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBinaryMagnitudeImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBinaryMagnitudeImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBinaryMagnitudeImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBinaryMagnitudeImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBinaryMagnitudeImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBinaryMagnitudeImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBinaryMagnitudeImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBinaryMagnitudeImageFilterPython
#endif
#ifdef SWIGR
%module itkBinaryMagnitudeImageFilterR
#endif
#ifdef SWIGRUBY
%module itkBinaryMagnitudeImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBinaryMagnitudeImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkBinaryMagnitudeImageFilterTcl
#endif
#ifdef SWIGXML
%module itkBinaryMagnitudeImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "PixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkBinaryMagnitudeImageFilter_ext.i


 class itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer {
   public:
     itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer();
     itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer(itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer const & p);
     itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer(itkBinaryMagnitudeImageFilterID2ID2ID2 * p);
     ~itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer();
     itkBinaryMagnitudeImageFilterID2ID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterID2ID2ID2 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer & operator=(itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer const & r);
     itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer & operator=(itkBinaryMagnitudeImageFilterID2ID2ID2 * r);
     itkBinaryMagnitudeImageFilterID2ID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageD2 const * image2);
     itk::Functor::Modulus2< double, double, double > & GetFunctor();
     itk::Functor::Modulus2< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< double, double, double > const & functor);
   private:
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass();
     ~itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass * p);
     ~itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass * r);
     itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer {
   public:
     itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer();
     itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer(itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer const & p);
     itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer(itkBinaryMagnitudeImageFilterID3ID3ID3 * p);
     ~itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer();
     itkBinaryMagnitudeImageFilterID3ID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterID3ID3ID3 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer & operator=(itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer const & r);
     itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer & operator=(itkBinaryMagnitudeImageFilterID3ID3ID3 * r);
     itkBinaryMagnitudeImageFilterID3ID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageD3 const * image2);
     itk::Functor::Modulus2< double, double, double > & GetFunctor();
     itk::Functor::Modulus2< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< double, double, double > const & functor);
   private:
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass();
     ~itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass * p);
     ~itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass * r);
     itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer();
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer(itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer const & p);
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer(itkBinaryMagnitudeImageFilterIF2IF2IF2 * p);
     ~itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer();
     itkBinaryMagnitudeImageFilterIF2IF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIF2IF2IF2 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer & operator=(itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer const & r);
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer & operator=(itkBinaryMagnitudeImageFilterIF2IF2IF2 * r);
     itkBinaryMagnitudeImageFilterIF2IF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageF2 const * image2);
     itk::Functor::Modulus2< float, float, float > & GetFunctor();
     itk::Functor::Modulus2< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< float, float, float > const & functor);
   private:
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass();
     ~itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass * p);
     ~itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass * r);
     itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer();
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer(itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer const & p);
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer(itkBinaryMagnitudeImageFilterIF3IF3IF3 * p);
     ~itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer();
     itkBinaryMagnitudeImageFilterIF3IF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIF3IF3IF3 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer & operator=(itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer const & r);
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer & operator=(itkBinaryMagnitudeImageFilterIF3IF3IF3 * r);
     itkBinaryMagnitudeImageFilterIF3IF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     itk::Functor::Modulus2< float, float, float > & GetFunctor();
     itk::Functor::Modulus2< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< float, float, float > const & functor);
   private:
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass();
     ~itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass * p);
     ~itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass * r);
     itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer();
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2 * p);
     ~itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer();
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer & operator=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer & operator=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2 * r);
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Functor::Modulus2< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::Modulus2< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass();
     ~itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass * r);
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer();
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3 * p);
     ~itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer();
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer & operator=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer & operator=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3 * r);
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Functor::Modulus2< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Functor::Modulus2< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass();
     ~itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass * p);
     ~itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass * r);
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer();
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2 * p);
     ~itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer();
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer & operator=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer & operator=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2 * r);
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Functor::Modulus2< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::Modulus2< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass();
     ~itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass * r);
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer();
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3 * p);
     ~itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer();
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer & operator=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer & operator=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3 * r);
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Functor::Modulus2< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Functor::Modulus2< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass();
     ~itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass * p);
     ~itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass * r);
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer();
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2 * p);
     ~itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer();
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer & operator=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer & operator=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2 * r);
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Functor::Modulus2< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::Modulus2< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass();
     ~itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass * r);
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer();
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3 * p);
     ~itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer();
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer & operator=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer & operator=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3 * r);
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Functor::Modulus2< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Functor::Modulus2< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::Modulus2< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass();
     ~itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer {
   public:
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer const & p);
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass * p);
     ~itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r);
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass * r);
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryMagnitudeImageFilterID2ID2ID2 : public itkBinaryMagnitudeImageFilterID2ID2ID2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterID2ID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterID2ID2ID2(itkBinaryMagnitudeImageFilterID2ID2ID2 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterID2ID2ID2 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterID2ID2ID2();
     ~itkBinaryMagnitudeImageFilterID2ID2ID2();
 };


 class itkBinaryMagnitudeImageFilterID3ID3ID3 : public itkBinaryMagnitudeImageFilterID3ID3ID3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterID3ID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterID3ID3ID3(itkBinaryMagnitudeImageFilterID3ID3ID3 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterID3ID3ID3 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterID3ID3ID3();
     ~itkBinaryMagnitudeImageFilterID3ID3ID3();
 };


 class itkBinaryMagnitudeImageFilterIF2IF2IF2 : public itkBinaryMagnitudeImageFilterIF2IF2IF2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterIF2IF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterIF2IF2IF2(itkBinaryMagnitudeImageFilterIF2IF2IF2 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIF2IF2IF2 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIF2IF2IF2();
     ~itkBinaryMagnitudeImageFilterIF2IF2IF2();
 };


 class itkBinaryMagnitudeImageFilterIF3IF3IF3 : public itkBinaryMagnitudeImageFilterIF3IF3IF3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterIF3IF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterIF3IF3IF3(itkBinaryMagnitudeImageFilterIF3IF3IF3 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIF3IF3IF3 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIF3IF3IF3();
     ~itkBinaryMagnitudeImageFilterIF3IF3IF3();
 };


 class itkBinaryMagnitudeImageFilterIUC2IUC2IUC2 : public itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUC2IUC2IUC2();
     ~itkBinaryMagnitudeImageFilterIUC2IUC2IUC2();
 };


 class itkBinaryMagnitudeImageFilterIUC3IUC3IUC3 : public itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUC3IUC3IUC3();
     ~itkBinaryMagnitudeImageFilterIUC3IUC3IUC3();
 };


 class itkBinaryMagnitudeImageFilterIUL2IUL2IUL2 : public itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUL2IUL2IUL2();
     ~itkBinaryMagnitudeImageFilterIUL2IUL2IUL2();
 };


 class itkBinaryMagnitudeImageFilterIUL3IUL3IUL3 : public itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUL3IUL3IUL3();
     ~itkBinaryMagnitudeImageFilterIUL3IUL3IUL3();
 };


 class itkBinaryMagnitudeImageFilterIUS2IUS2IUS2 : public itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUS2IUS2IUS2();
     ~itkBinaryMagnitudeImageFilterIUS2IUS2IUS2();
 };


 class itkBinaryMagnitudeImageFilterIUS3IUS3IUS3 : public itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Superclass {
   public:
     enum  {  Input1ConvertibleToDoubleCheck = 1 };
     enum  {  Input2ConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkBinaryMagnitudeImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkBinaryMagnitudeImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkBinaryMagnitudeImageFilterIUS3IUS3IUS3();
     ~itkBinaryMagnitudeImageFilterIUS3IUS3IUS3();
 };


