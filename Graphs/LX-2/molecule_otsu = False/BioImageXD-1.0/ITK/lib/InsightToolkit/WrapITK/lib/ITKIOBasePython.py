# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _ITKIOBasePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ITKIOBasePython', [dirname(__file__)])
        except ImportError:
            import _ITKIOBasePython
            return _ITKIOBasePython
        if fp is not None:
            try:
                _mod = imp.load_module('_ITKIOBasePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ITKIOBasePython = swig_import_helper()
    del swig_import_helper
else:
    import _ITKIOBasePython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkTransformPython
import itkCovariantVectorPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkArray2DPython
import itkPointPython
import itkArrayPython
def itkRegularExpressionSeriesFileNames_New():
  return itkRegularExpressionSeriesFileNames.New()

def itkNumericSeriesFileNames_New():
  return itkNumericSeriesFileNames.New()

def itkGDCMSeriesFileNames_New():
  return itkGDCMSeriesFileNames.New()

def itkDICOMSeriesFileNames_New():
  return itkDICOMSeriesFileNames.New()

def itkArchetypeSeriesFileNames_New():
  return itkArchetypeSeriesFileNames.New()

def itkMRCImageIOFactory_New():
  return itkMRCImageIOFactory.New()

def itkMRCImageIO_New():
  return itkMRCImageIO.New()

def itkVoxBoCUBImageIOFactory_New():
  return itkVoxBoCUBImageIOFactory.New()

def itkVoxBoCUBImageIO_New():
  return itkVoxBoCUBImageIO.New()

def itkPhilipsRECImageIOFactory_New():
  return itkPhilipsRECImageIOFactory.New()

def itkPhilipsRECImageIO_New():
  return itkPhilipsRECImageIO.New()

def itkBruker2DSEQImageIOFactory_New():
  return itkBruker2DSEQImageIOFactory.New()

def itkBruker2DSEQImageIO_New():
  return itkBruker2DSEQImageIO.New()

def itkVTKImageIOFactory_New():
  return itkVTKImageIOFactory.New()

def itkVTKImageIO_New():
  return itkVTKImageIO.New()

def itkStimulateImageIOFactory_New():
  return itkStimulateImageIOFactory.New()

def itkStimulateImageIO_New():
  return itkStimulateImageIO.New()

def itkSiemensVisionImageIOFactory_New():
  return itkSiemensVisionImageIOFactory.New()

def itkSiemensVisionImageIO_New():
  return itkSiemensVisionImageIO.New()

def itkPNGImageIOFactory_New():
  return itkPNGImageIOFactory.New()

def itkPNGImageIO_New():
  return itkPNGImageIO.New()

def itkNrrdImageIOFactory_New():
  return itkNrrdImageIOFactory.New()

def itkNrrdImageIO_New():
  return itkNrrdImageIO.New()

def itkNiftiImageIOFactory_New():
  return itkNiftiImageIOFactory.New()

def itkNiftiImageIO_New():
  return itkNiftiImageIO.New()

def itkMetaImageIOFactory_New():
  return itkMetaImageIOFactory.New()

def itkMetaImageIO_New():
  return itkMetaImageIO.New()

def itkLSMImageIOFactory_New():
  return itkLSMImageIOFactory.New()

def itkLSMImageIO_New():
  return itkLSMImageIO.New()

def itkTIFFImageIOFactory_New():
  return itkTIFFImageIOFactory.New()

def itkTIFFImageIO_New():
  return itkTIFFImageIO.New()

def itkJPEGImageIOFactory_New():
  return itkJPEGImageIOFactory.New()

def itkJPEGImageIO_New():
  return itkJPEGImageIO.New()

def itkGiplImageIOFactory_New():
  return itkGiplImageIOFactory.New()

def itkGiplImageIO_New():
  return itkGiplImageIO.New()

def itkGEAdwImageIOFactory_New():
  return itkGEAdwImageIOFactory.New()

def itkGEAdwImageIO_New():
  return itkGEAdwImageIO.New()

def itkGE5ImageIOFactory_New():
  return itkGE5ImageIOFactory.New()

def itkGE5ImageIO_New():
  return itkGE5ImageIO.New()

def itkGE4ImageIOFactory_New():
  return itkGE4ImageIOFactory.New()

def itkGE4ImageIO_New():
  return itkGE4ImageIO.New()

def itkDicomImageIOFactory_New():
  return itkDicomImageIOFactory.New()

def itkDicomImageIO_New():
  return itkDicomImageIO.New()

def itkGDCMImageIOFactory_New():
  return itkGDCMImageIOFactory.New()

def itkGDCMImageIO_New():
  return itkGDCMImageIO.New()

def itkDICOMImageIO2Factory_New():
  return itkDICOMImageIO2Factory.New()

def itkDICOMImageIO2_New():
  return itkDICOMImageIO2.New()

def itkBMPImageIOFactory_New():
  return itkBMPImageIOFactory.New()

def itkBMPImageIO_New():
  return itkBMPImageIO.New()

def itkBioRadImageIOFactory_New():
  return itkBioRadImageIOFactory.New()

def itkBioRadImageIO_New():
  return itkBioRadImageIO.New()

def itkAnalyzeImageIOFactory_New():
  return itkAnalyzeImageIOFactory.New()

def itkAnalyzeImageIO_New():
  return itkAnalyzeImageIO.New()

def itkRawImageIOF3_New():
  return itkRawImageIOF3.New()

def itkRawImageIOF2_New():
  return itkRawImageIOF2.New()

def itkTransformFileWriter_New():
  return itkTransformFileWriter.New()

def itkTransformFileReader_New():
  return itkTransformFileReader.New()

def itkIPLCommonImageIO_New():
  return itkIPLCommonImageIO.New()

def itkStreamingImageIOBase_New():
  return itkStreamingImageIOBase.New()

def itkImageIOBase_New():
  return itkImageIOBase.New()

class itkAnalyzeImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkAnalyzeImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkAnalyzeImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkAnalyzeImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkAnalyzeImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnalyzeImageIOFactory"""
        return _ITKIOBasePython.itkAnalyzeImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnalyzeImageIOFactory"""
        return _ITKIOBasePython.itkAnalyzeImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnalyzeImageIOFactory
        
        Create a new object of the class itkAnalyzeImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnalyzeImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnalyzeImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnalyzeImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnalyzeImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkAnalyzeImageIOFactory_GetPointer,None,itkAnalyzeImageIOFactory)
itkAnalyzeImageIOFactory_swigregister = _ITKIOBasePython.itkAnalyzeImageIOFactory_swigregister
itkAnalyzeImageIOFactory_swigregister(itkAnalyzeImageIOFactory)

def itkAnalyzeImageIOFactory___New_orig__():
  """itkAnalyzeImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkAnalyzeImageIOFactory___New_orig__()

def itkAnalyzeImageIOFactory_RegisterOneFactory():
  """itkAnalyzeImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkAnalyzeImageIOFactory_RegisterOneFactory()

def itkAnalyzeImageIOFactory_cast(*args):
  """itkAnalyzeImageIOFactory_cast(itkLightObject obj) -> itkAnalyzeImageIOFactory"""
  return _ITKIOBasePython.itkAnalyzeImageIOFactory_cast(*args)

class itkArchetypeSeriesFileNames(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkArchetypeSeriesFileNames class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkArchetypeSeriesFileNames___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetArchetype(self, *args):
        """SetArchetype(self, string archetype)"""
        return _ITKIOBasePython.itkArchetypeSeriesFileNames_SetArchetype(self, *args)

    def GetArchetype(self):
        """GetArchetype(self) -> char"""
        return _ITKIOBasePython.itkArchetypeSeriesFileNames_GetArchetype(self)

    def GetNumberOfGroupings(self):
        """GetNumberOfGroupings(self) -> size_t"""
        return _ITKIOBasePython.itkArchetypeSeriesFileNames_GetNumberOfGroupings(self)

    def GetFileNames(self, group = 0):
        """
        GetFileNames(self, size_t group = 0) -> vectorstring
        GetFileNames(self) -> vectorstring
        """
        return _ITKIOBasePython.itkArchetypeSeriesFileNames_GetFileNames(self, group)

    __swig_destroy__ = _ITKIOBasePython.delete_itkArchetypeSeriesFileNames
    def cast(*args):
        """cast(itkLightObject obj) -> itkArchetypeSeriesFileNames"""
        return _ITKIOBasePython.itkArchetypeSeriesFileNames_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkArchetypeSeriesFileNames"""
        return _ITKIOBasePython.itkArchetypeSeriesFileNames_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkArchetypeSeriesFileNames
        
        Create a new object of the class itkArchetypeSeriesFileNames and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkArchetypeSeriesFileNames.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkArchetypeSeriesFileNames.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkArchetypeSeriesFileNames.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkArchetypeSeriesFileNames.SetArchetype = new_instancemethod(_ITKIOBasePython.itkArchetypeSeriesFileNames_SetArchetype,None,itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames.GetArchetype = new_instancemethod(_ITKIOBasePython.itkArchetypeSeriesFileNames_GetArchetype,None,itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames.GetNumberOfGroupings = new_instancemethod(_ITKIOBasePython.itkArchetypeSeriesFileNames_GetNumberOfGroupings,None,itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames.GetFileNames = new_instancemethod(_ITKIOBasePython.itkArchetypeSeriesFileNames_GetFileNames,None,itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames.GetPointer = new_instancemethod(_ITKIOBasePython.itkArchetypeSeriesFileNames_GetPointer,None,itkArchetypeSeriesFileNames)
itkArchetypeSeriesFileNames_swigregister = _ITKIOBasePython.itkArchetypeSeriesFileNames_swigregister
itkArchetypeSeriesFileNames_swigregister(itkArchetypeSeriesFileNames)

def itkArchetypeSeriesFileNames___New_orig__():
  """itkArchetypeSeriesFileNames___New_orig__()"""
  return _ITKIOBasePython.itkArchetypeSeriesFileNames___New_orig__()

def itkArchetypeSeriesFileNames_cast(*args):
  """itkArchetypeSeriesFileNames_cast(itkLightObject obj) -> itkArchetypeSeriesFileNames"""
  return _ITKIOBasePython.itkArchetypeSeriesFileNames_cast(*args)

class itkBMPImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkBMPImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkBMPImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkBMPImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkBMPImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkBMPImageIOFactory"""
        return _ITKIOBasePython.itkBMPImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBMPImageIOFactory"""
        return _ITKIOBasePython.itkBMPImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBMPImageIOFactory
        
        Create a new object of the class itkBMPImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBMPImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBMPImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBMPImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBMPImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkBMPImageIOFactory_GetPointer,None,itkBMPImageIOFactory)
itkBMPImageIOFactory_swigregister = _ITKIOBasePython.itkBMPImageIOFactory_swigregister
itkBMPImageIOFactory_swigregister(itkBMPImageIOFactory)

def itkBMPImageIOFactory___New_orig__():
  """itkBMPImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkBMPImageIOFactory___New_orig__()

def itkBMPImageIOFactory_RegisterOneFactory():
  """itkBMPImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkBMPImageIOFactory_RegisterOneFactory()

def itkBMPImageIOFactory_cast(*args):
  """itkBMPImageIOFactory_cast(itkLightObject obj) -> itkBMPImageIOFactory"""
  return _ITKIOBasePython.itkBMPImageIOFactory_cast(*args)

class itkBioRadImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkBioRadImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkBioRadImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkBioRadImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkBioRadImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkBioRadImageIOFactory"""
        return _ITKIOBasePython.itkBioRadImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBioRadImageIOFactory"""
        return _ITKIOBasePython.itkBioRadImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBioRadImageIOFactory
        
        Create a new object of the class itkBioRadImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBioRadImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBioRadImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBioRadImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBioRadImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkBioRadImageIOFactory_GetPointer,None,itkBioRadImageIOFactory)
itkBioRadImageIOFactory_swigregister = _ITKIOBasePython.itkBioRadImageIOFactory_swigregister
itkBioRadImageIOFactory_swigregister(itkBioRadImageIOFactory)

def itkBioRadImageIOFactory___New_orig__():
  """itkBioRadImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkBioRadImageIOFactory___New_orig__()

def itkBioRadImageIOFactory_RegisterOneFactory():
  """itkBioRadImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkBioRadImageIOFactory_RegisterOneFactory()

def itkBioRadImageIOFactory_cast(*args):
  """itkBioRadImageIOFactory_cast(itkLightObject obj) -> itkBioRadImageIOFactory"""
  return _ITKIOBasePython.itkBioRadImageIOFactory_cast(*args)

class itkBruker2DSEQImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkBruker2DSEQImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkBruker2DSEQImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkBruker2DSEQImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkBruker2DSEQImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkBruker2DSEQImageIOFactory"""
        return _ITKIOBasePython.itkBruker2DSEQImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBruker2DSEQImageIOFactory"""
        return _ITKIOBasePython.itkBruker2DSEQImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBruker2DSEQImageIOFactory
        
        Create a new object of the class itkBruker2DSEQImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBruker2DSEQImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBruker2DSEQImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBruker2DSEQImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBruker2DSEQImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkBruker2DSEQImageIOFactory_GetPointer,None,itkBruker2DSEQImageIOFactory)
itkBruker2DSEQImageIOFactory_swigregister = _ITKIOBasePython.itkBruker2DSEQImageIOFactory_swigregister
itkBruker2DSEQImageIOFactory_swigregister(itkBruker2DSEQImageIOFactory)

def itkBruker2DSEQImageIOFactory___New_orig__():
  """itkBruker2DSEQImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkBruker2DSEQImageIOFactory___New_orig__()

def itkBruker2DSEQImageIOFactory_RegisterOneFactory():
  """itkBruker2DSEQImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkBruker2DSEQImageIOFactory_RegisterOneFactory()

def itkBruker2DSEQImageIOFactory_cast(*args):
  """itkBruker2DSEQImageIOFactory_cast(itkLightObject obj) -> itkBruker2DSEQImageIOFactory"""
  return _ITKIOBasePython.itkBruker2DSEQImageIOFactory_cast(*args)

class itkDICOMImageIO2Factory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkDICOMImageIO2Factory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkDICOMImageIO2Factory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkDICOMImageIO2Factory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkDICOMImageIO2Factory
    def cast(*args):
        """cast(itkLightObject obj) -> itkDICOMImageIO2Factory"""
        return _ITKIOBasePython.itkDICOMImageIO2Factory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDICOMImageIO2Factory"""
        return _ITKIOBasePython.itkDICOMImageIO2Factory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDICOMImageIO2Factory
        
        Create a new object of the class itkDICOMImageIO2Factory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDICOMImageIO2Factory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDICOMImageIO2Factory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDICOMImageIO2Factory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDICOMImageIO2Factory.GetPointer = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2Factory_GetPointer,None,itkDICOMImageIO2Factory)
itkDICOMImageIO2Factory_swigregister = _ITKIOBasePython.itkDICOMImageIO2Factory_swigregister
itkDICOMImageIO2Factory_swigregister(itkDICOMImageIO2Factory)

def itkDICOMImageIO2Factory___New_orig__():
  """itkDICOMImageIO2Factory___New_orig__()"""
  return _ITKIOBasePython.itkDICOMImageIO2Factory___New_orig__()

def itkDICOMImageIO2Factory_RegisterOneFactory():
  """itkDICOMImageIO2Factory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkDICOMImageIO2Factory_RegisterOneFactory()

def itkDICOMImageIO2Factory_cast(*args):
  """itkDICOMImageIO2Factory_cast(itkLightObject obj) -> itkDICOMImageIO2Factory"""
  return _ITKIOBasePython.itkDICOMImageIO2Factory_cast(*args)

class itkDICOMSeriesFileNames(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkDICOMSeriesFileNames class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SortByImageNumber = _ITKIOBasePython.itkDICOMSeriesFileNames_SortByImageNumber
    SortBySliceLocation = _ITKIOBasePython.itkDICOMSeriesFileNames_SortBySliceLocation
    SortByImagePositionPatient = _ITKIOBasePython.itkDICOMSeriesFileNames_SortByImagePositionPatient
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetDirectory(self, *args):
        """SetDirectory(self, string dir)"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_SetDirectory(self, *args)

    def GetDirectory(self):
        """GetDirectory(self) -> char"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetDirectory(self)

    def SetAscending(self, *args):
        """SetAscending(self, bool _arg)"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_SetAscending(self, *args)

    def GetAscending(self):
        """GetAscending(self) -> bool"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetAscending(self)

    def AscendingOn(self):
        """AscendingOn(self)"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_AscendingOn(self)

    def AscendingOff(self):
        """AscendingOff(self)"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_AscendingOff(self)

    def GetSeriesUIDs(self, recursive = False):
        """
        GetSeriesUIDs(self, bool recursive = False) -> vectorstring
        GetSeriesUIDs(self) -> vectorstring
        """
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetSeriesUIDs(self, recursive)

    def GetSeriesDescriptions(self):
        """GetSeriesDescriptions(self) -> vectorstring"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetSeriesDescriptions(self)

    def GetSeriesBodyParts(self):
        """GetSeriesBodyParts(self) -> vectorstring"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetSeriesBodyParts(self)

    def GetSeriesScanOptions(self):
        """GetSeriesScanOptions(self) -> vectorstring"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetSeriesScanOptions(self)

    def GetFileNames(self, *args):
        """
        GetFileNames(self, bool recursive = False) -> vectorstring
        GetFileNames(self) -> vectorstring
        GetFileNames(self, string seriesUID, bool recursive = False) -> vectorstring
        GetFileNames(self, string seriesUID) -> vectorstring
        """
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetFileNames(self, *args)

    def SetFileNameSortingOrder(self, *args):
        """SetFileNameSortingOrder(self, FileNameSortingOrderType _arg)"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_SetFileNameSortingOrder(self, *args)

    def GetFileNameSortingOrder(self):
        """GetFileNameSortingOrder(self) -> FileNameSortingOrderType"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetFileNameSortingOrder(self)

    def SetFileNameSortingOrderToSortByImageNumber(self):
        """SetFileNameSortingOrderToSortByImageNumber(self)"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_SetFileNameSortingOrderToSortByImageNumber(self)

    def SetFileNameSortingOrderToSortBySliceLocation(self):
        """SetFileNameSortingOrderToSortBySliceLocation(self)"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_SetFileNameSortingOrderToSortBySliceLocation(self)

    def SetFileNameSortingOrderToSortByImagePositionPatient(self):
        """SetFileNameSortingOrderToSortByImagePositionPatient(self)"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_SetFileNameSortingOrderToSortByImagePositionPatient(self)

    def GetFileName(self, *args):
        """GetFileName(self, string instanceUID) -> string"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetFileName(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkDICOMSeriesFileNames
    def cast(*args):
        """cast(itkLightObject obj) -> itkDICOMSeriesFileNames"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDICOMSeriesFileNames"""
        return _ITKIOBasePython.itkDICOMSeriesFileNames_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDICOMSeriesFileNames
        
        Create a new object of the class itkDICOMSeriesFileNames and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDICOMSeriesFileNames.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDICOMSeriesFileNames.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDICOMSeriesFileNames.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDICOMSeriesFileNames.SetDirectory = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_SetDirectory,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetDirectory = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetDirectory,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.SetAscending = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_SetAscending,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetAscending = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetAscending,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.AscendingOn = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_AscendingOn,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.AscendingOff = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_AscendingOff,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetSeriesUIDs = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetSeriesUIDs,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetSeriesDescriptions = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetSeriesDescriptions,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetSeriesBodyParts = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetSeriesBodyParts,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetSeriesScanOptions = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetSeriesScanOptions,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetFileNames = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetFileNames,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.SetFileNameSortingOrder = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_SetFileNameSortingOrder,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetFileNameSortingOrder = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetFileNameSortingOrder,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.SetFileNameSortingOrderToSortByImageNumber = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_SetFileNameSortingOrderToSortByImageNumber,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.SetFileNameSortingOrderToSortBySliceLocation = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_SetFileNameSortingOrderToSortBySliceLocation,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.SetFileNameSortingOrderToSortByImagePositionPatient = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_SetFileNameSortingOrderToSortByImagePositionPatient,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetFileName = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetFileName,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames.GetPointer = new_instancemethod(_ITKIOBasePython.itkDICOMSeriesFileNames_GetPointer,None,itkDICOMSeriesFileNames)
itkDICOMSeriesFileNames_swigregister = _ITKIOBasePython.itkDICOMSeriesFileNames_swigregister
itkDICOMSeriesFileNames_swigregister(itkDICOMSeriesFileNames)

def itkDICOMSeriesFileNames___New_orig__():
  """itkDICOMSeriesFileNames___New_orig__()"""
  return _ITKIOBasePython.itkDICOMSeriesFileNames___New_orig__()

def itkDICOMSeriesFileNames_cast(*args):
  """itkDICOMSeriesFileNames_cast(itkLightObject obj) -> itkDICOMSeriesFileNames"""
  return _ITKIOBasePython.itkDICOMSeriesFileNames_cast(*args)

class itkDicomImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkDicomImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkDicomImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkDicomImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkDicomImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkDicomImageIOFactory"""
        return _ITKIOBasePython.itkDicomImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDicomImageIOFactory"""
        return _ITKIOBasePython.itkDicomImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDicomImageIOFactory
        
        Create a new object of the class itkDicomImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDicomImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDicomImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDicomImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDicomImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkDicomImageIOFactory_GetPointer,None,itkDicomImageIOFactory)
itkDicomImageIOFactory_swigregister = _ITKIOBasePython.itkDicomImageIOFactory_swigregister
itkDicomImageIOFactory_swigregister(itkDicomImageIOFactory)

def itkDicomImageIOFactory___New_orig__():
  """itkDicomImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkDicomImageIOFactory___New_orig__()

def itkDicomImageIOFactory_RegisterOneFactory():
  """itkDicomImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkDicomImageIOFactory_RegisterOneFactory()

def itkDicomImageIOFactory_cast(*args):
  """itkDicomImageIOFactory_cast(itkLightObject obj) -> itkDicomImageIOFactory"""
  return _ITKIOBasePython.itkDicomImageIOFactory_cast(*args)

class itkGDCMImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkGDCMImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGDCMImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkGDCMImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkGDCMImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkGDCMImageIOFactory"""
        return _ITKIOBasePython.itkGDCMImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGDCMImageIOFactory"""
        return _ITKIOBasePython.itkGDCMImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGDCMImageIOFactory
        
        Create a new object of the class itkGDCMImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGDCMImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGDCMImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGDCMImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGDCMImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkGDCMImageIOFactory_GetPointer,None,itkGDCMImageIOFactory)
itkGDCMImageIOFactory_swigregister = _ITKIOBasePython.itkGDCMImageIOFactory_swigregister
itkGDCMImageIOFactory_swigregister(itkGDCMImageIOFactory)

def itkGDCMImageIOFactory___New_orig__():
  """itkGDCMImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkGDCMImageIOFactory___New_orig__()

def itkGDCMImageIOFactory_RegisterOneFactory():
  """itkGDCMImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkGDCMImageIOFactory_RegisterOneFactory()

def itkGDCMImageIOFactory_cast(*args):
  """itkGDCMImageIOFactory_cast(itkLightObject obj) -> itkGDCMImageIOFactory"""
  return _ITKIOBasePython.itkGDCMImageIOFactory_cast(*args)

class itkGDCMSeriesFileNames(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkGDCMSeriesFileNames class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInputDirectory(self, *args):
        """
        SetInputDirectory(self, char name)
        SetInputDirectory(self, string name)
        """
        return _ITKIOBasePython.itkGDCMSeriesFileNames_SetInputDirectory(self, *args)

    def SetDirectory(self, *args):
        """SetDirectory(self, string name)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_SetDirectory(self, *args)

    def GetInputFileNames(self):
        """GetInputFileNames(self) -> vectorstring"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetInputFileNames(self)

    def SetOutputDirectory(self, *args):
        """SetOutputDirectory(self, string name)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_SetOutputDirectory(self, *args)

    def GetOutputFileNames(self):
        """GetOutputFileNames(self) -> vectorstring"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetOutputFileNames(self)

    def GetFileNames(self, *args):
        """GetFileNames(self, string serie) -> vectorstring"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetFileNames(self, *args)

    def GetSeriesUIDs(self):
        """GetSeriesUIDs(self) -> vectorstring"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetSeriesUIDs(self)

    def SetRecursive(self, *args):
        """SetRecursive(self, bool _arg)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_SetRecursive(self, *args)

    def GetRecursive(self):
        """GetRecursive(self) -> bool"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetRecursive(self)

    def RecursiveOn(self):
        """RecursiveOn(self)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_RecursiveOn(self)

    def RecursiveOff(self):
        """RecursiveOff(self)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_RecursiveOff(self)

    def SetUseSeriesDetails(self, *args):
        """SetUseSeriesDetails(self, bool useSeriesDetails)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_SetUseSeriesDetails(self, *args)

    def GetUseSeriesDetails(self):
        """GetUseSeriesDetails(self) -> bool"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetUseSeriesDetails(self)

    def GetSeriesHelper(self):
        """GetSeriesHelper(self) -> gdcm::SerieHelper"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetSeriesHelper(self)

    def AddSeriesRestriction(self, *args):
        """AddSeriesRestriction(self, string tag)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_AddSeriesRestriction(self, *args)

    def SetLoadSequences(self, *args):
        """SetLoadSequences(self, bool _arg)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_SetLoadSequences(self, *args)

    def GetLoadSequences(self):
        """GetLoadSequences(self) -> bool"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetLoadSequences(self)

    def LoadSequencesOn(self):
        """LoadSequencesOn(self)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_LoadSequencesOn(self)

    def LoadSequencesOff(self):
        """LoadSequencesOff(self)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_LoadSequencesOff(self)

    def SetLoadPrivateTags(self, *args):
        """SetLoadPrivateTags(self, bool _arg)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_SetLoadPrivateTags(self, *args)

    def GetLoadPrivateTags(self):
        """GetLoadPrivateTags(self) -> bool"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetLoadPrivateTags(self)

    def LoadPrivateTagsOn(self):
        """LoadPrivateTagsOn(self)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_LoadPrivateTagsOn(self)

    def LoadPrivateTagsOff(self):
        """LoadPrivateTagsOff(self)"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_LoadPrivateTagsOff(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkGDCMSeriesFileNames
    def cast(*args):
        """cast(itkLightObject obj) -> itkGDCMSeriesFileNames"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGDCMSeriesFileNames"""
        return _ITKIOBasePython.itkGDCMSeriesFileNames_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGDCMSeriesFileNames
        
        Create a new object of the class itkGDCMSeriesFileNames and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGDCMSeriesFileNames.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGDCMSeriesFileNames.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGDCMSeriesFileNames.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGDCMSeriesFileNames.SetInputDirectory = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_SetInputDirectory,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetDirectory = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_SetDirectory,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetInputFileNames = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetInputFileNames,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetOutputDirectory = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_SetOutputDirectory,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetOutputFileNames = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetOutputFileNames,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetFileNames = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetFileNames,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetSeriesUIDs = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetSeriesUIDs,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetRecursive = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_SetRecursive,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetRecursive = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetRecursive,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.RecursiveOn = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_RecursiveOn,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.RecursiveOff = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_RecursiveOff,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetUseSeriesDetails = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_SetUseSeriesDetails,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetUseSeriesDetails = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetUseSeriesDetails,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetSeriesHelper = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetSeriesHelper,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.AddSeriesRestriction = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_AddSeriesRestriction,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetLoadSequences = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_SetLoadSequences,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetLoadSequences = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetLoadSequences,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.LoadSequencesOn = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_LoadSequencesOn,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.LoadSequencesOff = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_LoadSequencesOff,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.SetLoadPrivateTags = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_SetLoadPrivateTags,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetLoadPrivateTags = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetLoadPrivateTags,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.LoadPrivateTagsOn = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_LoadPrivateTagsOn,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.LoadPrivateTagsOff = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_LoadPrivateTagsOff,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames.GetPointer = new_instancemethod(_ITKIOBasePython.itkGDCMSeriesFileNames_GetPointer,None,itkGDCMSeriesFileNames)
itkGDCMSeriesFileNames_swigregister = _ITKIOBasePython.itkGDCMSeriesFileNames_swigregister
itkGDCMSeriesFileNames_swigregister(itkGDCMSeriesFileNames)

def itkGDCMSeriesFileNames___New_orig__():
  """itkGDCMSeriesFileNames___New_orig__()"""
  return _ITKIOBasePython.itkGDCMSeriesFileNames___New_orig__()

def itkGDCMSeriesFileNames_cast(*args):
  """itkGDCMSeriesFileNames_cast(itkLightObject obj) -> itkGDCMSeriesFileNames"""
  return _ITKIOBasePython.itkGDCMSeriesFileNames_cast(*args)

class itkGE4ImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkGE4ImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGE4ImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkGE4ImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkGE4ImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkGE4ImageIOFactory"""
        return _ITKIOBasePython.itkGE4ImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGE4ImageIOFactory"""
        return _ITKIOBasePython.itkGE4ImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGE4ImageIOFactory
        
        Create a new object of the class itkGE4ImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGE4ImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGE4ImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGE4ImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGE4ImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkGE4ImageIOFactory_GetPointer,None,itkGE4ImageIOFactory)
itkGE4ImageIOFactory_swigregister = _ITKIOBasePython.itkGE4ImageIOFactory_swigregister
itkGE4ImageIOFactory_swigregister(itkGE4ImageIOFactory)

def itkGE4ImageIOFactory___New_orig__():
  """itkGE4ImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkGE4ImageIOFactory___New_orig__()

def itkGE4ImageIOFactory_RegisterOneFactory():
  """itkGE4ImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkGE4ImageIOFactory_RegisterOneFactory()

def itkGE4ImageIOFactory_cast(*args):
  """itkGE4ImageIOFactory_cast(itkLightObject obj) -> itkGE4ImageIOFactory"""
  return _ITKIOBasePython.itkGE4ImageIOFactory_cast(*args)

class itkGE5ImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkGE5ImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGE5ImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkGE5ImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkGE5ImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkGE5ImageIOFactory"""
        return _ITKIOBasePython.itkGE5ImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGE5ImageIOFactory"""
        return _ITKIOBasePython.itkGE5ImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGE5ImageIOFactory
        
        Create a new object of the class itkGE5ImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGE5ImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGE5ImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGE5ImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGE5ImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkGE5ImageIOFactory_GetPointer,None,itkGE5ImageIOFactory)
itkGE5ImageIOFactory_swigregister = _ITKIOBasePython.itkGE5ImageIOFactory_swigregister
itkGE5ImageIOFactory_swigregister(itkGE5ImageIOFactory)

def itkGE5ImageIOFactory___New_orig__():
  """itkGE5ImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkGE5ImageIOFactory___New_orig__()

def itkGE5ImageIOFactory_RegisterOneFactory():
  """itkGE5ImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkGE5ImageIOFactory_RegisterOneFactory()

def itkGE5ImageIOFactory_cast(*args):
  """itkGE5ImageIOFactory_cast(itkLightObject obj) -> itkGE5ImageIOFactory"""
  return _ITKIOBasePython.itkGE5ImageIOFactory_cast(*args)

class itkGEAdwImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkGEAdwImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGEAdwImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkGEAdwImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkGEAdwImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkGEAdwImageIOFactory"""
        return _ITKIOBasePython.itkGEAdwImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGEAdwImageIOFactory"""
        return _ITKIOBasePython.itkGEAdwImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGEAdwImageIOFactory
        
        Create a new object of the class itkGEAdwImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGEAdwImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGEAdwImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGEAdwImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGEAdwImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkGEAdwImageIOFactory_GetPointer,None,itkGEAdwImageIOFactory)
itkGEAdwImageIOFactory_swigregister = _ITKIOBasePython.itkGEAdwImageIOFactory_swigregister
itkGEAdwImageIOFactory_swigregister(itkGEAdwImageIOFactory)

def itkGEAdwImageIOFactory___New_orig__():
  """itkGEAdwImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkGEAdwImageIOFactory___New_orig__()

def itkGEAdwImageIOFactory_RegisterOneFactory():
  """itkGEAdwImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkGEAdwImageIOFactory_RegisterOneFactory()

def itkGEAdwImageIOFactory_cast(*args):
  """itkGEAdwImageIOFactory_cast(itkLightObject obj) -> itkGEAdwImageIOFactory"""
  return _ITKIOBasePython.itkGEAdwImageIOFactory_cast(*args)

class itkGiplImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkGiplImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGiplImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkGiplImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkGiplImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkGiplImageIOFactory"""
        return _ITKIOBasePython.itkGiplImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGiplImageIOFactory"""
        return _ITKIOBasePython.itkGiplImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGiplImageIOFactory
        
        Create a new object of the class itkGiplImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGiplImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGiplImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGiplImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGiplImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkGiplImageIOFactory_GetPointer,None,itkGiplImageIOFactory)
itkGiplImageIOFactory_swigregister = _ITKIOBasePython.itkGiplImageIOFactory_swigregister
itkGiplImageIOFactory_swigregister(itkGiplImageIOFactory)

def itkGiplImageIOFactory___New_orig__():
  """itkGiplImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkGiplImageIOFactory___New_orig__()

def itkGiplImageIOFactory_RegisterOneFactory():
  """itkGiplImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkGiplImageIOFactory_RegisterOneFactory()

def itkGiplImageIOFactory_cast(*args):
  """itkGiplImageIOFactory_cast(itkLightObject obj) -> itkGiplImageIOFactory"""
  return _ITKIOBasePython.itkGiplImageIOFactory_cast(*args)

class itkImageIOBase(ITKCommonBasePython.itkLightProcessObject):
    """Proxy of C++ itkImageIOBase class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    UNKNOWNPIXELTYPE = _ITKIOBasePython.itkImageIOBase_UNKNOWNPIXELTYPE
    SCALAR = _ITKIOBasePython.itkImageIOBase_SCALAR
    RGB = _ITKIOBasePython.itkImageIOBase_RGB
    RGBA = _ITKIOBasePython.itkImageIOBase_RGBA
    OFFSET = _ITKIOBasePython.itkImageIOBase_OFFSET
    VECTOR = _ITKIOBasePython.itkImageIOBase_VECTOR
    POINT = _ITKIOBasePython.itkImageIOBase_POINT
    COVARIANTVECTOR = _ITKIOBasePython.itkImageIOBase_COVARIANTVECTOR
    SYMMETRICSECONDRANKTENSOR = _ITKIOBasePython.itkImageIOBase_SYMMETRICSECONDRANKTENSOR
    DIFFUSIONTENSOR3D = _ITKIOBasePython.itkImageIOBase_DIFFUSIONTENSOR3D
    COMPLEX = _ITKIOBasePython.itkImageIOBase_COMPLEX
    FIXEDARRAY = _ITKIOBasePython.itkImageIOBase_FIXEDARRAY
    MATRIX = _ITKIOBasePython.itkImageIOBase_MATRIX
    UNKNOWNCOMPONENTTYPE = _ITKIOBasePython.itkImageIOBase_UNKNOWNCOMPONENTTYPE
    UCHAR = _ITKIOBasePython.itkImageIOBase_UCHAR
    CHAR = _ITKIOBasePython.itkImageIOBase_CHAR
    USHORT = _ITKIOBasePython.itkImageIOBase_USHORT
    SHORT = _ITKIOBasePython.itkImageIOBase_SHORT
    UINT = _ITKIOBasePython.itkImageIOBase_UINT
    INT = _ITKIOBasePython.itkImageIOBase_INT
    ULONG = _ITKIOBasePython.itkImageIOBase_ULONG
    LONG = _ITKIOBasePython.itkImageIOBase_LONG
    FLOAT = _ITKIOBasePython.itkImageIOBase_FLOAT
    DOUBLE = _ITKIOBasePython.itkImageIOBase_DOUBLE
    ASCII = _ITKIOBasePython.itkImageIOBase_ASCII
    Binary = _ITKIOBasePython.itkImageIOBase_Binary
    TypeNotApplicable = _ITKIOBasePython.itkImageIOBase_TypeNotApplicable
    BigEndian = _ITKIOBasePython.itkImageIOBase_BigEndian
    LittleEndian = _ITKIOBasePython.itkImageIOBase_LittleEndian
    OrderNotApplicable = _ITKIOBasePython.itkImageIOBase_OrderNotApplicable
    def SetFileName(self, *args):
        """
        SetFileName(self, char _arg)
        SetFileName(self, string _arg)
        """
        return _ITKIOBasePython.itkImageIOBase_SetFileName(self, *args)

    def GetFileName(self):
        """GetFileName(self) -> char"""
        return _ITKIOBasePython.itkImageIOBase_GetFileName(self)

    def SetNumberOfDimensions(self, *args):
        """SetNumberOfDimensions(self, unsigned int arg0)"""
        return _ITKIOBasePython.itkImageIOBase_SetNumberOfDimensions(self, *args)

    def GetNumberOfDimensions(self):
        """GetNumberOfDimensions(self) -> unsigned int"""
        return _ITKIOBasePython.itkImageIOBase_GetNumberOfDimensions(self)

    def SetDimensions(self, *args):
        """SetDimensions(self, unsigned int i, unsigned int dim)"""
        return _ITKIOBasePython.itkImageIOBase_SetDimensions(self, *args)

    def GetDimensions(self, *args):
        """GetDimensions(self, unsigned int i) -> unsigned int"""
        return _ITKIOBasePython.itkImageIOBase_GetDimensions(self, *args)

    def SetOrigin(self, *args):
        """SetOrigin(self, unsigned int i, double origin)"""
        return _ITKIOBasePython.itkImageIOBase_SetOrigin(self, *args)

    def GetOrigin(self, *args):
        """GetOrigin(self, unsigned int i) -> double"""
        return _ITKIOBasePython.itkImageIOBase_GetOrigin(self, *args)

    def SetSpacing(self, *args):
        """SetSpacing(self, unsigned int i, double spacing)"""
        return _ITKIOBasePython.itkImageIOBase_SetSpacing(self, *args)

    def GetSpacing(self, *args):
        """GetSpacing(self, unsigned int i) -> double"""
        return _ITKIOBasePython.itkImageIOBase_GetSpacing(self, *args)

    def SetDirection(self, *args):
        """
        SetDirection(self, unsigned int i, vectorD direction)
        SetDirection(self, unsigned int i, vnl_vectorD direction)
        """
        return _ITKIOBasePython.itkImageIOBase_SetDirection(self, *args)

    def GetDirection(self, *args):
        """GetDirection(self, unsigned int i) -> vectorD"""
        return _ITKIOBasePython.itkImageIOBase_GetDirection(self, *args)

    def GetDefaultDirection(self, *args):
        """GetDefaultDirection(self, unsigned int i) -> vectorD"""
        return _ITKIOBasePython.itkImageIOBase_GetDefaultDirection(self, *args)

    def SetIORegion(self, *args):
        """SetIORegion(self, itkImageIORegion _arg)"""
        return _ITKIOBasePython.itkImageIOBase_SetIORegion(self, *args)

    def GetIORegion(self):
        """GetIORegion(self) -> itkImageIORegion"""
        return _ITKIOBasePython.itkImageIOBase_GetIORegion(self)

    def SetPixelType(self, *args):
        """SetPixelType(self, IOPixelType _arg)"""
        return _ITKIOBasePython.itkImageIOBase_SetPixelType(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> IOPixelType"""
        return _ITKIOBasePython.itkImageIOBase_GetPixelType(self)

    def SetPixelTypeInfo(self, *args):
        """SetPixelTypeInfo(self, std::type_info ptype) -> bool"""
        return _ITKIOBasePython.itkImageIOBase_SetPixelTypeInfo(self, *args)

    def SetComponentType(self, *args):
        """SetComponentType(self, IOComponentType _arg)"""
        return _ITKIOBasePython.itkImageIOBase_SetComponentType(self, *args)

    def GetComponentType(self):
        """GetComponentType(self) -> IOComponentType"""
        return _ITKIOBasePython.itkImageIOBase_GetComponentType(self)

    def GetComponentTypeInfo(self):
        """GetComponentTypeInfo(self) -> std::type_info"""
        return _ITKIOBasePython.itkImageIOBase_GetComponentTypeInfo(self)

    def SetNumberOfComponents(self, *args):
        """SetNumberOfComponents(self, unsigned int _arg)"""
        return _ITKIOBasePython.itkImageIOBase_SetNumberOfComponents(self, *args)

    def GetNumberOfComponents(self):
        """GetNumberOfComponents(self) -> unsigned int"""
        return _ITKIOBasePython.itkImageIOBase_GetNumberOfComponents(self)

    def SetUseCompression(self, *args):
        """SetUseCompression(self, bool _arg)"""
        return _ITKIOBasePython.itkImageIOBase_SetUseCompression(self, *args)

    def GetUseCompression(self):
        """GetUseCompression(self) -> bool"""
        return _ITKIOBasePython.itkImageIOBase_GetUseCompression(self)

    def UseCompressionOn(self):
        """UseCompressionOn(self)"""
        return _ITKIOBasePython.itkImageIOBase_UseCompressionOn(self)

    def UseCompressionOff(self):
        """UseCompressionOff(self)"""
        return _ITKIOBasePython.itkImageIOBase_UseCompressionOff(self)

    def SetUseStreamedReading(self, *args):
        """SetUseStreamedReading(self, bool _arg)"""
        return _ITKIOBasePython.itkImageIOBase_SetUseStreamedReading(self, *args)

    def GetUseStreamedReading(self):
        """GetUseStreamedReading(self) -> bool"""
        return _ITKIOBasePython.itkImageIOBase_GetUseStreamedReading(self)

    def UseStreamedReadingOn(self):
        """UseStreamedReadingOn(self)"""
        return _ITKIOBasePython.itkImageIOBase_UseStreamedReadingOn(self)

    def UseStreamedReadingOff(self):
        """UseStreamedReadingOff(self)"""
        return _ITKIOBasePython.itkImageIOBase_UseStreamedReadingOff(self)

    def SetUseStreamedWriting(self, *args):
        """SetUseStreamedWriting(self, bool _arg)"""
        return _ITKIOBasePython.itkImageIOBase_SetUseStreamedWriting(self, *args)

    def GetUseStreamedWriting(self):
        """GetUseStreamedWriting(self) -> bool"""
        return _ITKIOBasePython.itkImageIOBase_GetUseStreamedWriting(self)

    def UseStreamedWritingOn(self):
        """UseStreamedWritingOn(self)"""
        return _ITKIOBasePython.itkImageIOBase_UseStreamedWritingOn(self)

    def UseStreamedWritingOff(self):
        """UseStreamedWritingOff(self)"""
        return _ITKIOBasePython.itkImageIOBase_UseStreamedWritingOff(self)

    def GetComponentTypeAsString(self, *args):
        """GetComponentTypeAsString(self, IOComponentType arg0) -> string"""
        return _ITKIOBasePython.itkImageIOBase_GetComponentTypeAsString(self, *args)

    def GetPixelTypeAsString(self, *args):
        """GetPixelTypeAsString(self, IOPixelType arg0) -> string"""
        return _ITKIOBasePython.itkImageIOBase_GetPixelTypeAsString(self, *args)

    def SetFileType(self, *args):
        """SetFileType(self, FileType _arg)"""
        return _ITKIOBasePython.itkImageIOBase_SetFileType(self, *args)

    def GetFileType(self):
        """GetFileType(self) -> FileType"""
        return _ITKIOBasePython.itkImageIOBase_GetFileType(self)

    def SetFileTypeToASCII(self):
        """SetFileTypeToASCII(self)"""
        return _ITKIOBasePython.itkImageIOBase_SetFileTypeToASCII(self)

    def SetFileTypeToBinary(self):
        """SetFileTypeToBinary(self)"""
        return _ITKIOBasePython.itkImageIOBase_SetFileTypeToBinary(self)

    def SetByteOrder(self, *args):
        """SetByteOrder(self, ByteOrder _arg)"""
        return _ITKIOBasePython.itkImageIOBase_SetByteOrder(self, *args)

    def GetByteOrder(self):
        """GetByteOrder(self) -> ByteOrder"""
        return _ITKIOBasePython.itkImageIOBase_GetByteOrder(self)

    def SetByteOrderToBigEndian(self):
        """SetByteOrderToBigEndian(self)"""
        return _ITKIOBasePython.itkImageIOBase_SetByteOrderToBigEndian(self)

    def SetByteOrderToLittleEndian(self):
        """SetByteOrderToLittleEndian(self)"""
        return _ITKIOBasePython.itkImageIOBase_SetByteOrderToLittleEndian(self)

    def GetFileTypeAsString(self, *args):
        """GetFileTypeAsString(self, FileType arg0) -> string"""
        return _ITKIOBasePython.itkImageIOBase_GetFileTypeAsString(self, *args)

    def GetByteOrderAsString(self, *args):
        """GetByteOrderAsString(self, ByteOrder arg0) -> string"""
        return _ITKIOBasePython.itkImageIOBase_GetByteOrderAsString(self, *args)

    def GetPixelStride(self):
        """GetPixelStride(self) -> std::streamoff"""
        return _ITKIOBasePython.itkImageIOBase_GetPixelStride(self)

    def GetImageSizeInPixels(self):
        """GetImageSizeInPixels(self) -> std::streamoff"""
        return _ITKIOBasePython.itkImageIOBase_GetImageSizeInPixels(self)

    def GetImageSizeInBytes(self):
        """GetImageSizeInBytes(self) -> std::streamoff"""
        return _ITKIOBasePython.itkImageIOBase_GetImageSizeInBytes(self)

    def GetImageSizeInComponents(self):
        """GetImageSizeInComponents(self) -> std::streamoff"""
        return _ITKIOBasePython.itkImageIOBase_GetImageSizeInComponents(self)

    def GetComponentSize(self):
        """GetComponentSize(self) -> unsigned int"""
        return _ITKIOBasePython.itkImageIOBase_GetComponentSize(self)

    def CanReadFile(self, *args):
        """CanReadFile(self, char arg0) -> bool"""
        return _ITKIOBasePython.itkImageIOBase_CanReadFile(self, *args)

    def CanStreamRead(self):
        """CanStreamRead(self) -> bool"""
        return _ITKIOBasePython.itkImageIOBase_CanStreamRead(self)

    def ReadImageInformation(self):
        """ReadImageInformation(self)"""
        return _ITKIOBasePython.itkImageIOBase_ReadImageInformation(self)

    def Read(self, *args):
        """Read(self, void buffer)"""
        return _ITKIOBasePython.itkImageIOBase_Read(self, *args)

    def CanWriteFile(self, *args):
        """CanWriteFile(self, char arg0) -> bool"""
        return _ITKIOBasePython.itkImageIOBase_CanWriteFile(self, *args)

    def CanStreamWrite(self):
        """CanStreamWrite(self) -> bool"""
        return _ITKIOBasePython.itkImageIOBase_CanStreamWrite(self)

    def WriteImageInformation(self):
        """WriteImageInformation(self)"""
        return _ITKIOBasePython.itkImageIOBase_WriteImageInformation(self)

    def Write(self, *args):
        """Write(self, void buffer)"""
        return _ITKIOBasePython.itkImageIOBase_Write(self, *args)

    def SupportsDimension(self, *args):
        """SupportsDimension(self, unsigned long dim) -> bool"""
        return _ITKIOBasePython.itkImageIOBase_SupportsDimension(self, *args)

    def GenerateStreamableReadRegionFromRequestedRegion(self, *args):
        """GenerateStreamableReadRegionFromRequestedRegion(self, itkImageIORegion requested) -> itkImageIORegion"""
        return _ITKIOBasePython.itkImageIOBase_GenerateStreamableReadRegionFromRequestedRegion(self, *args)

    def GetActualNumberOfSplitsForWriting(self, *args):
        """
        GetActualNumberOfSplitsForWriting(self, unsigned int numberOfRequestedSplits, itkImageIORegion pasteRegion, 
            itkImageIORegion largestPossibleRegion) -> unsigned int
        """
        return _ITKIOBasePython.itkImageIOBase_GetActualNumberOfSplitsForWriting(self, *args)

    def GetSplitRegionForWriting(self, *args):
        """
        GetSplitRegionForWriting(self, unsigned int ithPiece, unsigned int numberOfActualSplits, 
            itkImageIORegion pasteRegion, itkImageIORegion largestPossibleRegion) -> itkImageIORegion
        """
        return _ITKIOBasePython.itkImageIOBase_GetSplitRegionForWriting(self, *args)

    def GetSupportedReadExtensions(self):
        """GetSupportedReadExtensions(self) -> vectorstring"""
        return _ITKIOBasePython.itkImageIOBase_GetSupportedReadExtensions(self)

    def GetSupportedWriteExtensions(self):
        """GetSupportedWriteExtensions(self) -> vectorstring"""
        return _ITKIOBasePython.itkImageIOBase_GetSupportedWriteExtensions(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkImageIOBase
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageIOBase"""
        return _ITKIOBasePython.itkImageIOBase_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageIOBase"""
        return _ITKIOBasePython.itkImageIOBase_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageIOBase
        
        Create a new object of the class itkImageIOBase and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageIOBase.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageIOBase.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageIOBase.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageIOBase.SetFileName = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetFileName,None,itkImageIOBase)
itkImageIOBase.GetFileName = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetFileName,None,itkImageIOBase)
itkImageIOBase.SetNumberOfDimensions = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetNumberOfDimensions,None,itkImageIOBase)
itkImageIOBase.GetNumberOfDimensions = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetNumberOfDimensions,None,itkImageIOBase)
itkImageIOBase.SetDimensions = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetDimensions,None,itkImageIOBase)
itkImageIOBase.GetDimensions = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetDimensions,None,itkImageIOBase)
itkImageIOBase.SetOrigin = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetOrigin,None,itkImageIOBase)
itkImageIOBase.GetOrigin = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetOrigin,None,itkImageIOBase)
itkImageIOBase.SetSpacing = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetSpacing,None,itkImageIOBase)
itkImageIOBase.GetSpacing = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetSpacing,None,itkImageIOBase)
itkImageIOBase.SetDirection = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetDirection,None,itkImageIOBase)
itkImageIOBase.GetDirection = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetDirection,None,itkImageIOBase)
itkImageIOBase.GetDefaultDirection = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetDefaultDirection,None,itkImageIOBase)
itkImageIOBase.SetIORegion = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetIORegion,None,itkImageIOBase)
itkImageIOBase.GetIORegion = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetIORegion,None,itkImageIOBase)
itkImageIOBase.SetPixelType = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetPixelType,None,itkImageIOBase)
itkImageIOBase.GetPixelType = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetPixelType,None,itkImageIOBase)
itkImageIOBase.SetPixelTypeInfo = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetPixelTypeInfo,None,itkImageIOBase)
itkImageIOBase.SetComponentType = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetComponentType,None,itkImageIOBase)
itkImageIOBase.GetComponentType = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetComponentType,None,itkImageIOBase)
itkImageIOBase.GetComponentTypeInfo = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetComponentTypeInfo,None,itkImageIOBase)
itkImageIOBase.SetNumberOfComponents = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetNumberOfComponents,None,itkImageIOBase)
itkImageIOBase.GetNumberOfComponents = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetNumberOfComponents,None,itkImageIOBase)
itkImageIOBase.SetUseCompression = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetUseCompression,None,itkImageIOBase)
itkImageIOBase.GetUseCompression = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetUseCompression,None,itkImageIOBase)
itkImageIOBase.UseCompressionOn = new_instancemethod(_ITKIOBasePython.itkImageIOBase_UseCompressionOn,None,itkImageIOBase)
itkImageIOBase.UseCompressionOff = new_instancemethod(_ITKIOBasePython.itkImageIOBase_UseCompressionOff,None,itkImageIOBase)
itkImageIOBase.SetUseStreamedReading = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetUseStreamedReading,None,itkImageIOBase)
itkImageIOBase.GetUseStreamedReading = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetUseStreamedReading,None,itkImageIOBase)
itkImageIOBase.UseStreamedReadingOn = new_instancemethod(_ITKIOBasePython.itkImageIOBase_UseStreamedReadingOn,None,itkImageIOBase)
itkImageIOBase.UseStreamedReadingOff = new_instancemethod(_ITKIOBasePython.itkImageIOBase_UseStreamedReadingOff,None,itkImageIOBase)
itkImageIOBase.SetUseStreamedWriting = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetUseStreamedWriting,None,itkImageIOBase)
itkImageIOBase.GetUseStreamedWriting = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetUseStreamedWriting,None,itkImageIOBase)
itkImageIOBase.UseStreamedWritingOn = new_instancemethod(_ITKIOBasePython.itkImageIOBase_UseStreamedWritingOn,None,itkImageIOBase)
itkImageIOBase.UseStreamedWritingOff = new_instancemethod(_ITKIOBasePython.itkImageIOBase_UseStreamedWritingOff,None,itkImageIOBase)
itkImageIOBase.GetComponentTypeAsString = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetComponentTypeAsString,None,itkImageIOBase)
itkImageIOBase.GetPixelTypeAsString = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetPixelTypeAsString,None,itkImageIOBase)
itkImageIOBase.SetFileType = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetFileType,None,itkImageIOBase)
itkImageIOBase.GetFileType = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetFileType,None,itkImageIOBase)
itkImageIOBase.SetFileTypeToASCII = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetFileTypeToASCII,None,itkImageIOBase)
itkImageIOBase.SetFileTypeToBinary = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetFileTypeToBinary,None,itkImageIOBase)
itkImageIOBase.SetByteOrder = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetByteOrder,None,itkImageIOBase)
itkImageIOBase.GetByteOrder = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetByteOrder,None,itkImageIOBase)
itkImageIOBase.SetByteOrderToBigEndian = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetByteOrderToBigEndian,None,itkImageIOBase)
itkImageIOBase.SetByteOrderToLittleEndian = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SetByteOrderToLittleEndian,None,itkImageIOBase)
itkImageIOBase.GetFileTypeAsString = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetFileTypeAsString,None,itkImageIOBase)
itkImageIOBase.GetByteOrderAsString = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetByteOrderAsString,None,itkImageIOBase)
itkImageIOBase.GetPixelStride = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetPixelStride,None,itkImageIOBase)
itkImageIOBase.GetImageSizeInPixels = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetImageSizeInPixels,None,itkImageIOBase)
itkImageIOBase.GetImageSizeInBytes = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetImageSizeInBytes,None,itkImageIOBase)
itkImageIOBase.GetImageSizeInComponents = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetImageSizeInComponents,None,itkImageIOBase)
itkImageIOBase.GetComponentSize = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetComponentSize,None,itkImageIOBase)
itkImageIOBase.CanReadFile = new_instancemethod(_ITKIOBasePython.itkImageIOBase_CanReadFile,None,itkImageIOBase)
itkImageIOBase.CanStreamRead = new_instancemethod(_ITKIOBasePython.itkImageIOBase_CanStreamRead,None,itkImageIOBase)
itkImageIOBase.ReadImageInformation = new_instancemethod(_ITKIOBasePython.itkImageIOBase_ReadImageInformation,None,itkImageIOBase)
itkImageIOBase.Read = new_instancemethod(_ITKIOBasePython.itkImageIOBase_Read,None,itkImageIOBase)
itkImageIOBase.CanWriteFile = new_instancemethod(_ITKIOBasePython.itkImageIOBase_CanWriteFile,None,itkImageIOBase)
itkImageIOBase.CanStreamWrite = new_instancemethod(_ITKIOBasePython.itkImageIOBase_CanStreamWrite,None,itkImageIOBase)
itkImageIOBase.WriteImageInformation = new_instancemethod(_ITKIOBasePython.itkImageIOBase_WriteImageInformation,None,itkImageIOBase)
itkImageIOBase.Write = new_instancemethod(_ITKIOBasePython.itkImageIOBase_Write,None,itkImageIOBase)
itkImageIOBase.SupportsDimension = new_instancemethod(_ITKIOBasePython.itkImageIOBase_SupportsDimension,None,itkImageIOBase)
itkImageIOBase.GenerateStreamableReadRegionFromRequestedRegion = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GenerateStreamableReadRegionFromRequestedRegion,None,itkImageIOBase)
itkImageIOBase.GetActualNumberOfSplitsForWriting = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetActualNumberOfSplitsForWriting,None,itkImageIOBase)
itkImageIOBase.GetSplitRegionForWriting = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetSplitRegionForWriting,None,itkImageIOBase)
itkImageIOBase.GetSupportedReadExtensions = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetSupportedReadExtensions,None,itkImageIOBase)
itkImageIOBase.GetSupportedWriteExtensions = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetSupportedWriteExtensions,None,itkImageIOBase)
itkImageIOBase.GetPointer = new_instancemethod(_ITKIOBasePython.itkImageIOBase_GetPointer,None,itkImageIOBase)
itkImageIOBase_swigregister = _ITKIOBasePython.itkImageIOBase_swigregister
itkImageIOBase_swigregister(itkImageIOBase)

def itkImageIOBase_cast(*args):
  """itkImageIOBase_cast(itkLightObject obj) -> itkImageIOBase"""
  return _ITKIOBasePython.itkImageIOBase_cast(*args)

class itkImageIOFactory(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ReadMode = _ITKIOBasePython.itkImageIOFactory_ReadMode
    WriteMode = _ITKIOBasePython.itkImageIOFactory_WriteMode
    def CreateImageIO(*args):
        """CreateImageIO(char path, FileModeType mode)"""
        return _ITKIOBasePython.itkImageIOFactory_CreateImageIO(*args)

    CreateImageIO = staticmethod(CreateImageIO)
    def RegisterBuiltInFactories():
        """RegisterBuiltInFactories()"""
        return _ITKIOBasePython.itkImageIOFactory_RegisterBuiltInFactories()

    RegisterBuiltInFactories = staticmethod(RegisterBuiltInFactories)
itkImageIOFactory_swigregister = _ITKIOBasePython.itkImageIOFactory_swigregister
itkImageIOFactory_swigregister(itkImageIOFactory)

def itkImageIOFactory_CreateImageIO(*args):
  """itkImageIOFactory_CreateImageIO(char path, FileModeType mode)"""
  return _ITKIOBasePython.itkImageIOFactory_CreateImageIO(*args)

def itkImageIOFactory_RegisterBuiltInFactories():
  """itkImageIOFactory_RegisterBuiltInFactories()"""
  return _ITKIOBasePython.itkImageIOFactory_RegisterBuiltInFactories()

class itkImageIORegion(ITKRegionsPython.itkRegion):
    """Proxy of C++ itkImageIORegion class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def GetImageDimension(self):
        """GetImageDimension(self) -> unsigned int"""
        return _ITKIOBasePython.itkImageIORegion_GetImageDimension(self)

    def GetRegionDimension(self):
        """GetRegionDimension(self) -> unsigned int"""
        return _ITKIOBasePython.itkImageIORegion_GetRegionDimension(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkImageIORegion
    def __init__(self, *args): 
        """
        __init__(self, unsigned int dimension) -> itkImageIORegion
        __init__(self) -> itkImageIORegion
        __init__(self, itkImageIORegion region) -> itkImageIORegion
        """
        _ITKIOBasePython.itkImageIORegion_swiginit(self,_ITKIOBasePython.new_itkImageIORegion(*args))
    def GetSize(self, *args):
        """
        GetSize(self) -> vectorUL
        GetSize(self, unsigned long i) -> size_t
        """
        return _ITKIOBasePython.itkImageIORegion_GetSize(self, *args)

    def GetIndex(self, *args):
        """
        GetIndex(self) -> vectorSL
        GetIndex(self, unsigned long i) -> ptrdiff_t
        """
        return _ITKIOBasePython.itkImageIORegion_GetIndex(self, *args)

    def SetSize(self, *args):
        """
        SetSize(self, vectorUL size)
        SetSize(self, unsigned long i, size_t size)
        """
        return _ITKIOBasePython.itkImageIORegion_SetSize(self, *args)

    def SetIndex(self, *args):
        """
        SetIndex(self, vectorSL index)
        SetIndex(self, unsigned long i, ptrdiff_t idx)
        """
        return _ITKIOBasePython.itkImageIORegion_SetIndex(self, *args)

    def __eq__(self, *args):
        """__eq__(self, itkImageIORegion region) -> bool"""
        return _ITKIOBasePython.itkImageIORegion___eq__(self, *args)

    def __ne__(self, *args):
        """__ne__(self, itkImageIORegion region) -> bool"""
        return _ITKIOBasePython.itkImageIORegion___ne__(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, vectorSL index) -> bool
        IsInside(self, itkImageIORegion region) -> bool
        """
        return _ITKIOBasePython.itkImageIORegion_IsInside(self, *args)

    def GetNumberOfPixels(self):
        """GetNumberOfPixels(self) -> size_t"""
        return _ITKIOBasePython.itkImageIORegion_GetNumberOfPixels(self)

itkImageIORegion.GetImageDimension = new_instancemethod(_ITKIOBasePython.itkImageIORegion_GetImageDimension,None,itkImageIORegion)
itkImageIORegion.GetRegionDimension = new_instancemethod(_ITKIOBasePython.itkImageIORegion_GetRegionDimension,None,itkImageIORegion)
itkImageIORegion.GetSize = new_instancemethod(_ITKIOBasePython.itkImageIORegion_GetSize,None,itkImageIORegion)
itkImageIORegion.GetIndex = new_instancemethod(_ITKIOBasePython.itkImageIORegion_GetIndex,None,itkImageIORegion)
itkImageIORegion.SetSize = new_instancemethod(_ITKIOBasePython.itkImageIORegion_SetSize,None,itkImageIORegion)
itkImageIORegion.SetIndex = new_instancemethod(_ITKIOBasePython.itkImageIORegion_SetIndex,None,itkImageIORegion)
itkImageIORegion.__eq__ = new_instancemethod(_ITKIOBasePython.itkImageIORegion___eq__,None,itkImageIORegion)
itkImageIORegion.__ne__ = new_instancemethod(_ITKIOBasePython.itkImageIORegion___ne__,None,itkImageIORegion)
itkImageIORegion.IsInside = new_instancemethod(_ITKIOBasePython.itkImageIORegion_IsInside,None,itkImageIORegion)
itkImageIORegion.GetNumberOfPixels = new_instancemethod(_ITKIOBasePython.itkImageIORegion_GetNumberOfPixels,None,itkImageIORegion)
itkImageIORegion_swigregister = _ITKIOBasePython.itkImageIORegion_swigregister
itkImageIORegion_swigregister(itkImageIORegion)

class itkJPEGImageIO(itkImageIOBase):
    """Proxy of C++ itkJPEGImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkJPEGImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetQuality(self, *args):
        """SetQuality(self, int _arg)"""
        return _ITKIOBasePython.itkJPEGImageIO_SetQuality(self, *args)

    def GetQuality(self):
        """GetQuality(self) -> int"""
        return _ITKIOBasePython.itkJPEGImageIO_GetQuality(self)

    def SetProgressive(self, *args):
        """SetProgressive(self, bool _arg)"""
        return _ITKIOBasePython.itkJPEGImageIO_SetProgressive(self, *args)

    def GetProgressive(self):
        """GetProgressive(self) -> bool"""
        return _ITKIOBasePython.itkJPEGImageIO_GetProgressive(self)

    def ReadVolume(self, *args):
        """ReadVolume(self, void buffer)"""
        return _ITKIOBasePython.itkJPEGImageIO_ReadVolume(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkJPEGImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkJPEGImageIO"""
        return _ITKIOBasePython.itkJPEGImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkJPEGImageIO"""
        return _ITKIOBasePython.itkJPEGImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkJPEGImageIO
        
        Create a new object of the class itkJPEGImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkJPEGImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkJPEGImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkJPEGImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkJPEGImageIO.SetQuality = new_instancemethod(_ITKIOBasePython.itkJPEGImageIO_SetQuality,None,itkJPEGImageIO)
itkJPEGImageIO.GetQuality = new_instancemethod(_ITKIOBasePython.itkJPEGImageIO_GetQuality,None,itkJPEGImageIO)
itkJPEGImageIO.SetProgressive = new_instancemethod(_ITKIOBasePython.itkJPEGImageIO_SetProgressive,None,itkJPEGImageIO)
itkJPEGImageIO.GetProgressive = new_instancemethod(_ITKIOBasePython.itkJPEGImageIO_GetProgressive,None,itkJPEGImageIO)
itkJPEGImageIO.ReadVolume = new_instancemethod(_ITKIOBasePython.itkJPEGImageIO_ReadVolume,None,itkJPEGImageIO)
itkJPEGImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkJPEGImageIO_GetPointer,None,itkJPEGImageIO)
itkJPEGImageIO_swigregister = _ITKIOBasePython.itkJPEGImageIO_swigregister
itkJPEGImageIO_swigregister(itkJPEGImageIO)

def itkJPEGImageIO___New_orig__():
  """itkJPEGImageIO___New_orig__()"""
  return _ITKIOBasePython.itkJPEGImageIO___New_orig__()

def itkJPEGImageIO_cast(*args):
  """itkJPEGImageIO_cast(itkLightObject obj) -> itkJPEGImageIO"""
  return _ITKIOBasePython.itkJPEGImageIO_cast(*args)

class itkJPEGImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkJPEGImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkJPEGImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def FactoryNew():
        """FactoryNew() -> itkJPEGImageIOFactory"""
        return _ITKIOBasePython.itkJPEGImageIOFactory_FactoryNew()

    FactoryNew = staticmethod(FactoryNew)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkJPEGImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkJPEGImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkJPEGImageIOFactory"""
        return _ITKIOBasePython.itkJPEGImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkJPEGImageIOFactory"""
        return _ITKIOBasePython.itkJPEGImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkJPEGImageIOFactory
        
        Create a new object of the class itkJPEGImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkJPEGImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkJPEGImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkJPEGImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkJPEGImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkJPEGImageIOFactory_GetPointer,None,itkJPEGImageIOFactory)
itkJPEGImageIOFactory_swigregister = _ITKIOBasePython.itkJPEGImageIOFactory_swigregister
itkJPEGImageIOFactory_swigregister(itkJPEGImageIOFactory)

def itkJPEGImageIOFactory___New_orig__():
  """itkJPEGImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkJPEGImageIOFactory___New_orig__()

def itkJPEGImageIOFactory_FactoryNew():
  """itkJPEGImageIOFactory_FactoryNew() -> itkJPEGImageIOFactory"""
  return _ITKIOBasePython.itkJPEGImageIOFactory_FactoryNew()

def itkJPEGImageIOFactory_RegisterOneFactory():
  """itkJPEGImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkJPEGImageIOFactory_RegisterOneFactory()

def itkJPEGImageIOFactory_cast(*args):
  """itkJPEGImageIOFactory_cast(itkLightObject obj) -> itkJPEGImageIOFactory"""
  return _ITKIOBasePython.itkJPEGImageIOFactory_cast(*args)

class itkLSMImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkLSMImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkLSMImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkLSMImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkLSMImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkLSMImageIOFactory"""
        return _ITKIOBasePython.itkLSMImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkLSMImageIOFactory"""
        return _ITKIOBasePython.itkLSMImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkLSMImageIOFactory
        
        Create a new object of the class itkLSMImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkLSMImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkLSMImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLSMImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLSMImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkLSMImageIOFactory_GetPointer,None,itkLSMImageIOFactory)
itkLSMImageIOFactory_swigregister = _ITKIOBasePython.itkLSMImageIOFactory_swigregister
itkLSMImageIOFactory_swigregister(itkLSMImageIOFactory)

def itkLSMImageIOFactory___New_orig__():
  """itkLSMImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkLSMImageIOFactory___New_orig__()

def itkLSMImageIOFactory_RegisterOneFactory():
  """itkLSMImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkLSMImageIOFactory_RegisterOneFactory()

def itkLSMImageIOFactory_cast(*args):
  """itkLSMImageIOFactory_cast(itkLightObject obj) -> itkLSMImageIOFactory"""
  return _ITKIOBasePython.itkLSMImageIOFactory_cast(*args)

class itkMRCImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkMRCImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkMRCImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkMRCImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkMRCImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkMRCImageIOFactory"""
        return _ITKIOBasePython.itkMRCImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMRCImageIOFactory"""
        return _ITKIOBasePython.itkMRCImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMRCImageIOFactory
        
        Create a new object of the class itkMRCImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMRCImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMRCImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMRCImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMRCImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkMRCImageIOFactory_GetPointer,None,itkMRCImageIOFactory)
itkMRCImageIOFactory_swigregister = _ITKIOBasePython.itkMRCImageIOFactory_swigregister
itkMRCImageIOFactory_swigregister(itkMRCImageIOFactory)

def itkMRCImageIOFactory___New_orig__():
  """itkMRCImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkMRCImageIOFactory___New_orig__()

def itkMRCImageIOFactory_RegisterOneFactory():
  """itkMRCImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkMRCImageIOFactory_RegisterOneFactory()

def itkMRCImageIOFactory_cast(*args):
  """itkMRCImageIOFactory_cast(itkLightObject obj) -> itkMRCImageIOFactory"""
  return _ITKIOBasePython.itkMRCImageIOFactory_cast(*args)

class itkMetaImageIO(itkImageIOBase):
    """Proxy of C++ itkMetaImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkMetaImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetMetaImagePointer(self):
        """GetMetaImagePointer(self) -> MetaImage"""
        return _ITKIOBasePython.itkMetaImageIO_GetMetaImagePointer(self)

    def SetDataFileName(self, *args):
        """SetDataFileName(self, char filename)"""
        return _ITKIOBasePython.itkMetaImageIO_SetDataFileName(self, *args)

    def SetDoublePrecision(self, *args):
        """SetDoublePrecision(self, unsigned int precision)"""
        return _ITKIOBasePython.itkMetaImageIO_SetDoublePrecision(self, *args)

    def SetSubSamplingFactor(self, *args):
        """SetSubSamplingFactor(self, unsigned int _arg)"""
        return _ITKIOBasePython.itkMetaImageIO_SetSubSamplingFactor(self, *args)

    def GetSubSamplingFactor(self):
        """GetSubSamplingFactor(self) -> unsigned int"""
        return _ITKIOBasePython.itkMetaImageIO_GetSubSamplingFactor(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkMetaImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkMetaImageIO"""
        return _ITKIOBasePython.itkMetaImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMetaImageIO"""
        return _ITKIOBasePython.itkMetaImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMetaImageIO
        
        Create a new object of the class itkMetaImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMetaImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMetaImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaImageIO.GetMetaImagePointer = new_instancemethod(_ITKIOBasePython.itkMetaImageIO_GetMetaImagePointer,None,itkMetaImageIO)
itkMetaImageIO.SetDataFileName = new_instancemethod(_ITKIOBasePython.itkMetaImageIO_SetDataFileName,None,itkMetaImageIO)
itkMetaImageIO.SetDoublePrecision = new_instancemethod(_ITKIOBasePython.itkMetaImageIO_SetDoublePrecision,None,itkMetaImageIO)
itkMetaImageIO.SetSubSamplingFactor = new_instancemethod(_ITKIOBasePython.itkMetaImageIO_SetSubSamplingFactor,None,itkMetaImageIO)
itkMetaImageIO.GetSubSamplingFactor = new_instancemethod(_ITKIOBasePython.itkMetaImageIO_GetSubSamplingFactor,None,itkMetaImageIO)
itkMetaImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkMetaImageIO_GetPointer,None,itkMetaImageIO)
itkMetaImageIO_swigregister = _ITKIOBasePython.itkMetaImageIO_swigregister
itkMetaImageIO_swigregister(itkMetaImageIO)

def itkMetaImageIO___New_orig__():
  """itkMetaImageIO___New_orig__()"""
  return _ITKIOBasePython.itkMetaImageIO___New_orig__()

def itkMetaImageIO_cast(*args):
  """itkMetaImageIO_cast(itkLightObject obj) -> itkMetaImageIO"""
  return _ITKIOBasePython.itkMetaImageIO_cast(*args)

class itkMetaImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkMetaImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkMetaImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkMetaImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkMetaImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkMetaImageIOFactory"""
        return _ITKIOBasePython.itkMetaImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMetaImageIOFactory"""
        return _ITKIOBasePython.itkMetaImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMetaImageIOFactory
        
        Create a new object of the class itkMetaImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMetaImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMetaImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMetaImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMetaImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkMetaImageIOFactory_GetPointer,None,itkMetaImageIOFactory)
itkMetaImageIOFactory_swigregister = _ITKIOBasePython.itkMetaImageIOFactory_swigregister
itkMetaImageIOFactory_swigregister(itkMetaImageIOFactory)

def itkMetaImageIOFactory___New_orig__():
  """itkMetaImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkMetaImageIOFactory___New_orig__()

def itkMetaImageIOFactory_RegisterOneFactory():
  """itkMetaImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkMetaImageIOFactory_RegisterOneFactory()

def itkMetaImageIOFactory_cast(*args):
  """itkMetaImageIOFactory_cast(itkLightObject obj) -> itkMetaImageIOFactory"""
  return _ITKIOBasePython.itkMetaImageIOFactory_cast(*args)

class itkNiftiImageIO(itkImageIOBase):
    """Proxy of C++ itkNiftiImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkNiftiImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetLegacyAnalyze75Mode(self, *args):
        """SetLegacyAnalyze75Mode(self, bool _arg)"""
        return _ITKIOBasePython.itkNiftiImageIO_SetLegacyAnalyze75Mode(self, *args)

    def GetLegacyAnalyze75Mode(self):
        """GetLegacyAnalyze75Mode(self) -> bool"""
        return _ITKIOBasePython.itkNiftiImageIO_GetLegacyAnalyze75Mode(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkNiftiImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkNiftiImageIO"""
        return _ITKIOBasePython.itkNiftiImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNiftiImageIO"""
        return _ITKIOBasePython.itkNiftiImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNiftiImageIO
        
        Create a new object of the class itkNiftiImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNiftiImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNiftiImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNiftiImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNiftiImageIO.SetLegacyAnalyze75Mode = new_instancemethod(_ITKIOBasePython.itkNiftiImageIO_SetLegacyAnalyze75Mode,None,itkNiftiImageIO)
itkNiftiImageIO.GetLegacyAnalyze75Mode = new_instancemethod(_ITKIOBasePython.itkNiftiImageIO_GetLegacyAnalyze75Mode,None,itkNiftiImageIO)
itkNiftiImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkNiftiImageIO_GetPointer,None,itkNiftiImageIO)
itkNiftiImageIO_swigregister = _ITKIOBasePython.itkNiftiImageIO_swigregister
itkNiftiImageIO_swigregister(itkNiftiImageIO)

def itkNiftiImageIO___New_orig__():
  """itkNiftiImageIO___New_orig__()"""
  return _ITKIOBasePython.itkNiftiImageIO___New_orig__()

def itkNiftiImageIO_cast(*args):
  """itkNiftiImageIO_cast(itkLightObject obj) -> itkNiftiImageIO"""
  return _ITKIOBasePython.itkNiftiImageIO_cast(*args)

class itkNiftiImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkNiftiImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkNiftiImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkNiftiImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkNiftiImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkNiftiImageIOFactory"""
        return _ITKIOBasePython.itkNiftiImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNiftiImageIOFactory"""
        return _ITKIOBasePython.itkNiftiImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNiftiImageIOFactory
        
        Create a new object of the class itkNiftiImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNiftiImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNiftiImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNiftiImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNiftiImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkNiftiImageIOFactory_GetPointer,None,itkNiftiImageIOFactory)
itkNiftiImageIOFactory_swigregister = _ITKIOBasePython.itkNiftiImageIOFactory_swigregister
itkNiftiImageIOFactory_swigregister(itkNiftiImageIOFactory)

def itkNiftiImageIOFactory___New_orig__():
  """itkNiftiImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkNiftiImageIOFactory___New_orig__()

def itkNiftiImageIOFactory_RegisterOneFactory():
  """itkNiftiImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkNiftiImageIOFactory_RegisterOneFactory()

def itkNiftiImageIOFactory_cast(*args):
  """itkNiftiImageIOFactory_cast(itkLightObject obj) -> itkNiftiImageIOFactory"""
  return _ITKIOBasePython.itkNiftiImageIOFactory_cast(*args)

class itkNrrdImageIO(itkImageIOBase):
    """Proxy of C++ itkNrrdImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkNrrdImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkNrrdImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkNrrdImageIO"""
        return _ITKIOBasePython.itkNrrdImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNrrdImageIO"""
        return _ITKIOBasePython.itkNrrdImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNrrdImageIO
        
        Create a new object of the class itkNrrdImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNrrdImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNrrdImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNrrdImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNrrdImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkNrrdImageIO_GetPointer,None,itkNrrdImageIO)
itkNrrdImageIO_swigregister = _ITKIOBasePython.itkNrrdImageIO_swigregister
itkNrrdImageIO_swigregister(itkNrrdImageIO)

def itkNrrdImageIO___New_orig__():
  """itkNrrdImageIO___New_orig__()"""
  return _ITKIOBasePython.itkNrrdImageIO___New_orig__()

def itkNrrdImageIO_cast(*args):
  """itkNrrdImageIO_cast(itkLightObject obj) -> itkNrrdImageIO"""
  return _ITKIOBasePython.itkNrrdImageIO_cast(*args)

class itkNrrdImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkNrrdImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkNrrdImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkNrrdImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkNrrdImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkNrrdImageIOFactory"""
        return _ITKIOBasePython.itkNrrdImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNrrdImageIOFactory"""
        return _ITKIOBasePython.itkNrrdImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNrrdImageIOFactory
        
        Create a new object of the class itkNrrdImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNrrdImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNrrdImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNrrdImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNrrdImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkNrrdImageIOFactory_GetPointer,None,itkNrrdImageIOFactory)
itkNrrdImageIOFactory_swigregister = _ITKIOBasePython.itkNrrdImageIOFactory_swigregister
itkNrrdImageIOFactory_swigregister(itkNrrdImageIOFactory)

def itkNrrdImageIOFactory___New_orig__():
  """itkNrrdImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkNrrdImageIOFactory___New_orig__()

def itkNrrdImageIOFactory_RegisterOneFactory():
  """itkNrrdImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkNrrdImageIOFactory_RegisterOneFactory()

def itkNrrdImageIOFactory_cast(*args):
  """itkNrrdImageIOFactory_cast(itkLightObject obj) -> itkNrrdImageIOFactory"""
  return _ITKIOBasePython.itkNrrdImageIOFactory_cast(*args)

class itkNumericSeriesFileNames(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkNumericSeriesFileNames class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkNumericSeriesFileNames___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetStartIndex(self, *args):
        """SetStartIndex(self, unsigned long _arg)"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_SetStartIndex(self, *args)

    def GetStartIndex(self):
        """GetStartIndex(self) -> unsigned long"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_GetStartIndex(self)

    def SetEndIndex(self, *args):
        """SetEndIndex(self, unsigned long _arg)"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_SetEndIndex(self, *args)

    def GetEndIndex(self):
        """GetEndIndex(self) -> unsigned long"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_GetEndIndex(self)

    def SetIncrementIndex(self, *args):
        """SetIncrementIndex(self, unsigned long _arg)"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_SetIncrementIndex(self, *args)

    def GetIncrementIndex(self):
        """GetIncrementIndex(self) -> unsigned long"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_GetIncrementIndex(self)

    def SetSeriesFormat(self, *args):
        """
        SetSeriesFormat(self, char _arg)
        SetSeriesFormat(self, string _arg)
        """
        return _ITKIOBasePython.itkNumericSeriesFileNames_SetSeriesFormat(self, *args)

    def GetSeriesFormat(self):
        """GetSeriesFormat(self) -> char"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_GetSeriesFormat(self)

    def GetFileNames(self):
        """GetFileNames(self) -> vectorstring"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_GetFileNames(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkNumericSeriesFileNames
    def cast(*args):
        """cast(itkLightObject obj) -> itkNumericSeriesFileNames"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNumericSeriesFileNames"""
        return _ITKIOBasePython.itkNumericSeriesFileNames_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNumericSeriesFileNames
        
        Create a new object of the class itkNumericSeriesFileNames and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNumericSeriesFileNames.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNumericSeriesFileNames.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNumericSeriesFileNames.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNumericSeriesFileNames.SetStartIndex = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_SetStartIndex,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetStartIndex = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_GetStartIndex,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames.SetEndIndex = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_SetEndIndex,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetEndIndex = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_GetEndIndex,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames.SetIncrementIndex = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_SetIncrementIndex,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetIncrementIndex = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_GetIncrementIndex,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames.SetSeriesFormat = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_SetSeriesFormat,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetSeriesFormat = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_GetSeriesFormat,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetFileNames = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_GetFileNames,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames.GetPointer = new_instancemethod(_ITKIOBasePython.itkNumericSeriesFileNames_GetPointer,None,itkNumericSeriesFileNames)
itkNumericSeriesFileNames_swigregister = _ITKIOBasePython.itkNumericSeriesFileNames_swigregister
itkNumericSeriesFileNames_swigregister(itkNumericSeriesFileNames)

def itkNumericSeriesFileNames___New_orig__():
  """itkNumericSeriesFileNames___New_orig__()"""
  return _ITKIOBasePython.itkNumericSeriesFileNames___New_orig__()

def itkNumericSeriesFileNames_cast(*args):
  """itkNumericSeriesFileNames_cast(itkLightObject obj) -> itkNumericSeriesFileNames"""
  return _ITKIOBasePython.itkNumericSeriesFileNames_cast(*args)

class itkPNGImageIO(itkImageIOBase):
    """Proxy of C++ itkPNGImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkPNGImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetCompressionLevel(self, *args):
        """SetCompressionLevel(self, int _arg)"""
        return _ITKIOBasePython.itkPNGImageIO_SetCompressionLevel(self, *args)

    def GetCompressionLevel(self):
        """GetCompressionLevel(self) -> int"""
        return _ITKIOBasePython.itkPNGImageIO_GetCompressionLevel(self)

    def ReadVolume(self, *args):
        """ReadVolume(self, void buffer)"""
        return _ITKIOBasePython.itkPNGImageIO_ReadVolume(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkPNGImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkPNGImageIO"""
        return _ITKIOBasePython.itkPNGImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPNGImageIO"""
        return _ITKIOBasePython.itkPNGImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPNGImageIO
        
        Create a new object of the class itkPNGImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPNGImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPNGImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPNGImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPNGImageIO.SetCompressionLevel = new_instancemethod(_ITKIOBasePython.itkPNGImageIO_SetCompressionLevel,None,itkPNGImageIO)
itkPNGImageIO.GetCompressionLevel = new_instancemethod(_ITKIOBasePython.itkPNGImageIO_GetCompressionLevel,None,itkPNGImageIO)
itkPNGImageIO.ReadVolume = new_instancemethod(_ITKIOBasePython.itkPNGImageIO_ReadVolume,None,itkPNGImageIO)
itkPNGImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkPNGImageIO_GetPointer,None,itkPNGImageIO)
itkPNGImageIO_swigregister = _ITKIOBasePython.itkPNGImageIO_swigregister
itkPNGImageIO_swigregister(itkPNGImageIO)

def itkPNGImageIO___New_orig__():
  """itkPNGImageIO___New_orig__()"""
  return _ITKIOBasePython.itkPNGImageIO___New_orig__()

def itkPNGImageIO_cast(*args):
  """itkPNGImageIO_cast(itkLightObject obj) -> itkPNGImageIO"""
  return _ITKIOBasePython.itkPNGImageIO_cast(*args)

class itkPNGImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkPNGImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkPNGImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def FactoryNew():
        """FactoryNew() -> itkPNGImageIOFactory"""
        return _ITKIOBasePython.itkPNGImageIOFactory_FactoryNew()

    FactoryNew = staticmethod(FactoryNew)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkPNGImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkPNGImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkPNGImageIOFactory"""
        return _ITKIOBasePython.itkPNGImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPNGImageIOFactory"""
        return _ITKIOBasePython.itkPNGImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPNGImageIOFactory
        
        Create a new object of the class itkPNGImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPNGImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPNGImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPNGImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPNGImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkPNGImageIOFactory_GetPointer,None,itkPNGImageIOFactory)
itkPNGImageIOFactory_swigregister = _ITKIOBasePython.itkPNGImageIOFactory_swigregister
itkPNGImageIOFactory_swigregister(itkPNGImageIOFactory)

def itkPNGImageIOFactory___New_orig__():
  """itkPNGImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkPNGImageIOFactory___New_orig__()

def itkPNGImageIOFactory_FactoryNew():
  """itkPNGImageIOFactory_FactoryNew() -> itkPNGImageIOFactory"""
  return _ITKIOBasePython.itkPNGImageIOFactory_FactoryNew()

def itkPNGImageIOFactory_RegisterOneFactory():
  """itkPNGImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkPNGImageIOFactory_RegisterOneFactory()

def itkPNGImageIOFactory_cast(*args):
  """itkPNGImageIOFactory_cast(itkLightObject obj) -> itkPNGImageIOFactory"""
  return _ITKIOBasePython.itkPNGImageIOFactory_cast(*args)

class itkPhilipsRECImageIO(itkImageIOBase):
    """Proxy of C++ itkPhilipsRECImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkPhilipsRECImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkPhilipsRECImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkPhilipsRECImageIO"""
        return _ITKIOBasePython.itkPhilipsRECImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPhilipsRECImageIO"""
        return _ITKIOBasePython.itkPhilipsRECImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPhilipsRECImageIO
        
        Create a new object of the class itkPhilipsRECImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPhilipsRECImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPhilipsRECImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPhilipsRECImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPhilipsRECImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkPhilipsRECImageIO_GetPointer,None,itkPhilipsRECImageIO)
itkPhilipsRECImageIO_swigregister = _ITKIOBasePython.itkPhilipsRECImageIO_swigregister
itkPhilipsRECImageIO_swigregister(itkPhilipsRECImageIO)

def itkPhilipsRECImageIO___New_orig__():
  """itkPhilipsRECImageIO___New_orig__()"""
  return _ITKIOBasePython.itkPhilipsRECImageIO___New_orig__()

def itkPhilipsRECImageIO_cast(*args):
  """itkPhilipsRECImageIO_cast(itkLightObject obj) -> itkPhilipsRECImageIO"""
  return _ITKIOBasePython.itkPhilipsRECImageIO_cast(*args)

class itkPhilipsRECImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkPhilipsRECImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkPhilipsRECImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def FactoryNew():
        """FactoryNew() -> itkPhilipsRECImageIOFactory"""
        return _ITKIOBasePython.itkPhilipsRECImageIOFactory_FactoryNew()

    FactoryNew = staticmethod(FactoryNew)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkPhilipsRECImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkPhilipsRECImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkPhilipsRECImageIOFactory"""
        return _ITKIOBasePython.itkPhilipsRECImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPhilipsRECImageIOFactory"""
        return _ITKIOBasePython.itkPhilipsRECImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPhilipsRECImageIOFactory
        
        Create a new object of the class itkPhilipsRECImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPhilipsRECImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPhilipsRECImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPhilipsRECImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPhilipsRECImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkPhilipsRECImageIOFactory_GetPointer,None,itkPhilipsRECImageIOFactory)
itkPhilipsRECImageIOFactory_swigregister = _ITKIOBasePython.itkPhilipsRECImageIOFactory_swigregister
itkPhilipsRECImageIOFactory_swigregister(itkPhilipsRECImageIOFactory)

def itkPhilipsRECImageIOFactory___New_orig__():
  """itkPhilipsRECImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkPhilipsRECImageIOFactory___New_orig__()

def itkPhilipsRECImageIOFactory_FactoryNew():
  """itkPhilipsRECImageIOFactory_FactoryNew() -> itkPhilipsRECImageIOFactory"""
  return _ITKIOBasePython.itkPhilipsRECImageIOFactory_FactoryNew()

def itkPhilipsRECImageIOFactory_RegisterOneFactory():
  """itkPhilipsRECImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkPhilipsRECImageIOFactory_RegisterOneFactory()

def itkPhilipsRECImageIOFactory_cast(*args):
  """itkPhilipsRECImageIOFactory_cast(itkLightObject obj) -> itkPhilipsRECImageIOFactory"""
  return _ITKIOBasePython.itkPhilipsRECImageIOFactory_cast(*args)

class itkRawImageIOF2(itkImageIOBase):
    """Proxy of C++ itkRawImageIOF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkRawImageIOF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetHeaderSize(self, *args):
        """SetHeaderSize(self, unsigned long size)"""
        return _ITKIOBasePython.itkRawImageIOF2_SetHeaderSize(self, *args)

    def GetHeaderSize(self):
        """GetHeaderSize(self) -> unsigned long"""
        return _ITKIOBasePython.itkRawImageIOF2_GetHeaderSize(self)

    def SetFileDimensionality(self, *args):
        """SetFileDimensionality(self, unsigned long _arg)"""
        return _ITKIOBasePython.itkRawImageIOF2_SetFileDimensionality(self, *args)

    def GetFileDimensionality(self):
        """GetFileDimensionality(self) -> unsigned long"""
        return _ITKIOBasePython.itkRawImageIOF2_GetFileDimensionality(self)

    def GetImageMask(self):
        """GetImageMask(self) -> unsigned short"""
        return _ITKIOBasePython.itkRawImageIOF2_GetImageMask(self)

    def SetImageMask(self, *args):
        """SetImageMask(self, unsigned long val)"""
        return _ITKIOBasePython.itkRawImageIOF2_SetImageMask(self, *args)

    def ReadHeader(self, *args):
        """
        ReadHeader(self, string arg0 = std::string())
        ReadHeader(self)
        """
        return _ITKIOBasePython.itkRawImageIOF2_ReadHeader(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkRawImageIOF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkRawImageIOF2"""
        return _ITKIOBasePython.itkRawImageIOF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRawImageIOF2"""
        return _ITKIOBasePython.itkRawImageIOF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRawImageIOF2
        
        Create a new object of the class itkRawImageIOF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRawImageIOF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRawImageIOF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRawImageIOF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRawImageIOF2.SetHeaderSize = new_instancemethod(_ITKIOBasePython.itkRawImageIOF2_SetHeaderSize,None,itkRawImageIOF2)
itkRawImageIOF2.GetHeaderSize = new_instancemethod(_ITKIOBasePython.itkRawImageIOF2_GetHeaderSize,None,itkRawImageIOF2)
itkRawImageIOF2.SetFileDimensionality = new_instancemethod(_ITKIOBasePython.itkRawImageIOF2_SetFileDimensionality,None,itkRawImageIOF2)
itkRawImageIOF2.GetFileDimensionality = new_instancemethod(_ITKIOBasePython.itkRawImageIOF2_GetFileDimensionality,None,itkRawImageIOF2)
itkRawImageIOF2.GetImageMask = new_instancemethod(_ITKIOBasePython.itkRawImageIOF2_GetImageMask,None,itkRawImageIOF2)
itkRawImageIOF2.SetImageMask = new_instancemethod(_ITKIOBasePython.itkRawImageIOF2_SetImageMask,None,itkRawImageIOF2)
itkRawImageIOF2.ReadHeader = new_instancemethod(_ITKIOBasePython.itkRawImageIOF2_ReadHeader,None,itkRawImageIOF2)
itkRawImageIOF2.GetPointer = new_instancemethod(_ITKIOBasePython.itkRawImageIOF2_GetPointer,None,itkRawImageIOF2)
itkRawImageIOF2_swigregister = _ITKIOBasePython.itkRawImageIOF2_swigregister
itkRawImageIOF2_swigregister(itkRawImageIOF2)

def itkRawImageIOF2___New_orig__():
  """itkRawImageIOF2___New_orig__()"""
  return _ITKIOBasePython.itkRawImageIOF2___New_orig__()

def itkRawImageIOF2_cast(*args):
  """itkRawImageIOF2_cast(itkLightObject obj) -> itkRawImageIOF2"""
  return _ITKIOBasePython.itkRawImageIOF2_cast(*args)

class itkRawImageIOF3(itkImageIOBase):
    """Proxy of C++ itkRawImageIOF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkRawImageIOF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetHeaderSize(self, *args):
        """SetHeaderSize(self, unsigned long size)"""
        return _ITKIOBasePython.itkRawImageIOF3_SetHeaderSize(self, *args)

    def GetHeaderSize(self):
        """GetHeaderSize(self) -> unsigned long"""
        return _ITKIOBasePython.itkRawImageIOF3_GetHeaderSize(self)

    def SetFileDimensionality(self, *args):
        """SetFileDimensionality(self, unsigned long _arg)"""
        return _ITKIOBasePython.itkRawImageIOF3_SetFileDimensionality(self, *args)

    def GetFileDimensionality(self):
        """GetFileDimensionality(self) -> unsigned long"""
        return _ITKIOBasePython.itkRawImageIOF3_GetFileDimensionality(self)

    def GetImageMask(self):
        """GetImageMask(self) -> unsigned short"""
        return _ITKIOBasePython.itkRawImageIOF3_GetImageMask(self)

    def SetImageMask(self, *args):
        """SetImageMask(self, unsigned long val)"""
        return _ITKIOBasePython.itkRawImageIOF3_SetImageMask(self, *args)

    def ReadHeader(self, *args):
        """
        ReadHeader(self, string arg0 = std::string())
        ReadHeader(self)
        """
        return _ITKIOBasePython.itkRawImageIOF3_ReadHeader(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkRawImageIOF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkRawImageIOF3"""
        return _ITKIOBasePython.itkRawImageIOF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRawImageIOF3"""
        return _ITKIOBasePython.itkRawImageIOF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRawImageIOF3
        
        Create a new object of the class itkRawImageIOF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRawImageIOF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRawImageIOF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRawImageIOF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRawImageIOF3.SetHeaderSize = new_instancemethod(_ITKIOBasePython.itkRawImageIOF3_SetHeaderSize,None,itkRawImageIOF3)
itkRawImageIOF3.GetHeaderSize = new_instancemethod(_ITKIOBasePython.itkRawImageIOF3_GetHeaderSize,None,itkRawImageIOF3)
itkRawImageIOF3.SetFileDimensionality = new_instancemethod(_ITKIOBasePython.itkRawImageIOF3_SetFileDimensionality,None,itkRawImageIOF3)
itkRawImageIOF3.GetFileDimensionality = new_instancemethod(_ITKIOBasePython.itkRawImageIOF3_GetFileDimensionality,None,itkRawImageIOF3)
itkRawImageIOF3.GetImageMask = new_instancemethod(_ITKIOBasePython.itkRawImageIOF3_GetImageMask,None,itkRawImageIOF3)
itkRawImageIOF3.SetImageMask = new_instancemethod(_ITKIOBasePython.itkRawImageIOF3_SetImageMask,None,itkRawImageIOF3)
itkRawImageIOF3.ReadHeader = new_instancemethod(_ITKIOBasePython.itkRawImageIOF3_ReadHeader,None,itkRawImageIOF3)
itkRawImageIOF3.GetPointer = new_instancemethod(_ITKIOBasePython.itkRawImageIOF3_GetPointer,None,itkRawImageIOF3)
itkRawImageIOF3_swigregister = _ITKIOBasePython.itkRawImageIOF3_swigregister
itkRawImageIOF3_swigregister(itkRawImageIOF3)

def itkRawImageIOF3___New_orig__():
  """itkRawImageIOF3___New_orig__()"""
  return _ITKIOBasePython.itkRawImageIOF3___New_orig__()

def itkRawImageIOF3_cast(*args):
  """itkRawImageIOF3_cast(itkLightObject obj) -> itkRawImageIOF3"""
  return _ITKIOBasePython.itkRawImageIOF3_cast(*args)

class itkRegularExpressionSeriesFileNames(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkRegularExpressionSeriesFileNames class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetDirectory(self, *args):
        """
        SetDirectory(self, char _arg)
        SetDirectory(self, string _arg)
        """
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_SetDirectory(self, *args)

    def GetDirectory(self):
        """GetDirectory(self) -> char"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetDirectory(self)

    def SetRegularExpression(self, *args):
        """
        SetRegularExpression(self, char _arg)
        SetRegularExpression(self, string _arg)
        """
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_SetRegularExpression(self, *args)

    def GetRegularExpression(self):
        """GetRegularExpression(self) -> char"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetRegularExpression(self)

    def SetSubMatch(self, *args):
        """SetSubMatch(self, unsigned int _arg)"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_SetSubMatch(self, *args)

    def GetSubMatch(self):
        """GetSubMatch(self) -> unsigned int"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetSubMatch(self)

    def SetNumericSort(self, *args):
        """SetNumericSort(self, bool _arg)"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_SetNumericSort(self, *args)

    def GetNumericSort(self):
        """GetNumericSort(self) -> bool"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetNumericSort(self)

    def NumericSortOn(self):
        """NumericSortOn(self)"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_NumericSortOn(self)

    def NumericSortOff(self):
        """NumericSortOff(self)"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_NumericSortOff(self)

    def GetFileNames(self):
        """GetFileNames(self) -> vectorstring"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetFileNames(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkRegularExpressionSeriesFileNames
    def cast(*args):
        """cast(itkLightObject obj) -> itkRegularExpressionSeriesFileNames"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkRegularExpressionSeriesFileNames"""
        return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkRegularExpressionSeriesFileNames
        
        Create a new object of the class itkRegularExpressionSeriesFileNames and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkRegularExpressionSeriesFileNames.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkRegularExpressionSeriesFileNames.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkRegularExpressionSeriesFileNames.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkRegularExpressionSeriesFileNames.SetDirectory = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_SetDirectory,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetDirectory = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetDirectory,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.SetRegularExpression = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_SetRegularExpression,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetRegularExpression = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetRegularExpression,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.SetSubMatch = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_SetSubMatch,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetSubMatch = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetSubMatch,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.SetNumericSort = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_SetNumericSort,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetNumericSort = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetNumericSort,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.NumericSortOn = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_NumericSortOn,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.NumericSortOff = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_NumericSortOff,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetFileNames = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetFileNames,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames.GetPointer = new_instancemethod(_ITKIOBasePython.itkRegularExpressionSeriesFileNames_GetPointer,None,itkRegularExpressionSeriesFileNames)
itkRegularExpressionSeriesFileNames_swigregister = _ITKIOBasePython.itkRegularExpressionSeriesFileNames_swigregister
itkRegularExpressionSeriesFileNames_swigregister(itkRegularExpressionSeriesFileNames)

def itkRegularExpressionSeriesFileNames___New_orig__():
  """itkRegularExpressionSeriesFileNames___New_orig__()"""
  return _ITKIOBasePython.itkRegularExpressionSeriesFileNames___New_orig__()

def itkRegularExpressionSeriesFileNames_cast(*args):
  """itkRegularExpressionSeriesFileNames_cast(itkLightObject obj) -> itkRegularExpressionSeriesFileNames"""
  return _ITKIOBasePython.itkRegularExpressionSeriesFileNames_cast(*args)

class itkSiemensVisionImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkSiemensVisionImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkSiemensVisionImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkSiemensVisionImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkSiemensVisionImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkSiemensVisionImageIOFactory"""
        return _ITKIOBasePython.itkSiemensVisionImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSiemensVisionImageIOFactory"""
        return _ITKIOBasePython.itkSiemensVisionImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSiemensVisionImageIOFactory
        
        Create a new object of the class itkSiemensVisionImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSiemensVisionImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSiemensVisionImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSiemensVisionImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSiemensVisionImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkSiemensVisionImageIOFactory_GetPointer,None,itkSiemensVisionImageIOFactory)
itkSiemensVisionImageIOFactory_swigregister = _ITKIOBasePython.itkSiemensVisionImageIOFactory_swigregister
itkSiemensVisionImageIOFactory_swigregister(itkSiemensVisionImageIOFactory)

def itkSiemensVisionImageIOFactory___New_orig__():
  """itkSiemensVisionImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkSiemensVisionImageIOFactory___New_orig__()

def itkSiemensVisionImageIOFactory_RegisterOneFactory():
  """itkSiemensVisionImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkSiemensVisionImageIOFactory_RegisterOneFactory()

def itkSiemensVisionImageIOFactory_cast(*args):
  """itkSiemensVisionImageIOFactory_cast(itkLightObject obj) -> itkSiemensVisionImageIOFactory"""
  return _ITKIOBasePython.itkSiemensVisionImageIOFactory_cast(*args)

class itkStimulateImageIO(itkImageIOBase):
    """Proxy of C++ itkStimulateImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkStimulateImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetDisplayRange(self):
        """GetDisplayRange(self) -> float"""
        return _ITKIOBasePython.itkStimulateImageIO_GetDisplayRange(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkStimulateImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkStimulateImageIO"""
        return _ITKIOBasePython.itkStimulateImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkStimulateImageIO"""
        return _ITKIOBasePython.itkStimulateImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkStimulateImageIO
        
        Create a new object of the class itkStimulateImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkStimulateImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkStimulateImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStimulateImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStimulateImageIO.GetDisplayRange = new_instancemethod(_ITKIOBasePython.itkStimulateImageIO_GetDisplayRange,None,itkStimulateImageIO)
itkStimulateImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkStimulateImageIO_GetPointer,None,itkStimulateImageIO)
itkStimulateImageIO_swigregister = _ITKIOBasePython.itkStimulateImageIO_swigregister
itkStimulateImageIO_swigregister(itkStimulateImageIO)

def itkStimulateImageIO___New_orig__():
  """itkStimulateImageIO___New_orig__()"""
  return _ITKIOBasePython.itkStimulateImageIO___New_orig__()

def itkStimulateImageIO_cast(*args):
  """itkStimulateImageIO_cast(itkLightObject obj) -> itkStimulateImageIO"""
  return _ITKIOBasePython.itkStimulateImageIO_cast(*args)

class itkStimulateImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkStimulateImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkStimulateImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkStimulateImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkStimulateImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkStimulateImageIOFactory"""
        return _ITKIOBasePython.itkStimulateImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkStimulateImageIOFactory"""
        return _ITKIOBasePython.itkStimulateImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkStimulateImageIOFactory
        
        Create a new object of the class itkStimulateImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkStimulateImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkStimulateImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStimulateImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStimulateImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkStimulateImageIOFactory_GetPointer,None,itkStimulateImageIOFactory)
itkStimulateImageIOFactory_swigregister = _ITKIOBasePython.itkStimulateImageIOFactory_swigregister
itkStimulateImageIOFactory_swigregister(itkStimulateImageIOFactory)

def itkStimulateImageIOFactory___New_orig__():
  """itkStimulateImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkStimulateImageIOFactory___New_orig__()

def itkStimulateImageIOFactory_RegisterOneFactory():
  """itkStimulateImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkStimulateImageIOFactory_RegisterOneFactory()

def itkStimulateImageIOFactory_cast(*args):
  """itkStimulateImageIOFactory_cast(itkLightObject obj) -> itkStimulateImageIOFactory"""
  return _ITKIOBasePython.itkStimulateImageIOFactory_cast(*args)

class itkStreamingImageIOBase(itkImageIOBase):
    """Proxy of C++ itkStreamingImageIOBase class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _ITKIOBasePython.delete_itkStreamingImageIOBase
    def cast(*args):
        """cast(itkLightObject obj) -> itkStreamingImageIOBase"""
        return _ITKIOBasePython.itkStreamingImageIOBase_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkStreamingImageIOBase"""
        return _ITKIOBasePython.itkStreamingImageIOBase_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkStreamingImageIOBase
        
        Create a new object of the class itkStreamingImageIOBase and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkStreamingImageIOBase.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkStreamingImageIOBase.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkStreamingImageIOBase.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkStreamingImageIOBase.GetPointer = new_instancemethod(_ITKIOBasePython.itkStreamingImageIOBase_GetPointer,None,itkStreamingImageIOBase)
itkStreamingImageIOBase_swigregister = _ITKIOBasePython.itkStreamingImageIOBase_swigregister
itkStreamingImageIOBase_swigregister(itkStreamingImageIOBase)

def itkStreamingImageIOBase_cast(*args):
  """itkStreamingImageIOBase_cast(itkLightObject obj) -> itkStreamingImageIOBase"""
  return _ITKIOBasePython.itkStreamingImageIOBase_cast(*args)

class itkTIFFImageIO(itkImageIOBase):
    """Proxy of C++ itkTIFFImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NOFORMAT = _ITKIOBasePython.itkTIFFImageIO_NOFORMAT
    RGB_ = _ITKIOBasePython.itkTIFFImageIO_RGB_
    GRAYSCALE = _ITKIOBasePython.itkTIFFImageIO_GRAYSCALE
    PALETTE_RGB = _ITKIOBasePython.itkTIFFImageIO_PALETTE_RGB
    PALETTE_GRAYSCALE = _ITKIOBasePython.itkTIFFImageIO_PALETTE_GRAYSCALE
    OTHER = _ITKIOBasePython.itkTIFFImageIO_OTHER
    NoCompression = _ITKIOBasePython.itkTIFFImageIO_NoCompression
    PackBits = _ITKIOBasePython.itkTIFFImageIO_PackBits
    JPEG = _ITKIOBasePython.itkTIFFImageIO_JPEG
    Deflate = _ITKIOBasePython.itkTIFFImageIO_Deflate
    LZW = _ITKIOBasePython.itkTIFFImageIO_LZW
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkTIFFImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def ReadVolume(self, *args):
        """ReadVolume(self, void buffer)"""
        return _ITKIOBasePython.itkTIFFImageIO_ReadVolume(self, *args)

    def ReadTiles(self, *args):
        """ReadTiles(self, void buffer)"""
        return _ITKIOBasePython.itkTIFFImageIO_ReadTiles(self, *args)

    def SetCompressionToNoCompression(self):
        """SetCompressionToNoCompression(self)"""
        return _ITKIOBasePython.itkTIFFImageIO_SetCompressionToNoCompression(self)

    def SetCompressionToPackBits(self):
        """SetCompressionToPackBits(self)"""
        return _ITKIOBasePython.itkTIFFImageIO_SetCompressionToPackBits(self)

    def SetCompressionToJPEG(self):
        """SetCompressionToJPEG(self)"""
        return _ITKIOBasePython.itkTIFFImageIO_SetCompressionToJPEG(self)

    def SetCompressionToDeflate(self):
        """SetCompressionToDeflate(self)"""
        return _ITKIOBasePython.itkTIFFImageIO_SetCompressionToDeflate(self)

    def SetCompressionToLZW(self):
        """SetCompressionToLZW(self)"""
        return _ITKIOBasePython.itkTIFFImageIO_SetCompressionToLZW(self)

    def SetCompression(self, *args):
        """SetCompression(self, int compression)"""
        return _ITKIOBasePython.itkTIFFImageIO_SetCompression(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkTIFFImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkTIFFImageIO"""
        return _ITKIOBasePython.itkTIFFImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkTIFFImageIO"""
        return _ITKIOBasePython.itkTIFFImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkTIFFImageIO
        
        Create a new object of the class itkTIFFImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkTIFFImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkTIFFImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTIFFImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTIFFImageIO.ReadVolume = new_instancemethod(_ITKIOBasePython.itkTIFFImageIO_ReadVolume,None,itkTIFFImageIO)
itkTIFFImageIO.ReadTiles = new_instancemethod(_ITKIOBasePython.itkTIFFImageIO_ReadTiles,None,itkTIFFImageIO)
itkTIFFImageIO.SetCompressionToNoCompression = new_instancemethod(_ITKIOBasePython.itkTIFFImageIO_SetCompressionToNoCompression,None,itkTIFFImageIO)
itkTIFFImageIO.SetCompressionToPackBits = new_instancemethod(_ITKIOBasePython.itkTIFFImageIO_SetCompressionToPackBits,None,itkTIFFImageIO)
itkTIFFImageIO.SetCompressionToJPEG = new_instancemethod(_ITKIOBasePython.itkTIFFImageIO_SetCompressionToJPEG,None,itkTIFFImageIO)
itkTIFFImageIO.SetCompressionToDeflate = new_instancemethod(_ITKIOBasePython.itkTIFFImageIO_SetCompressionToDeflate,None,itkTIFFImageIO)
itkTIFFImageIO.SetCompressionToLZW = new_instancemethod(_ITKIOBasePython.itkTIFFImageIO_SetCompressionToLZW,None,itkTIFFImageIO)
itkTIFFImageIO.SetCompression = new_instancemethod(_ITKIOBasePython.itkTIFFImageIO_SetCompression,None,itkTIFFImageIO)
itkTIFFImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkTIFFImageIO_GetPointer,None,itkTIFFImageIO)
itkTIFFImageIO_swigregister = _ITKIOBasePython.itkTIFFImageIO_swigregister
itkTIFFImageIO_swigregister(itkTIFFImageIO)

def itkTIFFImageIO___New_orig__():
  """itkTIFFImageIO___New_orig__()"""
  return _ITKIOBasePython.itkTIFFImageIO___New_orig__()

def itkTIFFImageIO_cast(*args):
  """itkTIFFImageIO_cast(itkLightObject obj) -> itkTIFFImageIO"""
  return _ITKIOBasePython.itkTIFFImageIO_cast(*args)

class itkTIFFImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkTIFFImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkTIFFImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def FactoryNew():
        """FactoryNew() -> itkTIFFImageIOFactory"""
        return _ITKIOBasePython.itkTIFFImageIOFactory_FactoryNew()

    FactoryNew = staticmethod(FactoryNew)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkTIFFImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkTIFFImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkTIFFImageIOFactory"""
        return _ITKIOBasePython.itkTIFFImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkTIFFImageIOFactory"""
        return _ITKIOBasePython.itkTIFFImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkTIFFImageIOFactory
        
        Create a new object of the class itkTIFFImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkTIFFImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkTIFFImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTIFFImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTIFFImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkTIFFImageIOFactory_GetPointer,None,itkTIFFImageIOFactory)
itkTIFFImageIOFactory_swigregister = _ITKIOBasePython.itkTIFFImageIOFactory_swigregister
itkTIFFImageIOFactory_swigregister(itkTIFFImageIOFactory)

def itkTIFFImageIOFactory___New_orig__():
  """itkTIFFImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkTIFFImageIOFactory___New_orig__()

def itkTIFFImageIOFactory_FactoryNew():
  """itkTIFFImageIOFactory_FactoryNew() -> itkTIFFImageIOFactory"""
  return _ITKIOBasePython.itkTIFFImageIOFactory_FactoryNew()

def itkTIFFImageIOFactory_RegisterOneFactory():
  """itkTIFFImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkTIFFImageIOFactory_RegisterOneFactory()

def itkTIFFImageIOFactory_cast(*args):
  """itkTIFFImageIOFactory_cast(itkLightObject obj) -> itkTIFFImageIOFactory"""
  return _ITKIOBasePython.itkTIFFImageIOFactory_cast(*args)

class itkTransformFileReader(ITKCommonBasePython.itkLightProcessObject):
    """Proxy of C++ itkTransformFileReader class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkTransformFileReader___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFileName(self, *args):
        """
        SetFileName(self, char _arg)
        SetFileName(self, string _arg)
        """
        return _ITKIOBasePython.itkTransformFileReader_SetFileName(self, *args)

    def GetFileName(self):
        """GetFileName(self) -> char"""
        return _ITKIOBasePython.itkTransformFileReader_GetFileName(self)

    def Update(self):
        """Update(self)"""
        return _ITKIOBasePython.itkTransformFileReader_Update(self)

    def GetTransformList(self):
        """GetTransformList(self) -> listitkTransformBase_Pointer"""
        return _ITKIOBasePython.itkTransformFileReader_GetTransformList(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkTransformFileReader
    def cast(*args):
        """cast(itkLightObject obj) -> itkTransformFileReader"""
        return _ITKIOBasePython.itkTransformFileReader_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkTransformFileReader"""
        return _ITKIOBasePython.itkTransformFileReader_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkTransformFileReader
        
        Create a new object of the class itkTransformFileReader and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkTransformFileReader.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkTransformFileReader.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTransformFileReader.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTransformFileReader.SetFileName = new_instancemethod(_ITKIOBasePython.itkTransformFileReader_SetFileName,None,itkTransformFileReader)
itkTransformFileReader.GetFileName = new_instancemethod(_ITKIOBasePython.itkTransformFileReader_GetFileName,None,itkTransformFileReader)
itkTransformFileReader.Update = new_instancemethod(_ITKIOBasePython.itkTransformFileReader_Update,None,itkTransformFileReader)
itkTransformFileReader.GetTransformList = new_instancemethod(_ITKIOBasePython.itkTransformFileReader_GetTransformList,None,itkTransformFileReader)
itkTransformFileReader.GetPointer = new_instancemethod(_ITKIOBasePython.itkTransformFileReader_GetPointer,None,itkTransformFileReader)
itkTransformFileReader_swigregister = _ITKIOBasePython.itkTransformFileReader_swigregister
itkTransformFileReader_swigregister(itkTransformFileReader)

def itkTransformFileReader___New_orig__():
  """itkTransformFileReader___New_orig__()"""
  return _ITKIOBasePython.itkTransformFileReader___New_orig__()

def itkTransformFileReader_cast(*args):
  """itkTransformFileReader_cast(itkLightObject obj) -> itkTransformFileReader"""
  return _ITKIOBasePython.itkTransformFileReader_cast(*args)

class itkTransformFileWriter(ITKCommonBasePython.itkLightProcessObject):
    """Proxy of C++ itkTransformFileWriter class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkTransformFileWriter___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFileName(self, *args):
        """
        SetFileName(self, char _arg)
        SetFileName(self, string _arg)
        """
        return _ITKIOBasePython.itkTransformFileWriter_SetFileName(self, *args)

    def GetFileName(self):
        """GetFileName(self) -> char"""
        return _ITKIOBasePython.itkTransformFileWriter_GetFileName(self)

    def SetAppendOff(self):
        """SetAppendOff(self)"""
        return _ITKIOBasePython.itkTransformFileWriter_SetAppendOff(self)

    def SetAppendOn(self):
        """SetAppendOn(self)"""
        return _ITKIOBasePython.itkTransformFileWriter_SetAppendOn(self)

    def SetAppendMode(self, *args):
        """SetAppendMode(self, bool mode)"""
        return _ITKIOBasePython.itkTransformFileWriter_SetAppendMode(self, *args)

    def GetAppendMode(self):
        """GetAppendMode(self) -> bool"""
        return _ITKIOBasePython.itkTransformFileWriter_GetAppendMode(self)

    def SetInput(self, *args):
        """SetInput(self, itkTransformBase transform)"""
        return _ITKIOBasePython.itkTransformFileWriter_SetInput(self, *args)

    def GetInput(self):
        """GetInput(self) -> itkTransformBase"""
        return _ITKIOBasePython.itkTransformFileWriter_GetInput(self)

    def AddTransform(self, *args):
        """AddTransform(self, itkTransformBase transform)"""
        return _ITKIOBasePython.itkTransformFileWriter_AddTransform(self, *args)

    def SetPrecision(self, *args):
        """SetPrecision(self, unsigned int _arg)"""
        return _ITKIOBasePython.itkTransformFileWriter_SetPrecision(self, *args)

    def GetPrecision(self):
        """GetPrecision(self) -> unsigned int"""
        return _ITKIOBasePython.itkTransformFileWriter_GetPrecision(self)

    def Update(self):
        """Update(self)"""
        return _ITKIOBasePython.itkTransformFileWriter_Update(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkTransformFileWriter
    def cast(*args):
        """cast(itkLightObject obj) -> itkTransformFileWriter"""
        return _ITKIOBasePython.itkTransformFileWriter_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkTransformFileWriter"""
        return _ITKIOBasePython.itkTransformFileWriter_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkTransformFileWriter
        
        Create a new object of the class itkTransformFileWriter and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkTransformFileWriter.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkTransformFileWriter.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkTransformFileWriter.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkTransformFileWriter.SetFileName = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_SetFileName,None,itkTransformFileWriter)
itkTransformFileWriter.GetFileName = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_GetFileName,None,itkTransformFileWriter)
itkTransformFileWriter.SetAppendOff = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_SetAppendOff,None,itkTransformFileWriter)
itkTransformFileWriter.SetAppendOn = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_SetAppendOn,None,itkTransformFileWriter)
itkTransformFileWriter.SetAppendMode = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_SetAppendMode,None,itkTransformFileWriter)
itkTransformFileWriter.GetAppendMode = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_GetAppendMode,None,itkTransformFileWriter)
itkTransformFileWriter.SetInput = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_SetInput,None,itkTransformFileWriter)
itkTransformFileWriter.GetInput = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_GetInput,None,itkTransformFileWriter)
itkTransformFileWriter.AddTransform = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_AddTransform,None,itkTransformFileWriter)
itkTransformFileWriter.SetPrecision = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_SetPrecision,None,itkTransformFileWriter)
itkTransformFileWriter.GetPrecision = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_GetPrecision,None,itkTransformFileWriter)
itkTransformFileWriter.Update = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_Update,None,itkTransformFileWriter)
itkTransformFileWriter.GetPointer = new_instancemethod(_ITKIOBasePython.itkTransformFileWriter_GetPointer,None,itkTransformFileWriter)
itkTransformFileWriter_swigregister = _ITKIOBasePython.itkTransformFileWriter_swigregister
itkTransformFileWriter_swigregister(itkTransformFileWriter)

def itkTransformFileWriter___New_orig__():
  """itkTransformFileWriter___New_orig__()"""
  return _ITKIOBasePython.itkTransformFileWriter___New_orig__()

def itkTransformFileWriter_cast(*args):
  """itkTransformFileWriter_cast(itkLightObject obj) -> itkTransformFileWriter"""
  return _ITKIOBasePython.itkTransformFileWriter_cast(*args)

class itkVTKImageIO(itkImageIOBase):
    """Proxy of C++ itkVTKImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkVTKImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkVTKImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageIO"""
        return _ITKIOBasePython.itkVTKImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageIO"""
        return _ITKIOBasePython.itkVTKImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageIO
        
        Create a new object of the class itkVTKImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkVTKImageIO_GetPointer,None,itkVTKImageIO)
itkVTKImageIO_swigregister = _ITKIOBasePython.itkVTKImageIO_swigregister
itkVTKImageIO_swigregister(itkVTKImageIO)

def itkVTKImageIO___New_orig__():
  """itkVTKImageIO___New_orig__()"""
  return _ITKIOBasePython.itkVTKImageIO___New_orig__()

def itkVTKImageIO_cast(*args):
  """itkVTKImageIO_cast(itkLightObject obj) -> itkVTKImageIO"""
  return _ITKIOBasePython.itkVTKImageIO_cast(*args)

class itkVTKImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkVTKImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkVTKImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkVTKImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkVTKImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkVTKImageIOFactory"""
        return _ITKIOBasePython.itkVTKImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVTKImageIOFactory"""
        return _ITKIOBasePython.itkVTKImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVTKImageIOFactory
        
        Create a new object of the class itkVTKImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVTKImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVTKImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVTKImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVTKImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkVTKImageIOFactory_GetPointer,None,itkVTKImageIOFactory)
itkVTKImageIOFactory_swigregister = _ITKIOBasePython.itkVTKImageIOFactory_swigregister
itkVTKImageIOFactory_swigregister(itkVTKImageIOFactory)

def itkVTKImageIOFactory___New_orig__():
  """itkVTKImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkVTKImageIOFactory___New_orig__()

def itkVTKImageIOFactory_RegisterOneFactory():
  """itkVTKImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkVTKImageIOFactory_RegisterOneFactory()

def itkVTKImageIOFactory_cast(*args):
  """itkVTKImageIOFactory_cast(itkLightObject obj) -> itkVTKImageIOFactory"""
  return _ITKIOBasePython.itkVTKImageIOFactory_cast(*args)

class itkVoxBoCUBImageIO(itkImageIOBase):
    """Proxy of C++ itkVoxBoCUBImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkVoxBoCUBImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def __init__(self): 
        """__init__(self) -> itkVoxBoCUBImageIO"""
        _ITKIOBasePython.itkVoxBoCUBImageIO_swiginit(self,_ITKIOBasePython.new_itkVoxBoCUBImageIO())
    def PrintSelf(self, *args):
        """PrintSelf(self, ostream os, itkIndent indent)"""
        return _ITKIOBasePython.itkVoxBoCUBImageIO_PrintSelf(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkVoxBoCUBImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkVoxBoCUBImageIO"""
        return _ITKIOBasePython.itkVoxBoCUBImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVoxBoCUBImageIO"""
        return _ITKIOBasePython.itkVoxBoCUBImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVoxBoCUBImageIO
        
        Create a new object of the class itkVoxBoCUBImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVoxBoCUBImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVoxBoCUBImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVoxBoCUBImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVoxBoCUBImageIO.PrintSelf = new_instancemethod(_ITKIOBasePython.itkVoxBoCUBImageIO_PrintSelf,None,itkVoxBoCUBImageIO)
itkVoxBoCUBImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkVoxBoCUBImageIO_GetPointer,None,itkVoxBoCUBImageIO)
itkVoxBoCUBImageIO_swigregister = _ITKIOBasePython.itkVoxBoCUBImageIO_swigregister
itkVoxBoCUBImageIO_swigregister(itkVoxBoCUBImageIO)

def itkVoxBoCUBImageIO___New_orig__():
  """itkVoxBoCUBImageIO___New_orig__()"""
  return _ITKIOBasePython.itkVoxBoCUBImageIO___New_orig__()

def itkVoxBoCUBImageIO_cast(*args):
  """itkVoxBoCUBImageIO_cast(itkLightObject obj) -> itkVoxBoCUBImageIO"""
  return _ITKIOBasePython.itkVoxBoCUBImageIO_cast(*args)

class itkVoxBoCUBImageIOFactory(ITKCommonBasePython.itkObjectFactoryBase):
    """Proxy of C++ itkVoxBoCUBImageIOFactory class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkVoxBoCUBImageIOFactory___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def RegisterOneFactory():
        """RegisterOneFactory()"""
        return _ITKIOBasePython.itkVoxBoCUBImageIOFactory_RegisterOneFactory()

    RegisterOneFactory = staticmethod(RegisterOneFactory)
    __swig_destroy__ = _ITKIOBasePython.delete_itkVoxBoCUBImageIOFactory
    def cast(*args):
        """cast(itkLightObject obj) -> itkVoxBoCUBImageIOFactory"""
        return _ITKIOBasePython.itkVoxBoCUBImageIOFactory_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkVoxBoCUBImageIOFactory"""
        return _ITKIOBasePython.itkVoxBoCUBImageIOFactory_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkVoxBoCUBImageIOFactory
        
        Create a new object of the class itkVoxBoCUBImageIOFactory and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkVoxBoCUBImageIOFactory.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkVoxBoCUBImageIOFactory.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVoxBoCUBImageIOFactory.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVoxBoCUBImageIOFactory.GetPointer = new_instancemethod(_ITKIOBasePython.itkVoxBoCUBImageIOFactory_GetPointer,None,itkVoxBoCUBImageIOFactory)
itkVoxBoCUBImageIOFactory_swigregister = _ITKIOBasePython.itkVoxBoCUBImageIOFactory_swigregister
itkVoxBoCUBImageIOFactory_swigregister(itkVoxBoCUBImageIOFactory)

def itkVoxBoCUBImageIOFactory___New_orig__():
  """itkVoxBoCUBImageIOFactory___New_orig__()"""
  return _ITKIOBasePython.itkVoxBoCUBImageIOFactory___New_orig__()

def itkVoxBoCUBImageIOFactory_RegisterOneFactory():
  """itkVoxBoCUBImageIOFactory_RegisterOneFactory()"""
  return _ITKIOBasePython.itkVoxBoCUBImageIOFactory_RegisterOneFactory()

def itkVoxBoCUBImageIOFactory_cast(*args):
  """itkVoxBoCUBImageIOFactory_cast(itkLightObject obj) -> itkVoxBoCUBImageIOFactory"""
  return _ITKIOBasePython.itkVoxBoCUBImageIOFactory_cast(*args)

class itkAnalyzeImageIO(itkImageIOBase):
    """Proxy of C++ itkAnalyzeImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkAnalyzeImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkAnalyzeImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkAnalyzeImageIO"""
        return _ITKIOBasePython.itkAnalyzeImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAnalyzeImageIO"""
        return _ITKIOBasePython.itkAnalyzeImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAnalyzeImageIO
        
        Create a new object of the class itkAnalyzeImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAnalyzeImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAnalyzeImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAnalyzeImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAnalyzeImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkAnalyzeImageIO_GetPointer,None,itkAnalyzeImageIO)
itkAnalyzeImageIO_swigregister = _ITKIOBasePython.itkAnalyzeImageIO_swigregister
itkAnalyzeImageIO_swigregister(itkAnalyzeImageIO)

def itkAnalyzeImageIO___New_orig__():
  """itkAnalyzeImageIO___New_orig__()"""
  return _ITKIOBasePython.itkAnalyzeImageIO___New_orig__()

def itkAnalyzeImageIO_cast(*args):
  """itkAnalyzeImageIO_cast(itkLightObject obj) -> itkAnalyzeImageIO"""
  return _ITKIOBasePython.itkAnalyzeImageIO_cast(*args)

class itkBMPImageIO(itkImageIOBase):
    """Proxy of C++ itkBMPImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkBMPImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def __init__(self): 
        """__init__(self) -> itkBMPImageIO"""
        _ITKIOBasePython.itkBMPImageIO_swiginit(self,_ITKIOBasePython.new_itkBMPImageIO())
    def PrintSelf(self, *args):
        """PrintSelf(self, ostream os, itkIndent indent)"""
        return _ITKIOBasePython.itkBMPImageIO_PrintSelf(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkBMPImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkBMPImageIO"""
        return _ITKIOBasePython.itkBMPImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBMPImageIO"""
        return _ITKIOBasePython.itkBMPImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBMPImageIO
        
        Create a new object of the class itkBMPImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBMPImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBMPImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBMPImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBMPImageIO.PrintSelf = new_instancemethod(_ITKIOBasePython.itkBMPImageIO_PrintSelf,None,itkBMPImageIO)
itkBMPImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkBMPImageIO_GetPointer,None,itkBMPImageIO)
itkBMPImageIO_swigregister = _ITKIOBasePython.itkBMPImageIO_swigregister
itkBMPImageIO_swigregister(itkBMPImageIO)

def itkBMPImageIO___New_orig__():
  """itkBMPImageIO___New_orig__()"""
  return _ITKIOBasePython.itkBMPImageIO___New_orig__()

def itkBMPImageIO_cast(*args):
  """itkBMPImageIO_cast(itkLightObject obj) -> itkBMPImageIO"""
  return _ITKIOBasePython.itkBMPImageIO_cast(*args)

class itkBioRadImageIO(itkImageIOBase):
    """Proxy of C++ itkBioRadImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkBioRadImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkBioRadImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkBioRadImageIO"""
        return _ITKIOBasePython.itkBioRadImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBioRadImageIO"""
        return _ITKIOBasePython.itkBioRadImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBioRadImageIO
        
        Create a new object of the class itkBioRadImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBioRadImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBioRadImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBioRadImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBioRadImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkBioRadImageIO_GetPointer,None,itkBioRadImageIO)
itkBioRadImageIO_swigregister = _ITKIOBasePython.itkBioRadImageIO_swigregister
itkBioRadImageIO_swigregister(itkBioRadImageIO)

def itkBioRadImageIO___New_orig__():
  """itkBioRadImageIO___New_orig__()"""
  return _ITKIOBasePython.itkBioRadImageIO___New_orig__()

def itkBioRadImageIO_cast(*args):
  """itkBioRadImageIO_cast(itkLightObject obj) -> itkBioRadImageIO"""
  return _ITKIOBasePython.itkBioRadImageIO_cast(*args)

class itkBruker2DSEQImageIO(itkImageIOBase):
    """Proxy of C++ itkBruker2DSEQImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkBruker2DSEQImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkBruker2DSEQImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkBruker2DSEQImageIO"""
        return _ITKIOBasePython.itkBruker2DSEQImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkBruker2DSEQImageIO"""
        return _ITKIOBasePython.itkBruker2DSEQImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkBruker2DSEQImageIO
        
        Create a new object of the class itkBruker2DSEQImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkBruker2DSEQImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkBruker2DSEQImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkBruker2DSEQImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkBruker2DSEQImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkBruker2DSEQImageIO_GetPointer,None,itkBruker2DSEQImageIO)
itkBruker2DSEQImageIO_swigregister = _ITKIOBasePython.itkBruker2DSEQImageIO_swigregister
itkBruker2DSEQImageIO_swigregister(itkBruker2DSEQImageIO)

def itkBruker2DSEQImageIO___New_orig__():
  """itkBruker2DSEQImageIO___New_orig__()"""
  return _ITKIOBasePython.itkBruker2DSEQImageIO___New_orig__()

def itkBruker2DSEQImageIO_cast(*args):
  """itkBruker2DSEQImageIO_cast(itkLightObject obj) -> itkBruker2DSEQImageIO"""
  return _ITKIOBasePython.itkBruker2DSEQImageIO_cast(*args)

class itkDICOMImageIO2(itkImageIOBase):
    """Proxy of C++ itkDICOMImageIO2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkDICOMImageIO2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetPatientName(self, *args):
        """GetPatientName(self, char name)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetPatientName(self, *args)

    def GetPatientID(self, *args):
        """GetPatientID(self, char id)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetPatientID(self, *args)

    def GetPatientSex(self, *args):
        """GetPatientSex(self, char sex)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetPatientSex(self, *args)

    def GetPatientAge(self, *args):
        """GetPatientAge(self, char age)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetPatientAge(self, *args)

    def GetStudyID(self, *args):
        """GetStudyID(self, char id)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetStudyID(self, *args)

    def GetPatientDOB(self, *args):
        """GetPatientDOB(self, char dob)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetPatientDOB(self, *args)

    def GetStudyDescription(self, *args):
        """GetStudyDescription(self, char desc)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetStudyDescription(self, *args)

    def GetBodyPart(self, *args):
        """GetBodyPart(self, char part)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetBodyPart(self, *args)

    def GetNumberOfSeriesInStudy(self, *args):
        """GetNumberOfSeriesInStudy(self, char series)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetNumberOfSeriesInStudy(self, *args)

    def GetNumberOfStudyRelatedSeries(self, *args):
        """GetNumberOfStudyRelatedSeries(self, char series)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetNumberOfStudyRelatedSeries(self, *args)

    def GetStudyDate(self, *args):
        """GetStudyDate(self, char date)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetStudyDate(self, *args)

    def GetModality(self, *args):
        """GetModality(self, char modality)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetModality(self, *args)

    def GetManufacturer(self, *args):
        """GetManufacturer(self, char manu)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetManufacturer(self, *args)

    def GetInstitution(self, *args):
        """GetInstitution(self, char ins)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetInstitution(self, *args)

    def GetModel(self, *args):
        """GetModel(self, char model)"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetModel(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkDICOMImageIO2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDICOMImageIO2"""
        return _ITKIOBasePython.itkDICOMImageIO2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDICOMImageIO2"""
        return _ITKIOBasePython.itkDICOMImageIO2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDICOMImageIO2
        
        Create a new object of the class itkDICOMImageIO2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDICOMImageIO2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDICOMImageIO2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDICOMImageIO2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDICOMImageIO2.GetPatientName = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetPatientName,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetPatientID = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetPatientID,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetPatientSex = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetPatientSex,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetPatientAge = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetPatientAge,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetStudyID = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetStudyID,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetPatientDOB = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetPatientDOB,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetStudyDescription = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetStudyDescription,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetBodyPart = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetBodyPart,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetNumberOfSeriesInStudy = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetNumberOfSeriesInStudy,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetNumberOfStudyRelatedSeries = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetNumberOfStudyRelatedSeries,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetStudyDate = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetStudyDate,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetModality = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetModality,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetManufacturer = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetManufacturer,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetInstitution = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetInstitution,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetModel = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetModel,None,itkDICOMImageIO2)
itkDICOMImageIO2.GetPointer = new_instancemethod(_ITKIOBasePython.itkDICOMImageIO2_GetPointer,None,itkDICOMImageIO2)
itkDICOMImageIO2_swigregister = _ITKIOBasePython.itkDICOMImageIO2_swigregister
itkDICOMImageIO2_swigregister(itkDICOMImageIO2)

def itkDICOMImageIO2___New_orig__():
  """itkDICOMImageIO2___New_orig__()"""
  return _ITKIOBasePython.itkDICOMImageIO2___New_orig__()

def itkDICOMImageIO2_cast(*args):
  """itkDICOMImageIO2_cast(itkLightObject obj) -> itkDICOMImageIO2"""
  return _ITKIOBasePython.itkDICOMImageIO2_cast(*args)

class itkGDCMImageIO(itkImageIOBase):
    """Proxy of C++ itkGDCMImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    JPEG = _ITKIOBasePython.itkGDCMImageIO_JPEG
    JPEG2000 = _ITKIOBasePython.itkGDCMImageIO_JPEG2000
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGDCMImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetInternalComponentType(self):
        """GetInternalComponentType(self) -> IOComponentType"""
        return _ITKIOBasePython.itkGDCMImageIO_GetInternalComponentType(self)

    def GetRescaleSlope(self):
        """GetRescaleSlope(self) -> double"""
        return _ITKIOBasePython.itkGDCMImageIO_GetRescaleSlope(self)

    def GetRescaleIntercept(self):
        """GetRescaleIntercept(self) -> double"""
        return _ITKIOBasePython.itkGDCMImageIO_GetRescaleIntercept(self)

    def GetUIDPrefix(self):
        """GetUIDPrefix(self) -> char"""
        return _ITKIOBasePython.itkGDCMImageIO_GetUIDPrefix(self)

    def SetUIDPrefix(self, *args):
        """
        SetUIDPrefix(self, char _arg)
        SetUIDPrefix(self, string _arg)
        """
        return _ITKIOBasePython.itkGDCMImageIO_SetUIDPrefix(self, *args)

    def GetStudyInstanceUID(self):
        """GetStudyInstanceUID(self) -> char"""
        return _ITKIOBasePython.itkGDCMImageIO_GetStudyInstanceUID(self)

    def GetSeriesInstanceUID(self):
        """GetSeriesInstanceUID(self) -> char"""
        return _ITKIOBasePython.itkGDCMImageIO_GetSeriesInstanceUID(self)

    def GetFrameOfReferenceInstanceUID(self):
        """GetFrameOfReferenceInstanceUID(self) -> char"""
        return _ITKIOBasePython.itkGDCMImageIO_GetFrameOfReferenceInstanceUID(self)

    def SetKeepOriginalUID(self, *args):
        """SetKeepOriginalUID(self, bool _arg)"""
        return _ITKIOBasePython.itkGDCMImageIO_SetKeepOriginalUID(self, *args)

    def GetKeepOriginalUID(self):
        """GetKeepOriginalUID(self) -> bool"""
        return _ITKIOBasePython.itkGDCMImageIO_GetKeepOriginalUID(self)

    def KeepOriginalUIDOn(self):
        """KeepOriginalUIDOn(self)"""
        return _ITKIOBasePython.itkGDCMImageIO_KeepOriginalUIDOn(self)

    def KeepOriginalUIDOff(self):
        """KeepOriginalUIDOff(self)"""
        return _ITKIOBasePython.itkGDCMImageIO_KeepOriginalUIDOff(self)

    def GetPatientName(self, *args):
        """GetPatientName(self, char name)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetPatientName(self, *args)

    def GetPatientID(self, *args):
        """GetPatientID(self, char id)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetPatientID(self, *args)

    def GetPatientSex(self, *args):
        """GetPatientSex(self, char sex)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetPatientSex(self, *args)

    def GetPatientAge(self, *args):
        """GetPatientAge(self, char age)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetPatientAge(self, *args)

    def GetStudyID(self, *args):
        """GetStudyID(self, char id)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetStudyID(self, *args)

    def GetPatientDOB(self, *args):
        """GetPatientDOB(self, char dob)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetPatientDOB(self, *args)

    def GetStudyDescription(self, *args):
        """GetStudyDescription(self, char desc)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetStudyDescription(self, *args)

    def GetBodyPart(self, *args):
        """GetBodyPart(self, char part)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetBodyPart(self, *args)

    def GetNumberOfSeriesInStudy(self, *args):
        """GetNumberOfSeriesInStudy(self, char series)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetNumberOfSeriesInStudy(self, *args)

    def GetNumberOfStudyRelatedSeries(self, *args):
        """GetNumberOfStudyRelatedSeries(self, char series)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetNumberOfStudyRelatedSeries(self, *args)

    def GetStudyDate(self, *args):
        """GetStudyDate(self, char date)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetStudyDate(self, *args)

    def GetModality(self, *args):
        """GetModality(self, char modality)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetModality(self, *args)

    def GetManufacturer(self, *args):
        """GetManufacturer(self, char manu)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetManufacturer(self, *args)

    def GetInstitution(self, *args):
        """GetInstitution(self, char ins)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetInstitution(self, *args)

    def GetModel(self, *args):
        """GetModel(self, char model)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetModel(self, *args)

    def GetScanOptions(self, *args):
        """GetScanOptions(self, char options)"""
        return _ITKIOBasePython.itkGDCMImageIO_GetScanOptions(self, *args)

    def GetValueFromTag(self, *args):
        """GetValueFromTag(self, string tag, string value) -> bool"""
        return _ITKIOBasePython.itkGDCMImageIO_GetValueFromTag(self, *args)

    def GetLabelFromTag(*args):
        """GetLabelFromTag(string tag, string labelId) -> bool"""
        return _ITKIOBasePython.itkGDCMImageIO_GetLabelFromTag(*args)

    GetLabelFromTag = staticmethod(GetLabelFromTag)
    def SetMaxSizeLoadEntry(self, *args):
        """SetMaxSizeLoadEntry(self, long _arg)"""
        return _ITKIOBasePython.itkGDCMImageIO_SetMaxSizeLoadEntry(self, *args)

    def SetLoadSequences(self, *args):
        """SetLoadSequences(self, bool _arg)"""
        return _ITKIOBasePython.itkGDCMImageIO_SetLoadSequences(self, *args)

    def GetLoadSequences(self):
        """GetLoadSequences(self) -> bool"""
        return _ITKIOBasePython.itkGDCMImageIO_GetLoadSequences(self)

    def LoadSequencesOn(self):
        """LoadSequencesOn(self)"""
        return _ITKIOBasePython.itkGDCMImageIO_LoadSequencesOn(self)

    def LoadSequencesOff(self):
        """LoadSequencesOff(self)"""
        return _ITKIOBasePython.itkGDCMImageIO_LoadSequencesOff(self)

    def SetLoadPrivateTags(self, *args):
        """SetLoadPrivateTags(self, bool _arg)"""
        return _ITKIOBasePython.itkGDCMImageIO_SetLoadPrivateTags(self, *args)

    def GetLoadPrivateTags(self):
        """GetLoadPrivateTags(self) -> bool"""
        return _ITKIOBasePython.itkGDCMImageIO_GetLoadPrivateTags(self)

    def LoadPrivateTagsOn(self):
        """LoadPrivateTagsOn(self)"""
        return _ITKIOBasePython.itkGDCMImageIO_LoadPrivateTagsOn(self)

    def LoadPrivateTagsOff(self):
        """LoadPrivateTagsOff(self)"""
        return _ITKIOBasePython.itkGDCMImageIO_LoadPrivateTagsOff(self)

    def SetLoadSequencesDefault(*args):
        """SetLoadSequencesDefault(bool b)"""
        return _ITKIOBasePython.itkGDCMImageIO_SetLoadSequencesDefault(*args)

    SetLoadSequencesDefault = staticmethod(SetLoadSequencesDefault)
    def LoadSequencesDefaultOn():
        """LoadSequencesDefaultOn()"""
        return _ITKIOBasePython.itkGDCMImageIO_LoadSequencesDefaultOn()

    LoadSequencesDefaultOn = staticmethod(LoadSequencesDefaultOn)
    def LoadSequencesDefaultOff():
        """LoadSequencesDefaultOff()"""
        return _ITKIOBasePython.itkGDCMImageIO_LoadSequencesDefaultOff()

    LoadSequencesDefaultOff = staticmethod(LoadSequencesDefaultOff)
    def GetLoadSequencesDefault():
        """GetLoadSequencesDefault() -> bool"""
        return _ITKIOBasePython.itkGDCMImageIO_GetLoadSequencesDefault()

    GetLoadSequencesDefault = staticmethod(GetLoadSequencesDefault)
    def SetLoadPrivateTagsDefault(*args):
        """SetLoadPrivateTagsDefault(bool b)"""
        return _ITKIOBasePython.itkGDCMImageIO_SetLoadPrivateTagsDefault(*args)

    SetLoadPrivateTagsDefault = staticmethod(SetLoadPrivateTagsDefault)
    def LoadPrivateTagsDefaultOn():
        """LoadPrivateTagsDefaultOn()"""
        return _ITKIOBasePython.itkGDCMImageIO_LoadPrivateTagsDefaultOn()

    LoadPrivateTagsDefaultOn = staticmethod(LoadPrivateTagsDefaultOn)
    def LoadPrivateTagsDefaultOff():
        """LoadPrivateTagsDefaultOff()"""
        return _ITKIOBasePython.itkGDCMImageIO_LoadPrivateTagsDefaultOff()

    LoadPrivateTagsDefaultOff = staticmethod(LoadPrivateTagsDefaultOff)
    def GetLoadPrivateTagsDefault():
        """GetLoadPrivateTagsDefault() -> bool"""
        return _ITKIOBasePython.itkGDCMImageIO_GetLoadPrivateTagsDefault()

    GetLoadPrivateTagsDefault = staticmethod(GetLoadPrivateTagsDefault)
    def SetCompressionType(self, *args):
        """SetCompressionType(self, TCompressionType _arg)"""
        return _ITKIOBasePython.itkGDCMImageIO_SetCompressionType(self, *args)

    def GetCompressionType(self):
        """GetCompressionType(self) -> TCompressionType"""
        return _ITKIOBasePython.itkGDCMImageIO_GetCompressionType(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkGDCMImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkGDCMImageIO"""
        return _ITKIOBasePython.itkGDCMImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGDCMImageIO"""
        return _ITKIOBasePython.itkGDCMImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGDCMImageIO
        
        Create a new object of the class itkGDCMImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGDCMImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGDCMImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGDCMImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGDCMImageIO.GetInternalComponentType = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetInternalComponentType,None,itkGDCMImageIO)
itkGDCMImageIO.GetRescaleSlope = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetRescaleSlope,None,itkGDCMImageIO)
itkGDCMImageIO.GetRescaleIntercept = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetRescaleIntercept,None,itkGDCMImageIO)
itkGDCMImageIO.GetUIDPrefix = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetUIDPrefix,None,itkGDCMImageIO)
itkGDCMImageIO.SetUIDPrefix = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_SetUIDPrefix,None,itkGDCMImageIO)
itkGDCMImageIO.GetStudyInstanceUID = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetStudyInstanceUID,None,itkGDCMImageIO)
itkGDCMImageIO.GetSeriesInstanceUID = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetSeriesInstanceUID,None,itkGDCMImageIO)
itkGDCMImageIO.GetFrameOfReferenceInstanceUID = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetFrameOfReferenceInstanceUID,None,itkGDCMImageIO)
itkGDCMImageIO.SetKeepOriginalUID = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_SetKeepOriginalUID,None,itkGDCMImageIO)
itkGDCMImageIO.GetKeepOriginalUID = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetKeepOriginalUID,None,itkGDCMImageIO)
itkGDCMImageIO.KeepOriginalUIDOn = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_KeepOriginalUIDOn,None,itkGDCMImageIO)
itkGDCMImageIO.KeepOriginalUIDOff = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_KeepOriginalUIDOff,None,itkGDCMImageIO)
itkGDCMImageIO.GetPatientName = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetPatientName,None,itkGDCMImageIO)
itkGDCMImageIO.GetPatientID = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetPatientID,None,itkGDCMImageIO)
itkGDCMImageIO.GetPatientSex = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetPatientSex,None,itkGDCMImageIO)
itkGDCMImageIO.GetPatientAge = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetPatientAge,None,itkGDCMImageIO)
itkGDCMImageIO.GetStudyID = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetStudyID,None,itkGDCMImageIO)
itkGDCMImageIO.GetPatientDOB = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetPatientDOB,None,itkGDCMImageIO)
itkGDCMImageIO.GetStudyDescription = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetStudyDescription,None,itkGDCMImageIO)
itkGDCMImageIO.GetBodyPart = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetBodyPart,None,itkGDCMImageIO)
itkGDCMImageIO.GetNumberOfSeriesInStudy = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetNumberOfSeriesInStudy,None,itkGDCMImageIO)
itkGDCMImageIO.GetNumberOfStudyRelatedSeries = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetNumberOfStudyRelatedSeries,None,itkGDCMImageIO)
itkGDCMImageIO.GetStudyDate = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetStudyDate,None,itkGDCMImageIO)
itkGDCMImageIO.GetModality = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetModality,None,itkGDCMImageIO)
itkGDCMImageIO.GetManufacturer = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetManufacturer,None,itkGDCMImageIO)
itkGDCMImageIO.GetInstitution = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetInstitution,None,itkGDCMImageIO)
itkGDCMImageIO.GetModel = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetModel,None,itkGDCMImageIO)
itkGDCMImageIO.GetScanOptions = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetScanOptions,None,itkGDCMImageIO)
itkGDCMImageIO.GetValueFromTag = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetValueFromTag,None,itkGDCMImageIO)
itkGDCMImageIO.SetMaxSizeLoadEntry = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_SetMaxSizeLoadEntry,None,itkGDCMImageIO)
itkGDCMImageIO.SetLoadSequences = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_SetLoadSequences,None,itkGDCMImageIO)
itkGDCMImageIO.GetLoadSequences = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetLoadSequences,None,itkGDCMImageIO)
itkGDCMImageIO.LoadSequencesOn = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_LoadSequencesOn,None,itkGDCMImageIO)
itkGDCMImageIO.LoadSequencesOff = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_LoadSequencesOff,None,itkGDCMImageIO)
itkGDCMImageIO.SetLoadPrivateTags = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_SetLoadPrivateTags,None,itkGDCMImageIO)
itkGDCMImageIO.GetLoadPrivateTags = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetLoadPrivateTags,None,itkGDCMImageIO)
itkGDCMImageIO.LoadPrivateTagsOn = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_LoadPrivateTagsOn,None,itkGDCMImageIO)
itkGDCMImageIO.LoadPrivateTagsOff = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_LoadPrivateTagsOff,None,itkGDCMImageIO)
itkGDCMImageIO.SetCompressionType = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_SetCompressionType,None,itkGDCMImageIO)
itkGDCMImageIO.GetCompressionType = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetCompressionType,None,itkGDCMImageIO)
itkGDCMImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkGDCMImageIO_GetPointer,None,itkGDCMImageIO)
itkGDCMImageIO_swigregister = _ITKIOBasePython.itkGDCMImageIO_swigregister
itkGDCMImageIO_swigregister(itkGDCMImageIO)

def itkGDCMImageIO___New_orig__():
  """itkGDCMImageIO___New_orig__()"""
  return _ITKIOBasePython.itkGDCMImageIO___New_orig__()

def itkGDCMImageIO_GetLabelFromTag(*args):
  """itkGDCMImageIO_GetLabelFromTag(string tag, string labelId) -> bool"""
  return _ITKIOBasePython.itkGDCMImageIO_GetLabelFromTag(*args)

def itkGDCMImageIO_SetLoadSequencesDefault(*args):
  """itkGDCMImageIO_SetLoadSequencesDefault(bool b)"""
  return _ITKIOBasePython.itkGDCMImageIO_SetLoadSequencesDefault(*args)

def itkGDCMImageIO_LoadSequencesDefaultOn():
  """itkGDCMImageIO_LoadSequencesDefaultOn()"""
  return _ITKIOBasePython.itkGDCMImageIO_LoadSequencesDefaultOn()

def itkGDCMImageIO_LoadSequencesDefaultOff():
  """itkGDCMImageIO_LoadSequencesDefaultOff()"""
  return _ITKIOBasePython.itkGDCMImageIO_LoadSequencesDefaultOff()

def itkGDCMImageIO_GetLoadSequencesDefault():
  """itkGDCMImageIO_GetLoadSequencesDefault() -> bool"""
  return _ITKIOBasePython.itkGDCMImageIO_GetLoadSequencesDefault()

def itkGDCMImageIO_SetLoadPrivateTagsDefault(*args):
  """itkGDCMImageIO_SetLoadPrivateTagsDefault(bool b)"""
  return _ITKIOBasePython.itkGDCMImageIO_SetLoadPrivateTagsDefault(*args)

def itkGDCMImageIO_LoadPrivateTagsDefaultOn():
  """itkGDCMImageIO_LoadPrivateTagsDefaultOn()"""
  return _ITKIOBasePython.itkGDCMImageIO_LoadPrivateTagsDefaultOn()

def itkGDCMImageIO_LoadPrivateTagsDefaultOff():
  """itkGDCMImageIO_LoadPrivateTagsDefaultOff()"""
  return _ITKIOBasePython.itkGDCMImageIO_LoadPrivateTagsDefaultOff()

def itkGDCMImageIO_GetLoadPrivateTagsDefault():
  """itkGDCMImageIO_GetLoadPrivateTagsDefault() -> bool"""
  return _ITKIOBasePython.itkGDCMImageIO_GetLoadPrivateTagsDefault()

def itkGDCMImageIO_cast(*args):
  """itkGDCMImageIO_cast(itkLightObject obj) -> itkGDCMImageIO"""
  return _ITKIOBasePython.itkGDCMImageIO_cast(*args)

class itkGiplImageIO(itkImageIOBase):
    """Proxy of C++ itkGiplImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGiplImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def __init__(self): 
        """__init__(self) -> itkGiplImageIO"""
        _ITKIOBasePython.itkGiplImageIO_swiginit(self,_ITKIOBasePython.new_itkGiplImageIO())
    def PrintSelf(self, *args):
        """PrintSelf(self, ostream os, itkIndent indent)"""
        return _ITKIOBasePython.itkGiplImageIO_PrintSelf(self, *args)

    __swig_destroy__ = _ITKIOBasePython.delete_itkGiplImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkGiplImageIO"""
        return _ITKIOBasePython.itkGiplImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGiplImageIO"""
        return _ITKIOBasePython.itkGiplImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGiplImageIO
        
        Create a new object of the class itkGiplImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGiplImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGiplImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGiplImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGiplImageIO.PrintSelf = new_instancemethod(_ITKIOBasePython.itkGiplImageIO_PrintSelf,None,itkGiplImageIO)
itkGiplImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkGiplImageIO_GetPointer,None,itkGiplImageIO)
itkGiplImageIO_swigregister = _ITKIOBasePython.itkGiplImageIO_swigregister
itkGiplImageIO_swigregister(itkGiplImageIO)

def itkGiplImageIO___New_orig__():
  """itkGiplImageIO___New_orig__()"""
  return _ITKIOBasePython.itkGiplImageIO___New_orig__()

def itkGiplImageIO_cast(*args):
  """itkGiplImageIO_cast(itkLightObject obj) -> itkGiplImageIO"""
  return _ITKIOBasePython.itkGiplImageIO_cast(*args)

class itkIPLCommonImageIO(itkImageIOBase):
    """Proxy of C++ itkIPLCommonImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkIPLCommonImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def ModifyImageInformation(self):
        """ModifyImageInformation(self)"""
        return _ITKIOBasePython.itkIPLCommonImageIO_ModifyImageInformation(self)

    def GetPixelTypeInfo(self):
        """GetPixelTypeInfo(self) -> std::type_info"""
        return _ITKIOBasePython.itkIPLCommonImageIO_GetPixelTypeInfo(self)

    def SortImageListByNameAscend(self):
        """SortImageListByNameAscend(self)"""
        return _ITKIOBasePython.itkIPLCommonImageIO_SortImageListByNameAscend(self)

    def SortImageListByNameDescend(self):
        """SortImageListByNameDescend(self)"""
        return _ITKIOBasePython.itkIPLCommonImageIO_SortImageListByNameDescend(self)

    __swig_destroy__ = _ITKIOBasePython.delete_itkIPLCommonImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkIPLCommonImageIO"""
        return _ITKIOBasePython.itkIPLCommonImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkIPLCommonImageIO"""
        return _ITKIOBasePython.itkIPLCommonImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkIPLCommonImageIO
        
        Create a new object of the class itkIPLCommonImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkIPLCommonImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkIPLCommonImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkIPLCommonImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkIPLCommonImageIO.ModifyImageInformation = new_instancemethod(_ITKIOBasePython.itkIPLCommonImageIO_ModifyImageInformation,None,itkIPLCommonImageIO)
itkIPLCommonImageIO.GetPixelTypeInfo = new_instancemethod(_ITKIOBasePython.itkIPLCommonImageIO_GetPixelTypeInfo,None,itkIPLCommonImageIO)
itkIPLCommonImageIO.SortImageListByNameAscend = new_instancemethod(_ITKIOBasePython.itkIPLCommonImageIO_SortImageListByNameAscend,None,itkIPLCommonImageIO)
itkIPLCommonImageIO.SortImageListByNameDescend = new_instancemethod(_ITKIOBasePython.itkIPLCommonImageIO_SortImageListByNameDescend,None,itkIPLCommonImageIO)
itkIPLCommonImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkIPLCommonImageIO_GetPointer,None,itkIPLCommonImageIO)
itkIPLCommonImageIO_swigregister = _ITKIOBasePython.itkIPLCommonImageIO_swigregister
itkIPLCommonImageIO_swigregister(itkIPLCommonImageIO)

def itkIPLCommonImageIO___New_orig__():
  """itkIPLCommonImageIO___New_orig__()"""
  return _ITKIOBasePython.itkIPLCommonImageIO___New_orig__()

def itkIPLCommonImageIO_cast(*args):
  """itkIPLCommonImageIO_cast(itkLightObject obj) -> itkIPLCommonImageIO"""
  return _ITKIOBasePython.itkIPLCommonImageIO_cast(*args)

class itkLSMImageIO(itkTIFFImageIO):
    """Proxy of C++ itkLSMImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkLSMImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkLSMImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkLSMImageIO"""
        return _ITKIOBasePython.itkLSMImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkLSMImageIO"""
        return _ITKIOBasePython.itkLSMImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkLSMImageIO
        
        Create a new object of the class itkLSMImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkLSMImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkLSMImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkLSMImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkLSMImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkLSMImageIO_GetPointer,None,itkLSMImageIO)
itkLSMImageIO_swigregister = _ITKIOBasePython.itkLSMImageIO_swigregister
itkLSMImageIO_swigregister(itkLSMImageIO)

def itkLSMImageIO___New_orig__():
  """itkLSMImageIO___New_orig__()"""
  return _ITKIOBasePython.itkLSMImageIO___New_orig__()

def itkLSMImageIO_cast(*args):
  """itkLSMImageIO_cast(itkLightObject obj) -> itkLSMImageIO"""
  return _ITKIOBasePython.itkLSMImageIO_cast(*args)

class itkMRCImageIO(itkStreamingImageIOBase):
    """Proxy of C++ itkMRCImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkMRCImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkMRCImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkMRCImageIO"""
        return _ITKIOBasePython.itkMRCImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMRCImageIO"""
        return _ITKIOBasePython.itkMRCImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMRCImageIO
        
        Create a new object of the class itkMRCImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMRCImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMRCImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMRCImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMRCImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkMRCImageIO_GetPointer,None,itkMRCImageIO)
itkMRCImageIO_swigregister = _ITKIOBasePython.itkMRCImageIO_swigregister
itkMRCImageIO_swigregister(itkMRCImageIO)

def itkMRCImageIO___New_orig__():
  """itkMRCImageIO___New_orig__()"""
  return _ITKIOBasePython.itkMRCImageIO___New_orig__()

def itkMRCImageIO_cast(*args):
  """itkMRCImageIO_cast(itkLightObject obj) -> itkMRCImageIO"""
  return _ITKIOBasePython.itkMRCImageIO_cast(*args)

class itkSiemensVisionImageIO(itkIPLCommonImageIO):
    """Proxy of C++ itkSiemensVisionImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkSiemensVisionImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkSiemensVisionImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkSiemensVisionImageIO"""
        return _ITKIOBasePython.itkSiemensVisionImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSiemensVisionImageIO"""
        return _ITKIOBasePython.itkSiemensVisionImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSiemensVisionImageIO
        
        Create a new object of the class itkSiemensVisionImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSiemensVisionImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSiemensVisionImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSiemensVisionImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSiemensVisionImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkSiemensVisionImageIO_GetPointer,None,itkSiemensVisionImageIO)
itkSiemensVisionImageIO_swigregister = _ITKIOBasePython.itkSiemensVisionImageIO_swigregister
itkSiemensVisionImageIO_swigregister(itkSiemensVisionImageIO)

def itkSiemensVisionImageIO___New_orig__():
  """itkSiemensVisionImageIO___New_orig__()"""
  return _ITKIOBasePython.itkSiemensVisionImageIO___New_orig__()

def itkSiemensVisionImageIO_cast(*args):
  """itkSiemensVisionImageIO_cast(itkLightObject obj) -> itkSiemensVisionImageIO"""
  return _ITKIOBasePython.itkSiemensVisionImageIO_cast(*args)

class itkDicomImageIO(itkGDCMImageIO):
    """Proxy of C++ itkDicomImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkDicomImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkDicomImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkDicomImageIO"""
        return _ITKIOBasePython.itkDicomImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDicomImageIO"""
        return _ITKIOBasePython.itkDicomImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDicomImageIO
        
        Create a new object of the class itkDicomImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDicomImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDicomImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDicomImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDicomImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkDicomImageIO_GetPointer,None,itkDicomImageIO)
itkDicomImageIO_swigregister = _ITKIOBasePython.itkDicomImageIO_swigregister
itkDicomImageIO_swigregister(itkDicomImageIO)

def itkDicomImageIO___New_orig__():
  """itkDicomImageIO___New_orig__()"""
  return _ITKIOBasePython.itkDicomImageIO___New_orig__()

def itkDicomImageIO_cast(*args):
  """itkDicomImageIO_cast(itkLightObject obj) -> itkDicomImageIO"""
  return _ITKIOBasePython.itkDicomImageIO_cast(*args)

class itkGE4ImageIO(itkIPLCommonImageIO):
    """Proxy of C++ itkGE4ImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGE4ImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkGE4ImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkGE4ImageIO"""
        return _ITKIOBasePython.itkGE4ImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGE4ImageIO"""
        return _ITKIOBasePython.itkGE4ImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGE4ImageIO
        
        Create a new object of the class itkGE4ImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGE4ImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGE4ImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGE4ImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGE4ImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkGE4ImageIO_GetPointer,None,itkGE4ImageIO)
itkGE4ImageIO_swigregister = _ITKIOBasePython.itkGE4ImageIO_swigregister
itkGE4ImageIO_swigregister(itkGE4ImageIO)

def itkGE4ImageIO___New_orig__():
  """itkGE4ImageIO___New_orig__()"""
  return _ITKIOBasePython.itkGE4ImageIO___New_orig__()

def itkGE4ImageIO_cast(*args):
  """itkGE4ImageIO_cast(itkLightObject obj) -> itkGE4ImageIO"""
  return _ITKIOBasePython.itkGE4ImageIO_cast(*args)

class itkGE5ImageIO(itkIPLCommonImageIO):
    """Proxy of C++ itkGE5ImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGE5ImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkGE5ImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkGE5ImageIO"""
        return _ITKIOBasePython.itkGE5ImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGE5ImageIO"""
        return _ITKIOBasePython.itkGE5ImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGE5ImageIO
        
        Create a new object of the class itkGE5ImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGE5ImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGE5ImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGE5ImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGE5ImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkGE5ImageIO_GetPointer,None,itkGE5ImageIO)
itkGE5ImageIO_swigregister = _ITKIOBasePython.itkGE5ImageIO_swigregister
itkGE5ImageIO_swigregister(itkGE5ImageIO)

def itkGE5ImageIO___New_orig__():
  """itkGE5ImageIO___New_orig__()"""
  return _ITKIOBasePython.itkGE5ImageIO___New_orig__()

def itkGE5ImageIO_cast(*args):
  """itkGE5ImageIO_cast(itkLightObject obj) -> itkGE5ImageIO"""
  return _ITKIOBasePython.itkGE5ImageIO_cast(*args)

class itkGEAdwImageIO(itkIPLCommonImageIO):
    """Proxy of C++ itkGEAdwImageIO class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _ITKIOBasePython.itkGEAdwImageIO___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _ITKIOBasePython.delete_itkGEAdwImageIO
    def cast(*args):
        """cast(itkLightObject obj) -> itkGEAdwImageIO"""
        return _ITKIOBasePython.itkGEAdwImageIO_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkGEAdwImageIO"""
        return _ITKIOBasePython.itkGEAdwImageIO_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkGEAdwImageIO
        
        Create a new object of the class itkGEAdwImageIO and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkGEAdwImageIO.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkGEAdwImageIO.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkGEAdwImageIO.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkGEAdwImageIO.GetPointer = new_instancemethod(_ITKIOBasePython.itkGEAdwImageIO_GetPointer,None,itkGEAdwImageIO)
itkGEAdwImageIO_swigregister = _ITKIOBasePython.itkGEAdwImageIO_swigregister
itkGEAdwImageIO_swigregister(itkGEAdwImageIO)

def itkGEAdwImageIO___New_orig__():
  """itkGEAdwImageIO___New_orig__()"""
  return _ITKIOBasePython.itkGEAdwImageIO___New_orig__()

def itkGEAdwImageIO_cast(*args):
  """itkGEAdwImageIO_cast(itkLightObject obj) -> itkGEAdwImageIO"""
  return _ITKIOBasePython.itkGEAdwImageIO_cast(*args)



