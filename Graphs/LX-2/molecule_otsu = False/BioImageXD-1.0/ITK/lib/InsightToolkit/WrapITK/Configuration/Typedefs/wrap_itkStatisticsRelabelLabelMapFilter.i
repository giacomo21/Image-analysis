// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkStatisticsRelabelLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkStatisticsRelabelLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkStatisticsRelabelLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkStatisticsRelabelLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkStatisticsRelabelLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkStatisticsRelabelLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkStatisticsRelabelLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkStatisticsRelabelLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkStatisticsRelabelLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkStatisticsRelabelLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkStatisticsRelabelLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkStatisticsRelabelLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkStatisticsRelabelLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkStatisticsRelabelLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkStatisticsRelabelLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkStatisticsRelabelLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkStatisticsRelabelLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkStatisticsRelabelLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkStatisticsRelabelLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkStatisticsRelabelLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkShapeRelabelLabelMapFilter.i


%include itk.i
%include wrap_itkStatisticsRelabelLabelMapFilter_ext.i


 class itkStatisticsRelabelLabelMapFilterLM2 : public itkShapeRelabelLabelMapFilterLM2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkStatisticsRelabelLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkStatisticsRelabelLabelMapFilterLM2(itkStatisticsRelabelLabelMapFilterLM2 const & arg0);
     void operator=(itkStatisticsRelabelLabelMapFilterLM2 const & arg0);
   protected:
     itkStatisticsRelabelLabelMapFilterLM2();
     ~itkStatisticsRelabelLabelMapFilterLM2();
     virtual void GenerateData();
 };


 class itkStatisticsRelabelLabelMapFilterLM2_Pointer {
   public:
     itkStatisticsRelabelLabelMapFilterLM2_Pointer();
     itkStatisticsRelabelLabelMapFilterLM2_Pointer(itkStatisticsRelabelLabelMapFilterLM2_Pointer const & p);
     itkStatisticsRelabelLabelMapFilterLM2_Pointer(itkStatisticsRelabelLabelMapFilterLM2 * p);
     ~itkStatisticsRelabelLabelMapFilterLM2_Pointer();
     itkStatisticsRelabelLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStatisticsRelabelLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkStatisticsRelabelLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkStatisticsRelabelLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkStatisticsRelabelLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkStatisticsRelabelLabelMapFilterLM2_Pointer const & r) const;
     itkStatisticsRelabelLabelMapFilterLM2_Pointer & operator=(itkStatisticsRelabelLabelMapFilterLM2_Pointer const & r);
     itkStatisticsRelabelLabelMapFilterLM2_Pointer & operator=(itkStatisticsRelabelLabelMapFilterLM2 * r);
     itkStatisticsRelabelLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkStatisticsRelabelLabelMapFilterLM3 : public itkShapeRelabelLabelMapFilterLM3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkStatisticsRelabelLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkStatisticsRelabelLabelMapFilterLM3(itkStatisticsRelabelLabelMapFilterLM3 const & arg0);
     void operator=(itkStatisticsRelabelLabelMapFilterLM3 const & arg0);
   protected:
     itkStatisticsRelabelLabelMapFilterLM3();
     ~itkStatisticsRelabelLabelMapFilterLM3();
     virtual void GenerateData();
 };


 class itkStatisticsRelabelLabelMapFilterLM3_Pointer {
   public:
     itkStatisticsRelabelLabelMapFilterLM3_Pointer();
     itkStatisticsRelabelLabelMapFilterLM3_Pointer(itkStatisticsRelabelLabelMapFilterLM3_Pointer const & p);
     itkStatisticsRelabelLabelMapFilterLM3_Pointer(itkStatisticsRelabelLabelMapFilterLM3 * p);
     ~itkStatisticsRelabelLabelMapFilterLM3_Pointer();
     itkStatisticsRelabelLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkStatisticsRelabelLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkStatisticsRelabelLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkStatisticsRelabelLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkStatisticsRelabelLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkStatisticsRelabelLabelMapFilterLM3_Pointer const & r) const;
     itkStatisticsRelabelLabelMapFilterLM3_Pointer & operator=(itkStatisticsRelabelLabelMapFilterLM3_Pointer const & r);
     itkStatisticsRelabelLabelMapFilterLM3_Pointer & operator=(itkStatisticsRelabelLabelMapFilterLM3 * r);
     itkStatisticsRelabelLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


