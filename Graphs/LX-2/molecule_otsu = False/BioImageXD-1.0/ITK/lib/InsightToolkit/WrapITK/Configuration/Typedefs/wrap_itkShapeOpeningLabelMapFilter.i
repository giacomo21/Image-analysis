// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkShapeOpeningLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkShapeOpeningLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkShapeOpeningLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkShapeOpeningLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkShapeOpeningLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkShapeOpeningLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkShapeOpeningLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkShapeOpeningLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkShapeOpeningLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkShapeOpeningLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkShapeOpeningLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkShapeOpeningLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkShapeOpeningLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkShapeOpeningLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkShapeOpeningLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkShapeOpeningLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkShapeOpeningLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkShapeOpeningLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkShapeOpeningLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkShapeOpeningLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceLabelMapFilter.i


%include itk.i
%include wrap_itkShapeOpeningLabelMapFilter_ext.i


 class itkShapeOpeningLabelMapFilterLM2 : public itkInPlaceLabelMapFilterLM2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkShapeOpeningLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkShapeOpeningLabelMapFilterLM2(itkShapeOpeningLabelMapFilterLM2 const & arg0);
     void operator=(itkShapeOpeningLabelMapFilterLM2 const & arg0);
   protected:
     itkShapeOpeningLabelMapFilterLM2();
     ~itkShapeOpeningLabelMapFilterLM2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkShapeOpeningLabelMapFilterLM2_Pointer {
   public:
     itkShapeOpeningLabelMapFilterLM2_Pointer();
     itkShapeOpeningLabelMapFilterLM2_Pointer(itkShapeOpeningLabelMapFilterLM2_Pointer const & p);
     itkShapeOpeningLabelMapFilterLM2_Pointer(itkShapeOpeningLabelMapFilterLM2 * p);
     ~itkShapeOpeningLabelMapFilterLM2_Pointer();
     itkShapeOpeningLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkShapeOpeningLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkShapeOpeningLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkShapeOpeningLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkShapeOpeningLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkShapeOpeningLabelMapFilterLM2_Pointer const & r) const;
     itkShapeOpeningLabelMapFilterLM2_Pointer & operator=(itkShapeOpeningLabelMapFilterLM2_Pointer const & r);
     itkShapeOpeningLabelMapFilterLM2_Pointer & operator=(itkShapeOpeningLabelMapFilterLM2 * r);
     itkShapeOpeningLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkShapeOpeningLabelMapFilterLM3 : public itkInPlaceLabelMapFilterLM3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkShapeOpeningLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
   private:
     itkShapeOpeningLabelMapFilterLM3(itkShapeOpeningLabelMapFilterLM3 const & arg0);
     void operator=(itkShapeOpeningLabelMapFilterLM3 const & arg0);
   protected:
     itkShapeOpeningLabelMapFilterLM3();
     ~itkShapeOpeningLabelMapFilterLM3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkShapeOpeningLabelMapFilterLM3_Pointer {
   public:
     itkShapeOpeningLabelMapFilterLM3_Pointer();
     itkShapeOpeningLabelMapFilterLM3_Pointer(itkShapeOpeningLabelMapFilterLM3_Pointer const & p);
     itkShapeOpeningLabelMapFilterLM3_Pointer(itkShapeOpeningLabelMapFilterLM3 * p);
     ~itkShapeOpeningLabelMapFilterLM3_Pointer();
     itkShapeOpeningLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkShapeOpeningLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkShapeOpeningLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkShapeOpeningLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkShapeOpeningLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkShapeOpeningLabelMapFilterLM3_Pointer const & r) const;
     itkShapeOpeningLabelMapFilterLM3_Pointer & operator=(itkShapeOpeningLabelMapFilterLM3_Pointer const & r);
     itkShapeOpeningLabelMapFilterLM3_Pointer & operator=(itkShapeOpeningLabelMapFilterLM3 * r);
     itkShapeOpeningLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


