# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkESMDemonsRegistrationFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkESMDemonsRegistrationFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkESMDemonsRegistrationFunctionPython
            return _itkESMDemonsRegistrationFunctionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkESMDemonsRegistrationFunctionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkESMDemonsRegistrationFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkESMDemonsRegistrationFunctionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPDEDeformableRegistrationFunctionPython
import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkFiniteDifferenceFunctionPython
import itkInterpolateImageFunctionPython
import itkContinuousIndexPython
import itkImageFunctionPython
import itkFunctionBasePython
import itkArrayPython
def itkESMDemonsRegistrationFunctionID3ID3IVF33_New():
  return itkESMDemonsRegistrationFunctionID3ID3IVF33.New()

def itkESMDemonsRegistrationFunctionID2ID2IVF22_New():
  return itkESMDemonsRegistrationFunctionID2ID2IVF22.New()

def itkESMDemonsRegistrationFunctionIF3IF3IVF33_New():
  return itkESMDemonsRegistrationFunctionIF3IF3IVF33.New()

def itkESMDemonsRegistrationFunctionIF2IF2IVF22_New():
  return itkESMDemonsRegistrationFunctionIF2IF2IVF22.New()

def itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_New():
  return itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.New()

def itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_New():
  return itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.New()

def itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_New():
  return itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.New()

def itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_New():
  return itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.New()

def itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_New():
  return itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.New()

def itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_New():
  return itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.New()

class itkESMDemonsRegistrationFunctionID2ID2IVF22(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID2ID2IVF22):
    """Proxy of C++ itkESMDemonsRegistrationFunctionID2ID2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionID2D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionID2D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF2 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF2
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData) -> itkVectorF2
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionID2ID2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionID2ID2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionID2ID2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionID2ID2IVF22
        
        Create a new object of the class itkESMDemonsRegistrationFunctionID2ID2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionID2ID2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionID2ID2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionID2ID2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionID2ID2IVF22.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_ComputeUpdate,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetMetric,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetRMSChange,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_SetUseGradientType,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetUseGradientType,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_GetPointer,None,itkESMDemonsRegistrationFunctionID2ID2IVF22)
itkESMDemonsRegistrationFunctionID2ID2IVF22_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_swigregister
itkESMDemonsRegistrationFunctionID2ID2IVF22_swigregister(itkESMDemonsRegistrationFunctionID2ID2IVF22)

def itkESMDemonsRegistrationFunctionID2ID2IVF22___New_orig__():
  """itkESMDemonsRegistrationFunctionID2ID2IVF22___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22___New_orig__()

def itkESMDemonsRegistrationFunctionID2ID2IVF22_cast(*args):
  """itkESMDemonsRegistrationFunctionID2ID2IVF22_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionID2ID2IVF22"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID2ID2IVF22_cast(*args)

class itkESMDemonsRegistrationFunctionID3ID3IVF33(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionID3ID3IVF33):
    """Proxy of C++ itkESMDemonsRegistrationFunctionID3ID3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionID3D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionID3D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF3 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF3
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData) -> itkVectorF3
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionID3ID3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionID3ID3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionID3ID3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionID3ID3IVF33
        
        Create a new object of the class itkESMDemonsRegistrationFunctionID3ID3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionID3ID3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionID3ID3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionID3ID3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionID3ID3IVF33.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_ComputeUpdate,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetMetric,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetRMSChange,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_SetUseGradientType,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetUseGradientType,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_GetPointer,None,itkESMDemonsRegistrationFunctionID3ID3IVF33)
itkESMDemonsRegistrationFunctionID3ID3IVF33_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_swigregister
itkESMDemonsRegistrationFunctionID3ID3IVF33_swigregister(itkESMDemonsRegistrationFunctionID3ID3IVF33)

def itkESMDemonsRegistrationFunctionID3ID3IVF33___New_orig__():
  """itkESMDemonsRegistrationFunctionID3ID3IVF33___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33___New_orig__()

def itkESMDemonsRegistrationFunctionID3ID3IVF33_cast(*args):
  """itkESMDemonsRegistrationFunctionID3ID3IVF33_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionID3ID3IVF33"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionID3ID3IVF33_cast(*args)

class itkESMDemonsRegistrationFunctionIF2IF2IVF22(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF2IF2IVF22):
    """Proxy of C++ itkESMDemonsRegistrationFunctionIF2IF2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionIF2D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF2 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF2
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData) -> itkVectorF2
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionIF2IF2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIF2IF2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionIF2IF2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionIF2IF2IVF22
        
        Create a new object of the class itkESMDemonsRegistrationFunctionIF2IF2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionIF2IF2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionIF2IF2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionIF2IF2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionIF2IF2IVF22.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_ComputeUpdate,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetMetric,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetRMSChange,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_SetUseGradientType,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetUseGradientType,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_GetPointer,None,itkESMDemonsRegistrationFunctionIF2IF2IVF22)
itkESMDemonsRegistrationFunctionIF2IF2IVF22_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_swigregister
itkESMDemonsRegistrationFunctionIF2IF2IVF22_swigregister(itkESMDemonsRegistrationFunctionIF2IF2IVF22)

def itkESMDemonsRegistrationFunctionIF2IF2IVF22___New_orig__():
  """itkESMDemonsRegistrationFunctionIF2IF2IVF22___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22___New_orig__()

def itkESMDemonsRegistrationFunctionIF2IF2IVF22_cast(*args):
  """itkESMDemonsRegistrationFunctionIF2IF2IVF22_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIF2IF2IVF22"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF2IF2IVF22_cast(*args)

class itkESMDemonsRegistrationFunctionIF3IF3IVF33(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIF3IF3IVF33):
    """Proxy of C++ itkESMDemonsRegistrationFunctionIF3IF3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionIF3D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF3 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF3
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData) -> itkVectorF3
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionIF3IF3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIF3IF3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionIF3IF3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionIF3IF3IVF33
        
        Create a new object of the class itkESMDemonsRegistrationFunctionIF3IF3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionIF3IF3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionIF3IF3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionIF3IF3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionIF3IF3IVF33.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_ComputeUpdate,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetMetric,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetRMSChange,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_SetUseGradientType,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetUseGradientType,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_GetPointer,None,itkESMDemonsRegistrationFunctionIF3IF3IVF33)
itkESMDemonsRegistrationFunctionIF3IF3IVF33_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_swigregister
itkESMDemonsRegistrationFunctionIF3IF3IVF33_swigregister(itkESMDemonsRegistrationFunctionIF3IF3IVF33)

def itkESMDemonsRegistrationFunctionIF3IF3IVF33___New_orig__():
  """itkESMDemonsRegistrationFunctionIF3IF3IVF33___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33___New_orig__()

def itkESMDemonsRegistrationFunctionIF3IF3IVF33_cast(*args):
  """itkESMDemonsRegistrationFunctionIF3IF3IVF33_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIF3IF3IVF33"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIF3IF3IVF33_cast(*args)

class itkESMDemonsRegistrationFunctionIUC2IUC2IVF22(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC2IUC2IVF22):
    """Proxy of C++ itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionIUC2D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF2 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF2
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData) -> itkVectorF2
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionIUC2IUC2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUC2IUC2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionIUC2IUC2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionIUC2IUC2IVF22
        
        Create a new object of the class itkESMDemonsRegistrationFunctionIUC2IUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_ComputeUpdate,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetMetric,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetRMSChange,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_SetUseGradientType,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetUseGradientType,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_GetPointer,None,itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_swigregister
itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_swigregister(itkESMDemonsRegistrationFunctionIUC2IUC2IVF22)

def itkESMDemonsRegistrationFunctionIUC2IUC2IVF22___New_orig__():
  """itkESMDemonsRegistrationFunctionIUC2IUC2IVF22___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22___New_orig__()

def itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_cast(*args):
  """itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUC2IUC2IVF22"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC2IUC2IVF22_cast(*args)

class itkESMDemonsRegistrationFunctionIUC3IUC3IVF33(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUC3IUC3IVF33):
    """Proxy of C++ itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionIUC3D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF3 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF3
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData) -> itkVectorF3
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionIUC3IUC3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUC3IUC3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionIUC3IUC3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionIUC3IUC3IVF33
        
        Create a new object of the class itkESMDemonsRegistrationFunctionIUC3IUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_ComputeUpdate,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetMetric,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetRMSChange,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_SetUseGradientType,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetUseGradientType,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_GetPointer,None,itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_swigregister
itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_swigregister(itkESMDemonsRegistrationFunctionIUC3IUC3IVF33)

def itkESMDemonsRegistrationFunctionIUC3IUC3IVF33___New_orig__():
  """itkESMDemonsRegistrationFunctionIUC3IUC3IVF33___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33___New_orig__()

def itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_cast(*args):
  """itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUC3IUC3IVF33"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUC3IUC3IVF33_cast(*args)

class itkESMDemonsRegistrationFunctionIUL2IUL2IVF22(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUL2IUL2IVF22):
    """Proxy of C++ itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionIUL2D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionIUL2D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF2 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF2
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData) -> itkVectorF2
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionIUL2IUL2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUL2IUL2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionIUL2IUL2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionIUL2IUL2IVF22
        
        Create a new object of the class itkESMDemonsRegistrationFunctionIUL2IUL2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_ComputeUpdate,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetMetric,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetRMSChange,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_SetUseGradientType,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetUseGradientType,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_GetPointer,None,itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_swigregister
itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_swigregister(itkESMDemonsRegistrationFunctionIUL2IUL2IVF22)

def itkESMDemonsRegistrationFunctionIUL2IUL2IVF22___New_orig__():
  """itkESMDemonsRegistrationFunctionIUL2IUL2IVF22___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22___New_orig__()

def itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_cast(*args):
  """itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUL2IUL2IVF22"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL2IUL2IVF22_cast(*args)

class itkESMDemonsRegistrationFunctionIUL3IUL3IVF33(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUL3IUL3IVF33):
    """Proxy of C++ itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionIUL3D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionIUL3D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF3 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF3
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData) -> itkVectorF3
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionIUL3IUL3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUL3IUL3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionIUL3IUL3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionIUL3IUL3IVF33
        
        Create a new object of the class itkESMDemonsRegistrationFunctionIUL3IUL3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_ComputeUpdate,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetMetric,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetRMSChange,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_SetUseGradientType,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetUseGradientType,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_GetPointer,None,itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_swigregister
itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_swigregister(itkESMDemonsRegistrationFunctionIUL3IUL3IVF33)

def itkESMDemonsRegistrationFunctionIUL3IUL3IVF33___New_orig__():
  """itkESMDemonsRegistrationFunctionIUL3IUL3IVF33___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33___New_orig__()

def itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_cast(*args):
  """itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUL3IUL3IVF33"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUL3IUL3IVF33_cast(*args)

class itkESMDemonsRegistrationFunctionIUS2IUS2IVF22(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS2IUS2IVF22):
    """Proxy of C++ itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionIUS2D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF2 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF2
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,2u)>,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>)> neighborhood, 
            void globalData) -> itkVectorF2
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionIUS2IUS2IVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUS2IUS2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionIUS2IUS2IVF22"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionIUS2IUS2IVF22
        
        Create a new object of the class itkESMDemonsRegistrationFunctionIUS2IUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_ComputeUpdate,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetMetric,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetRMSChange,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_SetUseGradientType,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetUseGradientType,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_GetPointer,None,itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_swigregister
itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_swigregister(itkESMDemonsRegistrationFunctionIUS2IUS2IVF22)

def itkESMDemonsRegistrationFunctionIUS2IUS2IVF22___New_orig__():
  """itkESMDemonsRegistrationFunctionIUS2IUS2IVF22___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22___New_orig__()

def itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_cast(*args):
  """itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUS2IUS2IVF22"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS2IUS2IVF22_cast(*args)

class itkESMDemonsRegistrationFunctionIUS3IUS3IVF33(itkPDEDeformableRegistrationFunctionPython.itkPDEDeformableRegistrationFunctionIUS3IUS3IVF33):
    """Proxy of C++ itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_ImageDimension
    Symmetric = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Symmetric
    Fixed = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_Fixed
    WarpedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_WarpedMoving
    MappedMoving = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_MappedMoving
    def __New_orig__():
        """__New_orig__()"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetMovingImageInterpolator(self, *args):
        """SetMovingImageInterpolator(self, itkInterpolateImageFunctionIUS3D ptr)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_SetMovingImageInterpolator(self, *args)

    def GetMovingImageInterpolator(self):
        """GetMovingImageInterpolator(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetMovingImageInterpolator(self)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF3 offset = (itk::PDEDeformableRegistrationFunction< TFixedImage,TMovingImage,TDeformationField >::FloatOffsetType) (0.0)) -> itkVectorF3
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(itk::Vector<(float,3u)>,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>)> neighborhood, 
            void globalData) -> itkVectorF3
        """
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_ComputeUpdate(self, *args)

    def GetMetric(self):
        """GetMetric(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetMetric(self)

    def GetRMSChange(self):
        """GetRMSChange(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetRMSChange(self)

    def SetIntensityDifferenceThreshold(self, *args):
        """SetIntensityDifferenceThreshold(self, double arg0)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_SetIntensityDifferenceThreshold(self, *args)

    def GetIntensityDifferenceThreshold(self):
        """GetIntensityDifferenceThreshold(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetIntensityDifferenceThreshold(self)

    def SetMaximumUpdateStepLength(self, *args):
        """SetMaximumUpdateStepLength(self, double sm)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_SetMaximumUpdateStepLength(self, *args)

    def GetMaximumUpdateStepLength(self):
        """GetMaximumUpdateStepLength(self) -> double"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetMaximumUpdateStepLength(self)

    def SetUseGradientType(self, *args):
        """SetUseGradientType(self, GradientType gtype)"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_SetUseGradientType(self, *args)

    def GetUseGradientType(self):
        """GetUseGradientType(self) -> GradientType"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetUseGradientType(self)

    __swig_destroy__ = _itkESMDemonsRegistrationFunctionPython.delete_itkESMDemonsRegistrationFunctionIUS3IUS3IVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUS3IUS3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkESMDemonsRegistrationFunctionIUS3IUS3IVF33"""
        return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkESMDemonsRegistrationFunctionIUS3IUS3IVF33
        
        Create a new object of the class itkESMDemonsRegistrationFunctionIUS3IUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.SetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_SetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.GetMovingImageInterpolator = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetMovingImageInterpolator,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.ComputeUpdate = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_ComputeUpdate,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.GetMetric = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetMetric,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.GetRMSChange = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetRMSChange,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.SetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_SetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.GetIntensityDifferenceThreshold = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetIntensityDifferenceThreshold,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.SetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_SetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.GetMaximumUpdateStepLength = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetMaximumUpdateStepLength,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.SetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_SetUseGradientType,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.GetUseGradientType = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetUseGradientType,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33.GetPointer = new_instancemethod(_itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_GetPointer,None,itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_swigregister = _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_swigregister
itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_swigregister(itkESMDemonsRegistrationFunctionIUS3IUS3IVF33)

def itkESMDemonsRegistrationFunctionIUS3IUS3IVF33___New_orig__():
  """itkESMDemonsRegistrationFunctionIUS3IUS3IVF33___New_orig__()"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33___New_orig__()

def itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_cast(*args):
  """itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_cast(itkLightObject obj) -> itkESMDemonsRegistrationFunctionIUS3IUS3IVF33"""
  return _itkESMDemonsRegistrationFunctionPython.itkESMDemonsRegistrationFunctionIUS3IUS3IVF33_cast(*args)



