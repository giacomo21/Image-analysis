# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkScalarImageToHistogramGeneratorPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkScalarImageToHistogramGeneratorPython', [dirname(__file__)])
        except ImportError:
            import _itkScalarImageToHistogramGeneratorPython
            return _itkScalarImageToHistogramGeneratorPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkScalarImageToHistogramGeneratorPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkScalarImageToHistogramGeneratorPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkScalarImageToHistogramGeneratorPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkHistogramPython
import itkSamplePython
import itkArrayPython
def itkScalarImageToHistogramGeneratorID3_New():
  return itkScalarImageToHistogramGeneratorID3.New()

def itkScalarImageToHistogramGeneratorID2_New():
  return itkScalarImageToHistogramGeneratorID2.New()

def itkScalarImageToHistogramGeneratorIF3_New():
  return itkScalarImageToHistogramGeneratorIF3.New()

def itkScalarImageToHistogramGeneratorIF2_New():
  return itkScalarImageToHistogramGeneratorIF2.New()

def itkScalarImageToHistogramGeneratorIUS3_New():
  return itkScalarImageToHistogramGeneratorIUS3.New()

def itkScalarImageToHistogramGeneratorIUS2_New():
  return itkScalarImageToHistogramGeneratorIUS2.New()

def itkScalarImageToHistogramGeneratorIUL3_New():
  return itkScalarImageToHistogramGeneratorIUL3.New()

def itkScalarImageToHistogramGeneratorIUL2_New():
  return itkScalarImageToHistogramGeneratorIUL2.New()

def itkScalarImageToHistogramGeneratorIUC3_New():
  return itkScalarImageToHistogramGeneratorIUC3.New()

def itkScalarImageToHistogramGeneratorIUC2_New():
  return itkScalarImageToHistogramGeneratorIUC2.New()

class itkScalarImageToHistogramGeneratorID2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageD2 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorID2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorID2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorID2
        
        Create a new object of the class itkScalarImageToHistogramGeneratorID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorID2.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_Compute,None,itkScalarImageToHistogramGeneratorID2)
itkScalarImageToHistogramGeneratorID2.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetInput,None,itkScalarImageToHistogramGeneratorID2)
itkScalarImageToHistogramGeneratorID2.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_GetOutput,None,itkScalarImageToHistogramGeneratorID2)
itkScalarImageToHistogramGeneratorID2.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorID2)
itkScalarImageToHistogramGeneratorID2.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetMarginalScale,None,itkScalarImageToHistogramGeneratorID2)
itkScalarImageToHistogramGeneratorID2.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetHistogramMin,None,itkScalarImageToHistogramGeneratorID2)
itkScalarImageToHistogramGeneratorID2.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_SetHistogramMax,None,itkScalarImageToHistogramGeneratorID2)
itkScalarImageToHistogramGeneratorID2.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_GetPointer,None,itkScalarImageToHistogramGeneratorID2)
itkScalarImageToHistogramGeneratorID2_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_swigregister
itkScalarImageToHistogramGeneratorID2_swigregister(itkScalarImageToHistogramGeneratorID2)

def itkScalarImageToHistogramGeneratorID2___New_orig__():
  """itkScalarImageToHistogramGeneratorID2___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2___New_orig__()

def itkScalarImageToHistogramGeneratorID2_cast(*args):
  """itkScalarImageToHistogramGeneratorID2_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorID2"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID2_cast(*args)

class itkScalarImageToHistogramGeneratorID3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageD3 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorID3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorID3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorID3
        
        Create a new object of the class itkScalarImageToHistogramGeneratorID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorID3.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_Compute,None,itkScalarImageToHistogramGeneratorID3)
itkScalarImageToHistogramGeneratorID3.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetInput,None,itkScalarImageToHistogramGeneratorID3)
itkScalarImageToHistogramGeneratorID3.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_GetOutput,None,itkScalarImageToHistogramGeneratorID3)
itkScalarImageToHistogramGeneratorID3.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorID3)
itkScalarImageToHistogramGeneratorID3.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetMarginalScale,None,itkScalarImageToHistogramGeneratorID3)
itkScalarImageToHistogramGeneratorID3.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetHistogramMin,None,itkScalarImageToHistogramGeneratorID3)
itkScalarImageToHistogramGeneratorID3.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_SetHistogramMax,None,itkScalarImageToHistogramGeneratorID3)
itkScalarImageToHistogramGeneratorID3.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_GetPointer,None,itkScalarImageToHistogramGeneratorID3)
itkScalarImageToHistogramGeneratorID3_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_swigregister
itkScalarImageToHistogramGeneratorID3_swigregister(itkScalarImageToHistogramGeneratorID3)

def itkScalarImageToHistogramGeneratorID3___New_orig__():
  """itkScalarImageToHistogramGeneratorID3___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3___New_orig__()

def itkScalarImageToHistogramGeneratorID3_cast(*args):
  """itkScalarImageToHistogramGeneratorID3_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorID3"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorID3_cast(*args)

class itkScalarImageToHistogramGeneratorIF2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageF2 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIF2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorIF2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIF2
        
        Create a new object of the class itkScalarImageToHistogramGeneratorIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIF2.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_Compute,None,itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetInput,None,itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_GetOutput,None,itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetMarginalScale,None,itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMin,None,itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_SetHistogramMax,None,itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_GetPointer,None,itkScalarImageToHistogramGeneratorIF2)
itkScalarImageToHistogramGeneratorIF2_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_swigregister
itkScalarImageToHistogramGeneratorIF2_swigregister(itkScalarImageToHistogramGeneratorIF2)

def itkScalarImageToHistogramGeneratorIF2___New_orig__():
  """itkScalarImageToHistogramGeneratorIF2___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2___New_orig__()

def itkScalarImageToHistogramGeneratorIF2_cast(*args):
  """itkScalarImageToHistogramGeneratorIF2_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIF2"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF2_cast(*args)

class itkScalarImageToHistogramGeneratorIF3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageF3 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIF3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorIF3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIF3
        
        Create a new object of the class itkScalarImageToHistogramGeneratorIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIF3.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_Compute,None,itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetInput,None,itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_GetOutput,None,itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetMarginalScale,None,itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMin,None,itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_SetHistogramMax,None,itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_GetPointer,None,itkScalarImageToHistogramGeneratorIF3)
itkScalarImageToHistogramGeneratorIF3_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_swigregister
itkScalarImageToHistogramGeneratorIF3_swigregister(itkScalarImageToHistogramGeneratorIF3)

def itkScalarImageToHistogramGeneratorIF3___New_orig__():
  """itkScalarImageToHistogramGeneratorIF3___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3___New_orig__()

def itkScalarImageToHistogramGeneratorIF3_cast(*args):
  """itkScalarImageToHistogramGeneratorIF3_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIF3"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIF3_cast(*args)

class itkScalarImageToHistogramGeneratorIUC2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUC2 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUC2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorIUC2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUC2
        
        Create a new object of the class itkScalarImageToHistogramGeneratorIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUC2.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_Compute,None,itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetInput,None,itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_GetOutput,None,itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetMarginalScale,None,itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMin,None,itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_SetHistogramMax,None,itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_GetPointer,None,itkScalarImageToHistogramGeneratorIUC2)
itkScalarImageToHistogramGeneratorIUC2_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_swigregister
itkScalarImageToHistogramGeneratorIUC2_swigregister(itkScalarImageToHistogramGeneratorIUC2)

def itkScalarImageToHistogramGeneratorIUC2___New_orig__():
  """itkScalarImageToHistogramGeneratorIUC2___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2___New_orig__()

def itkScalarImageToHistogramGeneratorIUC2_cast(*args):
  """itkScalarImageToHistogramGeneratorIUC2_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUC2"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC2_cast(*args)

class itkScalarImageToHistogramGeneratorIUC3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUC3 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUC3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorIUC3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUC3
        
        Create a new object of the class itkScalarImageToHistogramGeneratorIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUC3.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_Compute,None,itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetInput,None,itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_GetOutput,None,itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetMarginalScale,None,itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMin,None,itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_SetHistogramMax,None,itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_GetPointer,None,itkScalarImageToHistogramGeneratorIUC3)
itkScalarImageToHistogramGeneratorIUC3_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_swigregister
itkScalarImageToHistogramGeneratorIUC3_swigregister(itkScalarImageToHistogramGeneratorIUC3)

def itkScalarImageToHistogramGeneratorIUC3___New_orig__():
  """itkScalarImageToHistogramGeneratorIUC3___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3___New_orig__()

def itkScalarImageToHistogramGeneratorIUC3_cast(*args):
  """itkScalarImageToHistogramGeneratorIUC3_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUC3"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUC3_cast(*args)

class itkScalarImageToHistogramGeneratorIUL2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUL2 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUL2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorIUL2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUL2
        
        Create a new object of the class itkScalarImageToHistogramGeneratorIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUL2.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_Compute,None,itkScalarImageToHistogramGeneratorIUL2)
itkScalarImageToHistogramGeneratorIUL2.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetInput,None,itkScalarImageToHistogramGeneratorIUL2)
itkScalarImageToHistogramGeneratorIUL2.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_GetOutput,None,itkScalarImageToHistogramGeneratorIUL2)
itkScalarImageToHistogramGeneratorIUL2.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorIUL2)
itkScalarImageToHistogramGeneratorIUL2.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetMarginalScale,None,itkScalarImageToHistogramGeneratorIUL2)
itkScalarImageToHistogramGeneratorIUL2.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetHistogramMin,None,itkScalarImageToHistogramGeneratorIUL2)
itkScalarImageToHistogramGeneratorIUL2.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_SetHistogramMax,None,itkScalarImageToHistogramGeneratorIUL2)
itkScalarImageToHistogramGeneratorIUL2.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_GetPointer,None,itkScalarImageToHistogramGeneratorIUL2)
itkScalarImageToHistogramGeneratorIUL2_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_swigregister
itkScalarImageToHistogramGeneratorIUL2_swigregister(itkScalarImageToHistogramGeneratorIUL2)

def itkScalarImageToHistogramGeneratorIUL2___New_orig__():
  """itkScalarImageToHistogramGeneratorIUL2___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2___New_orig__()

def itkScalarImageToHistogramGeneratorIUL2_cast(*args):
  """itkScalarImageToHistogramGeneratorIUL2_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUL2"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL2_cast(*args)

class itkScalarImageToHistogramGeneratorIUL3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUL3 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUL3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorIUL3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUL3
        
        Create a new object of the class itkScalarImageToHistogramGeneratorIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUL3.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_Compute,None,itkScalarImageToHistogramGeneratorIUL3)
itkScalarImageToHistogramGeneratorIUL3.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetInput,None,itkScalarImageToHistogramGeneratorIUL3)
itkScalarImageToHistogramGeneratorIUL3.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_GetOutput,None,itkScalarImageToHistogramGeneratorIUL3)
itkScalarImageToHistogramGeneratorIUL3.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorIUL3)
itkScalarImageToHistogramGeneratorIUL3.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetMarginalScale,None,itkScalarImageToHistogramGeneratorIUL3)
itkScalarImageToHistogramGeneratorIUL3.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetHistogramMin,None,itkScalarImageToHistogramGeneratorIUL3)
itkScalarImageToHistogramGeneratorIUL3.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_SetHistogramMax,None,itkScalarImageToHistogramGeneratorIUL3)
itkScalarImageToHistogramGeneratorIUL3.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_GetPointer,None,itkScalarImageToHistogramGeneratorIUL3)
itkScalarImageToHistogramGeneratorIUL3_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_swigregister
itkScalarImageToHistogramGeneratorIUL3_swigregister(itkScalarImageToHistogramGeneratorIUL3)

def itkScalarImageToHistogramGeneratorIUL3___New_orig__():
  """itkScalarImageToHistogramGeneratorIUL3___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3___New_orig__()

def itkScalarImageToHistogramGeneratorIUL3_cast(*args):
  """itkScalarImageToHistogramGeneratorIUL3_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUL3"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUL3_cast(*args)

class itkScalarImageToHistogramGeneratorIUS2(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUS2 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUS2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorIUS2"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUS2
        
        Create a new object of the class itkScalarImageToHistogramGeneratorIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUS2.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_Compute,None,itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetInput,None,itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_GetOutput,None,itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetMarginalScale,None,itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMin,None,itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_SetHistogramMax,None,itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_GetPointer,None,itkScalarImageToHistogramGeneratorIUS2)
itkScalarImageToHistogramGeneratorIUS2_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_swigregister
itkScalarImageToHistogramGeneratorIUS2_swigregister(itkScalarImageToHistogramGeneratorIUS2)

def itkScalarImageToHistogramGeneratorIUS2___New_orig__():
  """itkScalarImageToHistogramGeneratorIUS2___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2___New_orig__()

def itkScalarImageToHistogramGeneratorIUS2_cast(*args):
  """itkScalarImageToHistogramGeneratorIUS2_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUS2"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS2_cast(*args)

class itkScalarImageToHistogramGeneratorIUS3(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkScalarImageToHistogramGeneratorIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def Compute(self):
        """Compute(self)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_Compute(self)

    def SetInput(self, *args):
        """SetInput(self, itkImageUS3 arg0)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetInput(self, *args)

    def GetOutput(self):
        """GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_GetOutput(self)

    def SetNumberOfBins(self, *args):
        """SetNumberOfBins(self, unsigned int numberOfBins)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetNumberOfBins(self, *args)

    def SetMarginalScale(self, *args):
        """SetMarginalScale(self, double marginalScale)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetMarginalScale(self, *args)

    def SetHistogramMin(self, *args):
        """SetHistogramMin(self, double minimumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMin(self, *args)

    def SetHistogramMax(self, *args):
        """SetHistogramMax(self, double maximumValue)"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMax(self, *args)

    __swig_destroy__ = _itkScalarImageToHistogramGeneratorPython.delete_itkScalarImageToHistogramGeneratorIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUS3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarImageToHistogramGeneratorIUS3"""
        return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarImageToHistogramGeneratorIUS3
        
        Create a new object of the class itkScalarImageToHistogramGeneratorIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarImageToHistogramGeneratorIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarImageToHistogramGeneratorIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarImageToHistogramGeneratorIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarImageToHistogramGeneratorIUS3.Compute = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_Compute,None,itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetInput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetInput,None,itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.GetOutput = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_GetOutput,None,itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetNumberOfBins = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetNumberOfBins,None,itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetMarginalScale = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetMarginalScale,None,itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetHistogramMin = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMin,None,itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.SetHistogramMax = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_SetHistogramMax,None,itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3.GetPointer = new_instancemethod(_itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_GetPointer,None,itkScalarImageToHistogramGeneratorIUS3)
itkScalarImageToHistogramGeneratorIUS3_swigregister = _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_swigregister
itkScalarImageToHistogramGeneratorIUS3_swigregister(itkScalarImageToHistogramGeneratorIUS3)

def itkScalarImageToHistogramGeneratorIUS3___New_orig__():
  """itkScalarImageToHistogramGeneratorIUS3___New_orig__()"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3___New_orig__()

def itkScalarImageToHistogramGeneratorIUS3_cast(*args):
  """itkScalarImageToHistogramGeneratorIUS3_cast(itkLightObject obj) -> itkScalarImageToHistogramGeneratorIUS3"""
  return _itkScalarImageToHistogramGeneratorPython.itkScalarImageToHistogramGeneratorIUS3_cast(*args)



