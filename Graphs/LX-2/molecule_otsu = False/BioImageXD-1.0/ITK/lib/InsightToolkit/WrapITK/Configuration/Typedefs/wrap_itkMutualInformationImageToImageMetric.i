// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMutualInformationImageToImageMetricChicken
#endif
#ifdef SWIGCSHARP
%module itkMutualInformationImageToImageMetricCsharp
#endif
#ifdef SWIGGUILE
%module itkMutualInformationImageToImageMetricGuile
#endif
#ifdef SWIGJAVA
%module itkMutualInformationImageToImageMetricJava
#endif
#ifdef SWIGLUA
%module itkMutualInformationImageToImageMetricLua
#endif
#ifdef SWIGMODULA3
%module itkMutualInformationImageToImageMetricModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMutualInformationImageToImageMetricMzscheme
#endif
#ifdef SWIGOCAML
%module itkMutualInformationImageToImageMetricOcaml
#endif
#ifdef SWIGPERL
%module itkMutualInformationImageToImageMetricPerl
#endif
#ifdef SWIGPERL5
%module itkMutualInformationImageToImageMetricPerl5
#endif
#ifdef SWIGPHP
%module itkMutualInformationImageToImageMetricPhp
#endif
#ifdef SWIGPHP4
%module itkMutualInformationImageToImageMetricPhp4
#endif
#ifdef SWIGPHP5
%module itkMutualInformationImageToImageMetricPhp5
#endif
#ifdef SWIGPIKE
%module itkMutualInformationImageToImageMetricPike
#endif
#ifdef SWIGPYTHON
%module itkMutualInformationImageToImageMetricPython
#endif
#ifdef SWIGR
%module itkMutualInformationImageToImageMetricR
#endif
#ifdef SWIGRUBY
%module itkMutualInformationImageToImageMetricRuby
#endif
#ifdef SWIGSEXP
%module itkMutualInformationImageToImageMetricSexp
#endif
#ifdef SWIGTCL
%module itkMutualInformationImageToImageMetricTcl
#endif
#ifdef SWIGXML
%module itkMutualInformationImageToImageMetricXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "Transforms.includes"
#include "SpatialObject.includes"
#include "Resize.includes"
#include "Calculators.includes"
#include "Registration.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkPoint.i
%import wrap_itkArray.i
%import wrap_itkImageToImageMetric.i


%include itk.i
%include wrap_itkMutualInformationImageToImageMetric_ext.i


 class itkMutualInformationImageToImageMetricID2ID2 : public itkImageToImageMetricID2ID2 {
   public:
     enum  {  MovingImageDimension = 2 };
     static itkMutualInformationImageToImageMetricID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricID2ID2(itkMutualInformationImageToImageMetricID2ID2 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricID2ID2 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricID2ID2::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD2 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricID2ID2();
     ~itkMutualInformationImageToImageMetricID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricID2ID2_Pointer {
   public:
     itkMutualInformationImageToImageMetricID2ID2_Pointer();
     itkMutualInformationImageToImageMetricID2ID2_Pointer(itkMutualInformationImageToImageMetricID2ID2_Pointer const & p);
     itkMutualInformationImageToImageMetricID2ID2_Pointer(itkMutualInformationImageToImageMetricID2ID2 * p);
     ~itkMutualInformationImageToImageMetricID2ID2_Pointer();
     itkMutualInformationImageToImageMetricID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricID2ID2 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricID2ID2_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricID2ID2_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricID2ID2_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricID2ID2_Pointer const & r) const;
     itkMutualInformationImageToImageMetricID2ID2_Pointer & operator=(itkMutualInformationImageToImageMetricID2ID2_Pointer const & r);
     itkMutualInformationImageToImageMetricID2ID2_Pointer & operator=(itkMutualInformationImageToImageMetricID2ID2 * r);
     itkMutualInformationImageToImageMetricID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMutualInformationImageToImageMetricID3ID3 : public itkImageToImageMetricID3ID3 {
   public:
     enum  {  MovingImageDimension = 3 };
     static itkMutualInformationImageToImageMetricID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricID3ID3(itkMutualInformationImageToImageMetricID3ID3 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricID3ID3 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricID3ID3::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD3 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricID3ID3();
     ~itkMutualInformationImageToImageMetricID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricID3ID3_Pointer {
   public:
     itkMutualInformationImageToImageMetricID3ID3_Pointer();
     itkMutualInformationImageToImageMetricID3ID3_Pointer(itkMutualInformationImageToImageMetricID3ID3_Pointer const & p);
     itkMutualInformationImageToImageMetricID3ID3_Pointer(itkMutualInformationImageToImageMetricID3ID3 * p);
     ~itkMutualInformationImageToImageMetricID3ID3_Pointer();
     itkMutualInformationImageToImageMetricID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricID3ID3 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricID3ID3_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricID3ID3_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricID3ID3_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricID3ID3_Pointer const & r) const;
     itkMutualInformationImageToImageMetricID3ID3_Pointer & operator=(itkMutualInformationImageToImageMetricID3ID3_Pointer const & r);
     itkMutualInformationImageToImageMetricID3ID3_Pointer & operator=(itkMutualInformationImageToImageMetricID3ID3 * r);
     itkMutualInformationImageToImageMetricID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMutualInformationImageToImageMetricIF2IF2 : public itkImageToImageMetricIF2IF2 {
   public:
     enum  {  MovingImageDimension = 2 };
     static itkMutualInformationImageToImageMetricIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricIF2IF2(itkMutualInformationImageToImageMetricIF2IF2 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricIF2IF2 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricIF2IF2::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD2 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricIF2IF2();
     ~itkMutualInformationImageToImageMetricIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricIF2IF2_Pointer {
   public:
     itkMutualInformationImageToImageMetricIF2IF2_Pointer();
     itkMutualInformationImageToImageMetricIF2IF2_Pointer(itkMutualInformationImageToImageMetricIF2IF2_Pointer const & p);
     itkMutualInformationImageToImageMetricIF2IF2_Pointer(itkMutualInformationImageToImageMetricIF2IF2 * p);
     ~itkMutualInformationImageToImageMetricIF2IF2_Pointer();
     itkMutualInformationImageToImageMetricIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricIF2IF2 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricIF2IF2_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricIF2IF2_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricIF2IF2_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricIF2IF2_Pointer const & r) const;
     itkMutualInformationImageToImageMetricIF2IF2_Pointer & operator=(itkMutualInformationImageToImageMetricIF2IF2_Pointer const & r);
     itkMutualInformationImageToImageMetricIF2IF2_Pointer & operator=(itkMutualInformationImageToImageMetricIF2IF2 * r);
     itkMutualInformationImageToImageMetricIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMutualInformationImageToImageMetricIF3IF3 : public itkImageToImageMetricIF3IF3 {
   public:
     enum  {  MovingImageDimension = 3 };
     static itkMutualInformationImageToImageMetricIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricIF3IF3(itkMutualInformationImageToImageMetricIF3IF3 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricIF3IF3 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricIF3IF3::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD3 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricIF3IF3();
     ~itkMutualInformationImageToImageMetricIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricIF3IF3_Pointer {
   public:
     itkMutualInformationImageToImageMetricIF3IF3_Pointer();
     itkMutualInformationImageToImageMetricIF3IF3_Pointer(itkMutualInformationImageToImageMetricIF3IF3_Pointer const & p);
     itkMutualInformationImageToImageMetricIF3IF3_Pointer(itkMutualInformationImageToImageMetricIF3IF3 * p);
     ~itkMutualInformationImageToImageMetricIF3IF3_Pointer();
     itkMutualInformationImageToImageMetricIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricIF3IF3 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricIF3IF3_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricIF3IF3_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricIF3IF3_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricIF3IF3_Pointer const & r) const;
     itkMutualInformationImageToImageMetricIF3IF3_Pointer & operator=(itkMutualInformationImageToImageMetricIF3IF3_Pointer const & r);
     itkMutualInformationImageToImageMetricIF3IF3_Pointer & operator=(itkMutualInformationImageToImageMetricIF3IF3 * r);
     itkMutualInformationImageToImageMetricIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMutualInformationImageToImageMetricIUC2IUC2 : public itkImageToImageMetricIUC2IUC2 {
   public:
     enum  {  MovingImageDimension = 2 };
     static itkMutualInformationImageToImageMetricIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricIUC2IUC2(itkMutualInformationImageToImageMetricIUC2IUC2 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricIUC2IUC2 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricIUC2IUC2::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD2 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricIUC2IUC2();
     ~itkMutualInformationImageToImageMetricIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricIUC2IUC2_Pointer {
   public:
     itkMutualInformationImageToImageMetricIUC2IUC2_Pointer();
     itkMutualInformationImageToImageMetricIUC2IUC2_Pointer(itkMutualInformationImageToImageMetricIUC2IUC2_Pointer const & p);
     itkMutualInformationImageToImageMetricIUC2IUC2_Pointer(itkMutualInformationImageToImageMetricIUC2IUC2 * p);
     ~itkMutualInformationImageToImageMetricIUC2IUC2_Pointer();
     itkMutualInformationImageToImageMetricIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricIUC2IUC2 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricIUC2IUC2_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricIUC2IUC2_Pointer const & r) const;
     itkMutualInformationImageToImageMetricIUC2IUC2_Pointer & operator=(itkMutualInformationImageToImageMetricIUC2IUC2_Pointer const & r);
     itkMutualInformationImageToImageMetricIUC2IUC2_Pointer & operator=(itkMutualInformationImageToImageMetricIUC2IUC2 * r);
     itkMutualInformationImageToImageMetricIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMutualInformationImageToImageMetricIUC3IUC3 : public itkImageToImageMetricIUC3IUC3 {
   public:
     enum  {  MovingImageDimension = 3 };
     static itkMutualInformationImageToImageMetricIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricIUC3IUC3(itkMutualInformationImageToImageMetricIUC3IUC3 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricIUC3IUC3 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricIUC3IUC3::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD3 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricIUC3IUC3();
     ~itkMutualInformationImageToImageMetricIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricIUC3IUC3_Pointer {
   public:
     itkMutualInformationImageToImageMetricIUC3IUC3_Pointer();
     itkMutualInformationImageToImageMetricIUC3IUC3_Pointer(itkMutualInformationImageToImageMetricIUC3IUC3_Pointer const & p);
     itkMutualInformationImageToImageMetricIUC3IUC3_Pointer(itkMutualInformationImageToImageMetricIUC3IUC3 * p);
     ~itkMutualInformationImageToImageMetricIUC3IUC3_Pointer();
     itkMutualInformationImageToImageMetricIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricIUC3IUC3 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricIUC3IUC3_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricIUC3IUC3_Pointer const & r) const;
     itkMutualInformationImageToImageMetricIUC3IUC3_Pointer & operator=(itkMutualInformationImageToImageMetricIUC3IUC3_Pointer const & r);
     itkMutualInformationImageToImageMetricIUC3IUC3_Pointer & operator=(itkMutualInformationImageToImageMetricIUC3IUC3 * r);
     itkMutualInformationImageToImageMetricIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMutualInformationImageToImageMetricIUL2IUL2 : public itkImageToImageMetricIUL2IUL2 {
   public:
     enum  {  MovingImageDimension = 2 };
     static itkMutualInformationImageToImageMetricIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricIUL2IUL2(itkMutualInformationImageToImageMetricIUL2IUL2 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricIUL2IUL2 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricIUL2IUL2::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD2 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricIUL2IUL2();
     ~itkMutualInformationImageToImageMetricIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricIUL2IUL2_Pointer {
   public:
     itkMutualInformationImageToImageMetricIUL2IUL2_Pointer();
     itkMutualInformationImageToImageMetricIUL2IUL2_Pointer(itkMutualInformationImageToImageMetricIUL2IUL2_Pointer const & p);
     itkMutualInformationImageToImageMetricIUL2IUL2_Pointer(itkMutualInformationImageToImageMetricIUL2IUL2 * p);
     ~itkMutualInformationImageToImageMetricIUL2IUL2_Pointer();
     itkMutualInformationImageToImageMetricIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricIUL2IUL2 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricIUL2IUL2_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricIUL2IUL2_Pointer const & r) const;
     itkMutualInformationImageToImageMetricIUL2IUL2_Pointer & operator=(itkMutualInformationImageToImageMetricIUL2IUL2_Pointer const & r);
     itkMutualInformationImageToImageMetricIUL2IUL2_Pointer & operator=(itkMutualInformationImageToImageMetricIUL2IUL2 * r);
     itkMutualInformationImageToImageMetricIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMutualInformationImageToImageMetricIUL3IUL3 : public itkImageToImageMetricIUL3IUL3 {
   public:
     enum  {  MovingImageDimension = 3 };
     static itkMutualInformationImageToImageMetricIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricIUL3IUL3(itkMutualInformationImageToImageMetricIUL3IUL3 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricIUL3IUL3 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricIUL3IUL3::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD3 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricIUL3IUL3();
     ~itkMutualInformationImageToImageMetricIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricIUL3IUL3_Pointer {
   public:
     itkMutualInformationImageToImageMetricIUL3IUL3_Pointer();
     itkMutualInformationImageToImageMetricIUL3IUL3_Pointer(itkMutualInformationImageToImageMetricIUL3IUL3_Pointer const & p);
     itkMutualInformationImageToImageMetricIUL3IUL3_Pointer(itkMutualInformationImageToImageMetricIUL3IUL3 * p);
     ~itkMutualInformationImageToImageMetricIUL3IUL3_Pointer();
     itkMutualInformationImageToImageMetricIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricIUL3IUL3 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricIUL3IUL3_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricIUL3IUL3_Pointer const & r) const;
     itkMutualInformationImageToImageMetricIUL3IUL3_Pointer & operator=(itkMutualInformationImageToImageMetricIUL3IUL3_Pointer const & r);
     itkMutualInformationImageToImageMetricIUL3IUL3_Pointer & operator=(itkMutualInformationImageToImageMetricIUL3IUL3 * r);
     itkMutualInformationImageToImageMetricIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMutualInformationImageToImageMetricIUS2IUS2 : public itkImageToImageMetricIUS2IUS2 {
   public:
     enum  {  MovingImageDimension = 2 };
     static itkMutualInformationImageToImageMetricIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricIUS2IUS2(itkMutualInformationImageToImageMetricIUS2IUS2 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricIUS2IUS2 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricIUS2IUS2::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD2 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricIUS2IUS2();
     ~itkMutualInformationImageToImageMetricIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricIUS2IUS2_Pointer {
   public:
     itkMutualInformationImageToImageMetricIUS2IUS2_Pointer();
     itkMutualInformationImageToImageMetricIUS2IUS2_Pointer(itkMutualInformationImageToImageMetricIUS2IUS2_Pointer const & p);
     itkMutualInformationImageToImageMetricIUS2IUS2_Pointer(itkMutualInformationImageToImageMetricIUS2IUS2 * p);
     ~itkMutualInformationImageToImageMetricIUS2IUS2_Pointer();
     itkMutualInformationImageToImageMetricIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricIUS2IUS2 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricIUS2IUS2_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricIUS2IUS2_Pointer const & r) const;
     itkMutualInformationImageToImageMetricIUS2IUS2_Pointer & operator=(itkMutualInformationImageToImageMetricIUS2IUS2_Pointer const & r);
     itkMutualInformationImageToImageMetricIUS2IUS2_Pointer & operator=(itkMutualInformationImageToImageMetricIUS2IUS2 * r);
     itkMutualInformationImageToImageMetricIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMutualInformationImageToImageMetricIUS3IUS3 : public itkImageToImageMetricIUS3IUS3 {
   public:
     enum  {  MovingImageDimension = 3 };
     static itkMutualInformationImageToImageMetricIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void GetDerivative(itkArrayD const & parameters, itkArrayD & Derivative) const;
     virtual double GetValue(itkArrayD const & parameters) const;
     virtual void GetValueAndDerivative(itkArrayD const & parameters, double & Value, itkArrayD & Derivative) const;
     void SetNumberOfSpatialSamples(unsigned int num);
     virtual unsigned int const & GetNumberOfSpatialSamples() const;
     virtual void SetMovingImageStandardDeviation(double _arg);
     virtual double const & GetMovingImageStandardDeviation() const;
     virtual void SetFixedImageStandardDeviation(double _arg);
     virtual double GetFixedImageStandardDeviation() const;
     virtual void SetKernelFunction(itk::KernelFunction * _arg);
     virtual itk::KernelFunction * GetKernelFunction();
     void ReinitializeSeed();
     void ReinitializeSeed(int arg0);
   private:
     itkMutualInformationImageToImageMetricIUS3IUS3(itkMutualInformationImageToImageMetricIUS3IUS3 const & arg0);
     void operator=(itkMutualInformationImageToImageMetricIUS3IUS3 const & arg0);
     virtual void SampleFixedImageDomain(std::vector< itkMutualInformationImageToImageMetricIUS3IUS3::SpatialSample > & samples) const;
     void CalculateDerivatives(itkPointD3 const & arg0, itkArrayD & arg1) const;
   protected:
     itkMutualInformationImageToImageMetricIUS3IUS3();
     ~itkMutualInformationImageToImageMetricIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkMutualInformationImageToImageMetricIUS3IUS3_Pointer {
   public:
     itkMutualInformationImageToImageMetricIUS3IUS3_Pointer();
     itkMutualInformationImageToImageMetricIUS3IUS3_Pointer(itkMutualInformationImageToImageMetricIUS3IUS3_Pointer const & p);
     itkMutualInformationImageToImageMetricIUS3IUS3_Pointer(itkMutualInformationImageToImageMetricIUS3IUS3 * p);
     ~itkMutualInformationImageToImageMetricIUS3IUS3_Pointer();
     itkMutualInformationImageToImageMetricIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMutualInformationImageToImageMetricIUS3IUS3 * GetPointer() const;
     bool operator<(itkMutualInformationImageToImageMetricIUS3IUS3_Pointer const & r) const;
     bool operator>(itkMutualInformationImageToImageMetricIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkMutualInformationImageToImageMetricIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkMutualInformationImageToImageMetricIUS3IUS3_Pointer const & r) const;
     itkMutualInformationImageToImageMetricIUS3IUS3_Pointer & operator=(itkMutualInformationImageToImageMetricIUS3IUS3_Pointer const & r);
     itkMutualInformationImageToImageMetricIUS3IUS3_Pointer & operator=(itkMutualInformationImageToImageMetricIUS3IUS3 * r);
     itkMutualInformationImageToImageMetricIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


