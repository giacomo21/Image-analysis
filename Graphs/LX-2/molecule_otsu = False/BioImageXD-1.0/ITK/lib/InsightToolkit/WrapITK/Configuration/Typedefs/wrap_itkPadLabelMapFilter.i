// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkPadLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkPadLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkPadLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkPadLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkPadLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkPadLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkPadLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkPadLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkPadLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkPadLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkPadLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkPadLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkPadLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkPadLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkPadLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkPadLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkPadLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkPadLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkPadLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkPadLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_itkSize.i
%import wrap_itkChangeRegionLabelMapFilter.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkPadLabelMapFilter_ext.i


 class itkPadLabelMapFilterLM2 : public itkChangeRegionLabelMapFilterLM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkPadLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetUpperBoundaryPadSize(itkSize2 const _arg);
     virtual itkSize2 GetUpperBoundaryPadSize();
     virtual void SetLowerBoundaryPadSize(itkSize2 const _arg);
     virtual itkSize2 GetLowerBoundaryPadSize();
     void SetPadSize(itkSize2 const & size);
   private:
     itkPadLabelMapFilterLM2(itkPadLabelMapFilterLM2 const & arg0);
     void operator=(itkPadLabelMapFilterLM2 const & arg0);
   protected:
     itkPadLabelMapFilterLM2();
     ~itkPadLabelMapFilterLM2();
     virtual void GenerateOutputInformation();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkPadLabelMapFilterLM2_Pointer {
   public:
     itkPadLabelMapFilterLM2_Pointer();
     itkPadLabelMapFilterLM2_Pointer(itkPadLabelMapFilterLM2_Pointer const & p);
     itkPadLabelMapFilterLM2_Pointer(itkPadLabelMapFilterLM2 * p);
     ~itkPadLabelMapFilterLM2_Pointer();
     itkPadLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPadLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkPadLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkPadLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkPadLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkPadLabelMapFilterLM2_Pointer const & r) const;
     itkPadLabelMapFilterLM2_Pointer & operator=(itkPadLabelMapFilterLM2_Pointer const & r);
     itkPadLabelMapFilterLM2_Pointer & operator=(itkPadLabelMapFilterLM2 * r);
     itkPadLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkPadLabelMapFilterLM3 : public itkChangeRegionLabelMapFilterLM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkPadLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetUpperBoundaryPadSize(itkSize3 const _arg);
     virtual itkSize3 GetUpperBoundaryPadSize();
     virtual void SetLowerBoundaryPadSize(itkSize3 const _arg);
     virtual itkSize3 GetLowerBoundaryPadSize();
     void SetPadSize(itkSize3 const & size);
   private:
     itkPadLabelMapFilterLM3(itkPadLabelMapFilterLM3 const & arg0);
     void operator=(itkPadLabelMapFilterLM3 const & arg0);
   protected:
     itkPadLabelMapFilterLM3();
     ~itkPadLabelMapFilterLM3();
     virtual void GenerateOutputInformation();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkPadLabelMapFilterLM3_Pointer {
   public:
     itkPadLabelMapFilterLM3_Pointer();
     itkPadLabelMapFilterLM3_Pointer(itkPadLabelMapFilterLM3_Pointer const & p);
     itkPadLabelMapFilterLM3_Pointer(itkPadLabelMapFilterLM3 * p);
     ~itkPadLabelMapFilterLM3_Pointer();
     itkPadLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkPadLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkPadLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkPadLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkPadLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkPadLabelMapFilterLM3_Pointer const & r) const;
     itkPadLabelMapFilterLM3_Pointer & operator=(itkPadLabelMapFilterLM3_Pointer const & r);
     itkPadLabelMapFilterLM3_Pointer & operator=(itkPadLabelMapFilterLM3 * r);
     itkPadLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


