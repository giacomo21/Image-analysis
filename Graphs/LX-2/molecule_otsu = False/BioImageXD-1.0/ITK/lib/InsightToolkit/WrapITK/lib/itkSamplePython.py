# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkSamplePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSamplePython', [dirname(__file__)])
        except ImportError:
            import _itkSamplePython
            return _itkSamplePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSamplePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSamplePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSamplePython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkFixedArrayPython
import itkVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkArrayPython
def itkSampleAD_New():
  return itkSampleAD.New()

def itkSampleAF_New():
  return itkSampleAF.New()

def itkSampleVF3_New():
  return itkSampleVF3.New()

def itkSampleVF2_New():
  return itkSampleVF2.New()

def itkSampleFASC3_New():
  return itkSampleFASC3.New()

def itkSampleFASS3_New():
  return itkSampleFASS3.New()

def itkSampleFASL3_New():
  return itkSampleFASL3.New()

def itkSampleFAUC3_New():
  return itkSampleFAUC3.New()

def itkSampleFAUS3_New():
  return itkSampleFAUS3.New()

def itkSampleFAUL3_New():
  return itkSampleFAUL3.New()

def itkSampleFAF3_New():
  return itkSampleFAF3.New()

def itkSampleFAD3_New():
  return itkSampleFAD3.New()

def itkSampleFASC2_New():
  return itkSampleFASC2.New()

def itkSampleFASS2_New():
  return itkSampleFASS2.New()

def itkSampleFASL2_New():
  return itkSampleFASL2.New()

def itkSampleFAUC2_New():
  return itkSampleFAUC2.New()

def itkSampleFAUS2_New():
  return itkSampleFAUS2.New()

def itkSampleFAUL2_New():
  return itkSampleFAUL2.New()

def itkSampleFAF2_New():
  return itkSampleFAF2.New()

def itkSampleFAD2_New():
  return itkSampleFAD2.New()

def itkSampleFASC1_New():
  return itkSampleFASC1.New()

def itkSampleFASS1_New():
  return itkSampleFASS1.New()

def itkSampleFASL1_New():
  return itkSampleFASL1.New()

def itkSampleFAUC1_New():
  return itkSampleFAUC1.New()

def itkSampleFAUS1_New():
  return itkSampleFAUS1.New()

def itkSampleFAUL1_New():
  return itkSampleFAUL1.New()

def itkSampleFAF1_New():
  return itkSampleFAF1.New()

def itkSampleFAD1_New():
  return itkSampleFAD1.New()

class itkSampleAD(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleAD class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleAD_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkArrayD"""
        return _itkSamplePython.itkSampleAD_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleAD_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleAD_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleAD_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleAD_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleAD
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleAD"""
        return _itkSamplePython.itkSampleAD_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleAD"""
        return _itkSamplePython.itkSampleAD_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleAD
        
        Create a new object of the class itkSampleAD and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleAD.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleAD.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleAD.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleAD.Size = new_instancemethod(_itkSamplePython.itkSampleAD_Size,None,itkSampleAD)
itkSampleAD.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleAD_GetMeasurementVector,None,itkSampleAD)
itkSampleAD.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleAD_GetFrequency,None,itkSampleAD)
itkSampleAD.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleAD_GetTotalFrequency,None,itkSampleAD)
itkSampleAD.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleAD_SetMeasurementVectorSize,None,itkSampleAD)
itkSampleAD.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleAD_GetMeasurementVectorSize,None,itkSampleAD)
itkSampleAD.GetPointer = new_instancemethod(_itkSamplePython.itkSampleAD_GetPointer,None,itkSampleAD)
itkSampleAD_swigregister = _itkSamplePython.itkSampleAD_swigregister
itkSampleAD_swigregister(itkSampleAD)

def itkSampleAD_cast(*args):
  """itkSampleAD_cast(itkLightObject obj) -> itkSampleAD"""
  return _itkSamplePython.itkSampleAD_cast(*args)

class itkSampleAF(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleAF class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleAF_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkArrayF"""
        return _itkSamplePython.itkSampleAF_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleAF_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleAF_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleAF_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleAF_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleAF
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleAF"""
        return _itkSamplePython.itkSampleAF_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleAF"""
        return _itkSamplePython.itkSampleAF_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleAF
        
        Create a new object of the class itkSampleAF and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleAF.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleAF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleAF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleAF.Size = new_instancemethod(_itkSamplePython.itkSampleAF_Size,None,itkSampleAF)
itkSampleAF.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleAF_GetMeasurementVector,None,itkSampleAF)
itkSampleAF.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleAF_GetFrequency,None,itkSampleAF)
itkSampleAF.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleAF_GetTotalFrequency,None,itkSampleAF)
itkSampleAF.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleAF_SetMeasurementVectorSize,None,itkSampleAF)
itkSampleAF.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleAF_GetMeasurementVectorSize,None,itkSampleAF)
itkSampleAF.GetPointer = new_instancemethod(_itkSamplePython.itkSampleAF_GetPointer,None,itkSampleAF)
itkSampleAF_swigregister = _itkSamplePython.itkSampleAF_swigregister
itkSampleAF_swigregister(itkSampleAF)

def itkSampleAF_cast(*args):
  """itkSampleAF_cast(itkLightObject obj) -> itkSampleAF"""
  return _itkSamplePython.itkSampleAF_cast(*args)

class itkSampleFAD1(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAD1 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAD1_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayD1"""
        return _itkSamplePython.itkSampleFAD1_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAD1_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAD1_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAD1_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAD1
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAD1"""
        return _itkSamplePython.itkSampleFAD1_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAD1"""
        return _itkSamplePython.itkSampleFAD1_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAD1
        
        Create a new object of the class itkSampleFAD1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAD1.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAD1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAD1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAD1.Size = new_instancemethod(_itkSamplePython.itkSampleFAD1_Size,None,itkSampleFAD1)
itkSampleFAD1.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAD1_GetMeasurementVector,None,itkSampleFAD1)
itkSampleFAD1.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAD1_GetFrequency,None,itkSampleFAD1)
itkSampleFAD1.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAD1_GetTotalFrequency,None,itkSampleFAD1)
itkSampleFAD1.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAD1_SetMeasurementVectorSize,None,itkSampleFAD1)
itkSampleFAD1.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAD1_GetMeasurementVectorSize,None,itkSampleFAD1)
itkSampleFAD1.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAD1_GetPointer,None,itkSampleFAD1)
itkSampleFAD1_swigregister = _itkSamplePython.itkSampleFAD1_swigregister
itkSampleFAD1_swigregister(itkSampleFAD1)

def itkSampleFAD1_cast(*args):
  """itkSampleFAD1_cast(itkLightObject obj) -> itkSampleFAD1"""
  return _itkSamplePython.itkSampleFAD1_cast(*args)

class itkSampleFAD2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAD2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAD2_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayD2"""
        return _itkSamplePython.itkSampleFAD2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAD2_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAD2_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAD2_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAD2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAD2"""
        return _itkSamplePython.itkSampleFAD2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAD2"""
        return _itkSamplePython.itkSampleFAD2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAD2
        
        Create a new object of the class itkSampleFAD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAD2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAD2.Size = new_instancemethod(_itkSamplePython.itkSampleFAD2_Size,None,itkSampleFAD2)
itkSampleFAD2.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAD2_GetMeasurementVector,None,itkSampleFAD2)
itkSampleFAD2.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAD2_GetFrequency,None,itkSampleFAD2)
itkSampleFAD2.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAD2_GetTotalFrequency,None,itkSampleFAD2)
itkSampleFAD2.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAD2_SetMeasurementVectorSize,None,itkSampleFAD2)
itkSampleFAD2.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAD2_GetMeasurementVectorSize,None,itkSampleFAD2)
itkSampleFAD2.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAD2_GetPointer,None,itkSampleFAD2)
itkSampleFAD2_swigregister = _itkSamplePython.itkSampleFAD2_swigregister
itkSampleFAD2_swigregister(itkSampleFAD2)

def itkSampleFAD2_cast(*args):
  """itkSampleFAD2_cast(itkLightObject obj) -> itkSampleFAD2"""
  return _itkSamplePython.itkSampleFAD2_cast(*args)

class itkSampleFAD3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAD3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAD3_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayD3"""
        return _itkSamplePython.itkSampleFAD3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAD3_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAD3_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAD3_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAD3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAD3"""
        return _itkSamplePython.itkSampleFAD3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAD3"""
        return _itkSamplePython.itkSampleFAD3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAD3
        
        Create a new object of the class itkSampleFAD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAD3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAD3.Size = new_instancemethod(_itkSamplePython.itkSampleFAD3_Size,None,itkSampleFAD3)
itkSampleFAD3.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAD3_GetMeasurementVector,None,itkSampleFAD3)
itkSampleFAD3.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAD3_GetFrequency,None,itkSampleFAD3)
itkSampleFAD3.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAD3_GetTotalFrequency,None,itkSampleFAD3)
itkSampleFAD3.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAD3_SetMeasurementVectorSize,None,itkSampleFAD3)
itkSampleFAD3.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAD3_GetMeasurementVectorSize,None,itkSampleFAD3)
itkSampleFAD3.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAD3_GetPointer,None,itkSampleFAD3)
itkSampleFAD3_swigregister = _itkSamplePython.itkSampleFAD3_swigregister
itkSampleFAD3_swigregister(itkSampleFAD3)

def itkSampleFAD3_cast(*args):
  """itkSampleFAD3_cast(itkLightObject obj) -> itkSampleFAD3"""
  return _itkSamplePython.itkSampleFAD3_cast(*args)

class itkSampleFAF1(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAF1 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAF1_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayF1"""
        return _itkSamplePython.itkSampleFAF1_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAF1_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAF1_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAF1_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAF1
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAF1"""
        return _itkSamplePython.itkSampleFAF1_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAF1"""
        return _itkSamplePython.itkSampleFAF1_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAF1
        
        Create a new object of the class itkSampleFAF1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAF1.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAF1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAF1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAF1.Size = new_instancemethod(_itkSamplePython.itkSampleFAF1_Size,None,itkSampleFAF1)
itkSampleFAF1.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAF1_GetMeasurementVector,None,itkSampleFAF1)
itkSampleFAF1.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAF1_GetFrequency,None,itkSampleFAF1)
itkSampleFAF1.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAF1_GetTotalFrequency,None,itkSampleFAF1)
itkSampleFAF1.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAF1_SetMeasurementVectorSize,None,itkSampleFAF1)
itkSampleFAF1.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAF1_GetMeasurementVectorSize,None,itkSampleFAF1)
itkSampleFAF1.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAF1_GetPointer,None,itkSampleFAF1)
itkSampleFAF1_swigregister = _itkSamplePython.itkSampleFAF1_swigregister
itkSampleFAF1_swigregister(itkSampleFAF1)

def itkSampleFAF1_cast(*args):
  """itkSampleFAF1_cast(itkLightObject obj) -> itkSampleFAF1"""
  return _itkSamplePython.itkSampleFAF1_cast(*args)

class itkSampleFAF2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAF2_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayF2"""
        return _itkSamplePython.itkSampleFAF2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAF2_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAF2_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAF2_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAF2"""
        return _itkSamplePython.itkSampleFAF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAF2"""
        return _itkSamplePython.itkSampleFAF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAF2
        
        Create a new object of the class itkSampleFAF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAF2.Size = new_instancemethod(_itkSamplePython.itkSampleFAF2_Size,None,itkSampleFAF2)
itkSampleFAF2.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAF2_GetMeasurementVector,None,itkSampleFAF2)
itkSampleFAF2.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAF2_GetFrequency,None,itkSampleFAF2)
itkSampleFAF2.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAF2_GetTotalFrequency,None,itkSampleFAF2)
itkSampleFAF2.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAF2_SetMeasurementVectorSize,None,itkSampleFAF2)
itkSampleFAF2.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAF2_GetMeasurementVectorSize,None,itkSampleFAF2)
itkSampleFAF2.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAF2_GetPointer,None,itkSampleFAF2)
itkSampleFAF2_swigregister = _itkSamplePython.itkSampleFAF2_swigregister
itkSampleFAF2_swigregister(itkSampleFAF2)

def itkSampleFAF2_cast(*args):
  """itkSampleFAF2_cast(itkLightObject obj) -> itkSampleFAF2"""
  return _itkSamplePython.itkSampleFAF2_cast(*args)

class itkSampleFAF3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAF3_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayF3"""
        return _itkSamplePython.itkSampleFAF3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAF3_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAF3_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAF3_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAF3"""
        return _itkSamplePython.itkSampleFAF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAF3"""
        return _itkSamplePython.itkSampleFAF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAF3
        
        Create a new object of the class itkSampleFAF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAF3.Size = new_instancemethod(_itkSamplePython.itkSampleFAF3_Size,None,itkSampleFAF3)
itkSampleFAF3.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAF3_GetMeasurementVector,None,itkSampleFAF3)
itkSampleFAF3.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAF3_GetFrequency,None,itkSampleFAF3)
itkSampleFAF3.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAF3_GetTotalFrequency,None,itkSampleFAF3)
itkSampleFAF3.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAF3_SetMeasurementVectorSize,None,itkSampleFAF3)
itkSampleFAF3.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAF3_GetMeasurementVectorSize,None,itkSampleFAF3)
itkSampleFAF3.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAF3_GetPointer,None,itkSampleFAF3)
itkSampleFAF3_swigregister = _itkSamplePython.itkSampleFAF3_swigregister
itkSampleFAF3_swigregister(itkSampleFAF3)

def itkSampleFAF3_cast(*args):
  """itkSampleFAF3_cast(itkLightObject obj) -> itkSampleFAF3"""
  return _itkSamplePython.itkSampleFAF3_cast(*args)

class itkSampleFASC1(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFASC1 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFASC1_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArraySC1"""
        return _itkSamplePython.itkSampleFASC1_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFASC1_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFASC1_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASC1_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASC1
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFASC1"""
        return _itkSamplePython.itkSampleFASC1_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFASC1"""
        return _itkSamplePython.itkSampleFASC1_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFASC1
        
        Create a new object of the class itkSampleFASC1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFASC1.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFASC1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFASC1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFASC1.Size = new_instancemethod(_itkSamplePython.itkSampleFASC1_Size,None,itkSampleFASC1)
itkSampleFASC1.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFASC1_GetMeasurementVector,None,itkSampleFASC1)
itkSampleFASC1.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFASC1_GetFrequency,None,itkSampleFASC1)
itkSampleFASC1.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFASC1_GetTotalFrequency,None,itkSampleFASC1)
itkSampleFASC1.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASC1_SetMeasurementVectorSize,None,itkSampleFASC1)
itkSampleFASC1.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASC1_GetMeasurementVectorSize,None,itkSampleFASC1)
itkSampleFASC1.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFASC1_GetPointer,None,itkSampleFASC1)
itkSampleFASC1_swigregister = _itkSamplePython.itkSampleFASC1_swigregister
itkSampleFASC1_swigregister(itkSampleFASC1)

def itkSampleFASC1_cast(*args):
  """itkSampleFASC1_cast(itkLightObject obj) -> itkSampleFASC1"""
  return _itkSamplePython.itkSampleFASC1_cast(*args)

class itkSampleFASC2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFASC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFASC2_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArraySC2"""
        return _itkSamplePython.itkSampleFASC2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFASC2_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFASC2_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASC2_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFASC2"""
        return _itkSamplePython.itkSampleFASC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFASC2"""
        return _itkSamplePython.itkSampleFASC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFASC2
        
        Create a new object of the class itkSampleFASC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFASC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFASC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFASC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFASC2.Size = new_instancemethod(_itkSamplePython.itkSampleFASC2_Size,None,itkSampleFASC2)
itkSampleFASC2.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFASC2_GetMeasurementVector,None,itkSampleFASC2)
itkSampleFASC2.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFASC2_GetFrequency,None,itkSampleFASC2)
itkSampleFASC2.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFASC2_GetTotalFrequency,None,itkSampleFASC2)
itkSampleFASC2.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASC2_SetMeasurementVectorSize,None,itkSampleFASC2)
itkSampleFASC2.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASC2_GetMeasurementVectorSize,None,itkSampleFASC2)
itkSampleFASC2.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFASC2_GetPointer,None,itkSampleFASC2)
itkSampleFASC2_swigregister = _itkSamplePython.itkSampleFASC2_swigregister
itkSampleFASC2_swigregister(itkSampleFASC2)

def itkSampleFASC2_cast(*args):
  """itkSampleFASC2_cast(itkLightObject obj) -> itkSampleFASC2"""
  return _itkSamplePython.itkSampleFASC2_cast(*args)

class itkSampleFASC3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFASC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFASC3_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArraySC3"""
        return _itkSamplePython.itkSampleFASC3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFASC3_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFASC3_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASC3_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFASC3"""
        return _itkSamplePython.itkSampleFASC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFASC3"""
        return _itkSamplePython.itkSampleFASC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFASC3
        
        Create a new object of the class itkSampleFASC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFASC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFASC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFASC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFASC3.Size = new_instancemethod(_itkSamplePython.itkSampleFASC3_Size,None,itkSampleFASC3)
itkSampleFASC3.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFASC3_GetMeasurementVector,None,itkSampleFASC3)
itkSampleFASC3.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFASC3_GetFrequency,None,itkSampleFASC3)
itkSampleFASC3.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFASC3_GetTotalFrequency,None,itkSampleFASC3)
itkSampleFASC3.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASC3_SetMeasurementVectorSize,None,itkSampleFASC3)
itkSampleFASC3.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASC3_GetMeasurementVectorSize,None,itkSampleFASC3)
itkSampleFASC3.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFASC3_GetPointer,None,itkSampleFASC3)
itkSampleFASC3_swigregister = _itkSamplePython.itkSampleFASC3_swigregister
itkSampleFASC3_swigregister(itkSampleFASC3)

def itkSampleFASC3_cast(*args):
  """itkSampleFASC3_cast(itkLightObject obj) -> itkSampleFASC3"""
  return _itkSamplePython.itkSampleFASC3_cast(*args)

class itkSampleFASL1(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFASL1 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFASL1_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArraySL1"""
        return _itkSamplePython.itkSampleFASL1_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFASL1_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFASL1_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASL1_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASL1
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFASL1"""
        return _itkSamplePython.itkSampleFASL1_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFASL1"""
        return _itkSamplePython.itkSampleFASL1_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFASL1
        
        Create a new object of the class itkSampleFASL1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFASL1.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFASL1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFASL1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFASL1.Size = new_instancemethod(_itkSamplePython.itkSampleFASL1_Size,None,itkSampleFASL1)
itkSampleFASL1.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFASL1_GetMeasurementVector,None,itkSampleFASL1)
itkSampleFASL1.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFASL1_GetFrequency,None,itkSampleFASL1)
itkSampleFASL1.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFASL1_GetTotalFrequency,None,itkSampleFASL1)
itkSampleFASL1.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASL1_SetMeasurementVectorSize,None,itkSampleFASL1)
itkSampleFASL1.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASL1_GetMeasurementVectorSize,None,itkSampleFASL1)
itkSampleFASL1.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFASL1_GetPointer,None,itkSampleFASL1)
itkSampleFASL1_swigregister = _itkSamplePython.itkSampleFASL1_swigregister
itkSampleFASL1_swigregister(itkSampleFASL1)

def itkSampleFASL1_cast(*args):
  """itkSampleFASL1_cast(itkLightObject obj) -> itkSampleFASL1"""
  return _itkSamplePython.itkSampleFASL1_cast(*args)

class itkSampleFASL2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFASL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFASL2_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArraySL2"""
        return _itkSamplePython.itkSampleFASL2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFASL2_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFASL2_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASL2_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFASL2"""
        return _itkSamplePython.itkSampleFASL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFASL2"""
        return _itkSamplePython.itkSampleFASL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFASL2
        
        Create a new object of the class itkSampleFASL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFASL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFASL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFASL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFASL2.Size = new_instancemethod(_itkSamplePython.itkSampleFASL2_Size,None,itkSampleFASL2)
itkSampleFASL2.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFASL2_GetMeasurementVector,None,itkSampleFASL2)
itkSampleFASL2.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFASL2_GetFrequency,None,itkSampleFASL2)
itkSampleFASL2.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFASL2_GetTotalFrequency,None,itkSampleFASL2)
itkSampleFASL2.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASL2_SetMeasurementVectorSize,None,itkSampleFASL2)
itkSampleFASL2.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASL2_GetMeasurementVectorSize,None,itkSampleFASL2)
itkSampleFASL2.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFASL2_GetPointer,None,itkSampleFASL2)
itkSampleFASL2_swigregister = _itkSamplePython.itkSampleFASL2_swigregister
itkSampleFASL2_swigregister(itkSampleFASL2)

def itkSampleFASL2_cast(*args):
  """itkSampleFASL2_cast(itkLightObject obj) -> itkSampleFASL2"""
  return _itkSamplePython.itkSampleFASL2_cast(*args)

class itkSampleFASL3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFASL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFASL3_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArraySL3"""
        return _itkSamplePython.itkSampleFASL3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFASL3_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFASL3_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASL3_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFASL3"""
        return _itkSamplePython.itkSampleFASL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFASL3"""
        return _itkSamplePython.itkSampleFASL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFASL3
        
        Create a new object of the class itkSampleFASL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFASL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFASL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFASL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFASL3.Size = new_instancemethod(_itkSamplePython.itkSampleFASL3_Size,None,itkSampleFASL3)
itkSampleFASL3.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFASL3_GetMeasurementVector,None,itkSampleFASL3)
itkSampleFASL3.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFASL3_GetFrequency,None,itkSampleFASL3)
itkSampleFASL3.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFASL3_GetTotalFrequency,None,itkSampleFASL3)
itkSampleFASL3.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASL3_SetMeasurementVectorSize,None,itkSampleFASL3)
itkSampleFASL3.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASL3_GetMeasurementVectorSize,None,itkSampleFASL3)
itkSampleFASL3.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFASL3_GetPointer,None,itkSampleFASL3)
itkSampleFASL3_swigregister = _itkSamplePython.itkSampleFASL3_swigregister
itkSampleFASL3_swigregister(itkSampleFASL3)

def itkSampleFASL3_cast(*args):
  """itkSampleFASL3_cast(itkLightObject obj) -> itkSampleFASL3"""
  return _itkSamplePython.itkSampleFASL3_cast(*args)

class itkSampleFASS1(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFASS1 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFASS1_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArraySS1"""
        return _itkSamplePython.itkSampleFASS1_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFASS1_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFASS1_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASS1_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASS1
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFASS1"""
        return _itkSamplePython.itkSampleFASS1_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFASS1"""
        return _itkSamplePython.itkSampleFASS1_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFASS1
        
        Create a new object of the class itkSampleFASS1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFASS1.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFASS1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFASS1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFASS1.Size = new_instancemethod(_itkSamplePython.itkSampleFASS1_Size,None,itkSampleFASS1)
itkSampleFASS1.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFASS1_GetMeasurementVector,None,itkSampleFASS1)
itkSampleFASS1.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFASS1_GetFrequency,None,itkSampleFASS1)
itkSampleFASS1.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFASS1_GetTotalFrequency,None,itkSampleFASS1)
itkSampleFASS1.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASS1_SetMeasurementVectorSize,None,itkSampleFASS1)
itkSampleFASS1.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASS1_GetMeasurementVectorSize,None,itkSampleFASS1)
itkSampleFASS1.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFASS1_GetPointer,None,itkSampleFASS1)
itkSampleFASS1_swigregister = _itkSamplePython.itkSampleFASS1_swigregister
itkSampleFASS1_swigregister(itkSampleFASS1)

def itkSampleFASS1_cast(*args):
  """itkSampleFASS1_cast(itkLightObject obj) -> itkSampleFASS1"""
  return _itkSamplePython.itkSampleFASS1_cast(*args)

class itkSampleFASS2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFASS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFASS2_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArraySS2"""
        return _itkSamplePython.itkSampleFASS2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFASS2_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFASS2_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASS2_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFASS2"""
        return _itkSamplePython.itkSampleFASS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFASS2"""
        return _itkSamplePython.itkSampleFASS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFASS2
        
        Create a new object of the class itkSampleFASS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFASS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFASS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFASS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFASS2.Size = new_instancemethod(_itkSamplePython.itkSampleFASS2_Size,None,itkSampleFASS2)
itkSampleFASS2.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFASS2_GetMeasurementVector,None,itkSampleFASS2)
itkSampleFASS2.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFASS2_GetFrequency,None,itkSampleFASS2)
itkSampleFASS2.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFASS2_GetTotalFrequency,None,itkSampleFASS2)
itkSampleFASS2.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASS2_SetMeasurementVectorSize,None,itkSampleFASS2)
itkSampleFASS2.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASS2_GetMeasurementVectorSize,None,itkSampleFASS2)
itkSampleFASS2.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFASS2_GetPointer,None,itkSampleFASS2)
itkSampleFASS2_swigregister = _itkSamplePython.itkSampleFASS2_swigregister
itkSampleFASS2_swigregister(itkSampleFASS2)

def itkSampleFASS2_cast(*args):
  """itkSampleFASS2_cast(itkLightObject obj) -> itkSampleFASS2"""
  return _itkSamplePython.itkSampleFASS2_cast(*args)

class itkSampleFASS3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFASS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFASS3_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArraySS3"""
        return _itkSamplePython.itkSampleFASS3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFASS3_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFASS3_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASS3_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFASS3"""
        return _itkSamplePython.itkSampleFASS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFASS3"""
        return _itkSamplePython.itkSampleFASS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFASS3
        
        Create a new object of the class itkSampleFASS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFASS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFASS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFASS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFASS3.Size = new_instancemethod(_itkSamplePython.itkSampleFASS3_Size,None,itkSampleFASS3)
itkSampleFASS3.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFASS3_GetMeasurementVector,None,itkSampleFASS3)
itkSampleFASS3.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFASS3_GetFrequency,None,itkSampleFASS3)
itkSampleFASS3.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFASS3_GetTotalFrequency,None,itkSampleFASS3)
itkSampleFASS3.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASS3_SetMeasurementVectorSize,None,itkSampleFASS3)
itkSampleFASS3.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFASS3_GetMeasurementVectorSize,None,itkSampleFASS3)
itkSampleFASS3.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFASS3_GetPointer,None,itkSampleFASS3)
itkSampleFASS3_swigregister = _itkSamplePython.itkSampleFASS3_swigregister
itkSampleFASS3_swigregister(itkSampleFASS3)

def itkSampleFASS3_cast(*args):
  """itkSampleFASS3_cast(itkLightObject obj) -> itkSampleFASS3"""
  return _itkSamplePython.itkSampleFASS3_cast(*args)

class itkSampleFAUC1(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAUC1 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAUC1_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayUC1"""
        return _itkSamplePython.itkSampleFAUC1_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAUC1_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAUC1_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUC1_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUC1
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAUC1"""
        return _itkSamplePython.itkSampleFAUC1_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAUC1"""
        return _itkSamplePython.itkSampleFAUC1_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAUC1
        
        Create a new object of the class itkSampleFAUC1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAUC1.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAUC1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAUC1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAUC1.Size = new_instancemethod(_itkSamplePython.itkSampleFAUC1_Size,None,itkSampleFAUC1)
itkSampleFAUC1.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAUC1_GetMeasurementVector,None,itkSampleFAUC1)
itkSampleFAUC1.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUC1_GetFrequency,None,itkSampleFAUC1)
itkSampleFAUC1.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUC1_GetTotalFrequency,None,itkSampleFAUC1)
itkSampleFAUC1.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUC1_SetMeasurementVectorSize,None,itkSampleFAUC1)
itkSampleFAUC1.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUC1_GetMeasurementVectorSize,None,itkSampleFAUC1)
itkSampleFAUC1.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAUC1_GetPointer,None,itkSampleFAUC1)
itkSampleFAUC1_swigregister = _itkSamplePython.itkSampleFAUC1_swigregister
itkSampleFAUC1_swigregister(itkSampleFAUC1)

def itkSampleFAUC1_cast(*args):
  """itkSampleFAUC1_cast(itkLightObject obj) -> itkSampleFAUC1"""
  return _itkSamplePython.itkSampleFAUC1_cast(*args)

class itkSampleFAUC2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAUC2_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayUC2"""
        return _itkSamplePython.itkSampleFAUC2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAUC2_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAUC2_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUC2_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAUC2"""
        return _itkSamplePython.itkSampleFAUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAUC2"""
        return _itkSamplePython.itkSampleFAUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAUC2
        
        Create a new object of the class itkSampleFAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAUC2.Size = new_instancemethod(_itkSamplePython.itkSampleFAUC2_Size,None,itkSampleFAUC2)
itkSampleFAUC2.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAUC2_GetMeasurementVector,None,itkSampleFAUC2)
itkSampleFAUC2.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUC2_GetFrequency,None,itkSampleFAUC2)
itkSampleFAUC2.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUC2_GetTotalFrequency,None,itkSampleFAUC2)
itkSampleFAUC2.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUC2_SetMeasurementVectorSize,None,itkSampleFAUC2)
itkSampleFAUC2.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUC2_GetMeasurementVectorSize,None,itkSampleFAUC2)
itkSampleFAUC2.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAUC2_GetPointer,None,itkSampleFAUC2)
itkSampleFAUC2_swigregister = _itkSamplePython.itkSampleFAUC2_swigregister
itkSampleFAUC2_swigregister(itkSampleFAUC2)

def itkSampleFAUC2_cast(*args):
  """itkSampleFAUC2_cast(itkLightObject obj) -> itkSampleFAUC2"""
  return _itkSamplePython.itkSampleFAUC2_cast(*args)

class itkSampleFAUC3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAUC3_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayUC3"""
        return _itkSamplePython.itkSampleFAUC3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAUC3_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAUC3_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUC3_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAUC3"""
        return _itkSamplePython.itkSampleFAUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAUC3"""
        return _itkSamplePython.itkSampleFAUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAUC3
        
        Create a new object of the class itkSampleFAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAUC3.Size = new_instancemethod(_itkSamplePython.itkSampleFAUC3_Size,None,itkSampleFAUC3)
itkSampleFAUC3.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAUC3_GetMeasurementVector,None,itkSampleFAUC3)
itkSampleFAUC3.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUC3_GetFrequency,None,itkSampleFAUC3)
itkSampleFAUC3.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUC3_GetTotalFrequency,None,itkSampleFAUC3)
itkSampleFAUC3.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUC3_SetMeasurementVectorSize,None,itkSampleFAUC3)
itkSampleFAUC3.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUC3_GetMeasurementVectorSize,None,itkSampleFAUC3)
itkSampleFAUC3.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAUC3_GetPointer,None,itkSampleFAUC3)
itkSampleFAUC3_swigregister = _itkSamplePython.itkSampleFAUC3_swigregister
itkSampleFAUC3_swigregister(itkSampleFAUC3)

def itkSampleFAUC3_cast(*args):
  """itkSampleFAUC3_cast(itkLightObject obj) -> itkSampleFAUC3"""
  return _itkSamplePython.itkSampleFAUC3_cast(*args)

class itkSampleFAUL1(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAUL1 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAUL1_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayUL1"""
        return _itkSamplePython.itkSampleFAUL1_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAUL1_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAUL1_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUL1_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUL1
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAUL1"""
        return _itkSamplePython.itkSampleFAUL1_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAUL1"""
        return _itkSamplePython.itkSampleFAUL1_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAUL1
        
        Create a new object of the class itkSampleFAUL1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAUL1.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAUL1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAUL1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAUL1.Size = new_instancemethod(_itkSamplePython.itkSampleFAUL1_Size,None,itkSampleFAUL1)
itkSampleFAUL1.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAUL1_GetMeasurementVector,None,itkSampleFAUL1)
itkSampleFAUL1.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUL1_GetFrequency,None,itkSampleFAUL1)
itkSampleFAUL1.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUL1_GetTotalFrequency,None,itkSampleFAUL1)
itkSampleFAUL1.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUL1_SetMeasurementVectorSize,None,itkSampleFAUL1)
itkSampleFAUL1.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUL1_GetMeasurementVectorSize,None,itkSampleFAUL1)
itkSampleFAUL1.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAUL1_GetPointer,None,itkSampleFAUL1)
itkSampleFAUL1_swigregister = _itkSamplePython.itkSampleFAUL1_swigregister
itkSampleFAUL1_swigregister(itkSampleFAUL1)

def itkSampleFAUL1_cast(*args):
  """itkSampleFAUL1_cast(itkLightObject obj) -> itkSampleFAUL1"""
  return _itkSamplePython.itkSampleFAUL1_cast(*args)

class itkSampleFAUL2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAUL2_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayUL2"""
        return _itkSamplePython.itkSampleFAUL2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAUL2_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAUL2_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUL2_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAUL2"""
        return _itkSamplePython.itkSampleFAUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAUL2"""
        return _itkSamplePython.itkSampleFAUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAUL2
        
        Create a new object of the class itkSampleFAUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAUL2.Size = new_instancemethod(_itkSamplePython.itkSampleFAUL2_Size,None,itkSampleFAUL2)
itkSampleFAUL2.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAUL2_GetMeasurementVector,None,itkSampleFAUL2)
itkSampleFAUL2.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUL2_GetFrequency,None,itkSampleFAUL2)
itkSampleFAUL2.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUL2_GetTotalFrequency,None,itkSampleFAUL2)
itkSampleFAUL2.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUL2_SetMeasurementVectorSize,None,itkSampleFAUL2)
itkSampleFAUL2.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUL2_GetMeasurementVectorSize,None,itkSampleFAUL2)
itkSampleFAUL2.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAUL2_GetPointer,None,itkSampleFAUL2)
itkSampleFAUL2_swigregister = _itkSamplePython.itkSampleFAUL2_swigregister
itkSampleFAUL2_swigregister(itkSampleFAUL2)

def itkSampleFAUL2_cast(*args):
  """itkSampleFAUL2_cast(itkLightObject obj) -> itkSampleFAUL2"""
  return _itkSamplePython.itkSampleFAUL2_cast(*args)

class itkSampleFAUL3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAUL3_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayUL3"""
        return _itkSamplePython.itkSampleFAUL3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAUL3_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAUL3_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUL3_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAUL3"""
        return _itkSamplePython.itkSampleFAUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAUL3"""
        return _itkSamplePython.itkSampleFAUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAUL3
        
        Create a new object of the class itkSampleFAUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAUL3.Size = new_instancemethod(_itkSamplePython.itkSampleFAUL3_Size,None,itkSampleFAUL3)
itkSampleFAUL3.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAUL3_GetMeasurementVector,None,itkSampleFAUL3)
itkSampleFAUL3.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUL3_GetFrequency,None,itkSampleFAUL3)
itkSampleFAUL3.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUL3_GetTotalFrequency,None,itkSampleFAUL3)
itkSampleFAUL3.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUL3_SetMeasurementVectorSize,None,itkSampleFAUL3)
itkSampleFAUL3.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUL3_GetMeasurementVectorSize,None,itkSampleFAUL3)
itkSampleFAUL3.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAUL3_GetPointer,None,itkSampleFAUL3)
itkSampleFAUL3_swigregister = _itkSamplePython.itkSampleFAUL3_swigregister
itkSampleFAUL3_swigregister(itkSampleFAUL3)

def itkSampleFAUL3_cast(*args):
  """itkSampleFAUL3_cast(itkLightObject obj) -> itkSampleFAUL3"""
  return _itkSamplePython.itkSampleFAUL3_cast(*args)

class itkSampleFAUS1(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAUS1 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAUS1_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayUS1"""
        return _itkSamplePython.itkSampleFAUS1_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAUS1_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAUS1_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUS1_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUS1
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAUS1"""
        return _itkSamplePython.itkSampleFAUS1_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAUS1"""
        return _itkSamplePython.itkSampleFAUS1_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAUS1
        
        Create a new object of the class itkSampleFAUS1 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAUS1.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAUS1.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAUS1.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAUS1.Size = new_instancemethod(_itkSamplePython.itkSampleFAUS1_Size,None,itkSampleFAUS1)
itkSampleFAUS1.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAUS1_GetMeasurementVector,None,itkSampleFAUS1)
itkSampleFAUS1.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUS1_GetFrequency,None,itkSampleFAUS1)
itkSampleFAUS1.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUS1_GetTotalFrequency,None,itkSampleFAUS1)
itkSampleFAUS1.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUS1_SetMeasurementVectorSize,None,itkSampleFAUS1)
itkSampleFAUS1.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUS1_GetMeasurementVectorSize,None,itkSampleFAUS1)
itkSampleFAUS1.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAUS1_GetPointer,None,itkSampleFAUS1)
itkSampleFAUS1_swigregister = _itkSamplePython.itkSampleFAUS1_swigregister
itkSampleFAUS1_swigregister(itkSampleFAUS1)

def itkSampleFAUS1_cast(*args):
  """itkSampleFAUS1_cast(itkLightObject obj) -> itkSampleFAUS1"""
  return _itkSamplePython.itkSampleFAUS1_cast(*args)

class itkSampleFAUS2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAUS2_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayUS2"""
        return _itkSamplePython.itkSampleFAUS2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAUS2_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAUS2_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUS2_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAUS2"""
        return _itkSamplePython.itkSampleFAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAUS2"""
        return _itkSamplePython.itkSampleFAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAUS2
        
        Create a new object of the class itkSampleFAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAUS2.Size = new_instancemethod(_itkSamplePython.itkSampleFAUS2_Size,None,itkSampleFAUS2)
itkSampleFAUS2.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAUS2_GetMeasurementVector,None,itkSampleFAUS2)
itkSampleFAUS2.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUS2_GetFrequency,None,itkSampleFAUS2)
itkSampleFAUS2.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUS2_GetTotalFrequency,None,itkSampleFAUS2)
itkSampleFAUS2.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUS2_SetMeasurementVectorSize,None,itkSampleFAUS2)
itkSampleFAUS2.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUS2_GetMeasurementVectorSize,None,itkSampleFAUS2)
itkSampleFAUS2.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAUS2_GetPointer,None,itkSampleFAUS2)
itkSampleFAUS2_swigregister = _itkSamplePython.itkSampleFAUS2_swigregister
itkSampleFAUS2_swigregister(itkSampleFAUS2)

def itkSampleFAUS2_cast(*args):
  """itkSampleFAUS2_cast(itkLightObject obj) -> itkSampleFAUS2"""
  return _itkSamplePython.itkSampleFAUS2_cast(*args)

class itkSampleFAUS3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleFAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleFAUS3_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkFixedArrayUS3"""
        return _itkSamplePython.itkSampleFAUS3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleFAUS3_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleFAUS3_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUS3_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleFAUS3"""
        return _itkSamplePython.itkSampleFAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleFAUS3"""
        return _itkSamplePython.itkSampleFAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleFAUS3
        
        Create a new object of the class itkSampleFAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleFAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleFAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleFAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleFAUS3.Size = new_instancemethod(_itkSamplePython.itkSampleFAUS3_Size,None,itkSampleFAUS3)
itkSampleFAUS3.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleFAUS3_GetMeasurementVector,None,itkSampleFAUS3)
itkSampleFAUS3.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUS3_GetFrequency,None,itkSampleFAUS3)
itkSampleFAUS3.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleFAUS3_GetTotalFrequency,None,itkSampleFAUS3)
itkSampleFAUS3.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUS3_SetMeasurementVectorSize,None,itkSampleFAUS3)
itkSampleFAUS3.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleFAUS3_GetMeasurementVectorSize,None,itkSampleFAUS3)
itkSampleFAUS3.GetPointer = new_instancemethod(_itkSamplePython.itkSampleFAUS3_GetPointer,None,itkSampleFAUS3)
itkSampleFAUS3_swigregister = _itkSamplePython.itkSampleFAUS3_swigregister
itkSampleFAUS3_swigregister(itkSampleFAUS3)

def itkSampleFAUS3_cast(*args):
  """itkSampleFAUS3_cast(itkLightObject obj) -> itkSampleFAUS3"""
  return _itkSamplePython.itkSampleFAUS3_cast(*args)

class itkSampleVF2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleVF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleVF2_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkVectorF2"""
        return _itkSamplePython.itkSampleVF2_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleVF2_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleVF2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleVF2_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleVF2_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleVF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleVF2"""
        return _itkSamplePython.itkSampleVF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleVF2"""
        return _itkSamplePython.itkSampleVF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleVF2
        
        Create a new object of the class itkSampleVF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleVF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleVF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleVF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleVF2.Size = new_instancemethod(_itkSamplePython.itkSampleVF2_Size,None,itkSampleVF2)
itkSampleVF2.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleVF2_GetMeasurementVector,None,itkSampleVF2)
itkSampleVF2.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleVF2_GetFrequency,None,itkSampleVF2)
itkSampleVF2.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleVF2_GetTotalFrequency,None,itkSampleVF2)
itkSampleVF2.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleVF2_SetMeasurementVectorSize,None,itkSampleVF2)
itkSampleVF2.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleVF2_GetMeasurementVectorSize,None,itkSampleVF2)
itkSampleVF2.GetPointer = new_instancemethod(_itkSamplePython.itkSampleVF2_GetPointer,None,itkSampleVF2)
itkSampleVF2_swigregister = _itkSamplePython.itkSampleVF2_swigregister
itkSampleVF2_swigregister(itkSampleVF2)

def itkSampleVF2_cast(*args):
  """itkSampleVF2_cast(itkLightObject obj) -> itkSampleVF2"""
  return _itkSamplePython.itkSampleVF2_cast(*args)

class itkSampleVF3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkSampleVF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def Size(self):
        """Size(self) -> size_t"""
        return _itkSamplePython.itkSampleVF3_Size(self)

    def GetMeasurementVector(self, *args):
        """GetMeasurementVector(self, size_t id) -> itkVectorF3"""
        return _itkSamplePython.itkSampleVF3_GetMeasurementVector(self, *args)

    def GetFrequency(self, *args):
        """GetFrequency(self, size_t id) -> size_t"""
        return _itkSamplePython.itkSampleVF3_GetFrequency(self, *args)

    def GetTotalFrequency(self):
        """GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleVF3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, *args):
        """SetMeasurementVectorSize(self, unsigned int s)"""
        return _itkSamplePython.itkSampleVF3_SetMeasurementVectorSize(self, *args)

    def GetMeasurementVectorSize(self):
        """GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleVF3_GetMeasurementVectorSize(self)

    __swig_destroy__ = _itkSamplePython.delete_itkSampleVF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkSampleVF3"""
        return _itkSamplePython.itkSampleVF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkSampleVF3"""
        return _itkSamplePython.itkSampleVF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkSampleVF3
        
        Create a new object of the class itkSampleVF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkSampleVF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkSampleVF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSampleVF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSampleVF3.Size = new_instancemethod(_itkSamplePython.itkSampleVF3_Size,None,itkSampleVF3)
itkSampleVF3.GetMeasurementVector = new_instancemethod(_itkSamplePython.itkSampleVF3_GetMeasurementVector,None,itkSampleVF3)
itkSampleVF3.GetFrequency = new_instancemethod(_itkSamplePython.itkSampleVF3_GetFrequency,None,itkSampleVF3)
itkSampleVF3.GetTotalFrequency = new_instancemethod(_itkSamplePython.itkSampleVF3_GetTotalFrequency,None,itkSampleVF3)
itkSampleVF3.SetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleVF3_SetMeasurementVectorSize,None,itkSampleVF3)
itkSampleVF3.GetMeasurementVectorSize = new_instancemethod(_itkSamplePython.itkSampleVF3_GetMeasurementVectorSize,None,itkSampleVF3)
itkSampleVF3.GetPointer = new_instancemethod(_itkSamplePython.itkSampleVF3_GetPointer,None,itkSampleVF3)
itkSampleVF3_swigregister = _itkSamplePython.itkSampleVF3_swigregister
itkSampleVF3_swigregister(itkSampleVF3)

def itkSampleVF3_cast(*args):
  """itkSampleVF3_cast(itkLightObject obj) -> itkSampleVF3"""
  return _itkSamplePython.itkSampleVF3_cast(*args)



