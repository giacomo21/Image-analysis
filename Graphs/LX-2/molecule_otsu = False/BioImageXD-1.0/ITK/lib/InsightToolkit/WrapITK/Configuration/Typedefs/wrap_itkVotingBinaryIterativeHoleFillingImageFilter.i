// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVotingBinaryIterativeHoleFillingImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkVotingBinaryIterativeHoleFillingImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkVotingBinaryIterativeHoleFillingImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkVotingBinaryIterativeHoleFillingImageFilterJava
#endif
#ifdef SWIGLUA
%module itkVotingBinaryIterativeHoleFillingImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkVotingBinaryIterativeHoleFillingImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVotingBinaryIterativeHoleFillingImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkVotingBinaryIterativeHoleFillingImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkVotingBinaryIterativeHoleFillingImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkVotingBinaryIterativeHoleFillingImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkVotingBinaryIterativeHoleFillingImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkVotingBinaryIterativeHoleFillingImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkVotingBinaryIterativeHoleFillingImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkVotingBinaryIterativeHoleFillingImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkVotingBinaryIterativeHoleFillingImageFilterPython
#endif
#ifdef SWIGR
%module itkVotingBinaryIterativeHoleFillingImageFilterR
#endif
#ifdef SWIGRUBY
%module itkVotingBinaryIterativeHoleFillingImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkVotingBinaryIterativeHoleFillingImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkVotingBinaryIterativeHoleFillingImageFilterTcl
#endif
#ifdef SWIGXML
%module itkVotingBinaryIterativeHoleFillingImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Denoising.includes"
%}


%{
%}




%import wrap_itkSize.i
%import wrap_itkImageToImageFilterA.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkVotingBinaryIterativeHoleFillingImageFilter_ext.i


 class itkVotingBinaryIterativeHoleFillingImageFilterIUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputOStreamWritableeCheck = 1 };
     static itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMaximumNumberOfIterations() const;
     virtual void SetMaximumNumberOfIterations(unsigned int const _arg);
     virtual unsigned int const & GetCurrentNumberOfIterations() const;
     virtual void SetCurrentNumberOfIterations(unsigned int const _arg);
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
     virtual unsigned char const & GetForegroundValue() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2(itkVotingBinaryIterativeHoleFillingImageFilterIUC2 const & arg0);
     void operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUC2 const & arg0);
   protected:
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2();
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer {
   public:
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer const & p);
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUC2 * p);
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2 * GetPointer() const;
     bool operator<(itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer const & r) const;
     bool operator>(itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer const & r) const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer const & r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUC2 * r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputOStreamWritableeCheck = 1 };
     static itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMaximumNumberOfIterations() const;
     virtual void SetMaximumNumberOfIterations(unsigned int const _arg);
     virtual unsigned int const & GetCurrentNumberOfIterations() const;
     virtual void SetCurrentNumberOfIterations(unsigned int const _arg);
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
     virtual unsigned char const & GetForegroundValue() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3(itkVotingBinaryIterativeHoleFillingImageFilterIUC3 const & arg0);
     void operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUC3 const & arg0);
   protected:
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3();
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer {
   public:
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer const & p);
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUC3 * p);
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3 * GetPointer() const;
     bool operator<(itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer const & r) const;
     bool operator>(itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer const & r) const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer const & r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUC3 * r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputOStreamWritableeCheck = 1 };
     static itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMaximumNumberOfIterations() const;
     virtual void SetMaximumNumberOfIterations(unsigned int const _arg);
     virtual unsigned int const & GetCurrentNumberOfIterations() const;
     virtual void SetCurrentNumberOfIterations(unsigned int const _arg);
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
     virtual unsigned long const & GetForegroundValue() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2(itkVotingBinaryIterativeHoleFillingImageFilterIUL2 const & arg0);
     void operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUL2 const & arg0);
   protected:
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2();
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer {
   public:
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer const & p);
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUL2 * p);
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2 * GetPointer() const;
     bool operator<(itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer const & r) const;
     bool operator>(itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer const & r) const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer const & r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUL2 * r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputOStreamWritableeCheck = 1 };
     static itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMaximumNumberOfIterations() const;
     virtual void SetMaximumNumberOfIterations(unsigned int const _arg);
     virtual unsigned int const & GetCurrentNumberOfIterations() const;
     virtual void SetCurrentNumberOfIterations(unsigned int const _arg);
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
     virtual unsigned long const & GetForegroundValue() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3(itkVotingBinaryIterativeHoleFillingImageFilterIUL3 const & arg0);
     void operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUL3 const & arg0);
   protected:
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3();
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer {
   public:
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer const & p);
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUL3 * p);
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3 * GetPointer() const;
     bool operator<(itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer const & r) const;
     bool operator>(itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer const & r) const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer const & r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUL3 * r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputOStreamWritableeCheck = 1 };
     static itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMaximumNumberOfIterations() const;
     virtual void SetMaximumNumberOfIterations(unsigned int const _arg);
     virtual unsigned int const & GetCurrentNumberOfIterations() const;
     virtual void SetCurrentNumberOfIterations(unsigned int const _arg);
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
     virtual unsigned short const & GetForegroundValue() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2(itkVotingBinaryIterativeHoleFillingImageFilterIUS2 const & arg0);
     void operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUS2 const & arg0);
   protected:
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2();
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer {
   public:
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer const & p);
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUS2 * p);
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2 * GetPointer() const;
     bool operator<(itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer const & r) const;
     bool operator>(itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer const & r) const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer const & r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUS2 * r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  InputOStreamWritableeCheck = 1 };
     static itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual unsigned int const & GetMaximumNumberOfIterations() const;
     virtual void SetMaximumNumberOfIterations(unsigned int const _arg);
     virtual unsigned int const & GetCurrentNumberOfIterations() const;
     virtual void SetCurrentNumberOfIterations(unsigned int const _arg);
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
     virtual unsigned short const & GetForegroundValue() const;
     virtual unsigned int const & GetMajorityThreshold() const;
     virtual void SetMajorityThreshold(unsigned int const _arg);
     virtual unsigned int const & GetNumberOfPixelsChanged() const;
   private:
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3(itkVotingBinaryIterativeHoleFillingImageFilterIUS3 const & arg0);
     void operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUS3 const & arg0);
   protected:
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3();
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
 };


 class itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer {
   public:
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer const & p);
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer(itkVotingBinaryIterativeHoleFillingImageFilterIUS3 * p);
     ~itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer();
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3 * GetPointer() const;
     bool operator<(itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer const & r) const;
     bool operator>(itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer const & r) const;
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer const & r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3_Pointer & operator=(itkVotingBinaryIterativeHoleFillingImageFilterIUS3 * r);
     itkVotingBinaryIterativeHoleFillingImageFilterIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


