# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkPlaneSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkPlaneSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkPlaneSpatialObjectPython
            return _itkPlaneSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkPlaneSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkPlaneSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkPlaneSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSpatialObjectBasePython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import ITKRegionsPython
import itkSpatialObjectPropertyPython
import itkRGBAPixelPython
import itkScalableAffineTransformPython
import itkAffineTransformPython
import itkTransformPython
import itkArray2DPython
import itkArrayPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkMatrixOffsetTransformBasePython
import itkAffineGeometryFramePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkLevelSetPython
def itkPlaneSpatialObject3_New():
  return itkPlaneSpatialObject3.New()

def itkPlaneSpatialObject2_New():
  return itkPlaneSpatialObject2.New()

class itkPlaneSpatialObject2(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkPlaneSpatialObject2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NumberOfDimension = _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_NumberOfDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD2 point, double value) -> bool
        """
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_ValueAt(self, *args)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD2 point) -> bool
        """
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_IsEvaluableAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD2 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD2 point) -> bool
        """
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_IsInside(self, *args)

    def SetLowerPoint(self, *args):
        """SetLowerPoint(self, itkPointD2 _arg)"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_SetLowerPoint(self, *args)

    def SetUpperPoint(self, *args):
        """SetUpperPoint(self, itkPointD2 _arg)"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_SetUpperPoint(self, *args)

    def GetLowerPoint(self):
        """GetLowerPoint(self) -> itkPointD2"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_GetLowerPoint(self)

    def GetUpperPoint(self):
        """GetUpperPoint(self) -> itkPointD2"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_GetUpperPoint(self)

    __swig_destroy__ = _itkPlaneSpatialObjectPython.delete_itkPlaneSpatialObject2
    def cast(*args):
        """cast(itkLightObject obj) -> itkPlaneSpatialObject2"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPlaneSpatialObject2"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPlaneSpatialObject2
        
        Create a new object of the class itkPlaneSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPlaneSpatialObject2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPlaneSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPlaneSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPlaneSpatialObject2.ValueAt = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_ValueAt,None,itkPlaneSpatialObject2)
itkPlaneSpatialObject2.IsEvaluableAt = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_IsEvaluableAt,None,itkPlaneSpatialObject2)
itkPlaneSpatialObject2.IsInside = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_IsInside,None,itkPlaneSpatialObject2)
itkPlaneSpatialObject2.SetLowerPoint = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_SetLowerPoint,None,itkPlaneSpatialObject2)
itkPlaneSpatialObject2.SetUpperPoint = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_SetUpperPoint,None,itkPlaneSpatialObject2)
itkPlaneSpatialObject2.GetLowerPoint = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_GetLowerPoint,None,itkPlaneSpatialObject2)
itkPlaneSpatialObject2.GetUpperPoint = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_GetUpperPoint,None,itkPlaneSpatialObject2)
itkPlaneSpatialObject2.GetPointer = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_GetPointer,None,itkPlaneSpatialObject2)
itkPlaneSpatialObject2_swigregister = _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_swigregister
itkPlaneSpatialObject2_swigregister(itkPlaneSpatialObject2)

def itkPlaneSpatialObject2___New_orig__():
  """itkPlaneSpatialObject2___New_orig__()"""
  return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2___New_orig__()

def itkPlaneSpatialObject2_cast(*args):
  """itkPlaneSpatialObject2_cast(itkLightObject obj) -> itkPlaneSpatialObject2"""
  return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject2_cast(*args)

class itkPlaneSpatialObject3(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkPlaneSpatialObject3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    NumberOfDimension = _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_NumberOfDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD3 point, double value) -> bool
        """
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_ValueAt(self, *args)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD3 point) -> bool
        """
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_IsEvaluableAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD3 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD3 point) -> bool
        """
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_IsInside(self, *args)

    def SetLowerPoint(self, *args):
        """SetLowerPoint(self, itkPointD3 _arg)"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_SetLowerPoint(self, *args)

    def SetUpperPoint(self, *args):
        """SetUpperPoint(self, itkPointD3 _arg)"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_SetUpperPoint(self, *args)

    def GetLowerPoint(self):
        """GetLowerPoint(self) -> itkPointD3"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_GetLowerPoint(self)

    def GetUpperPoint(self):
        """GetUpperPoint(self) -> itkPointD3"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_GetUpperPoint(self)

    __swig_destroy__ = _itkPlaneSpatialObjectPython.delete_itkPlaneSpatialObject3
    def cast(*args):
        """cast(itkLightObject obj) -> itkPlaneSpatialObject3"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkPlaneSpatialObject3"""
        return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkPlaneSpatialObject3
        
        Create a new object of the class itkPlaneSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkPlaneSpatialObject3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkPlaneSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPlaneSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPlaneSpatialObject3.ValueAt = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_ValueAt,None,itkPlaneSpatialObject3)
itkPlaneSpatialObject3.IsEvaluableAt = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_IsEvaluableAt,None,itkPlaneSpatialObject3)
itkPlaneSpatialObject3.IsInside = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_IsInside,None,itkPlaneSpatialObject3)
itkPlaneSpatialObject3.SetLowerPoint = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_SetLowerPoint,None,itkPlaneSpatialObject3)
itkPlaneSpatialObject3.SetUpperPoint = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_SetUpperPoint,None,itkPlaneSpatialObject3)
itkPlaneSpatialObject3.GetLowerPoint = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_GetLowerPoint,None,itkPlaneSpatialObject3)
itkPlaneSpatialObject3.GetUpperPoint = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_GetUpperPoint,None,itkPlaneSpatialObject3)
itkPlaneSpatialObject3.GetPointer = new_instancemethod(_itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_GetPointer,None,itkPlaneSpatialObject3)
itkPlaneSpatialObject3_swigregister = _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_swigregister
itkPlaneSpatialObject3_swigregister(itkPlaneSpatialObject3)

def itkPlaneSpatialObject3___New_orig__():
  """itkPlaneSpatialObject3___New_orig__()"""
  return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3___New_orig__()

def itkPlaneSpatialObject3_cast(*args):
  """itkPlaneSpatialObject3_cast(itkLightObject obj) -> itkPlaneSpatialObject3"""
  return _itkPlaneSpatialObjectPython.itkPlaneSpatialObject3_cast(*args)



