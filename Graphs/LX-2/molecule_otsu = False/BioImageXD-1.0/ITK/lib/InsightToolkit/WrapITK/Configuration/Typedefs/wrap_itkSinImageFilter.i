// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkSinImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkSinImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkSinImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkSinImageFilterJava
#endif
#ifdef SWIGLUA
%module itkSinImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkSinImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkSinImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkSinImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkSinImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkSinImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkSinImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkSinImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkSinImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkSinImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkSinImageFilterPython
#endif
#ifdef SWIGR
%module itkSinImageFilterR
#endif
#ifdef SWIGRUBY
%module itkSinImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkSinImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkSinImageFilterTcl
#endif
#ifdef SWIGXML
%module itkSinImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "UnaryPixelMath.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkSinImageFilter_ext.i


 class itkSinImageFilterID2ID2_Pointer {
   public:
     itkSinImageFilterID2ID2_Pointer();
     itkSinImageFilterID2ID2_Pointer(itkSinImageFilterID2ID2_Pointer const & p);
     itkSinImageFilterID2ID2_Pointer(itkSinImageFilterID2ID2 * p);
     ~itkSinImageFilterID2ID2_Pointer();
     itkSinImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSinImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkSinImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkSinImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkSinImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkSinImageFilterID2ID2_Pointer const & r) const;
     itkSinImageFilterID2ID2_Pointer & operator=(itkSinImageFilterID2ID2_Pointer const & r);
     itkSinImageFilterID2ID2_Pointer & operator=(itkSinImageFilterID2ID2 * r);
     itkSinImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSinImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkSinImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sin< double, double > & GetFunctor();
     itk::Function::Sin< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sin< double, double > const & functor);
   private:
     itkSinImageFilterID2ID2_Superclass(itkSinImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkSinImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkSinImageFilterID2ID2_Superclass();
     ~itkSinImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSinImageFilterID2ID2_Superclass_Pointer {
   public:
     itkSinImageFilterID2ID2_Superclass_Pointer();
     itkSinImageFilterID2ID2_Superclass_Pointer(itkSinImageFilterID2ID2_Superclass_Pointer const & p);
     itkSinImageFilterID2ID2_Superclass_Pointer(itkSinImageFilterID2ID2_Superclass * p);
     ~itkSinImageFilterID2ID2_Superclass_Pointer();
     itkSinImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSinImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkSinImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkSinImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkSinImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkSinImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkSinImageFilterID2ID2_Superclass_Pointer & operator=(itkSinImageFilterID2ID2_Superclass_Pointer const & r);
     itkSinImageFilterID2ID2_Superclass_Pointer & operator=(itkSinImageFilterID2ID2_Superclass * r);
     itkSinImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSinImageFilterID3ID3_Pointer {
   public:
     itkSinImageFilterID3ID3_Pointer();
     itkSinImageFilterID3ID3_Pointer(itkSinImageFilterID3ID3_Pointer const & p);
     itkSinImageFilterID3ID3_Pointer(itkSinImageFilterID3ID3 * p);
     ~itkSinImageFilterID3ID3_Pointer();
     itkSinImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSinImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkSinImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkSinImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkSinImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkSinImageFilterID3ID3_Pointer const & r) const;
     itkSinImageFilterID3ID3_Pointer & operator=(itkSinImageFilterID3ID3_Pointer const & r);
     itkSinImageFilterID3ID3_Pointer & operator=(itkSinImageFilterID3ID3 * r);
     itkSinImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSinImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkSinImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sin< double, double > & GetFunctor();
     itk::Function::Sin< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sin< double, double > const & functor);
   private:
     itkSinImageFilterID3ID3_Superclass(itkSinImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkSinImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkSinImageFilterID3ID3_Superclass();
     ~itkSinImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSinImageFilterID3ID3_Superclass_Pointer {
   public:
     itkSinImageFilterID3ID3_Superclass_Pointer();
     itkSinImageFilterID3ID3_Superclass_Pointer(itkSinImageFilterID3ID3_Superclass_Pointer const & p);
     itkSinImageFilterID3ID3_Superclass_Pointer(itkSinImageFilterID3ID3_Superclass * p);
     ~itkSinImageFilterID3ID3_Superclass_Pointer();
     itkSinImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSinImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkSinImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkSinImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkSinImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkSinImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkSinImageFilterID3ID3_Superclass_Pointer & operator=(itkSinImageFilterID3ID3_Superclass_Pointer const & r);
     itkSinImageFilterID3ID3_Superclass_Pointer & operator=(itkSinImageFilterID3ID3_Superclass * r);
     itkSinImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSinImageFilterIF2IF2_Pointer {
   public:
     itkSinImageFilterIF2IF2_Pointer();
     itkSinImageFilterIF2IF2_Pointer(itkSinImageFilterIF2IF2_Pointer const & p);
     itkSinImageFilterIF2IF2_Pointer(itkSinImageFilterIF2IF2 * p);
     ~itkSinImageFilterIF2IF2_Pointer();
     itkSinImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSinImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkSinImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkSinImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkSinImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkSinImageFilterIF2IF2_Pointer const & r) const;
     itkSinImageFilterIF2IF2_Pointer & operator=(itkSinImageFilterIF2IF2_Pointer const & r);
     itkSinImageFilterIF2IF2_Pointer & operator=(itkSinImageFilterIF2IF2 * r);
     itkSinImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSinImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkSinImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sin< float, float > & GetFunctor();
     itk::Function::Sin< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sin< float, float > const & functor);
   private:
     itkSinImageFilterIF2IF2_Superclass(itkSinImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkSinImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkSinImageFilterIF2IF2_Superclass();
     ~itkSinImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkSinImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkSinImageFilterIF2IF2_Superclass_Pointer();
     itkSinImageFilterIF2IF2_Superclass_Pointer(itkSinImageFilterIF2IF2_Superclass_Pointer const & p);
     itkSinImageFilterIF2IF2_Superclass_Pointer(itkSinImageFilterIF2IF2_Superclass * p);
     ~itkSinImageFilterIF2IF2_Superclass_Pointer();
     itkSinImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSinImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkSinImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkSinImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkSinImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkSinImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkSinImageFilterIF2IF2_Superclass_Pointer & operator=(itkSinImageFilterIF2IF2_Superclass_Pointer const & r);
     itkSinImageFilterIF2IF2_Superclass_Pointer & operator=(itkSinImageFilterIF2IF2_Superclass * r);
     itkSinImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSinImageFilterIF3IF3_Pointer {
   public:
     itkSinImageFilterIF3IF3_Pointer();
     itkSinImageFilterIF3IF3_Pointer(itkSinImageFilterIF3IF3_Pointer const & p);
     itkSinImageFilterIF3IF3_Pointer(itkSinImageFilterIF3IF3 * p);
     ~itkSinImageFilterIF3IF3_Pointer();
     itkSinImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSinImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkSinImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkSinImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkSinImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkSinImageFilterIF3IF3_Pointer const & r) const;
     itkSinImageFilterIF3IF3_Pointer & operator=(itkSinImageFilterIF3IF3_Pointer const & r);
     itkSinImageFilterIF3IF3_Pointer & operator=(itkSinImageFilterIF3IF3 * r);
     itkSinImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSinImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkSinImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Function::Sin< float, float > & GetFunctor();
     itk::Function::Sin< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Sin< float, float > const & functor);
   private:
     itkSinImageFilterIF3IF3_Superclass(itkSinImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkSinImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkSinImageFilterIF3IF3_Superclass();
     ~itkSinImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkSinImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkSinImageFilterIF3IF3_Superclass_Pointer();
     itkSinImageFilterIF3IF3_Superclass_Pointer(itkSinImageFilterIF3IF3_Superclass_Pointer const & p);
     itkSinImageFilterIF3IF3_Superclass_Pointer(itkSinImageFilterIF3IF3_Superclass * p);
     ~itkSinImageFilterIF3IF3_Superclass_Pointer();
     itkSinImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSinImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkSinImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkSinImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkSinImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkSinImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkSinImageFilterIF3IF3_Superclass_Pointer & operator=(itkSinImageFilterIF3IF3_Superclass_Pointer const & r);
     itkSinImageFilterIF3IF3_Superclass_Pointer & operator=(itkSinImageFilterIF3IF3_Superclass * r);
     itkSinImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSinImageFilterID2ID2 : public itkSinImageFilterID2ID2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSinImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSinImageFilterID2ID2(itkSinImageFilterID2ID2 const & arg0);
     void operator=(itkSinImageFilterID2ID2 const & arg0);
   protected:
     itkSinImageFilterID2ID2();
     ~itkSinImageFilterID2ID2();
 };


 class itkSinImageFilterID3ID3 : public itkSinImageFilterID3ID3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSinImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSinImageFilterID3ID3(itkSinImageFilterID3ID3 const & arg0);
     void operator=(itkSinImageFilterID3ID3 const & arg0);
   protected:
     itkSinImageFilterID3ID3();
     ~itkSinImageFilterID3ID3();
 };


 class itkSinImageFilterIF2IF2 : public itkSinImageFilterIF2IF2_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSinImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSinImageFilterIF2IF2(itkSinImageFilterIF2IF2 const & arg0);
     void operator=(itkSinImageFilterIF2IF2 const & arg0);
   protected:
     itkSinImageFilterIF2IF2();
     ~itkSinImageFilterIF2IF2();
 };


 class itkSinImageFilterIF3IF3 : public itkSinImageFilterIF3IF3_Superclass {
   public:
     enum  {  InputConvertibleToDoubleCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     static itkSinImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkSinImageFilterIF3IF3(itkSinImageFilterIF3IF3 const & arg0);
     void operator=(itkSinImageFilterIF3IF3 const & arg0);
   protected:
     itkSinImageFilterIF3IF3();
     ~itkSinImageFilterIF3IF3();
 };


