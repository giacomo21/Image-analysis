# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkExpNegativeImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkExpNegativeImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkExpNegativeImageFilterPython
            return _itkExpNegativeImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkExpNegativeImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkExpNegativeImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkExpNegativeImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkExpNegativeImageFilterID3ID3_New():
  return itkExpNegativeImageFilterID3ID3.New()

def itkExpNegativeImageFilterID3ID3_Superclass_New():
  return itkExpNegativeImageFilterID3ID3_Superclass.New()

def itkExpNegativeImageFilterID2ID2_New():
  return itkExpNegativeImageFilterID2ID2.New()

def itkExpNegativeImageFilterID2ID2_Superclass_New():
  return itkExpNegativeImageFilterID2ID2_Superclass.New()

def itkExpNegativeImageFilterIF3IF3_New():
  return itkExpNegativeImageFilterIF3IF3.New()

def itkExpNegativeImageFilterIF3IF3_Superclass_New():
  return itkExpNegativeImageFilterIF3IF3_Superclass.New()

def itkExpNegativeImageFilterIF2IF2_New():
  return itkExpNegativeImageFilterIF2IF2.New()

def itkExpNegativeImageFilterIF2IF2_Superclass_New():
  return itkExpNegativeImageFilterIF2IF2_Superclass.New()

def itkExpNegativeImageFilterIUS3IUS3_New():
  return itkExpNegativeImageFilterIUS3IUS3.New()

def itkExpNegativeImageFilterIUS3IUS3_Superclass_New():
  return itkExpNegativeImageFilterIUS3IUS3_Superclass.New()

def itkExpNegativeImageFilterIUS2IUS2_New():
  return itkExpNegativeImageFilterIUS2IUS2.New()

def itkExpNegativeImageFilterIUS2IUS2_Superclass_New():
  return itkExpNegativeImageFilterIUS2IUS2_Superclass.New()

def itkExpNegativeImageFilterIUL3IUL3_New():
  return itkExpNegativeImageFilterIUL3IUL3.New()

def itkExpNegativeImageFilterIUL3IUL3_Superclass_New():
  return itkExpNegativeImageFilterIUL3IUL3_Superclass.New()

def itkExpNegativeImageFilterIUL2IUL2_New():
  return itkExpNegativeImageFilterIUL2IUL2.New()

def itkExpNegativeImageFilterIUL2IUL2_Superclass_New():
  return itkExpNegativeImageFilterIUL2IUL2_Superclass.New()

def itkExpNegativeImageFilterIUC3IUC3_New():
  return itkExpNegativeImageFilterIUC3IUC3.New()

def itkExpNegativeImageFilterIUC3IUC3_Superclass_New():
  return itkExpNegativeImageFilterIUC3IUC3_Superclass.New()

def itkExpNegativeImageFilterIUC2IUC2_New():
  return itkExpNegativeImageFilterIUC2IUC2.New()

def itkExpNegativeImageFilterIUC2IUC2_Superclass_New():
  return itkExpNegativeImageFilterIUC2IUC2_Superclass.New()

class itkExpNegativeImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkExpNegativeImageFilterID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(double,double)>
        GetFunctor(self) -> itk::Function::ExpNegative<(double,double)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(double,double)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterID2ID2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterID2ID2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterID2ID2_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass_GetFunctor,None,itkExpNegativeImageFilterID2ID2_Superclass)
itkExpNegativeImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass_SetFunctor,None,itkExpNegativeImageFilterID2ID2_Superclass)
itkExpNegativeImageFilterID2ID2_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass_GetPointer,None,itkExpNegativeImageFilterID2ID2_Superclass)
itkExpNegativeImageFilterID2ID2_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass_swigregister
itkExpNegativeImageFilterID2ID2_Superclass_swigregister(itkExpNegativeImageFilterID2ID2_Superclass)

def itkExpNegativeImageFilterID2ID2_Superclass___New_orig__():
  """itkExpNegativeImageFilterID2ID2_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass___New_orig__()

def itkExpNegativeImageFilterID2ID2_Superclass_cast(*args):
  """itkExpNegativeImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterID2ID2_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_Superclass_cast(*args)

class itkExpNegativeImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkExpNegativeImageFilterID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(double,double)>
        GetFunctor(self) -> itk::Function::ExpNegative<(double,double)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(double,double)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterID3ID3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterID3ID3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterID3ID3_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass_GetFunctor,None,itkExpNegativeImageFilterID3ID3_Superclass)
itkExpNegativeImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass_SetFunctor,None,itkExpNegativeImageFilterID3ID3_Superclass)
itkExpNegativeImageFilterID3ID3_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass_GetPointer,None,itkExpNegativeImageFilterID3ID3_Superclass)
itkExpNegativeImageFilterID3ID3_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass_swigregister
itkExpNegativeImageFilterID3ID3_Superclass_swigregister(itkExpNegativeImageFilterID3ID3_Superclass)

def itkExpNegativeImageFilterID3ID3_Superclass___New_orig__():
  """itkExpNegativeImageFilterID3ID3_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass___New_orig__()

def itkExpNegativeImageFilterID3ID3_Superclass_cast(*args):
  """itkExpNegativeImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterID3ID3_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_Superclass_cast(*args)

class itkExpNegativeImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkExpNegativeImageFilterIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(float,float)>
        GetFunctor(self) -> itk::Function::ExpNegative<(float,float)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(float,float)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIF2IF2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIF2IF2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIF2IF2_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_GetFunctor,None,itkExpNegativeImageFilterIF2IF2_Superclass)
itkExpNegativeImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_SetFunctor,None,itkExpNegativeImageFilterIF2IF2_Superclass)
itkExpNegativeImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_GetPointer,None,itkExpNegativeImageFilterIF2IF2_Superclass)
itkExpNegativeImageFilterIF2IF2_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_swigregister
itkExpNegativeImageFilterIF2IF2_Superclass_swigregister(itkExpNegativeImageFilterIF2IF2_Superclass)

def itkExpNegativeImageFilterIF2IF2_Superclass___New_orig__():
  """itkExpNegativeImageFilterIF2IF2_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass___New_orig__()

def itkExpNegativeImageFilterIF2IF2_Superclass_cast(*args):
  """itkExpNegativeImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIF2IF2_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_Superclass_cast(*args)

class itkExpNegativeImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkExpNegativeImageFilterIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(float,float)>
        GetFunctor(self) -> itk::Function::ExpNegative<(float,float)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(float,float)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIF3IF3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIF3IF3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIF3IF3_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_GetFunctor,None,itkExpNegativeImageFilterIF3IF3_Superclass)
itkExpNegativeImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_SetFunctor,None,itkExpNegativeImageFilterIF3IF3_Superclass)
itkExpNegativeImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_GetPointer,None,itkExpNegativeImageFilterIF3IF3_Superclass)
itkExpNegativeImageFilterIF3IF3_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_swigregister
itkExpNegativeImageFilterIF3IF3_Superclass_swigregister(itkExpNegativeImageFilterIF3IF3_Superclass)

def itkExpNegativeImageFilterIF3IF3_Superclass___New_orig__():
  """itkExpNegativeImageFilterIF3IF3_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass___New_orig__()

def itkExpNegativeImageFilterIF3IF3_Superclass_cast(*args):
  """itkExpNegativeImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIF3IF3_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_Superclass_cast(*args)

class itkExpNegativeImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkExpNegativeImageFilterIUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned char,unsigned char)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(unsigned char,unsigned char)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC2IUC2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUC2IUC2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUC2IUC2_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_GetFunctor,None,itkExpNegativeImageFilterIUC2IUC2_Superclass)
itkExpNegativeImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_SetFunctor,None,itkExpNegativeImageFilterIUC2IUC2_Superclass)
itkExpNegativeImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_GetPointer,None,itkExpNegativeImageFilterIUC2IUC2_Superclass)
itkExpNegativeImageFilterIUC2IUC2_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_swigregister
itkExpNegativeImageFilterIUC2IUC2_Superclass_swigregister(itkExpNegativeImageFilterIUC2IUC2_Superclass)

def itkExpNegativeImageFilterIUC2IUC2_Superclass___New_orig__():
  """itkExpNegativeImageFilterIUC2IUC2_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass___New_orig__()

def itkExpNegativeImageFilterIUC2IUC2_Superclass_cast(*args):
  """itkExpNegativeImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC2IUC2_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_Superclass_cast(*args)

class itkExpNegativeImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkExpNegativeImageFilterIUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned char,unsigned char)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(unsigned char,unsigned char)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC3IUC3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUC3IUC3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUC3IUC3_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_GetFunctor,None,itkExpNegativeImageFilterIUC3IUC3_Superclass)
itkExpNegativeImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_SetFunctor,None,itkExpNegativeImageFilterIUC3IUC3_Superclass)
itkExpNegativeImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_GetPointer,None,itkExpNegativeImageFilterIUC3IUC3_Superclass)
itkExpNegativeImageFilterIUC3IUC3_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_swigregister
itkExpNegativeImageFilterIUC3IUC3_Superclass_swigregister(itkExpNegativeImageFilterIUC3IUC3_Superclass)

def itkExpNegativeImageFilterIUC3IUC3_Superclass___New_orig__():
  """itkExpNegativeImageFilterIUC3IUC3_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass___New_orig__()

def itkExpNegativeImageFilterIUC3IUC3_Superclass_cast(*args):
  """itkExpNegativeImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC3IUC3_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_Superclass_cast(*args)

class itkExpNegativeImageFilterIUL2IUL2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkExpNegativeImageFilterIUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned long,unsigned long)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(unsigned long,unsigned long)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUL2IUL2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUL2IUL2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUL2IUL2_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterIUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUL2IUL2_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass_GetFunctor,None,itkExpNegativeImageFilterIUL2IUL2_Superclass)
itkExpNegativeImageFilterIUL2IUL2_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass_SetFunctor,None,itkExpNegativeImageFilterIUL2IUL2_Superclass)
itkExpNegativeImageFilterIUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass_GetPointer,None,itkExpNegativeImageFilterIUL2IUL2_Superclass)
itkExpNegativeImageFilterIUL2IUL2_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass_swigregister
itkExpNegativeImageFilterIUL2IUL2_Superclass_swigregister(itkExpNegativeImageFilterIUL2IUL2_Superclass)

def itkExpNegativeImageFilterIUL2IUL2_Superclass___New_orig__():
  """itkExpNegativeImageFilterIUL2IUL2_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass___New_orig__()

def itkExpNegativeImageFilterIUL2IUL2_Superclass_cast(*args):
  """itkExpNegativeImageFilterIUL2IUL2_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUL2IUL2_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_Superclass_cast(*args)

class itkExpNegativeImageFilterIUL3IUL3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkExpNegativeImageFilterIUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned long,unsigned long)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(unsigned long,unsigned long)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUL3IUL3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUL3IUL3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUL3IUL3_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterIUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUL3IUL3_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass_GetFunctor,None,itkExpNegativeImageFilterIUL3IUL3_Superclass)
itkExpNegativeImageFilterIUL3IUL3_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass_SetFunctor,None,itkExpNegativeImageFilterIUL3IUL3_Superclass)
itkExpNegativeImageFilterIUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass_GetPointer,None,itkExpNegativeImageFilterIUL3IUL3_Superclass)
itkExpNegativeImageFilterIUL3IUL3_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass_swigregister
itkExpNegativeImageFilterIUL3IUL3_Superclass_swigregister(itkExpNegativeImageFilterIUL3IUL3_Superclass)

def itkExpNegativeImageFilterIUL3IUL3_Superclass___New_orig__():
  """itkExpNegativeImageFilterIUL3IUL3_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass___New_orig__()

def itkExpNegativeImageFilterIUL3IUL3_Superclass_cast(*args):
  """itkExpNegativeImageFilterIUL3IUL3_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUL3IUL3_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_Superclass_cast(*args)

class itkExpNegativeImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkExpNegativeImageFilterIUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned short,unsigned short)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(unsigned short,unsigned short)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS2IUS2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUS2IUS2_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUS2IUS2_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_GetFunctor,None,itkExpNegativeImageFilterIUS2IUS2_Superclass)
itkExpNegativeImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_SetFunctor,None,itkExpNegativeImageFilterIUS2IUS2_Superclass)
itkExpNegativeImageFilterIUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_GetPointer,None,itkExpNegativeImageFilterIUS2IUS2_Superclass)
itkExpNegativeImageFilterIUS2IUS2_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_swigregister
itkExpNegativeImageFilterIUS2IUS2_Superclass_swigregister(itkExpNegativeImageFilterIUS2IUS2_Superclass)

def itkExpNegativeImageFilterIUS2IUS2_Superclass___New_orig__():
  """itkExpNegativeImageFilterIUS2IUS2_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass___New_orig__()

def itkExpNegativeImageFilterIUS2IUS2_Superclass_cast(*args):
  """itkExpNegativeImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS2IUS2_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_Superclass_cast(*args)

class itkExpNegativeImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkExpNegativeImageFilterIUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::ExpNegative<(unsigned short,unsigned short)>
        """
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::ExpNegative<(unsigned short,unsigned short)> functor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS3IUS3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUS3IUS3_Superclass"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUS3IUS3_Superclass
        
        Create a new object of the class itkExpNegativeImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_GetFunctor,None,itkExpNegativeImageFilterIUS3IUS3_Superclass)
itkExpNegativeImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_SetFunctor,None,itkExpNegativeImageFilterIUS3IUS3_Superclass)
itkExpNegativeImageFilterIUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_GetPointer,None,itkExpNegativeImageFilterIUS3IUS3_Superclass)
itkExpNegativeImageFilterIUS3IUS3_Superclass_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_swigregister
itkExpNegativeImageFilterIUS3IUS3_Superclass_swigregister(itkExpNegativeImageFilterIUS3IUS3_Superclass)

def itkExpNegativeImageFilterIUS3IUS3_Superclass___New_orig__():
  """itkExpNegativeImageFilterIUS3IUS3_Superclass___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass___New_orig__()

def itkExpNegativeImageFilterIUS3IUS3_Superclass_cast(*args):
  """itkExpNegativeImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS3IUS3_Superclass"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_Superclass_cast(*args)

class itkExpNegativeImageFilterID2ID2(itkExpNegativeImageFilterID2ID2_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterID2ID2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterID2ID2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterID2ID2
        
        Create a new object of the class itkExpNegativeImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterID2ID2.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_SetFactor,None,itkExpNegativeImageFilterID2ID2)
itkExpNegativeImageFilterID2ID2.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_GetPointer,None,itkExpNegativeImageFilterID2ID2)
itkExpNegativeImageFilterID2ID2_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_swigregister
itkExpNegativeImageFilterID2ID2_swigregister(itkExpNegativeImageFilterID2ID2)

def itkExpNegativeImageFilterID2ID2___New_orig__():
  """itkExpNegativeImageFilterID2ID2___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2___New_orig__()

def itkExpNegativeImageFilterID2ID2_cast(*args):
  """itkExpNegativeImageFilterID2ID2_cast(itkLightObject obj) -> itkExpNegativeImageFilterID2ID2"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID2ID2_cast(*args)

class itkExpNegativeImageFilterID3ID3(itkExpNegativeImageFilterID3ID3_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterID3ID3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterID3ID3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterID3ID3
        
        Create a new object of the class itkExpNegativeImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterID3ID3.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_SetFactor,None,itkExpNegativeImageFilterID3ID3)
itkExpNegativeImageFilterID3ID3.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_GetPointer,None,itkExpNegativeImageFilterID3ID3)
itkExpNegativeImageFilterID3ID3_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_swigregister
itkExpNegativeImageFilterID3ID3_swigregister(itkExpNegativeImageFilterID3ID3)

def itkExpNegativeImageFilterID3ID3___New_orig__():
  """itkExpNegativeImageFilterID3ID3___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3___New_orig__()

def itkExpNegativeImageFilterID3ID3_cast(*args):
  """itkExpNegativeImageFilterID3ID3_cast(itkLightObject obj) -> itkExpNegativeImageFilterID3ID3"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterID3ID3_cast(*args)

class itkExpNegativeImageFilterIF2IF2(itkExpNegativeImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIF2IF2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIF2IF2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIF2IF2
        
        Create a new object of the class itkExpNegativeImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIF2IF2.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_SetFactor,None,itkExpNegativeImageFilterIF2IF2)
itkExpNegativeImageFilterIF2IF2.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_GetPointer,None,itkExpNegativeImageFilterIF2IF2)
itkExpNegativeImageFilterIF2IF2_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_swigregister
itkExpNegativeImageFilterIF2IF2_swigregister(itkExpNegativeImageFilterIF2IF2)

def itkExpNegativeImageFilterIF2IF2___New_orig__():
  """itkExpNegativeImageFilterIF2IF2___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2___New_orig__()

def itkExpNegativeImageFilterIF2IF2_cast(*args):
  """itkExpNegativeImageFilterIF2IF2_cast(itkLightObject obj) -> itkExpNegativeImageFilterIF2IF2"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF2IF2_cast(*args)

class itkExpNegativeImageFilterIF3IF3(itkExpNegativeImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIF3IF3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIF3IF3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIF3IF3
        
        Create a new object of the class itkExpNegativeImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIF3IF3.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_SetFactor,None,itkExpNegativeImageFilterIF3IF3)
itkExpNegativeImageFilterIF3IF3.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_GetPointer,None,itkExpNegativeImageFilterIF3IF3)
itkExpNegativeImageFilterIF3IF3_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_swigregister
itkExpNegativeImageFilterIF3IF3_swigregister(itkExpNegativeImageFilterIF3IF3)

def itkExpNegativeImageFilterIF3IF3___New_orig__():
  """itkExpNegativeImageFilterIF3IF3___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3___New_orig__()

def itkExpNegativeImageFilterIF3IF3_cast(*args):
  """itkExpNegativeImageFilterIF3IF3_cast(itkLightObject obj) -> itkExpNegativeImageFilterIF3IF3"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIF3IF3_cast(*args)

class itkExpNegativeImageFilterIUC2IUC2(itkExpNegativeImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC2IUC2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUC2IUC2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUC2IUC2
        
        Create a new object of the class itkExpNegativeImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUC2IUC2.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_SetFactor,None,itkExpNegativeImageFilterIUC2IUC2)
itkExpNegativeImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_GetPointer,None,itkExpNegativeImageFilterIUC2IUC2)
itkExpNegativeImageFilterIUC2IUC2_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_swigregister
itkExpNegativeImageFilterIUC2IUC2_swigregister(itkExpNegativeImageFilterIUC2IUC2)

def itkExpNegativeImageFilterIUC2IUC2___New_orig__():
  """itkExpNegativeImageFilterIUC2IUC2___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2___New_orig__()

def itkExpNegativeImageFilterIUC2IUC2_cast(*args):
  """itkExpNegativeImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC2IUC2"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC2IUC2_cast(*args)

class itkExpNegativeImageFilterIUC3IUC3(itkExpNegativeImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC3IUC3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUC3IUC3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUC3IUC3
        
        Create a new object of the class itkExpNegativeImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUC3IUC3.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_SetFactor,None,itkExpNegativeImageFilterIUC3IUC3)
itkExpNegativeImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_GetPointer,None,itkExpNegativeImageFilterIUC3IUC3)
itkExpNegativeImageFilterIUC3IUC3_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_swigregister
itkExpNegativeImageFilterIUC3IUC3_swigregister(itkExpNegativeImageFilterIUC3IUC3)

def itkExpNegativeImageFilterIUC3IUC3___New_orig__():
  """itkExpNegativeImageFilterIUC3IUC3___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3___New_orig__()

def itkExpNegativeImageFilterIUC3IUC3_cast(*args):
  """itkExpNegativeImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUC3IUC3"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUC3IUC3_cast(*args)

class itkExpNegativeImageFilterIUL2IUL2(itkExpNegativeImageFilterIUL2IUL2_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUL2IUL2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUL2IUL2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUL2IUL2
        
        Create a new object of the class itkExpNegativeImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUL2IUL2.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_SetFactor,None,itkExpNegativeImageFilterIUL2IUL2)
itkExpNegativeImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_GetPointer,None,itkExpNegativeImageFilterIUL2IUL2)
itkExpNegativeImageFilterIUL2IUL2_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_swigregister
itkExpNegativeImageFilterIUL2IUL2_swigregister(itkExpNegativeImageFilterIUL2IUL2)

def itkExpNegativeImageFilterIUL2IUL2___New_orig__():
  """itkExpNegativeImageFilterIUL2IUL2___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2___New_orig__()

def itkExpNegativeImageFilterIUL2IUL2_cast(*args):
  """itkExpNegativeImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUL2IUL2"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL2IUL2_cast(*args)

class itkExpNegativeImageFilterIUL3IUL3(itkExpNegativeImageFilterIUL3IUL3_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUL3IUL3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUL3IUL3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUL3IUL3
        
        Create a new object of the class itkExpNegativeImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUL3IUL3.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_SetFactor,None,itkExpNegativeImageFilterIUL3IUL3)
itkExpNegativeImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_GetPointer,None,itkExpNegativeImageFilterIUL3IUL3)
itkExpNegativeImageFilterIUL3IUL3_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_swigregister
itkExpNegativeImageFilterIUL3IUL3_swigregister(itkExpNegativeImageFilterIUL3IUL3)

def itkExpNegativeImageFilterIUL3IUL3___New_orig__():
  """itkExpNegativeImageFilterIUL3IUL3___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3___New_orig__()

def itkExpNegativeImageFilterIUL3IUL3_cast(*args):
  """itkExpNegativeImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUL3IUL3"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUL3IUL3_cast(*args)

class itkExpNegativeImageFilterIUS2IUS2(itkExpNegativeImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS2IUS2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUS2IUS2"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUS2IUS2
        
        Create a new object of the class itkExpNegativeImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUS2IUS2.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_SetFactor,None,itkExpNegativeImageFilterIUS2IUS2)
itkExpNegativeImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_GetPointer,None,itkExpNegativeImageFilterIUS2IUS2)
itkExpNegativeImageFilterIUS2IUS2_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_swigregister
itkExpNegativeImageFilterIUS2IUS2_swigregister(itkExpNegativeImageFilterIUS2IUS2)

def itkExpNegativeImageFilterIUS2IUS2___New_orig__():
  """itkExpNegativeImageFilterIUS2IUS2___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2___New_orig__()

def itkExpNegativeImageFilterIUS2IUS2_cast(*args):
  """itkExpNegativeImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS2IUS2"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS2IUS2_cast(*args)

class itkExpNegativeImageFilterIUS3IUS3(itkExpNegativeImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkExpNegativeImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputConvertibleToDoubleCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_InputConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetFactor(self, *args):
        """SetFactor(self, double factor)"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_SetFactor(self, *args)

    __swig_destroy__ = _itkExpNegativeImageFilterPython.delete_itkExpNegativeImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS3IUS3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkExpNegativeImageFilterIUS3IUS3"""
        return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkExpNegativeImageFilterIUS3IUS3
        
        Create a new object of the class itkExpNegativeImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkExpNegativeImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkExpNegativeImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkExpNegativeImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkExpNegativeImageFilterIUS3IUS3.SetFactor = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_SetFactor,None,itkExpNegativeImageFilterIUS3IUS3)
itkExpNegativeImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_GetPointer,None,itkExpNegativeImageFilterIUS3IUS3)
itkExpNegativeImageFilterIUS3IUS3_swigregister = _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_swigregister
itkExpNegativeImageFilterIUS3IUS3_swigregister(itkExpNegativeImageFilterIUS3IUS3)

def itkExpNegativeImageFilterIUS3IUS3___New_orig__():
  """itkExpNegativeImageFilterIUS3IUS3___New_orig__()"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3___New_orig__()

def itkExpNegativeImageFilterIUS3IUS3_cast(*args):
  """itkExpNegativeImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkExpNegativeImageFilterIUS3IUS3"""
  return _itkExpNegativeImageFilterPython.itkExpNegativeImageFilterIUS3IUS3_cast(*args)



