# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkImagePython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImagePython', [dirname(__file__)])
        except ImportError:
            import _itkImagePython
            return _itkImagePython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImagePython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImagePython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImagePython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFixedArrayPython
import pyBasePython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
def itkImageSSRTD33_New():
  return itkImageSSRTD33.New()

def itkImageO33_New():
  return itkImageO33.New()

def itkImageFAF33_New():
  return itkImageFAF33.New()

def itkImageRGBAUC3_New():
  return itkImageRGBAUC3.New()

def itkImageRGBUC3_New():
  return itkImageRGBUC3.New()

def itkImageCF3_New():
  return itkImageCF3.New()

def itkImageD3_New():
  return itkImageD3.New()

def itkImageF3_New():
  return itkImageF3.New()

def itkImageUS3_New():
  return itkImageUS3.New()

def itkImageUL3_New():
  return itkImageUL3.New()

def itkImageUC3_New():
  return itkImageUC3.New()

def itkImageCVF33_New():
  return itkImageCVF33.New()

def itkImageVF33_New():
  return itkImageVF33.New()

def itkImageRGBAUS3_New():
  return itkImageRGBAUS3.New()

def itkImageRGBUS3_New():
  return itkImageRGBUS3.New()

def itkImageSSRTD22_New():
  return itkImageSSRTD22.New()

def itkImageO22_New():
  return itkImageO22.New()

def itkImageFAF22_New():
  return itkImageFAF22.New()

def itkImageRGBAUC2_New():
  return itkImageRGBAUC2.New()

def itkImageRGBUC2_New():
  return itkImageRGBUC2.New()

def itkImageCF2_New():
  return itkImageCF2.New()

def itkImageD2_New():
  return itkImageD2.New()

def itkImageF2_New():
  return itkImageF2.New()

def itkImageUS2_New():
  return itkImageUS2.New()

def itkImageUL2_New():
  return itkImageUL2.New()

def itkImageUC2_New():
  return itkImageUC2.New()

def itkImageCVF22_New():
  return itkImageCVF22.New()

def itkImageVF22_New():
  return itkImageVF22.New()

def itkImageRGBAUS2_New():
  return itkImageRGBAUS2.New()

def itkImageRGBUS2_New():
  return itkImageRGBUS2.New()

def itkImageBase3_New():
  return itkImageBase3.New()

def itkImageBase2_New():
  return itkImageBase2.New()

class itkImageBase2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkImageBase2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageBase2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageBase2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetImageDimension():
        """GetImageDimension() -> unsigned int"""
        return _itkImagePython.itkImageBase2_GetImageDimension()

    GetImageDimension = staticmethod(GetImageDimension)
    def SetOrigin(self, *args):
        """
        SetOrigin(self, itkPointD2 _arg)
        SetOrigin(self, double origin)
        SetOrigin(self, float origin)
        """
        return _itkImagePython.itkImageBase2_SetOrigin(self, *args)

    def SetDirection(self, *args):
        """SetDirection(self, itkMatrixD22 direction)"""
        return _itkImagePython.itkImageBase2_SetDirection(self, *args)

    def GetDirection(self):
        """GetDirection(self) -> itkMatrixD22"""
        return _itkImagePython.itkImageBase2_GetDirection(self)

    def GetSpacing(self):
        """GetSpacing(self) -> itkVectorD2"""
        return _itkImagePython.itkImageBase2_GetSpacing(self)

    def GetOrigin(self):
        """GetOrigin(self) -> itkPointD2"""
        return _itkImagePython.itkImageBase2_GetOrigin(self)

    def Allocate(self):
        """Allocate(self)"""
        return _itkImagePython.itkImageBase2_Allocate(self)

    def SetLargestPossibleRegion(self, *args):
        """SetLargestPossibleRegion(self, itkImageRegion2 region)"""
        return _itkImagePython.itkImageBase2_SetLargestPossibleRegion(self, *args)

    def GetLargestPossibleRegion(self):
        """GetLargestPossibleRegion(self) -> itkImageRegion2"""
        return _itkImagePython.itkImageBase2_GetLargestPossibleRegion(self)

    def SetBufferedRegion(self, *args):
        """SetBufferedRegion(self, itkImageRegion2 region)"""
        return _itkImagePython.itkImageBase2_SetBufferedRegion(self, *args)

    def GetBufferedRegion(self):
        """GetBufferedRegion(self) -> itkImageRegion2"""
        return _itkImagePython.itkImageBase2_GetBufferedRegion(self)

    def SetRequestedRegion(self, *args):
        """
        SetRequestedRegion(self, itkImageRegion2 region)
        SetRequestedRegion(self, itkDataObject data)
        """
        return _itkImagePython.itkImageBase2_SetRequestedRegion(self, *args)

    def GetRequestedRegion(self):
        """GetRequestedRegion(self) -> itkImageRegion2"""
        return _itkImagePython.itkImageBase2_GetRequestedRegion(self)

    def GetOffsetTable(self):
        """GetOffsetTable(self) -> long"""
        return _itkImagePython.itkImageBase2_GetOffsetTable(self)

    def ComputeOffset(self, *args):
        """ComputeOffset(self, itkIndex2 ind) -> long"""
        return _itkImagePython.itkImageBase2_ComputeOffset(self, *args)

    def ComputeIndex(self, *args):
        """ComputeIndex(self, long offset) -> itkIndex2"""
        return _itkImagePython.itkImageBase2_ComputeIndex(self, *args)

    def SetSpacing(self, *args):
        """
        SetSpacing(self, itkVectorD2 spacing)
        SetSpacing(self, double spacing)
        SetSpacing(self, float spacing)
        """
        return _itkImagePython.itkImageBase2_SetSpacing(self, *args)

    def GetNumberOfComponentsPerPixel(self):
        """GetNumberOfComponentsPerPixel(self) -> unsigned int"""
        return _itkImagePython.itkImageBase2_GetNumberOfComponentsPerPixel(self)

    def SetNumberOfComponentsPerPixel(self, *args):
        """SetNumberOfComponentsPerPixel(self, unsigned int arg0)"""
        return _itkImagePython.itkImageBase2_SetNumberOfComponentsPerPixel(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageBase2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageBase2"""
        return _itkImagePython.itkImageBase2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageBase2"""
        return _itkImagePython.itkImageBase2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageBase2
        
        Create a new object of the class itkImageBase2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageBase2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageBase2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageBase2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

    def TransformPhysicalPointToIndex(self, *args):
        """TransformPhysicalPointToIndex(self, itkPointD2 point) -> itkIndex2"""
        return _itkImagePython.itkImageBase2_TransformPhysicalPointToIndex(self, *args)

    def TransformPhysicalPointToContinuousIndex(self, *args):
        """TransformPhysicalPointToContinuousIndex(self, itkPointD2 point) -> itkContinuousIndexD2"""
        return _itkImagePython.itkImageBase2_TransformPhysicalPointToContinuousIndex(self, *args)

    def TransformContinuousIndexToPhysicalPoint(self, *args):
        """TransformContinuousIndexToPhysicalPoint(self, itkContinuousIndexD2 idx) -> itkPointD2"""
        return _itkImagePython.itkImageBase2_TransformContinuousIndexToPhysicalPoint(self, *args)

    def TransformIndexToPhysicalPoint(self, *args):
        """TransformIndexToPhysicalPoint(self, itkIndex2 idx) -> itkPointD2"""
        return _itkImagePython.itkImageBase2_TransformIndexToPhysicalPoint(self, *args)

itkImageBase2.SetOrigin = new_instancemethod(_itkImagePython.itkImageBase2_SetOrigin,None,itkImageBase2)
itkImageBase2.SetDirection = new_instancemethod(_itkImagePython.itkImageBase2_SetDirection,None,itkImageBase2)
itkImageBase2.GetDirection = new_instancemethod(_itkImagePython.itkImageBase2_GetDirection,None,itkImageBase2)
itkImageBase2.GetSpacing = new_instancemethod(_itkImagePython.itkImageBase2_GetSpacing,None,itkImageBase2)
itkImageBase2.GetOrigin = new_instancemethod(_itkImagePython.itkImageBase2_GetOrigin,None,itkImageBase2)
itkImageBase2.Allocate = new_instancemethod(_itkImagePython.itkImageBase2_Allocate,None,itkImageBase2)
itkImageBase2.SetLargestPossibleRegion = new_instancemethod(_itkImagePython.itkImageBase2_SetLargestPossibleRegion,None,itkImageBase2)
itkImageBase2.GetLargestPossibleRegion = new_instancemethod(_itkImagePython.itkImageBase2_GetLargestPossibleRegion,None,itkImageBase2)
itkImageBase2.SetBufferedRegion = new_instancemethod(_itkImagePython.itkImageBase2_SetBufferedRegion,None,itkImageBase2)
itkImageBase2.GetBufferedRegion = new_instancemethod(_itkImagePython.itkImageBase2_GetBufferedRegion,None,itkImageBase2)
itkImageBase2.SetRequestedRegion = new_instancemethod(_itkImagePython.itkImageBase2_SetRequestedRegion,None,itkImageBase2)
itkImageBase2.GetRequestedRegion = new_instancemethod(_itkImagePython.itkImageBase2_GetRequestedRegion,None,itkImageBase2)
itkImageBase2.GetOffsetTable = new_instancemethod(_itkImagePython.itkImageBase2_GetOffsetTable,None,itkImageBase2)
itkImageBase2.ComputeOffset = new_instancemethod(_itkImagePython.itkImageBase2_ComputeOffset,None,itkImageBase2)
itkImageBase2.ComputeIndex = new_instancemethod(_itkImagePython.itkImageBase2_ComputeIndex,None,itkImageBase2)
itkImageBase2.SetSpacing = new_instancemethod(_itkImagePython.itkImageBase2_SetSpacing,None,itkImageBase2)
itkImageBase2.GetNumberOfComponentsPerPixel = new_instancemethod(_itkImagePython.itkImageBase2_GetNumberOfComponentsPerPixel,None,itkImageBase2)
itkImageBase2.SetNumberOfComponentsPerPixel = new_instancemethod(_itkImagePython.itkImageBase2_SetNumberOfComponentsPerPixel,None,itkImageBase2)
itkImageBase2.GetPointer = new_instancemethod(_itkImagePython.itkImageBase2_GetPointer,None,itkImageBase2)
itkImageBase2.TransformPhysicalPointToIndex = new_instancemethod(_itkImagePython.itkImageBase2_TransformPhysicalPointToIndex,None,itkImageBase2)
itkImageBase2.TransformPhysicalPointToContinuousIndex = new_instancemethod(_itkImagePython.itkImageBase2_TransformPhysicalPointToContinuousIndex,None,itkImageBase2)
itkImageBase2.TransformContinuousIndexToPhysicalPoint = new_instancemethod(_itkImagePython.itkImageBase2_TransformContinuousIndexToPhysicalPoint,None,itkImageBase2)
itkImageBase2.TransformIndexToPhysicalPoint = new_instancemethod(_itkImagePython.itkImageBase2_TransformIndexToPhysicalPoint,None,itkImageBase2)
itkImageBase2_swigregister = _itkImagePython.itkImageBase2_swigregister
itkImageBase2_swigregister(itkImageBase2)

def itkImageBase2___New_orig__():
  """itkImageBase2___New_orig__()"""
  return _itkImagePython.itkImageBase2___New_orig__()

def itkImageBase2_GetImageDimension():
  """itkImageBase2_GetImageDimension() -> unsigned int"""
  return _itkImagePython.itkImageBase2_GetImageDimension()

def itkImageBase2_cast(*args):
  """itkImageBase2_cast(itkLightObject obj) -> itkImageBase2"""
  return _itkImagePython.itkImageBase2_cast(*args)

class itkImageBase3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkImageBase3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageBase3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageBase3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetImageDimension():
        """GetImageDimension() -> unsigned int"""
        return _itkImagePython.itkImageBase3_GetImageDimension()

    GetImageDimension = staticmethod(GetImageDimension)
    def SetOrigin(self, *args):
        """
        SetOrigin(self, itkPointD3 _arg)
        SetOrigin(self, double origin)
        SetOrigin(self, float origin)
        """
        return _itkImagePython.itkImageBase3_SetOrigin(self, *args)

    def SetDirection(self, *args):
        """SetDirection(self, itkMatrixD33 direction)"""
        return _itkImagePython.itkImageBase3_SetDirection(self, *args)

    def GetDirection(self):
        """GetDirection(self) -> itkMatrixD33"""
        return _itkImagePython.itkImageBase3_GetDirection(self)

    def GetSpacing(self):
        """GetSpacing(self) -> itkVectorD3"""
        return _itkImagePython.itkImageBase3_GetSpacing(self)

    def GetOrigin(self):
        """GetOrigin(self) -> itkPointD3"""
        return _itkImagePython.itkImageBase3_GetOrigin(self)

    def Allocate(self):
        """Allocate(self)"""
        return _itkImagePython.itkImageBase3_Allocate(self)

    def SetLargestPossibleRegion(self, *args):
        """SetLargestPossibleRegion(self, itkImageRegion3 region)"""
        return _itkImagePython.itkImageBase3_SetLargestPossibleRegion(self, *args)

    def GetLargestPossibleRegion(self):
        """GetLargestPossibleRegion(self) -> itkImageRegion3"""
        return _itkImagePython.itkImageBase3_GetLargestPossibleRegion(self)

    def SetBufferedRegion(self, *args):
        """SetBufferedRegion(self, itkImageRegion3 region)"""
        return _itkImagePython.itkImageBase3_SetBufferedRegion(self, *args)

    def GetBufferedRegion(self):
        """GetBufferedRegion(self) -> itkImageRegion3"""
        return _itkImagePython.itkImageBase3_GetBufferedRegion(self)

    def SetRequestedRegion(self, *args):
        """
        SetRequestedRegion(self, itkImageRegion3 region)
        SetRequestedRegion(self, itkDataObject data)
        """
        return _itkImagePython.itkImageBase3_SetRequestedRegion(self, *args)

    def GetRequestedRegion(self):
        """GetRequestedRegion(self) -> itkImageRegion3"""
        return _itkImagePython.itkImageBase3_GetRequestedRegion(self)

    def GetOffsetTable(self):
        """GetOffsetTable(self) -> long"""
        return _itkImagePython.itkImageBase3_GetOffsetTable(self)

    def ComputeOffset(self, *args):
        """ComputeOffset(self, itkIndex3 ind) -> long"""
        return _itkImagePython.itkImageBase3_ComputeOffset(self, *args)

    def ComputeIndex(self, *args):
        """ComputeIndex(self, long offset) -> itkIndex3"""
        return _itkImagePython.itkImageBase3_ComputeIndex(self, *args)

    def SetSpacing(self, *args):
        """
        SetSpacing(self, itkVectorD3 spacing)
        SetSpacing(self, double spacing)
        SetSpacing(self, float spacing)
        """
        return _itkImagePython.itkImageBase3_SetSpacing(self, *args)

    def GetNumberOfComponentsPerPixel(self):
        """GetNumberOfComponentsPerPixel(self) -> unsigned int"""
        return _itkImagePython.itkImageBase3_GetNumberOfComponentsPerPixel(self)

    def SetNumberOfComponentsPerPixel(self, *args):
        """SetNumberOfComponentsPerPixel(self, unsigned int arg0)"""
        return _itkImagePython.itkImageBase3_SetNumberOfComponentsPerPixel(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageBase3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageBase3"""
        return _itkImagePython.itkImageBase3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageBase3"""
        return _itkImagePython.itkImageBase3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageBase3
        
        Create a new object of the class itkImageBase3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageBase3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageBase3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageBase3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

    def TransformPhysicalPointToIndex(self, *args):
        """TransformPhysicalPointToIndex(self, itkPointD3 point) -> itkIndex3"""
        return _itkImagePython.itkImageBase3_TransformPhysicalPointToIndex(self, *args)

    def TransformPhysicalPointToContinuousIndex(self, *args):
        """TransformPhysicalPointToContinuousIndex(self, itkPointD3 point) -> itkContinuousIndexD3"""
        return _itkImagePython.itkImageBase3_TransformPhysicalPointToContinuousIndex(self, *args)

    def TransformContinuousIndexToPhysicalPoint(self, *args):
        """TransformContinuousIndexToPhysicalPoint(self, itkContinuousIndexD3 idx) -> itkPointD3"""
        return _itkImagePython.itkImageBase3_TransformContinuousIndexToPhysicalPoint(self, *args)

    def TransformIndexToPhysicalPoint(self, *args):
        """TransformIndexToPhysicalPoint(self, itkIndex3 idx) -> itkPointD3"""
        return _itkImagePython.itkImageBase3_TransformIndexToPhysicalPoint(self, *args)

itkImageBase3.SetOrigin = new_instancemethod(_itkImagePython.itkImageBase3_SetOrigin,None,itkImageBase3)
itkImageBase3.SetDirection = new_instancemethod(_itkImagePython.itkImageBase3_SetDirection,None,itkImageBase3)
itkImageBase3.GetDirection = new_instancemethod(_itkImagePython.itkImageBase3_GetDirection,None,itkImageBase3)
itkImageBase3.GetSpacing = new_instancemethod(_itkImagePython.itkImageBase3_GetSpacing,None,itkImageBase3)
itkImageBase3.GetOrigin = new_instancemethod(_itkImagePython.itkImageBase3_GetOrigin,None,itkImageBase3)
itkImageBase3.Allocate = new_instancemethod(_itkImagePython.itkImageBase3_Allocate,None,itkImageBase3)
itkImageBase3.SetLargestPossibleRegion = new_instancemethod(_itkImagePython.itkImageBase3_SetLargestPossibleRegion,None,itkImageBase3)
itkImageBase3.GetLargestPossibleRegion = new_instancemethod(_itkImagePython.itkImageBase3_GetLargestPossibleRegion,None,itkImageBase3)
itkImageBase3.SetBufferedRegion = new_instancemethod(_itkImagePython.itkImageBase3_SetBufferedRegion,None,itkImageBase3)
itkImageBase3.GetBufferedRegion = new_instancemethod(_itkImagePython.itkImageBase3_GetBufferedRegion,None,itkImageBase3)
itkImageBase3.SetRequestedRegion = new_instancemethod(_itkImagePython.itkImageBase3_SetRequestedRegion,None,itkImageBase3)
itkImageBase3.GetRequestedRegion = new_instancemethod(_itkImagePython.itkImageBase3_GetRequestedRegion,None,itkImageBase3)
itkImageBase3.GetOffsetTable = new_instancemethod(_itkImagePython.itkImageBase3_GetOffsetTable,None,itkImageBase3)
itkImageBase3.ComputeOffset = new_instancemethod(_itkImagePython.itkImageBase3_ComputeOffset,None,itkImageBase3)
itkImageBase3.ComputeIndex = new_instancemethod(_itkImagePython.itkImageBase3_ComputeIndex,None,itkImageBase3)
itkImageBase3.SetSpacing = new_instancemethod(_itkImagePython.itkImageBase3_SetSpacing,None,itkImageBase3)
itkImageBase3.GetNumberOfComponentsPerPixel = new_instancemethod(_itkImagePython.itkImageBase3_GetNumberOfComponentsPerPixel,None,itkImageBase3)
itkImageBase3.SetNumberOfComponentsPerPixel = new_instancemethod(_itkImagePython.itkImageBase3_SetNumberOfComponentsPerPixel,None,itkImageBase3)
itkImageBase3.GetPointer = new_instancemethod(_itkImagePython.itkImageBase3_GetPointer,None,itkImageBase3)
itkImageBase3.TransformPhysicalPointToIndex = new_instancemethod(_itkImagePython.itkImageBase3_TransformPhysicalPointToIndex,None,itkImageBase3)
itkImageBase3.TransformPhysicalPointToContinuousIndex = new_instancemethod(_itkImagePython.itkImageBase3_TransformPhysicalPointToContinuousIndex,None,itkImageBase3)
itkImageBase3.TransformContinuousIndexToPhysicalPoint = new_instancemethod(_itkImagePython.itkImageBase3_TransformContinuousIndexToPhysicalPoint,None,itkImageBase3)
itkImageBase3.TransformIndexToPhysicalPoint = new_instancemethod(_itkImagePython.itkImageBase3_TransformIndexToPhysicalPoint,None,itkImageBase3)
itkImageBase3_swigregister = _itkImagePython.itkImageBase3_swigregister
itkImageBase3_swigregister(itkImageBase3)

def itkImageBase3___New_orig__():
  """itkImageBase3___New_orig__()"""
  return _itkImagePython.itkImageBase3___New_orig__()

def itkImageBase3_GetImageDimension():
  """itkImageBase3_GetImageDimension() -> unsigned int"""
  return _itkImagePython.itkImageBase3_GetImageDimension()

def itkImageBase3_cast(*args):
  """itkImageBase3_cast(itkLightObject obj) -> itkImageBase3"""
  return _itkImagePython.itkImageBase3_cast(*args)

class itkImageCF2(itkImageBase2):
    """Proxy of C++ itkImageCF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageCF2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageCF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageCF2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, vcl_complexF value)"""
        return _itkImagePython.itkImageCF2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, vcl_complexF value)"""
        return _itkImagePython.itkImageCF2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> vcl_complexF
        GetPixel(self, itkIndex2 index) -> vcl_complexF
        """
        return _itkImagePython.itkImageCF2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> vcl_complexF
        GetBufferPointer(self) -> vcl_complexF
        """
        return _itkImagePython.itkImageCF2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,std::complex<(float)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,std::complex<(float)>)>
        """
        return _itkImagePython.itkImageCF2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,std::complex<(float)>)> container)"""
        return _itkImagePython.itkImageCF2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(std::complex<(float)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(std::complex<(float)>)>
        """
        return _itkImagePython.itkImageCF2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(std::complex<(float)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(std::complex<(float)>,2u)>)>
        """
        return _itkImagePython.itkImageCF2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageCF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageCF2"""
        return _itkImagePython.itkImageCF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageCF2"""
        return _itkImagePython.itkImageCF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageCF2
        
        Create a new object of the class itkImageCF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageCF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageCF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageCF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageCF2.SetRegions = new_instancemethod(_itkImagePython.itkImageCF2_SetRegions,None,itkImageCF2)
itkImageCF2.FillBuffer = new_instancemethod(_itkImagePython.itkImageCF2_FillBuffer,None,itkImageCF2)
itkImageCF2.SetPixel = new_instancemethod(_itkImagePython.itkImageCF2_SetPixel,None,itkImageCF2)
itkImageCF2.GetPixel = new_instancemethod(_itkImagePython.itkImageCF2_GetPixel,None,itkImageCF2)
itkImageCF2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageCF2_GetBufferPointer,None,itkImageCF2)
itkImageCF2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageCF2_GetPixelContainer,None,itkImageCF2)
itkImageCF2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageCF2_SetPixelContainer,None,itkImageCF2)
itkImageCF2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageCF2_GetPixelAccessor,None,itkImageCF2)
itkImageCF2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageCF2_GetNeighborhoodAccessor,None,itkImageCF2)
itkImageCF2.GetPointer = new_instancemethod(_itkImagePython.itkImageCF2_GetPointer,None,itkImageCF2)
itkImageCF2_swigregister = _itkImagePython.itkImageCF2_swigregister
itkImageCF2_swigregister(itkImageCF2)

def itkImageCF2___New_orig__():
  """itkImageCF2___New_orig__()"""
  return _itkImagePython.itkImageCF2___New_orig__()

def itkImageCF2_cast(*args):
  """itkImageCF2_cast(itkLightObject obj) -> itkImageCF2"""
  return _itkImagePython.itkImageCF2_cast(*args)

class itkImageCF3(itkImageBase3):
    """Proxy of C++ itkImageCF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageCF3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageCF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageCF3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, vcl_complexF value)"""
        return _itkImagePython.itkImageCF3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, vcl_complexF value)"""
        return _itkImagePython.itkImageCF3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> vcl_complexF
        GetPixel(self, itkIndex3 index) -> vcl_complexF
        """
        return _itkImagePython.itkImageCF3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> vcl_complexF
        GetBufferPointer(self) -> vcl_complexF
        """
        return _itkImagePython.itkImageCF3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,std::complex<(float)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,std::complex<(float)>)>
        """
        return _itkImagePython.itkImageCF3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,std::complex<(float)>)> container)"""
        return _itkImagePython.itkImageCF3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(std::complex<(float)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(std::complex<(float)>)>
        """
        return _itkImagePython.itkImageCF3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(std::complex<(float)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(std::complex<(float)>,3u)>)>
        """
        return _itkImagePython.itkImageCF3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageCF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageCF3"""
        return _itkImagePython.itkImageCF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageCF3"""
        return _itkImagePython.itkImageCF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageCF3
        
        Create a new object of the class itkImageCF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageCF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageCF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageCF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageCF3.SetRegions = new_instancemethod(_itkImagePython.itkImageCF3_SetRegions,None,itkImageCF3)
itkImageCF3.FillBuffer = new_instancemethod(_itkImagePython.itkImageCF3_FillBuffer,None,itkImageCF3)
itkImageCF3.SetPixel = new_instancemethod(_itkImagePython.itkImageCF3_SetPixel,None,itkImageCF3)
itkImageCF3.GetPixel = new_instancemethod(_itkImagePython.itkImageCF3_GetPixel,None,itkImageCF3)
itkImageCF3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageCF3_GetBufferPointer,None,itkImageCF3)
itkImageCF3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageCF3_GetPixelContainer,None,itkImageCF3)
itkImageCF3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageCF3_SetPixelContainer,None,itkImageCF3)
itkImageCF3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageCF3_GetPixelAccessor,None,itkImageCF3)
itkImageCF3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageCF3_GetNeighborhoodAccessor,None,itkImageCF3)
itkImageCF3.GetPointer = new_instancemethod(_itkImagePython.itkImageCF3_GetPointer,None,itkImageCF3)
itkImageCF3_swigregister = _itkImagePython.itkImageCF3_swigregister
itkImageCF3_swigregister(itkImageCF3)

def itkImageCF3___New_orig__():
  """itkImageCF3___New_orig__()"""
  return _itkImagePython.itkImageCF3___New_orig__()

def itkImageCF3_cast(*args):
  """itkImageCF3_cast(itkLightObject obj) -> itkImageCF3"""
  return _itkImagePython.itkImageCF3_cast(*args)

class itkImageCVF22(itkImageBase2):
    """Proxy of C++ itkImageCVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageCVF22_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageCVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageCVF22_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkCovariantVectorF2 value)"""
        return _itkImagePython.itkImageCVF22_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkCovariantVectorF2 value)"""
        return _itkImagePython.itkImageCVF22_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkCovariantVectorF2
        GetPixel(self, itkIndex2 index) -> itkCovariantVectorF2
        """
        return _itkImagePython.itkImageCVF22_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkCovariantVectorF2
        GetBufferPointer(self) -> itkCovariantVectorF2
        """
        return _itkImagePython.itkImageCVF22_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::CovariantVector<(float,2u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::CovariantVector<(float,2u)>)>
        """
        return _itkImagePython.itkImageCVF22_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::CovariantVector<(float,2u)>)> container)"""
        return _itkImagePython.itkImageCVF22_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::CovariantVector<(float,2u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::CovariantVector<(float,2u)>)>
        """
        return _itkImagePython.itkImageCVF22_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::CovariantVector<(float,2u)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::CovariantVector<(float,2u)>,2u)>)>
        """
        return _itkImagePython.itkImageCVF22_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageCVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageCVF22"""
        return _itkImagePython.itkImageCVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageCVF22"""
        return _itkImagePython.itkImageCVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageCVF22
        
        Create a new object of the class itkImageCVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageCVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageCVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageCVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageCVF22.SetRegions = new_instancemethod(_itkImagePython.itkImageCVF22_SetRegions,None,itkImageCVF22)
itkImageCVF22.FillBuffer = new_instancemethod(_itkImagePython.itkImageCVF22_FillBuffer,None,itkImageCVF22)
itkImageCVF22.SetPixel = new_instancemethod(_itkImagePython.itkImageCVF22_SetPixel,None,itkImageCVF22)
itkImageCVF22.GetPixel = new_instancemethod(_itkImagePython.itkImageCVF22_GetPixel,None,itkImageCVF22)
itkImageCVF22.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageCVF22_GetBufferPointer,None,itkImageCVF22)
itkImageCVF22.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageCVF22_GetPixelContainer,None,itkImageCVF22)
itkImageCVF22.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageCVF22_SetPixelContainer,None,itkImageCVF22)
itkImageCVF22.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageCVF22_GetPixelAccessor,None,itkImageCVF22)
itkImageCVF22.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageCVF22_GetNeighborhoodAccessor,None,itkImageCVF22)
itkImageCVF22.GetPointer = new_instancemethod(_itkImagePython.itkImageCVF22_GetPointer,None,itkImageCVF22)
itkImageCVF22_swigregister = _itkImagePython.itkImageCVF22_swigregister
itkImageCVF22_swigregister(itkImageCVF22)

def itkImageCVF22___New_orig__():
  """itkImageCVF22___New_orig__()"""
  return _itkImagePython.itkImageCVF22___New_orig__()

def itkImageCVF22_cast(*args):
  """itkImageCVF22_cast(itkLightObject obj) -> itkImageCVF22"""
  return _itkImagePython.itkImageCVF22_cast(*args)

class itkImageCVF33(itkImageBase3):
    """Proxy of C++ itkImageCVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageCVF33_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageCVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageCVF33_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkCovariantVectorF3 value)"""
        return _itkImagePython.itkImageCVF33_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkCovariantVectorF3 value)"""
        return _itkImagePython.itkImageCVF33_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkCovariantVectorF3
        GetPixel(self, itkIndex3 index) -> itkCovariantVectorF3
        """
        return _itkImagePython.itkImageCVF33_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkCovariantVectorF3
        GetBufferPointer(self) -> itkCovariantVectorF3
        """
        return _itkImagePython.itkImageCVF33_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::CovariantVector<(float,3u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::CovariantVector<(float,3u)>)>
        """
        return _itkImagePython.itkImageCVF33_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::CovariantVector<(float,3u)>)> container)"""
        return _itkImagePython.itkImageCVF33_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::CovariantVector<(float,3u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::CovariantVector<(float,3u)>)>
        """
        return _itkImagePython.itkImageCVF33_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::CovariantVector<(float,3u)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::CovariantVector<(float,3u)>,3u)>)>
        """
        return _itkImagePython.itkImageCVF33_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageCVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageCVF33"""
        return _itkImagePython.itkImageCVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageCVF33"""
        return _itkImagePython.itkImageCVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageCVF33
        
        Create a new object of the class itkImageCVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageCVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageCVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageCVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageCVF33.SetRegions = new_instancemethod(_itkImagePython.itkImageCVF33_SetRegions,None,itkImageCVF33)
itkImageCVF33.FillBuffer = new_instancemethod(_itkImagePython.itkImageCVF33_FillBuffer,None,itkImageCVF33)
itkImageCVF33.SetPixel = new_instancemethod(_itkImagePython.itkImageCVF33_SetPixel,None,itkImageCVF33)
itkImageCVF33.GetPixel = new_instancemethod(_itkImagePython.itkImageCVF33_GetPixel,None,itkImageCVF33)
itkImageCVF33.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageCVF33_GetBufferPointer,None,itkImageCVF33)
itkImageCVF33.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageCVF33_GetPixelContainer,None,itkImageCVF33)
itkImageCVF33.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageCVF33_SetPixelContainer,None,itkImageCVF33)
itkImageCVF33.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageCVF33_GetPixelAccessor,None,itkImageCVF33)
itkImageCVF33.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageCVF33_GetNeighborhoodAccessor,None,itkImageCVF33)
itkImageCVF33.GetPointer = new_instancemethod(_itkImagePython.itkImageCVF33_GetPointer,None,itkImageCVF33)
itkImageCVF33_swigregister = _itkImagePython.itkImageCVF33_swigregister
itkImageCVF33_swigregister(itkImageCVF33)

def itkImageCVF33___New_orig__():
  """itkImageCVF33___New_orig__()"""
  return _itkImagePython.itkImageCVF33___New_orig__()

def itkImageCVF33_cast(*args):
  """itkImageCVF33_cast(itkLightObject obj) -> itkImageCVF33"""
  return _itkImagePython.itkImageCVF33_cast(*args)

class itkImageD2(itkImageBase2):
    """Proxy of C++ itkImageD2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageD2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageD2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, double value)"""
        return _itkImagePython.itkImageD2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, double value)"""
        return _itkImagePython.itkImageD2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> double
        GetPixel(self, itkIndex2 index) -> double
        """
        return _itkImagePython.itkImageD2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> double
        GetBufferPointer(self) -> double
        """
        return _itkImagePython.itkImageD2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,double)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,double)>
        """
        return _itkImagePython.itkImageD2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,double)> container)"""
        return _itkImagePython.itkImageD2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(double)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(double)>
        """
        return _itkImagePython.itkImageD2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(double,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(double,2u)>)>
        """
        return _itkImagePython.itkImageD2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageD2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageD2"""
        return _itkImagePython.itkImageD2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageD2"""
        return _itkImagePython.itkImageD2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageD2
        
        Create a new object of the class itkImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageD2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageD2.SetRegions = new_instancemethod(_itkImagePython.itkImageD2_SetRegions,None,itkImageD2)
itkImageD2.FillBuffer = new_instancemethod(_itkImagePython.itkImageD2_FillBuffer,None,itkImageD2)
itkImageD2.SetPixel = new_instancemethod(_itkImagePython.itkImageD2_SetPixel,None,itkImageD2)
itkImageD2.GetPixel = new_instancemethod(_itkImagePython.itkImageD2_GetPixel,None,itkImageD2)
itkImageD2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageD2_GetBufferPointer,None,itkImageD2)
itkImageD2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageD2_GetPixelContainer,None,itkImageD2)
itkImageD2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageD2_SetPixelContainer,None,itkImageD2)
itkImageD2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageD2_GetPixelAccessor,None,itkImageD2)
itkImageD2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageD2_GetNeighborhoodAccessor,None,itkImageD2)
itkImageD2.GetPointer = new_instancemethod(_itkImagePython.itkImageD2_GetPointer,None,itkImageD2)
itkImageD2_swigregister = _itkImagePython.itkImageD2_swigregister
itkImageD2_swigregister(itkImageD2)

def itkImageD2___New_orig__():
  """itkImageD2___New_orig__()"""
  return _itkImagePython.itkImageD2___New_orig__()

def itkImageD2_cast(*args):
  """itkImageD2_cast(itkLightObject obj) -> itkImageD2"""
  return _itkImagePython.itkImageD2_cast(*args)

class itkImageD3(itkImageBase3):
    """Proxy of C++ itkImageD3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageD3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageD3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, double value)"""
        return _itkImagePython.itkImageD3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, double value)"""
        return _itkImagePython.itkImageD3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> double
        GetPixel(self, itkIndex3 index) -> double
        """
        return _itkImagePython.itkImageD3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> double
        GetBufferPointer(self) -> double
        """
        return _itkImagePython.itkImageD3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,double)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,double)>
        """
        return _itkImagePython.itkImageD3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,double)> container)"""
        return _itkImagePython.itkImageD3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(double)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(double)>
        """
        return _itkImagePython.itkImageD3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(double,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(double,3u)>)>
        """
        return _itkImagePython.itkImageD3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageD3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageD3"""
        return _itkImagePython.itkImageD3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageD3"""
        return _itkImagePython.itkImageD3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageD3
        
        Create a new object of the class itkImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageD3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageD3.SetRegions = new_instancemethod(_itkImagePython.itkImageD3_SetRegions,None,itkImageD3)
itkImageD3.FillBuffer = new_instancemethod(_itkImagePython.itkImageD3_FillBuffer,None,itkImageD3)
itkImageD3.SetPixel = new_instancemethod(_itkImagePython.itkImageD3_SetPixel,None,itkImageD3)
itkImageD3.GetPixel = new_instancemethod(_itkImagePython.itkImageD3_GetPixel,None,itkImageD3)
itkImageD3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageD3_GetBufferPointer,None,itkImageD3)
itkImageD3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageD3_GetPixelContainer,None,itkImageD3)
itkImageD3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageD3_SetPixelContainer,None,itkImageD3)
itkImageD3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageD3_GetPixelAccessor,None,itkImageD3)
itkImageD3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageD3_GetNeighborhoodAccessor,None,itkImageD3)
itkImageD3.GetPointer = new_instancemethod(_itkImagePython.itkImageD3_GetPointer,None,itkImageD3)
itkImageD3_swigregister = _itkImagePython.itkImageD3_swigregister
itkImageD3_swigregister(itkImageD3)

def itkImageD3___New_orig__():
  """itkImageD3___New_orig__()"""
  return _itkImagePython.itkImageD3___New_orig__()

def itkImageD3_cast(*args):
  """itkImageD3_cast(itkLightObject obj) -> itkImageD3"""
  return _itkImagePython.itkImageD3_cast(*args)

class itkImageF2(itkImageBase2):
    """Proxy of C++ itkImageF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageF2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageF2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, float value)"""
        return _itkImagePython.itkImageF2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, float value)"""
        return _itkImagePython.itkImageF2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> float
        GetPixel(self, itkIndex2 index) -> float
        """
        return _itkImagePython.itkImageF2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> float
        GetBufferPointer(self) -> float
        """
        return _itkImagePython.itkImageF2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,float)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,float)>
        """
        return _itkImagePython.itkImageF2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,float)> container)"""
        return _itkImagePython.itkImageF2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(float)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(float)>
        """
        return _itkImagePython.itkImageF2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(float,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(float,2u)>)>
        """
        return _itkImagePython.itkImageF2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageF2"""
        return _itkImagePython.itkImageF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageF2"""
        return _itkImagePython.itkImageF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageF2
        
        Create a new object of the class itkImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageF2.SetRegions = new_instancemethod(_itkImagePython.itkImageF2_SetRegions,None,itkImageF2)
itkImageF2.FillBuffer = new_instancemethod(_itkImagePython.itkImageF2_FillBuffer,None,itkImageF2)
itkImageF2.SetPixel = new_instancemethod(_itkImagePython.itkImageF2_SetPixel,None,itkImageF2)
itkImageF2.GetPixel = new_instancemethod(_itkImagePython.itkImageF2_GetPixel,None,itkImageF2)
itkImageF2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageF2_GetBufferPointer,None,itkImageF2)
itkImageF2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageF2_GetPixelContainer,None,itkImageF2)
itkImageF2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageF2_SetPixelContainer,None,itkImageF2)
itkImageF2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageF2_GetPixelAccessor,None,itkImageF2)
itkImageF2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageF2_GetNeighborhoodAccessor,None,itkImageF2)
itkImageF2.GetPointer = new_instancemethod(_itkImagePython.itkImageF2_GetPointer,None,itkImageF2)
itkImageF2_swigregister = _itkImagePython.itkImageF2_swigregister
itkImageF2_swigregister(itkImageF2)

def itkImageF2___New_orig__():
  """itkImageF2___New_orig__()"""
  return _itkImagePython.itkImageF2___New_orig__()

def itkImageF2_cast(*args):
  """itkImageF2_cast(itkLightObject obj) -> itkImageF2"""
  return _itkImagePython.itkImageF2_cast(*args)

class itkImageF3(itkImageBase3):
    """Proxy of C++ itkImageF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageF3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageF3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, float value)"""
        return _itkImagePython.itkImageF3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, float value)"""
        return _itkImagePython.itkImageF3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> float
        GetPixel(self, itkIndex3 index) -> float
        """
        return _itkImagePython.itkImageF3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> float
        GetBufferPointer(self) -> float
        """
        return _itkImagePython.itkImageF3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,float)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,float)>
        """
        return _itkImagePython.itkImageF3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,float)> container)"""
        return _itkImagePython.itkImageF3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(float)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(float)>
        """
        return _itkImagePython.itkImageF3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(float,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(float,3u)>)>
        """
        return _itkImagePython.itkImageF3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageF3"""
        return _itkImagePython.itkImageF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageF3"""
        return _itkImagePython.itkImageF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageF3
        
        Create a new object of the class itkImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageF3.SetRegions = new_instancemethod(_itkImagePython.itkImageF3_SetRegions,None,itkImageF3)
itkImageF3.FillBuffer = new_instancemethod(_itkImagePython.itkImageF3_FillBuffer,None,itkImageF3)
itkImageF3.SetPixel = new_instancemethod(_itkImagePython.itkImageF3_SetPixel,None,itkImageF3)
itkImageF3.GetPixel = new_instancemethod(_itkImagePython.itkImageF3_GetPixel,None,itkImageF3)
itkImageF3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageF3_GetBufferPointer,None,itkImageF3)
itkImageF3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageF3_GetPixelContainer,None,itkImageF3)
itkImageF3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageF3_SetPixelContainer,None,itkImageF3)
itkImageF3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageF3_GetPixelAccessor,None,itkImageF3)
itkImageF3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageF3_GetNeighborhoodAccessor,None,itkImageF3)
itkImageF3.GetPointer = new_instancemethod(_itkImagePython.itkImageF3_GetPointer,None,itkImageF3)
itkImageF3_swigregister = _itkImagePython.itkImageF3_swigregister
itkImageF3_swigregister(itkImageF3)

def itkImageF3___New_orig__():
  """itkImageF3___New_orig__()"""
  return _itkImagePython.itkImageF3___New_orig__()

def itkImageF3_cast(*args):
  """itkImageF3_cast(itkLightObject obj) -> itkImageF3"""
  return _itkImagePython.itkImageF3_cast(*args)

class itkImageFAF22(itkImageBase2):
    """Proxy of C++ itkImageFAF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageFAF22_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageFAF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageFAF22_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkFixedArrayF2 value)"""
        return _itkImagePython.itkImageFAF22_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkFixedArrayF2 value)"""
        return _itkImagePython.itkImageFAF22_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkFixedArrayF2
        GetPixel(self, itkIndex2 index) -> itkFixedArrayF2
        """
        return _itkImagePython.itkImageFAF22_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkFixedArrayF2
        GetBufferPointer(self) -> itkFixedArrayF2
        """
        return _itkImagePython.itkImageFAF22_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::FixedArray<(float,2u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::FixedArray<(float,2u)>)>
        """
        return _itkImagePython.itkImageFAF22_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::FixedArray<(float,2u)>)> container)"""
        return _itkImagePython.itkImageFAF22_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::FixedArray<(float,2u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::FixedArray<(float,2u)>)>
        """
        return _itkImagePython.itkImageFAF22_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::FixedArray<(float,2u)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::FixedArray<(float,2u)>,2u)>)>
        """
        return _itkImagePython.itkImageFAF22_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageFAF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFAF22"""
        return _itkImagePython.itkImageFAF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFAF22"""
        return _itkImagePython.itkImageFAF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFAF22
        
        Create a new object of the class itkImageFAF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFAF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFAF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFAF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFAF22.SetRegions = new_instancemethod(_itkImagePython.itkImageFAF22_SetRegions,None,itkImageFAF22)
itkImageFAF22.FillBuffer = new_instancemethod(_itkImagePython.itkImageFAF22_FillBuffer,None,itkImageFAF22)
itkImageFAF22.SetPixel = new_instancemethod(_itkImagePython.itkImageFAF22_SetPixel,None,itkImageFAF22)
itkImageFAF22.GetPixel = new_instancemethod(_itkImagePython.itkImageFAF22_GetPixel,None,itkImageFAF22)
itkImageFAF22.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageFAF22_GetBufferPointer,None,itkImageFAF22)
itkImageFAF22.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageFAF22_GetPixelContainer,None,itkImageFAF22)
itkImageFAF22.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageFAF22_SetPixelContainer,None,itkImageFAF22)
itkImageFAF22.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageFAF22_GetPixelAccessor,None,itkImageFAF22)
itkImageFAF22.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageFAF22_GetNeighborhoodAccessor,None,itkImageFAF22)
itkImageFAF22.GetPointer = new_instancemethod(_itkImagePython.itkImageFAF22_GetPointer,None,itkImageFAF22)
itkImageFAF22_swigregister = _itkImagePython.itkImageFAF22_swigregister
itkImageFAF22_swigregister(itkImageFAF22)

def itkImageFAF22___New_orig__():
  """itkImageFAF22___New_orig__()"""
  return _itkImagePython.itkImageFAF22___New_orig__()

def itkImageFAF22_cast(*args):
  """itkImageFAF22_cast(itkLightObject obj) -> itkImageFAF22"""
  return _itkImagePython.itkImageFAF22_cast(*args)

class itkImageFAF33(itkImageBase3):
    """Proxy of C++ itkImageFAF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageFAF33_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageFAF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageFAF33_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkFixedArrayF3 value)"""
        return _itkImagePython.itkImageFAF33_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkFixedArrayF3 value)"""
        return _itkImagePython.itkImageFAF33_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkFixedArrayF3
        GetPixel(self, itkIndex3 index) -> itkFixedArrayF3
        """
        return _itkImagePython.itkImageFAF33_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkFixedArrayF3
        GetBufferPointer(self) -> itkFixedArrayF3
        """
        return _itkImagePython.itkImageFAF33_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::FixedArray<(float,3u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::FixedArray<(float,3u)>)>
        """
        return _itkImagePython.itkImageFAF33_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::FixedArray<(float,3u)>)> container)"""
        return _itkImagePython.itkImageFAF33_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::FixedArray<(float,3u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::FixedArray<(float,3u)>)>
        """
        return _itkImagePython.itkImageFAF33_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::FixedArray<(float,3u)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::FixedArray<(float,3u)>,3u)>)>
        """
        return _itkImagePython.itkImageFAF33_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageFAF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageFAF33"""
        return _itkImagePython.itkImageFAF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageFAF33"""
        return _itkImagePython.itkImageFAF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageFAF33
        
        Create a new object of the class itkImageFAF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageFAF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageFAF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageFAF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageFAF33.SetRegions = new_instancemethod(_itkImagePython.itkImageFAF33_SetRegions,None,itkImageFAF33)
itkImageFAF33.FillBuffer = new_instancemethod(_itkImagePython.itkImageFAF33_FillBuffer,None,itkImageFAF33)
itkImageFAF33.SetPixel = new_instancemethod(_itkImagePython.itkImageFAF33_SetPixel,None,itkImageFAF33)
itkImageFAF33.GetPixel = new_instancemethod(_itkImagePython.itkImageFAF33_GetPixel,None,itkImageFAF33)
itkImageFAF33.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageFAF33_GetBufferPointer,None,itkImageFAF33)
itkImageFAF33.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageFAF33_GetPixelContainer,None,itkImageFAF33)
itkImageFAF33.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageFAF33_SetPixelContainer,None,itkImageFAF33)
itkImageFAF33.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageFAF33_GetPixelAccessor,None,itkImageFAF33)
itkImageFAF33.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageFAF33_GetNeighborhoodAccessor,None,itkImageFAF33)
itkImageFAF33.GetPointer = new_instancemethod(_itkImagePython.itkImageFAF33_GetPointer,None,itkImageFAF33)
itkImageFAF33_swigregister = _itkImagePython.itkImageFAF33_swigregister
itkImageFAF33_swigregister(itkImageFAF33)

def itkImageFAF33___New_orig__():
  """itkImageFAF33___New_orig__()"""
  return _itkImagePython.itkImageFAF33___New_orig__()

def itkImageFAF33_cast(*args):
  """itkImageFAF33_cast(itkLightObject obj) -> itkImageFAF33"""
  return _itkImagePython.itkImageFAF33_cast(*args)

class itkImageO22(itkImageBase2):
    """Proxy of C++ itkImageO22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageO22_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageO22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageO22_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkOffset2 value)"""
        return _itkImagePython.itkImageO22_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkOffset2 value)"""
        return _itkImagePython.itkImageO22_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkOffset2
        GetPixel(self, itkIndex2 index) -> itkOffset2
        """
        return _itkImagePython.itkImageO22_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkOffset2
        GetBufferPointer(self) -> itkOffset2
        """
        return _itkImagePython.itkImageO22_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::Offset<(2u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::Offset<(2u)>)>
        """
        return _itkImagePython.itkImageO22_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::Offset<(2u)>)> container)"""
        return _itkImagePython.itkImageO22_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::Offset<(2u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::Offset<(2u)>)>
        """
        return _itkImagePython.itkImageO22_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::Offset<(2u)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::Offset<(2u)>,2u)>)>
        """
        return _itkImagePython.itkImageO22_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageO22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageO22"""
        return _itkImagePython.itkImageO22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageO22"""
        return _itkImagePython.itkImageO22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageO22
        
        Create a new object of the class itkImageO22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageO22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageO22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageO22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageO22.SetRegions = new_instancemethod(_itkImagePython.itkImageO22_SetRegions,None,itkImageO22)
itkImageO22.FillBuffer = new_instancemethod(_itkImagePython.itkImageO22_FillBuffer,None,itkImageO22)
itkImageO22.SetPixel = new_instancemethod(_itkImagePython.itkImageO22_SetPixel,None,itkImageO22)
itkImageO22.GetPixel = new_instancemethod(_itkImagePython.itkImageO22_GetPixel,None,itkImageO22)
itkImageO22.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageO22_GetBufferPointer,None,itkImageO22)
itkImageO22.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageO22_GetPixelContainer,None,itkImageO22)
itkImageO22.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageO22_SetPixelContainer,None,itkImageO22)
itkImageO22.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageO22_GetPixelAccessor,None,itkImageO22)
itkImageO22.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageO22_GetNeighborhoodAccessor,None,itkImageO22)
itkImageO22.GetPointer = new_instancemethod(_itkImagePython.itkImageO22_GetPointer,None,itkImageO22)
itkImageO22_swigregister = _itkImagePython.itkImageO22_swigregister
itkImageO22_swigregister(itkImageO22)

def itkImageO22___New_orig__():
  """itkImageO22___New_orig__()"""
  return _itkImagePython.itkImageO22___New_orig__()

def itkImageO22_cast(*args):
  """itkImageO22_cast(itkLightObject obj) -> itkImageO22"""
  return _itkImagePython.itkImageO22_cast(*args)

class itkImageO33(itkImageBase3):
    """Proxy of C++ itkImageO33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageO33_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageO33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageO33_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkOffset3 value)"""
        return _itkImagePython.itkImageO33_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkOffset3 value)"""
        return _itkImagePython.itkImageO33_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkOffset3
        GetPixel(self, itkIndex3 index) -> itkOffset3
        """
        return _itkImagePython.itkImageO33_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkOffset3
        GetBufferPointer(self) -> itkOffset3
        """
        return _itkImagePython.itkImageO33_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::Offset<(3u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::Offset<(3u)>)>
        """
        return _itkImagePython.itkImageO33_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::Offset<(3u)>)> container)"""
        return _itkImagePython.itkImageO33_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::Offset<(3u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::Offset<(3u)>)>
        """
        return _itkImagePython.itkImageO33_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::Offset<(3u)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::Offset<(3u)>,3u)>)>
        """
        return _itkImagePython.itkImageO33_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageO33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageO33"""
        return _itkImagePython.itkImageO33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageO33"""
        return _itkImagePython.itkImageO33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageO33
        
        Create a new object of the class itkImageO33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageO33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageO33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageO33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageO33.SetRegions = new_instancemethod(_itkImagePython.itkImageO33_SetRegions,None,itkImageO33)
itkImageO33.FillBuffer = new_instancemethod(_itkImagePython.itkImageO33_FillBuffer,None,itkImageO33)
itkImageO33.SetPixel = new_instancemethod(_itkImagePython.itkImageO33_SetPixel,None,itkImageO33)
itkImageO33.GetPixel = new_instancemethod(_itkImagePython.itkImageO33_GetPixel,None,itkImageO33)
itkImageO33.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageO33_GetBufferPointer,None,itkImageO33)
itkImageO33.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageO33_GetPixelContainer,None,itkImageO33)
itkImageO33.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageO33_SetPixelContainer,None,itkImageO33)
itkImageO33.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageO33_GetPixelAccessor,None,itkImageO33)
itkImageO33.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageO33_GetNeighborhoodAccessor,None,itkImageO33)
itkImageO33.GetPointer = new_instancemethod(_itkImagePython.itkImageO33_GetPointer,None,itkImageO33)
itkImageO33_swigregister = _itkImagePython.itkImageO33_swigregister
itkImageO33_swigregister(itkImageO33)

def itkImageO33___New_orig__():
  """itkImageO33___New_orig__()"""
  return _itkImagePython.itkImageO33___New_orig__()

def itkImageO33_cast(*args):
  """itkImageO33_cast(itkLightObject obj) -> itkImageO33"""
  return _itkImagePython.itkImageO33_cast(*args)

class itkImageRGBAUC2(itkImageBase2):
    """Proxy of C++ itkImageRGBAUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageRGBAUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageRGBAUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageRGBAUC2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkRGBAPixelUC value)"""
        return _itkImagePython.itkImageRGBAUC2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkRGBAPixelUC value)"""
        return _itkImagePython.itkImageRGBAUC2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkRGBAPixelUC
        GetPixel(self, itkIndex2 index) -> itkRGBAPixelUC
        """
        return _itkImagePython.itkImageRGBAUC2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkRGBAPixelUC
        GetBufferPointer(self) -> itkRGBAPixelUC
        """
        return _itkImagePython.itkImageRGBAUC2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned char)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned char)>)>
        """
        return _itkImagePython.itkImageRGBAUC2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned char)>)> container)"""
        return _itkImagePython.itkImageRGBAUC2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBAPixel<(unsigned char)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBAPixel<(unsigned char)>)>
        """
        return _itkImagePython.itkImageRGBAUC2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBAPixel<(unsigned char)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBAPixel<(unsigned char)>,2u)>)>
        """
        return _itkImagePython.itkImageRGBAUC2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageRGBAUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageRGBAUC2"""
        return _itkImagePython.itkImageRGBAUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageRGBAUC2"""
        return _itkImagePython.itkImageRGBAUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageRGBAUC2
        
        Create a new object of the class itkImageRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageRGBAUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageRGBAUC2.SetRegions = new_instancemethod(_itkImagePython.itkImageRGBAUC2_SetRegions,None,itkImageRGBAUC2)
itkImageRGBAUC2.FillBuffer = new_instancemethod(_itkImagePython.itkImageRGBAUC2_FillBuffer,None,itkImageRGBAUC2)
itkImageRGBAUC2.SetPixel = new_instancemethod(_itkImagePython.itkImageRGBAUC2_SetPixel,None,itkImageRGBAUC2)
itkImageRGBAUC2.GetPixel = new_instancemethod(_itkImagePython.itkImageRGBAUC2_GetPixel,None,itkImageRGBAUC2)
itkImageRGBAUC2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageRGBAUC2_GetBufferPointer,None,itkImageRGBAUC2)
itkImageRGBAUC2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBAUC2_GetPixelContainer,None,itkImageRGBAUC2)
itkImageRGBAUC2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBAUC2_SetPixelContainer,None,itkImageRGBAUC2)
itkImageRGBAUC2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageRGBAUC2_GetPixelAccessor,None,itkImageRGBAUC2)
itkImageRGBAUC2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageRGBAUC2_GetNeighborhoodAccessor,None,itkImageRGBAUC2)
itkImageRGBAUC2.GetPointer = new_instancemethod(_itkImagePython.itkImageRGBAUC2_GetPointer,None,itkImageRGBAUC2)
itkImageRGBAUC2_swigregister = _itkImagePython.itkImageRGBAUC2_swigregister
itkImageRGBAUC2_swigregister(itkImageRGBAUC2)

def itkImageRGBAUC2___New_orig__():
  """itkImageRGBAUC2___New_orig__()"""
  return _itkImagePython.itkImageRGBAUC2___New_orig__()

def itkImageRGBAUC2_cast(*args):
  """itkImageRGBAUC2_cast(itkLightObject obj) -> itkImageRGBAUC2"""
  return _itkImagePython.itkImageRGBAUC2_cast(*args)

class itkImageRGBAUC3(itkImageBase3):
    """Proxy of C++ itkImageRGBAUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageRGBAUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageRGBAUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageRGBAUC3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkRGBAPixelUC value)"""
        return _itkImagePython.itkImageRGBAUC3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkRGBAPixelUC value)"""
        return _itkImagePython.itkImageRGBAUC3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkRGBAPixelUC
        GetPixel(self, itkIndex3 index) -> itkRGBAPixelUC
        """
        return _itkImagePython.itkImageRGBAUC3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkRGBAPixelUC
        GetBufferPointer(self) -> itkRGBAPixelUC
        """
        return _itkImagePython.itkImageRGBAUC3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned char)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned char)>)>
        """
        return _itkImagePython.itkImageRGBAUC3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned char)>)> container)"""
        return _itkImagePython.itkImageRGBAUC3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBAPixel<(unsigned char)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBAPixel<(unsigned char)>)>
        """
        return _itkImagePython.itkImageRGBAUC3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBAPixel<(unsigned char)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBAPixel<(unsigned char)>,3u)>)>
        """
        return _itkImagePython.itkImageRGBAUC3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageRGBAUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageRGBAUC3"""
        return _itkImagePython.itkImageRGBAUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageRGBAUC3"""
        return _itkImagePython.itkImageRGBAUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageRGBAUC3
        
        Create a new object of the class itkImageRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageRGBAUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageRGBAUC3.SetRegions = new_instancemethod(_itkImagePython.itkImageRGBAUC3_SetRegions,None,itkImageRGBAUC3)
itkImageRGBAUC3.FillBuffer = new_instancemethod(_itkImagePython.itkImageRGBAUC3_FillBuffer,None,itkImageRGBAUC3)
itkImageRGBAUC3.SetPixel = new_instancemethod(_itkImagePython.itkImageRGBAUC3_SetPixel,None,itkImageRGBAUC3)
itkImageRGBAUC3.GetPixel = new_instancemethod(_itkImagePython.itkImageRGBAUC3_GetPixel,None,itkImageRGBAUC3)
itkImageRGBAUC3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageRGBAUC3_GetBufferPointer,None,itkImageRGBAUC3)
itkImageRGBAUC3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBAUC3_GetPixelContainer,None,itkImageRGBAUC3)
itkImageRGBAUC3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBAUC3_SetPixelContainer,None,itkImageRGBAUC3)
itkImageRGBAUC3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageRGBAUC3_GetPixelAccessor,None,itkImageRGBAUC3)
itkImageRGBAUC3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageRGBAUC3_GetNeighborhoodAccessor,None,itkImageRGBAUC3)
itkImageRGBAUC3.GetPointer = new_instancemethod(_itkImagePython.itkImageRGBAUC3_GetPointer,None,itkImageRGBAUC3)
itkImageRGBAUC3_swigregister = _itkImagePython.itkImageRGBAUC3_swigregister
itkImageRGBAUC3_swigregister(itkImageRGBAUC3)

def itkImageRGBAUC3___New_orig__():
  """itkImageRGBAUC3___New_orig__()"""
  return _itkImagePython.itkImageRGBAUC3___New_orig__()

def itkImageRGBAUC3_cast(*args):
  """itkImageRGBAUC3_cast(itkLightObject obj) -> itkImageRGBAUC3"""
  return _itkImagePython.itkImageRGBAUC3_cast(*args)

class itkImageRGBAUS2(itkImageBase2):
    """Proxy of C++ itkImageRGBAUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageRGBAUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageRGBAUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageRGBAUS2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkRGBAPixelUS value)"""
        return _itkImagePython.itkImageRGBAUS2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkRGBAPixelUS value)"""
        return _itkImagePython.itkImageRGBAUS2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkRGBAPixelUS
        GetPixel(self, itkIndex2 index) -> itkRGBAPixelUS
        """
        return _itkImagePython.itkImageRGBAUS2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkRGBAPixelUS
        GetBufferPointer(self) -> itkRGBAPixelUS
        """
        return _itkImagePython.itkImageRGBAUS2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned short)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned short)>)>
        """
        return _itkImagePython.itkImageRGBAUS2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned short)>)> container)"""
        return _itkImagePython.itkImageRGBAUS2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBAPixel<(unsigned short)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBAPixel<(unsigned short)>)>
        """
        return _itkImagePython.itkImageRGBAUS2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBAPixel<(unsigned short)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBAPixel<(unsigned short)>,2u)>)>
        """
        return _itkImagePython.itkImageRGBAUS2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageRGBAUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageRGBAUS2"""
        return _itkImagePython.itkImageRGBAUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageRGBAUS2"""
        return _itkImagePython.itkImageRGBAUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageRGBAUS2
        
        Create a new object of the class itkImageRGBAUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageRGBAUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageRGBAUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageRGBAUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageRGBAUS2.SetRegions = new_instancemethod(_itkImagePython.itkImageRGBAUS2_SetRegions,None,itkImageRGBAUS2)
itkImageRGBAUS2.FillBuffer = new_instancemethod(_itkImagePython.itkImageRGBAUS2_FillBuffer,None,itkImageRGBAUS2)
itkImageRGBAUS2.SetPixel = new_instancemethod(_itkImagePython.itkImageRGBAUS2_SetPixel,None,itkImageRGBAUS2)
itkImageRGBAUS2.GetPixel = new_instancemethod(_itkImagePython.itkImageRGBAUS2_GetPixel,None,itkImageRGBAUS2)
itkImageRGBAUS2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageRGBAUS2_GetBufferPointer,None,itkImageRGBAUS2)
itkImageRGBAUS2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBAUS2_GetPixelContainer,None,itkImageRGBAUS2)
itkImageRGBAUS2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBAUS2_SetPixelContainer,None,itkImageRGBAUS2)
itkImageRGBAUS2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageRGBAUS2_GetPixelAccessor,None,itkImageRGBAUS2)
itkImageRGBAUS2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageRGBAUS2_GetNeighborhoodAccessor,None,itkImageRGBAUS2)
itkImageRGBAUS2.GetPointer = new_instancemethod(_itkImagePython.itkImageRGBAUS2_GetPointer,None,itkImageRGBAUS2)
itkImageRGBAUS2_swigregister = _itkImagePython.itkImageRGBAUS2_swigregister
itkImageRGBAUS2_swigregister(itkImageRGBAUS2)

def itkImageRGBAUS2___New_orig__():
  """itkImageRGBAUS2___New_orig__()"""
  return _itkImagePython.itkImageRGBAUS2___New_orig__()

def itkImageRGBAUS2_cast(*args):
  """itkImageRGBAUS2_cast(itkLightObject obj) -> itkImageRGBAUS2"""
  return _itkImagePython.itkImageRGBAUS2_cast(*args)

class itkImageRGBAUS3(itkImageBase3):
    """Proxy of C++ itkImageRGBAUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageRGBAUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageRGBAUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageRGBAUS3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkRGBAPixelUS value)"""
        return _itkImagePython.itkImageRGBAUS3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkRGBAPixelUS value)"""
        return _itkImagePython.itkImageRGBAUS3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkRGBAPixelUS
        GetPixel(self, itkIndex3 index) -> itkRGBAPixelUS
        """
        return _itkImagePython.itkImageRGBAUS3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkRGBAPixelUS
        GetBufferPointer(self) -> itkRGBAPixelUS
        """
        return _itkImagePython.itkImageRGBAUS3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned short)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned short)>)>
        """
        return _itkImagePython.itkImageRGBAUS3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::RGBAPixel<(unsigned short)>)> container)"""
        return _itkImagePython.itkImageRGBAUS3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBAPixel<(unsigned short)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBAPixel<(unsigned short)>)>
        """
        return _itkImagePython.itkImageRGBAUS3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBAPixel<(unsigned short)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBAPixel<(unsigned short)>,3u)>)>
        """
        return _itkImagePython.itkImageRGBAUS3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageRGBAUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageRGBAUS3"""
        return _itkImagePython.itkImageRGBAUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageRGBAUS3"""
        return _itkImagePython.itkImageRGBAUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageRGBAUS3
        
        Create a new object of the class itkImageRGBAUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageRGBAUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageRGBAUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageRGBAUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageRGBAUS3.SetRegions = new_instancemethod(_itkImagePython.itkImageRGBAUS3_SetRegions,None,itkImageRGBAUS3)
itkImageRGBAUS3.FillBuffer = new_instancemethod(_itkImagePython.itkImageRGBAUS3_FillBuffer,None,itkImageRGBAUS3)
itkImageRGBAUS3.SetPixel = new_instancemethod(_itkImagePython.itkImageRGBAUS3_SetPixel,None,itkImageRGBAUS3)
itkImageRGBAUS3.GetPixel = new_instancemethod(_itkImagePython.itkImageRGBAUS3_GetPixel,None,itkImageRGBAUS3)
itkImageRGBAUS3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageRGBAUS3_GetBufferPointer,None,itkImageRGBAUS3)
itkImageRGBAUS3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBAUS3_GetPixelContainer,None,itkImageRGBAUS3)
itkImageRGBAUS3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBAUS3_SetPixelContainer,None,itkImageRGBAUS3)
itkImageRGBAUS3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageRGBAUS3_GetPixelAccessor,None,itkImageRGBAUS3)
itkImageRGBAUS3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageRGBAUS3_GetNeighborhoodAccessor,None,itkImageRGBAUS3)
itkImageRGBAUS3.GetPointer = new_instancemethod(_itkImagePython.itkImageRGBAUS3_GetPointer,None,itkImageRGBAUS3)
itkImageRGBAUS3_swigregister = _itkImagePython.itkImageRGBAUS3_swigregister
itkImageRGBAUS3_swigregister(itkImageRGBAUS3)

def itkImageRGBAUS3___New_orig__():
  """itkImageRGBAUS3___New_orig__()"""
  return _itkImagePython.itkImageRGBAUS3___New_orig__()

def itkImageRGBAUS3_cast(*args):
  """itkImageRGBAUS3_cast(itkLightObject obj) -> itkImageRGBAUS3"""
  return _itkImagePython.itkImageRGBAUS3_cast(*args)

class itkImageRGBUC2(itkImageBase2):
    """Proxy of C++ itkImageRGBUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageRGBUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageRGBUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageRGBUC2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkRGBPixelUC value)"""
        return _itkImagePython.itkImageRGBUC2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkRGBPixelUC value)"""
        return _itkImagePython.itkImageRGBUC2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkRGBPixelUC
        GetPixel(self, itkIndex2 index) -> itkRGBPixelUC
        """
        return _itkImagePython.itkImageRGBUC2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkRGBPixelUC
        GetBufferPointer(self) -> itkRGBPixelUC
        """
        return _itkImagePython.itkImageRGBUC2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned char)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned char)>)>
        """
        return _itkImagePython.itkImageRGBUC2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned char)>)> container)"""
        return _itkImagePython.itkImageRGBUC2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBPixel<(unsigned char)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBPixel<(unsigned char)>)>
        """
        return _itkImagePython.itkImageRGBUC2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBPixel<(unsigned char)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBPixel<(unsigned char)>,2u)>)>
        """
        return _itkImagePython.itkImageRGBUC2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageRGBUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageRGBUC2"""
        return _itkImagePython.itkImageRGBUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageRGBUC2"""
        return _itkImagePython.itkImageRGBUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageRGBUC2
        
        Create a new object of the class itkImageRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageRGBUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageRGBUC2.SetRegions = new_instancemethod(_itkImagePython.itkImageRGBUC2_SetRegions,None,itkImageRGBUC2)
itkImageRGBUC2.FillBuffer = new_instancemethod(_itkImagePython.itkImageRGBUC2_FillBuffer,None,itkImageRGBUC2)
itkImageRGBUC2.SetPixel = new_instancemethod(_itkImagePython.itkImageRGBUC2_SetPixel,None,itkImageRGBUC2)
itkImageRGBUC2.GetPixel = new_instancemethod(_itkImagePython.itkImageRGBUC2_GetPixel,None,itkImageRGBUC2)
itkImageRGBUC2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageRGBUC2_GetBufferPointer,None,itkImageRGBUC2)
itkImageRGBUC2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBUC2_GetPixelContainer,None,itkImageRGBUC2)
itkImageRGBUC2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBUC2_SetPixelContainer,None,itkImageRGBUC2)
itkImageRGBUC2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageRGBUC2_GetPixelAccessor,None,itkImageRGBUC2)
itkImageRGBUC2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageRGBUC2_GetNeighborhoodAccessor,None,itkImageRGBUC2)
itkImageRGBUC2.GetPointer = new_instancemethod(_itkImagePython.itkImageRGBUC2_GetPointer,None,itkImageRGBUC2)
itkImageRGBUC2_swigregister = _itkImagePython.itkImageRGBUC2_swigregister
itkImageRGBUC2_swigregister(itkImageRGBUC2)

def itkImageRGBUC2___New_orig__():
  """itkImageRGBUC2___New_orig__()"""
  return _itkImagePython.itkImageRGBUC2___New_orig__()

def itkImageRGBUC2_cast(*args):
  """itkImageRGBUC2_cast(itkLightObject obj) -> itkImageRGBUC2"""
  return _itkImagePython.itkImageRGBUC2_cast(*args)

class itkImageRGBUC3(itkImageBase3):
    """Proxy of C++ itkImageRGBUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageRGBUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageRGBUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageRGBUC3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkRGBPixelUC value)"""
        return _itkImagePython.itkImageRGBUC3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkRGBPixelUC value)"""
        return _itkImagePython.itkImageRGBUC3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkRGBPixelUC
        GetPixel(self, itkIndex3 index) -> itkRGBPixelUC
        """
        return _itkImagePython.itkImageRGBUC3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkRGBPixelUC
        GetBufferPointer(self) -> itkRGBPixelUC
        """
        return _itkImagePython.itkImageRGBUC3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned char)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned char)>)>
        """
        return _itkImagePython.itkImageRGBUC3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned char)>)> container)"""
        return _itkImagePython.itkImageRGBUC3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBPixel<(unsigned char)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBPixel<(unsigned char)>)>
        """
        return _itkImagePython.itkImageRGBUC3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBPixel<(unsigned char)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBPixel<(unsigned char)>,3u)>)>
        """
        return _itkImagePython.itkImageRGBUC3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageRGBUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageRGBUC3"""
        return _itkImagePython.itkImageRGBUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageRGBUC3"""
        return _itkImagePython.itkImageRGBUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageRGBUC3
        
        Create a new object of the class itkImageRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageRGBUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageRGBUC3.SetRegions = new_instancemethod(_itkImagePython.itkImageRGBUC3_SetRegions,None,itkImageRGBUC3)
itkImageRGBUC3.FillBuffer = new_instancemethod(_itkImagePython.itkImageRGBUC3_FillBuffer,None,itkImageRGBUC3)
itkImageRGBUC3.SetPixel = new_instancemethod(_itkImagePython.itkImageRGBUC3_SetPixel,None,itkImageRGBUC3)
itkImageRGBUC3.GetPixel = new_instancemethod(_itkImagePython.itkImageRGBUC3_GetPixel,None,itkImageRGBUC3)
itkImageRGBUC3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageRGBUC3_GetBufferPointer,None,itkImageRGBUC3)
itkImageRGBUC3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBUC3_GetPixelContainer,None,itkImageRGBUC3)
itkImageRGBUC3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBUC3_SetPixelContainer,None,itkImageRGBUC3)
itkImageRGBUC3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageRGBUC3_GetPixelAccessor,None,itkImageRGBUC3)
itkImageRGBUC3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageRGBUC3_GetNeighborhoodAccessor,None,itkImageRGBUC3)
itkImageRGBUC3.GetPointer = new_instancemethod(_itkImagePython.itkImageRGBUC3_GetPointer,None,itkImageRGBUC3)
itkImageRGBUC3_swigregister = _itkImagePython.itkImageRGBUC3_swigregister
itkImageRGBUC3_swigregister(itkImageRGBUC3)

def itkImageRGBUC3___New_orig__():
  """itkImageRGBUC3___New_orig__()"""
  return _itkImagePython.itkImageRGBUC3___New_orig__()

def itkImageRGBUC3_cast(*args):
  """itkImageRGBUC3_cast(itkLightObject obj) -> itkImageRGBUC3"""
  return _itkImagePython.itkImageRGBUC3_cast(*args)

class itkImageRGBUS2(itkImageBase2):
    """Proxy of C++ itkImageRGBUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageRGBUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageRGBUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageRGBUS2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkRGBPixelUS value)"""
        return _itkImagePython.itkImageRGBUS2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkRGBPixelUS value)"""
        return _itkImagePython.itkImageRGBUS2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkRGBPixelUS
        GetPixel(self, itkIndex2 index) -> itkRGBPixelUS
        """
        return _itkImagePython.itkImageRGBUS2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkRGBPixelUS
        GetBufferPointer(self) -> itkRGBPixelUS
        """
        return _itkImagePython.itkImageRGBUS2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned short)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned short)>)>
        """
        return _itkImagePython.itkImageRGBUS2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned short)>)> container)"""
        return _itkImagePython.itkImageRGBUS2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBPixel<(unsigned short)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBPixel<(unsigned short)>)>
        """
        return _itkImagePython.itkImageRGBUS2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBPixel<(unsigned short)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBPixel<(unsigned short)>,2u)>)>
        """
        return _itkImagePython.itkImageRGBUS2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageRGBUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageRGBUS2"""
        return _itkImagePython.itkImageRGBUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageRGBUS2"""
        return _itkImagePython.itkImageRGBUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageRGBUS2
        
        Create a new object of the class itkImageRGBUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageRGBUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageRGBUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageRGBUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageRGBUS2.SetRegions = new_instancemethod(_itkImagePython.itkImageRGBUS2_SetRegions,None,itkImageRGBUS2)
itkImageRGBUS2.FillBuffer = new_instancemethod(_itkImagePython.itkImageRGBUS2_FillBuffer,None,itkImageRGBUS2)
itkImageRGBUS2.SetPixel = new_instancemethod(_itkImagePython.itkImageRGBUS2_SetPixel,None,itkImageRGBUS2)
itkImageRGBUS2.GetPixel = new_instancemethod(_itkImagePython.itkImageRGBUS2_GetPixel,None,itkImageRGBUS2)
itkImageRGBUS2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageRGBUS2_GetBufferPointer,None,itkImageRGBUS2)
itkImageRGBUS2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBUS2_GetPixelContainer,None,itkImageRGBUS2)
itkImageRGBUS2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBUS2_SetPixelContainer,None,itkImageRGBUS2)
itkImageRGBUS2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageRGBUS2_GetPixelAccessor,None,itkImageRGBUS2)
itkImageRGBUS2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageRGBUS2_GetNeighborhoodAccessor,None,itkImageRGBUS2)
itkImageRGBUS2.GetPointer = new_instancemethod(_itkImagePython.itkImageRGBUS2_GetPointer,None,itkImageRGBUS2)
itkImageRGBUS2_swigregister = _itkImagePython.itkImageRGBUS2_swigregister
itkImageRGBUS2_swigregister(itkImageRGBUS2)

def itkImageRGBUS2___New_orig__():
  """itkImageRGBUS2___New_orig__()"""
  return _itkImagePython.itkImageRGBUS2___New_orig__()

def itkImageRGBUS2_cast(*args):
  """itkImageRGBUS2_cast(itkLightObject obj) -> itkImageRGBUS2"""
  return _itkImagePython.itkImageRGBUS2_cast(*args)

class itkImageRGBUS3(itkImageBase3):
    """Proxy of C++ itkImageRGBUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageRGBUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageRGBUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageRGBUS3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkRGBPixelUS value)"""
        return _itkImagePython.itkImageRGBUS3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkRGBPixelUS value)"""
        return _itkImagePython.itkImageRGBUS3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkRGBPixelUS
        GetPixel(self, itkIndex3 index) -> itkRGBPixelUS
        """
        return _itkImagePython.itkImageRGBUS3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkRGBPixelUS
        GetBufferPointer(self) -> itkRGBPixelUS
        """
        return _itkImagePython.itkImageRGBUS3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned short)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned short)>)>
        """
        return _itkImagePython.itkImageRGBUS3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::RGBPixel<(unsigned short)>)> container)"""
        return _itkImagePython.itkImageRGBUS3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBPixel<(unsigned short)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::RGBPixel<(unsigned short)>)>
        """
        return _itkImagePython.itkImageRGBUS3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBPixel<(unsigned short)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::RGBPixel<(unsigned short)>,3u)>)>
        """
        return _itkImagePython.itkImageRGBUS3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageRGBUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageRGBUS3"""
        return _itkImagePython.itkImageRGBUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageRGBUS3"""
        return _itkImagePython.itkImageRGBUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageRGBUS3
        
        Create a new object of the class itkImageRGBUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageRGBUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageRGBUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageRGBUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageRGBUS3.SetRegions = new_instancemethod(_itkImagePython.itkImageRGBUS3_SetRegions,None,itkImageRGBUS3)
itkImageRGBUS3.FillBuffer = new_instancemethod(_itkImagePython.itkImageRGBUS3_FillBuffer,None,itkImageRGBUS3)
itkImageRGBUS3.SetPixel = new_instancemethod(_itkImagePython.itkImageRGBUS3_SetPixel,None,itkImageRGBUS3)
itkImageRGBUS3.GetPixel = new_instancemethod(_itkImagePython.itkImageRGBUS3_GetPixel,None,itkImageRGBUS3)
itkImageRGBUS3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageRGBUS3_GetBufferPointer,None,itkImageRGBUS3)
itkImageRGBUS3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBUS3_GetPixelContainer,None,itkImageRGBUS3)
itkImageRGBUS3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageRGBUS3_SetPixelContainer,None,itkImageRGBUS3)
itkImageRGBUS3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageRGBUS3_GetPixelAccessor,None,itkImageRGBUS3)
itkImageRGBUS3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageRGBUS3_GetNeighborhoodAccessor,None,itkImageRGBUS3)
itkImageRGBUS3.GetPointer = new_instancemethod(_itkImagePython.itkImageRGBUS3_GetPointer,None,itkImageRGBUS3)
itkImageRGBUS3_swigregister = _itkImagePython.itkImageRGBUS3_swigregister
itkImageRGBUS3_swigregister(itkImageRGBUS3)

def itkImageRGBUS3___New_orig__():
  """itkImageRGBUS3___New_orig__()"""
  return _itkImagePython.itkImageRGBUS3___New_orig__()

def itkImageRGBUS3_cast(*args):
  """itkImageRGBUS3_cast(itkLightObject obj) -> itkImageRGBUS3"""
  return _itkImagePython.itkImageRGBUS3_cast(*args)

class itkImageSSRTD22(itkImageBase2):
    """Proxy of C++ itkImageSSRTD22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageSSRTD22_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageSSRTD22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageSSRTD22_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkSymmetricSecondRankTensorD2 value)"""
        return _itkImagePython.itkImageSSRTD22_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkSymmetricSecondRankTensorD2 value)"""
        return _itkImagePython.itkImageSSRTD22_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkSymmetricSecondRankTensorD2
        GetPixel(self, itkIndex2 index) -> itkSymmetricSecondRankTensorD2
        """
        return _itkImagePython.itkImageSSRTD22_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkSymmetricSecondRankTensorD2
        GetBufferPointer(self) -> itkSymmetricSecondRankTensorD2
        """
        return _itkImagePython.itkImageSSRTD22_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::SymmetricSecondRankTensor<(double,2u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::SymmetricSecondRankTensor<(double,2u)>)>
        """
        return _itkImagePython.itkImageSSRTD22_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::SymmetricSecondRankTensor<(double,2u)>)> container)"""
        return _itkImagePython.itkImageSSRTD22_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::SymmetricSecondRankTensor<(double,2u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::SymmetricSecondRankTensor<(double,2u)>)>
        """
        return _itkImagePython.itkImageSSRTD22_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::SymmetricSecondRankTensor<(double,2u)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::SymmetricSecondRankTensor<(double,2u)>,2u)>)>
        """
        return _itkImagePython.itkImageSSRTD22_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageSSRTD22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSSRTD22"""
        return _itkImagePython.itkImageSSRTD22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSSRTD22"""
        return _itkImagePython.itkImageSSRTD22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSSRTD22
        
        Create a new object of the class itkImageSSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSSRTD22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSSRTD22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSSRTD22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSSRTD22.SetRegions = new_instancemethod(_itkImagePython.itkImageSSRTD22_SetRegions,None,itkImageSSRTD22)
itkImageSSRTD22.FillBuffer = new_instancemethod(_itkImagePython.itkImageSSRTD22_FillBuffer,None,itkImageSSRTD22)
itkImageSSRTD22.SetPixel = new_instancemethod(_itkImagePython.itkImageSSRTD22_SetPixel,None,itkImageSSRTD22)
itkImageSSRTD22.GetPixel = new_instancemethod(_itkImagePython.itkImageSSRTD22_GetPixel,None,itkImageSSRTD22)
itkImageSSRTD22.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageSSRTD22_GetBufferPointer,None,itkImageSSRTD22)
itkImageSSRTD22.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageSSRTD22_GetPixelContainer,None,itkImageSSRTD22)
itkImageSSRTD22.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageSSRTD22_SetPixelContainer,None,itkImageSSRTD22)
itkImageSSRTD22.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageSSRTD22_GetPixelAccessor,None,itkImageSSRTD22)
itkImageSSRTD22.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageSSRTD22_GetNeighborhoodAccessor,None,itkImageSSRTD22)
itkImageSSRTD22.GetPointer = new_instancemethod(_itkImagePython.itkImageSSRTD22_GetPointer,None,itkImageSSRTD22)
itkImageSSRTD22_swigregister = _itkImagePython.itkImageSSRTD22_swigregister
itkImageSSRTD22_swigregister(itkImageSSRTD22)

def itkImageSSRTD22___New_orig__():
  """itkImageSSRTD22___New_orig__()"""
  return _itkImagePython.itkImageSSRTD22___New_orig__()

def itkImageSSRTD22_cast(*args):
  """itkImageSSRTD22_cast(itkLightObject obj) -> itkImageSSRTD22"""
  return _itkImagePython.itkImageSSRTD22_cast(*args)

class itkImageSSRTD33(itkImageBase3):
    """Proxy of C++ itkImageSSRTD33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageSSRTD33_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageSSRTD33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageSSRTD33_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkSymmetricSecondRankTensorD3 value)"""
        return _itkImagePython.itkImageSSRTD33_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkSymmetricSecondRankTensorD3 value)"""
        return _itkImagePython.itkImageSSRTD33_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkSymmetricSecondRankTensorD3
        GetPixel(self, itkIndex3 index) -> itkSymmetricSecondRankTensorD3
        """
        return _itkImagePython.itkImageSSRTD33_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkSymmetricSecondRankTensorD3
        GetBufferPointer(self) -> itkSymmetricSecondRankTensorD3
        """
        return _itkImagePython.itkImageSSRTD33_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::SymmetricSecondRankTensor<(double,3u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::SymmetricSecondRankTensor<(double,3u)>)>
        """
        return _itkImagePython.itkImageSSRTD33_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::SymmetricSecondRankTensor<(double,3u)>)> container)"""
        return _itkImagePython.itkImageSSRTD33_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::SymmetricSecondRankTensor<(double,3u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::SymmetricSecondRankTensor<(double,3u)>)>
        """
        return _itkImagePython.itkImageSSRTD33_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::SymmetricSecondRankTensor<(double,3u)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::SymmetricSecondRankTensor<(double,3u)>,3u)>)>
        """
        return _itkImagePython.itkImageSSRTD33_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageSSRTD33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSSRTD33"""
        return _itkImagePython.itkImageSSRTD33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSSRTD33"""
        return _itkImagePython.itkImageSSRTD33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSSRTD33
        
        Create a new object of the class itkImageSSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSSRTD33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSSRTD33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSSRTD33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSSRTD33.SetRegions = new_instancemethod(_itkImagePython.itkImageSSRTD33_SetRegions,None,itkImageSSRTD33)
itkImageSSRTD33.FillBuffer = new_instancemethod(_itkImagePython.itkImageSSRTD33_FillBuffer,None,itkImageSSRTD33)
itkImageSSRTD33.SetPixel = new_instancemethod(_itkImagePython.itkImageSSRTD33_SetPixel,None,itkImageSSRTD33)
itkImageSSRTD33.GetPixel = new_instancemethod(_itkImagePython.itkImageSSRTD33_GetPixel,None,itkImageSSRTD33)
itkImageSSRTD33.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageSSRTD33_GetBufferPointer,None,itkImageSSRTD33)
itkImageSSRTD33.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageSSRTD33_GetPixelContainer,None,itkImageSSRTD33)
itkImageSSRTD33.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageSSRTD33_SetPixelContainer,None,itkImageSSRTD33)
itkImageSSRTD33.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageSSRTD33_GetPixelAccessor,None,itkImageSSRTD33)
itkImageSSRTD33.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageSSRTD33_GetNeighborhoodAccessor,None,itkImageSSRTD33)
itkImageSSRTD33.GetPointer = new_instancemethod(_itkImagePython.itkImageSSRTD33_GetPointer,None,itkImageSSRTD33)
itkImageSSRTD33_swigregister = _itkImagePython.itkImageSSRTD33_swigregister
itkImageSSRTD33_swigregister(itkImageSSRTD33)

def itkImageSSRTD33___New_orig__():
  """itkImageSSRTD33___New_orig__()"""
  return _itkImagePython.itkImageSSRTD33___New_orig__()

def itkImageSSRTD33_cast(*args):
  """itkImageSSRTD33_cast(itkLightObject obj) -> itkImageSSRTD33"""
  return _itkImagePython.itkImageSSRTD33_cast(*args)

class itkImageUC2(itkImageBase2):
    """Proxy of C++ itkImageUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageUC2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageUC2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, unsigned char value)"""
        return _itkImagePython.itkImageUC2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, unsigned char value)"""
        return _itkImagePython.itkImageUC2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> unsigned char
        GetPixel(self, itkIndex2 index) -> unsigned char
        """
        return _itkImagePython.itkImageUC2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned char
        GetBufferPointer(self) -> unsigned char
        """
        return _itkImagePython.itkImageUC2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned char)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned char)>
        """
        return _itkImagePython.itkImageUC2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned char)> container)"""
        return _itkImagePython.itkImageUC2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned char)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned char)>
        """
        return _itkImagePython.itkImageUC2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned char,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned char,2u)>)>
        """
        return _itkImagePython.itkImageUC2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageUC2"""
        return _itkImagePython.itkImageUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageUC2"""
        return _itkImagePython.itkImageUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageUC2
        
        Create a new object of the class itkImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageUC2.SetRegions = new_instancemethod(_itkImagePython.itkImageUC2_SetRegions,None,itkImageUC2)
itkImageUC2.FillBuffer = new_instancemethod(_itkImagePython.itkImageUC2_FillBuffer,None,itkImageUC2)
itkImageUC2.SetPixel = new_instancemethod(_itkImagePython.itkImageUC2_SetPixel,None,itkImageUC2)
itkImageUC2.GetPixel = new_instancemethod(_itkImagePython.itkImageUC2_GetPixel,None,itkImageUC2)
itkImageUC2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageUC2_GetBufferPointer,None,itkImageUC2)
itkImageUC2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageUC2_GetPixelContainer,None,itkImageUC2)
itkImageUC2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageUC2_SetPixelContainer,None,itkImageUC2)
itkImageUC2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageUC2_GetPixelAccessor,None,itkImageUC2)
itkImageUC2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageUC2_GetNeighborhoodAccessor,None,itkImageUC2)
itkImageUC2.GetPointer = new_instancemethod(_itkImagePython.itkImageUC2_GetPointer,None,itkImageUC2)
itkImageUC2_swigregister = _itkImagePython.itkImageUC2_swigregister
itkImageUC2_swigregister(itkImageUC2)

def itkImageUC2___New_orig__():
  """itkImageUC2___New_orig__()"""
  return _itkImagePython.itkImageUC2___New_orig__()

def itkImageUC2_cast(*args):
  """itkImageUC2_cast(itkLightObject obj) -> itkImageUC2"""
  return _itkImagePython.itkImageUC2_cast(*args)

class itkImageUC3(itkImageBase3):
    """Proxy of C++ itkImageUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageUC3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageUC3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, unsigned char value)"""
        return _itkImagePython.itkImageUC3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, unsigned char value)"""
        return _itkImagePython.itkImageUC3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> unsigned char
        GetPixel(self, itkIndex3 index) -> unsigned char
        """
        return _itkImagePython.itkImageUC3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned char
        GetBufferPointer(self) -> unsigned char
        """
        return _itkImagePython.itkImageUC3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned char)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned char)>
        """
        return _itkImagePython.itkImageUC3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned char)> container)"""
        return _itkImagePython.itkImageUC3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned char)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned char)>
        """
        return _itkImagePython.itkImageUC3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned char,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned char,3u)>)>
        """
        return _itkImagePython.itkImageUC3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageUC3"""
        return _itkImagePython.itkImageUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageUC3"""
        return _itkImagePython.itkImageUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageUC3
        
        Create a new object of the class itkImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageUC3.SetRegions = new_instancemethod(_itkImagePython.itkImageUC3_SetRegions,None,itkImageUC3)
itkImageUC3.FillBuffer = new_instancemethod(_itkImagePython.itkImageUC3_FillBuffer,None,itkImageUC3)
itkImageUC3.SetPixel = new_instancemethod(_itkImagePython.itkImageUC3_SetPixel,None,itkImageUC3)
itkImageUC3.GetPixel = new_instancemethod(_itkImagePython.itkImageUC3_GetPixel,None,itkImageUC3)
itkImageUC3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageUC3_GetBufferPointer,None,itkImageUC3)
itkImageUC3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageUC3_GetPixelContainer,None,itkImageUC3)
itkImageUC3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageUC3_SetPixelContainer,None,itkImageUC3)
itkImageUC3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageUC3_GetPixelAccessor,None,itkImageUC3)
itkImageUC3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageUC3_GetNeighborhoodAccessor,None,itkImageUC3)
itkImageUC3.GetPointer = new_instancemethod(_itkImagePython.itkImageUC3_GetPointer,None,itkImageUC3)
itkImageUC3_swigregister = _itkImagePython.itkImageUC3_swigregister
itkImageUC3_swigregister(itkImageUC3)

def itkImageUC3___New_orig__():
  """itkImageUC3___New_orig__()"""
  return _itkImagePython.itkImageUC3___New_orig__()

def itkImageUC3_cast(*args):
  """itkImageUC3_cast(itkLightObject obj) -> itkImageUC3"""
  return _itkImagePython.itkImageUC3_cast(*args)

class itkImageUL2(itkImageBase2):
    """Proxy of C++ itkImageUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageUL2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageUL2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, unsigned long value)"""
        return _itkImagePython.itkImageUL2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, unsigned long value)"""
        return _itkImagePython.itkImageUL2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> unsigned long
        GetPixel(self, itkIndex2 index) -> unsigned long
        """
        return _itkImagePython.itkImageUL2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned long
        GetBufferPointer(self) -> unsigned long
        """
        return _itkImagePython.itkImageUL2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned long)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned long)>
        """
        return _itkImagePython.itkImageUL2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned long)> container)"""
        return _itkImagePython.itkImageUL2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned long)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned long)>
        """
        return _itkImagePython.itkImageUL2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned long,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned long,2u)>)>
        """
        return _itkImagePython.itkImageUL2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageUL2"""
        return _itkImagePython.itkImageUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageUL2"""
        return _itkImagePython.itkImageUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageUL2
        
        Create a new object of the class itkImageUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageUL2.SetRegions = new_instancemethod(_itkImagePython.itkImageUL2_SetRegions,None,itkImageUL2)
itkImageUL2.FillBuffer = new_instancemethod(_itkImagePython.itkImageUL2_FillBuffer,None,itkImageUL2)
itkImageUL2.SetPixel = new_instancemethod(_itkImagePython.itkImageUL2_SetPixel,None,itkImageUL2)
itkImageUL2.GetPixel = new_instancemethod(_itkImagePython.itkImageUL2_GetPixel,None,itkImageUL2)
itkImageUL2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageUL2_GetBufferPointer,None,itkImageUL2)
itkImageUL2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageUL2_GetPixelContainer,None,itkImageUL2)
itkImageUL2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageUL2_SetPixelContainer,None,itkImageUL2)
itkImageUL2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageUL2_GetPixelAccessor,None,itkImageUL2)
itkImageUL2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageUL2_GetNeighborhoodAccessor,None,itkImageUL2)
itkImageUL2.GetPointer = new_instancemethod(_itkImagePython.itkImageUL2_GetPointer,None,itkImageUL2)
itkImageUL2_swigregister = _itkImagePython.itkImageUL2_swigregister
itkImageUL2_swigregister(itkImageUL2)

def itkImageUL2___New_orig__():
  """itkImageUL2___New_orig__()"""
  return _itkImagePython.itkImageUL2___New_orig__()

def itkImageUL2_cast(*args):
  """itkImageUL2_cast(itkLightObject obj) -> itkImageUL2"""
  return _itkImagePython.itkImageUL2_cast(*args)

class itkImageUL3(itkImageBase3):
    """Proxy of C++ itkImageUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageUL3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageUL3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, unsigned long value)"""
        return _itkImagePython.itkImageUL3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, unsigned long value)"""
        return _itkImagePython.itkImageUL3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> unsigned long
        GetPixel(self, itkIndex3 index) -> unsigned long
        """
        return _itkImagePython.itkImageUL3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned long
        GetBufferPointer(self) -> unsigned long
        """
        return _itkImagePython.itkImageUL3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned long)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned long)>
        """
        return _itkImagePython.itkImageUL3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned long)> container)"""
        return _itkImagePython.itkImageUL3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned long)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned long)>
        """
        return _itkImagePython.itkImageUL3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned long,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned long,3u)>)>
        """
        return _itkImagePython.itkImageUL3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageUL3"""
        return _itkImagePython.itkImageUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageUL3"""
        return _itkImagePython.itkImageUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageUL3
        
        Create a new object of the class itkImageUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageUL3.SetRegions = new_instancemethod(_itkImagePython.itkImageUL3_SetRegions,None,itkImageUL3)
itkImageUL3.FillBuffer = new_instancemethod(_itkImagePython.itkImageUL3_FillBuffer,None,itkImageUL3)
itkImageUL3.SetPixel = new_instancemethod(_itkImagePython.itkImageUL3_SetPixel,None,itkImageUL3)
itkImageUL3.GetPixel = new_instancemethod(_itkImagePython.itkImageUL3_GetPixel,None,itkImageUL3)
itkImageUL3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageUL3_GetBufferPointer,None,itkImageUL3)
itkImageUL3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageUL3_GetPixelContainer,None,itkImageUL3)
itkImageUL3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageUL3_SetPixelContainer,None,itkImageUL3)
itkImageUL3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageUL3_GetPixelAccessor,None,itkImageUL3)
itkImageUL3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageUL3_GetNeighborhoodAccessor,None,itkImageUL3)
itkImageUL3.GetPointer = new_instancemethod(_itkImagePython.itkImageUL3_GetPointer,None,itkImageUL3)
itkImageUL3_swigregister = _itkImagePython.itkImageUL3_swigregister
itkImageUL3_swigregister(itkImageUL3)

def itkImageUL3___New_orig__():
  """itkImageUL3___New_orig__()"""
  return _itkImagePython.itkImageUL3___New_orig__()

def itkImageUL3_cast(*args):
  """itkImageUL3_cast(itkLightObject obj) -> itkImageUL3"""
  return _itkImagePython.itkImageUL3_cast(*args)

class itkImageUS2(itkImageBase2):
    """Proxy of C++ itkImageUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageUS2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageUS2_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, unsigned short value)"""
        return _itkImagePython.itkImageUS2_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, unsigned short value)"""
        return _itkImagePython.itkImageUS2_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> unsigned short
        GetPixel(self, itkIndex2 index) -> unsigned short
        """
        return _itkImagePython.itkImageUS2_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned short
        GetBufferPointer(self) -> unsigned short
        """
        return _itkImagePython.itkImageUS2_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned short)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned short)>
        """
        return _itkImagePython.itkImageUS2_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned short)> container)"""
        return _itkImagePython.itkImageUS2_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned short)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned short)>
        """
        return _itkImagePython.itkImageUS2_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned short,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned short,2u)>)>
        """
        return _itkImagePython.itkImageUS2_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageUS2"""
        return _itkImagePython.itkImageUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageUS2"""
        return _itkImagePython.itkImageUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageUS2
        
        Create a new object of the class itkImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageUS2.SetRegions = new_instancemethod(_itkImagePython.itkImageUS2_SetRegions,None,itkImageUS2)
itkImageUS2.FillBuffer = new_instancemethod(_itkImagePython.itkImageUS2_FillBuffer,None,itkImageUS2)
itkImageUS2.SetPixel = new_instancemethod(_itkImagePython.itkImageUS2_SetPixel,None,itkImageUS2)
itkImageUS2.GetPixel = new_instancemethod(_itkImagePython.itkImageUS2_GetPixel,None,itkImageUS2)
itkImageUS2.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageUS2_GetBufferPointer,None,itkImageUS2)
itkImageUS2.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageUS2_GetPixelContainer,None,itkImageUS2)
itkImageUS2.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageUS2_SetPixelContainer,None,itkImageUS2)
itkImageUS2.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageUS2_GetPixelAccessor,None,itkImageUS2)
itkImageUS2.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageUS2_GetNeighborhoodAccessor,None,itkImageUS2)
itkImageUS2.GetPointer = new_instancemethod(_itkImagePython.itkImageUS2_GetPointer,None,itkImageUS2)
itkImageUS2_swigregister = _itkImagePython.itkImageUS2_swigregister
itkImageUS2_swigregister(itkImageUS2)

def itkImageUS2___New_orig__():
  """itkImageUS2___New_orig__()"""
  return _itkImagePython.itkImageUS2___New_orig__()

def itkImageUS2_cast(*args):
  """itkImageUS2_cast(itkLightObject obj) -> itkImageUS2"""
  return _itkImagePython.itkImageUS2_cast(*args)

class itkImageUS3(itkImageBase3):
    """Proxy of C++ itkImageUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageUS3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageUS3_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, unsigned short value)"""
        return _itkImagePython.itkImageUS3_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, unsigned short value)"""
        return _itkImagePython.itkImageUS3_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> unsigned short
        GetPixel(self, itkIndex3 index) -> unsigned short
        """
        return _itkImagePython.itkImageUS3_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> unsigned short
        GetBufferPointer(self) -> unsigned short
        """
        return _itkImagePython.itkImageUS3_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned short)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,unsigned short)>
        """
        return _itkImagePython.itkImageUS3_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,unsigned short)> container)"""
        return _itkImagePython.itkImageUS3_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned short)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(unsigned short)>
        """
        return _itkImagePython.itkImageUS3_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned short,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(unsigned short,3u)>)>
        """
        return _itkImagePython.itkImageUS3_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageUS3"""
        return _itkImagePython.itkImageUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageUS3"""
        return _itkImagePython.itkImageUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageUS3
        
        Create a new object of the class itkImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageUS3.SetRegions = new_instancemethod(_itkImagePython.itkImageUS3_SetRegions,None,itkImageUS3)
itkImageUS3.FillBuffer = new_instancemethod(_itkImagePython.itkImageUS3_FillBuffer,None,itkImageUS3)
itkImageUS3.SetPixel = new_instancemethod(_itkImagePython.itkImageUS3_SetPixel,None,itkImageUS3)
itkImageUS3.GetPixel = new_instancemethod(_itkImagePython.itkImageUS3_GetPixel,None,itkImageUS3)
itkImageUS3.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageUS3_GetBufferPointer,None,itkImageUS3)
itkImageUS3.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageUS3_GetPixelContainer,None,itkImageUS3)
itkImageUS3.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageUS3_SetPixelContainer,None,itkImageUS3)
itkImageUS3.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageUS3_GetPixelAccessor,None,itkImageUS3)
itkImageUS3.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageUS3_GetNeighborhoodAccessor,None,itkImageUS3)
itkImageUS3.GetPointer = new_instancemethod(_itkImagePython.itkImageUS3_GetPointer,None,itkImageUS3)
itkImageUS3_swigregister = _itkImagePython.itkImageUS3_swigregister
itkImageUS3_swigregister(itkImageUS3)

def itkImageUS3___New_orig__():
  """itkImageUS3___New_orig__()"""
  return _itkImagePython.itkImageUS3___New_orig__()

def itkImageUS3_cast(*args):
  """itkImageUS3_cast(itkLightObject obj) -> itkImageUS3"""
  return _itkImagePython.itkImageUS3_cast(*args)

class itkImageVF22(itkImageBase2):
    """Proxy of C++ itkImageVF22 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageVF22_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageVF22___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion2 region)
        SetRegions(self, itkSize2 size)
        """
        return _itkImagePython.itkImageVF22_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVectorF2 value)"""
        return _itkImagePython.itkImageVF22_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex2 index, itkVectorF2 value)"""
        return _itkImagePython.itkImageVF22_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex2 index) -> itkVectorF2
        GetPixel(self, itkIndex2 index) -> itkVectorF2
        """
        return _itkImagePython.itkImageVF22_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkVectorF2
        GetBufferPointer(self) -> itkVectorF2
        """
        return _itkImagePython.itkImageVF22_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::Vector<(float,2u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::Vector<(float,2u)>)>
        """
        return _itkImagePython.itkImageVF22_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::Vector<(float,2u)>)> container)"""
        return _itkImagePython.itkImageVF22_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::Vector<(float,2u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::Vector<(float,2u)>)>
        """
        return _itkImagePython.itkImageVF22_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::Vector<(float,2u)>,2u)>)>
        """
        return _itkImagePython.itkImageVF22_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageVF22
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageVF22"""
        return _itkImagePython.itkImageVF22_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageVF22"""
        return _itkImagePython.itkImageVF22_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageVF22
        
        Create a new object of the class itkImageVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageVF22.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageVF22.SetRegions = new_instancemethod(_itkImagePython.itkImageVF22_SetRegions,None,itkImageVF22)
itkImageVF22.FillBuffer = new_instancemethod(_itkImagePython.itkImageVF22_FillBuffer,None,itkImageVF22)
itkImageVF22.SetPixel = new_instancemethod(_itkImagePython.itkImageVF22_SetPixel,None,itkImageVF22)
itkImageVF22.GetPixel = new_instancemethod(_itkImagePython.itkImageVF22_GetPixel,None,itkImageVF22)
itkImageVF22.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageVF22_GetBufferPointer,None,itkImageVF22)
itkImageVF22.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageVF22_GetPixelContainer,None,itkImageVF22)
itkImageVF22.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageVF22_SetPixelContainer,None,itkImageVF22)
itkImageVF22.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageVF22_GetPixelAccessor,None,itkImageVF22)
itkImageVF22.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageVF22_GetNeighborhoodAccessor,None,itkImageVF22)
itkImageVF22.GetPointer = new_instancemethod(_itkImagePython.itkImageVF22_GetPointer,None,itkImageVF22)
itkImageVF22_swigregister = _itkImagePython.itkImageVF22_swigregister
itkImageVF22_swigregister(itkImageVF22)

def itkImageVF22___New_orig__():
  """itkImageVF22___New_orig__()"""
  return _itkImagePython.itkImageVF22___New_orig__()

def itkImageVF22_cast(*args):
  """itkImageVF22_cast(itkLightObject obj) -> itkImageVF22"""
  return _itkImagePython.itkImageVF22_cast(*args)

class itkImageVF33(itkImageBase3):
    """Proxy of C++ itkImageVF33 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkImagePython.itkImageVF33_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkImagePython.itkImageVF33___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetRegions(self, *args):
        """
        SetRegions(self, itkImageRegion3 region)
        SetRegions(self, itkSize3 size)
        """
        return _itkImagePython.itkImageVF33_SetRegions(self, *args)

    def FillBuffer(self, *args):
        """FillBuffer(self, itkVectorF3 value)"""
        return _itkImagePython.itkImageVF33_FillBuffer(self, *args)

    def SetPixel(self, *args):
        """SetPixel(self, itkIndex3 index, itkVectorF3 value)"""
        return _itkImagePython.itkImageVF33_SetPixel(self, *args)

    def GetPixel(self, *args):
        """
        GetPixel(self, itkIndex3 index) -> itkVectorF3
        GetPixel(self, itkIndex3 index) -> itkVectorF3
        """
        return _itkImagePython.itkImageVF33_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        """
        GetBufferPointer(self) -> itkVectorF3
        GetBufferPointer(self) -> itkVectorF3
        """
        return _itkImagePython.itkImageVF33_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        """
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::Vector<(float,3u)>)>
        GetPixelContainer(self) -> itk::ImportImageContainer<(unsigned long,itk::Vector<(float,3u)>)>
        """
        return _itkImagePython.itkImageVF33_GetPixelContainer(self, *args)

    def SetPixelContainer(self, *args):
        """SetPixelContainer(self, itk::ImportImageContainer<(unsigned long,itk::Vector<(float,3u)>)> container)"""
        return _itkImagePython.itkImageVF33_SetPixelContainer(self, *args)

    def GetPixelAccessor(self, *args):
        """
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::Vector<(float,3u)>)>
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor<(itk::Vector<(float,3u)>)>
        """
        return _itkImagePython.itkImageVF33_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        """
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor<(itk::Image<(itk::Vector<(float,3u)>,3u)>)>
        """
        return _itkImagePython.itkImageVF33_GetNeighborhoodAccessor(self, *args)

    __swig_destroy__ = _itkImagePython.delete_itkImageVF33
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageVF33"""
        return _itkImagePython.itkImageVF33_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageVF33"""
        return _itkImagePython.itkImageVF33_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageVF33
        
        Create a new object of the class itkImageVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageVF33.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageVF33.SetRegions = new_instancemethod(_itkImagePython.itkImageVF33_SetRegions,None,itkImageVF33)
itkImageVF33.FillBuffer = new_instancemethod(_itkImagePython.itkImageVF33_FillBuffer,None,itkImageVF33)
itkImageVF33.SetPixel = new_instancemethod(_itkImagePython.itkImageVF33_SetPixel,None,itkImageVF33)
itkImageVF33.GetPixel = new_instancemethod(_itkImagePython.itkImageVF33_GetPixel,None,itkImageVF33)
itkImageVF33.GetBufferPointer = new_instancemethod(_itkImagePython.itkImageVF33_GetBufferPointer,None,itkImageVF33)
itkImageVF33.GetPixelContainer = new_instancemethod(_itkImagePython.itkImageVF33_GetPixelContainer,None,itkImageVF33)
itkImageVF33.SetPixelContainer = new_instancemethod(_itkImagePython.itkImageVF33_SetPixelContainer,None,itkImageVF33)
itkImageVF33.GetPixelAccessor = new_instancemethod(_itkImagePython.itkImageVF33_GetPixelAccessor,None,itkImageVF33)
itkImageVF33.GetNeighborhoodAccessor = new_instancemethod(_itkImagePython.itkImageVF33_GetNeighborhoodAccessor,None,itkImageVF33)
itkImageVF33.GetPointer = new_instancemethod(_itkImagePython.itkImageVF33_GetPointer,None,itkImageVF33)
itkImageVF33_swigregister = _itkImagePython.itkImageVF33_swigregister
itkImageVF33_swigregister(itkImageVF33)

def itkImageVF33___New_orig__():
  """itkImageVF33___New_orig__()"""
  return _itkImagePython.itkImageVF33___New_orig__()

def itkImageVF33_cast(*args):
  """itkImageVF33_cast(itkLightObject obj) -> itkImageVF33"""
  return _itkImagePython.itkImageVF33_cast(*args)



