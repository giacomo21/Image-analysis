# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkDanielssonDistanceMapImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkDanielssonDistanceMapImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkDanielssonDistanceMapImageFilterPython
            return _itkDanielssonDistanceMapImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkDanielssonDistanceMapImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkDanielssonDistanceMapImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkDanielssonDistanceMapImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkOffsetPython
import itkSizePython
import pyBasePython
import itkImageToImageFilterAPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkIndexPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkDanielssonDistanceMapImageFilterIUS3ID3_New():
  return itkDanielssonDistanceMapImageFilterIUS3ID3.New()

def itkDanielssonDistanceMapImageFilterIUS2ID2_New():
  return itkDanielssonDistanceMapImageFilterIUS2ID2.New()

def itkDanielssonDistanceMapImageFilterIUS3IF3_New():
  return itkDanielssonDistanceMapImageFilterIUS3IF3.New()

def itkDanielssonDistanceMapImageFilterIUS2IF2_New():
  return itkDanielssonDistanceMapImageFilterIUS2IF2.New()

def itkDanielssonDistanceMapImageFilterIUL3ID3_New():
  return itkDanielssonDistanceMapImageFilterIUL3ID3.New()

def itkDanielssonDistanceMapImageFilterIUL2ID2_New():
  return itkDanielssonDistanceMapImageFilterIUL2ID2.New()

def itkDanielssonDistanceMapImageFilterIUL3IF3_New():
  return itkDanielssonDistanceMapImageFilterIUL3IF3.New()

def itkDanielssonDistanceMapImageFilterIUL2IF2_New():
  return itkDanielssonDistanceMapImageFilterIUL2IF2.New()

def itkDanielssonDistanceMapImageFilterIUC3ID3_New():
  return itkDanielssonDistanceMapImageFilterIUC3ID3.New()

def itkDanielssonDistanceMapImageFilterIUC2ID2_New():
  return itkDanielssonDistanceMapImageFilterIUC2ID2.New()

def itkDanielssonDistanceMapImageFilterIUC3IF3_New():
  return itkDanielssonDistanceMapImageFilterIUC3IF3.New()

def itkDanielssonDistanceMapImageFilterIUC2IF2_New():
  return itkDanielssonDistanceMapImageFilterIUC2IF2.New()

def itkDanielssonDistanceMapImageFilterID3ID3_New():
  return itkDanielssonDistanceMapImageFilterID3ID3.New()

def itkDanielssonDistanceMapImageFilterID2ID2_New():
  return itkDanielssonDistanceMapImageFilterID2ID2.New()

def itkDanielssonDistanceMapImageFilterIF3IF3_New():
  return itkDanielssonDistanceMapImageFilterIF3IF3.New()

def itkDanielssonDistanceMapImageFilterIF2IF2_New():
  return itkDanielssonDistanceMapImageFilterIF2IF2.New()

def itkDanielssonDistanceMapImageFilterIUS3IUS3_New():
  return itkDanielssonDistanceMapImageFilterIUS3IUS3.New()

def itkDanielssonDistanceMapImageFilterIUS2IUS2_New():
  return itkDanielssonDistanceMapImageFilterIUS2IUS2.New()

def itkDanielssonDistanceMapImageFilterIUL3IUL3_New():
  return itkDanielssonDistanceMapImageFilterIUL3IUL3.New()

def itkDanielssonDistanceMapImageFilterIUL2IUL2_New():
  return itkDanielssonDistanceMapImageFilterIUL2IUL2.New()

def itkDanielssonDistanceMapImageFilterIUC3IUC3_New():
  return itkDanielssonDistanceMapImageFilterIUC3IUC3.New()

def itkDanielssonDistanceMapImageFilterIUC2IUC2_New():
  return itkDanielssonDistanceMapImageFilterIUC2IUC2.New()

class itkDanielssonDistanceMapImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageD2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageD2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterID2ID2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterID2ID2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterID2ID2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterID2ID2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_GetPointer,None,itkDanielssonDistanceMapImageFilterID2ID2)
itkDanielssonDistanceMapImageFilterID2ID2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_swigregister
itkDanielssonDistanceMapImageFilterID2ID2_swigregister(itkDanielssonDistanceMapImageFilterID2ID2)

def itkDanielssonDistanceMapImageFilterID2ID2___New_orig__():
  """itkDanielssonDistanceMapImageFilterID2ID2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2___New_orig__()

def itkDanielssonDistanceMapImageFilterID2ID2_cast(*args):
  """itkDanielssonDistanceMapImageFilterID2ID2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterID2ID2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID2ID2_cast(*args)

class itkDanielssonDistanceMapImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageD3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageD3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterID3ID3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterID3ID3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterID3ID3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterID3ID3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_GetPointer,None,itkDanielssonDistanceMapImageFilterID3ID3)
itkDanielssonDistanceMapImageFilterID3ID3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_swigregister
itkDanielssonDistanceMapImageFilterID3ID3_swigregister(itkDanielssonDistanceMapImageFilterID3ID3)

def itkDanielssonDistanceMapImageFilterID3ID3___New_orig__():
  """itkDanielssonDistanceMapImageFilterID3ID3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3___New_orig__()

def itkDanielssonDistanceMapImageFilterID3ID3_cast(*args):
  """itkDanielssonDistanceMapImageFilterID3ID3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterID3ID3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterID3ID3_cast(*args)

class itkDanielssonDistanceMapImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIF2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIF2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIF2IF2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIF2IF2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_GetPointer,None,itkDanielssonDistanceMapImageFilterIF2IF2)
itkDanielssonDistanceMapImageFilterIF2IF2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_swigregister
itkDanielssonDistanceMapImageFilterIF2IF2_swigregister(itkDanielssonDistanceMapImageFilterIF2IF2)

def itkDanielssonDistanceMapImageFilterIF2IF2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIF2IF2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2___New_orig__()

def itkDanielssonDistanceMapImageFilterIF2IF2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIF2IF2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIF2IF2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF2IF2_cast(*args)

class itkDanielssonDistanceMapImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIF3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIF3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIF3IF3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIF3IF3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_GetPointer,None,itkDanielssonDistanceMapImageFilterIF3IF3)
itkDanielssonDistanceMapImageFilterIF3IF3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_swigregister
itkDanielssonDistanceMapImageFilterIF3IF3_swigregister(itkDanielssonDistanceMapImageFilterIF3IF3)

def itkDanielssonDistanceMapImageFilterIF3IF3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIF3IF3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3___New_orig__()

def itkDanielssonDistanceMapImageFilterIF3IF3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIF3IF3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIF3IF3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIF3IF3_cast(*args)

class itkDanielssonDistanceMapImageFilterIUC2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageD2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageD2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2ID2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUC2ID2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC2ID2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUC2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUC2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC2ID2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_GetPointer,None,itkDanielssonDistanceMapImageFilterIUC2ID2)
itkDanielssonDistanceMapImageFilterIUC2ID2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_swigregister
itkDanielssonDistanceMapImageFilterIUC2ID2_swigregister(itkDanielssonDistanceMapImageFilterIUC2ID2)

def itkDanielssonDistanceMapImageFilterIUC2ID2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUC2ID2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC2ID2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUC2ID2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2ID2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2ID2_cast(*args)

class itkDanielssonDistanceMapImageFilterIUC2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUC2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC2IF2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUC2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUC2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC2IF2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_GetPointer,None,itkDanielssonDistanceMapImageFilterIUC2IF2)
itkDanielssonDistanceMapImageFilterIUC2IF2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_swigregister
itkDanielssonDistanceMapImageFilterIUC2IF2_swigregister(itkDanielssonDistanceMapImageFilterIUC2IF2)

def itkDanielssonDistanceMapImageFilterIUC2IF2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUC2IF2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC2IF2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUC2IF2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2IF2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IF2_cast(*args)

class itkDanielssonDistanceMapImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageUC2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageUC2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2IUC2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUC2IUC2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC2IUC2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC2IUC2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_GetPointer,None,itkDanielssonDistanceMapImageFilterIUC2IUC2)
itkDanielssonDistanceMapImageFilterIUC2IUC2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_swigregister
itkDanielssonDistanceMapImageFilterIUC2IUC2_swigregister(itkDanielssonDistanceMapImageFilterIUC2IUC2)

def itkDanielssonDistanceMapImageFilterIUC2IUC2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUC2IUC2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC2IUC2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC2IUC2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC2IUC2_cast(*args)

class itkDanielssonDistanceMapImageFilterIUC3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageD3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageD3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3ID3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUC3ID3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC3ID3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUC3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUC3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC3ID3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_GetPointer,None,itkDanielssonDistanceMapImageFilterIUC3ID3)
itkDanielssonDistanceMapImageFilterIUC3ID3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_swigregister
itkDanielssonDistanceMapImageFilterIUC3ID3_swigregister(itkDanielssonDistanceMapImageFilterIUC3ID3)

def itkDanielssonDistanceMapImageFilterIUC3ID3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUC3ID3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC3ID3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUC3ID3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3ID3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3ID3_cast(*args)

class itkDanielssonDistanceMapImageFilterIUC3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUC3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC3IF3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUC3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUC3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC3IF3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_GetPointer,None,itkDanielssonDistanceMapImageFilterIUC3IF3)
itkDanielssonDistanceMapImageFilterIUC3IF3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_swigregister
itkDanielssonDistanceMapImageFilterIUC3IF3_swigregister(itkDanielssonDistanceMapImageFilterIUC3IF3)

def itkDanielssonDistanceMapImageFilterIUC3IF3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUC3IF3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC3IF3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUC3IF3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3IF3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IF3_cast(*args)

class itkDanielssonDistanceMapImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageUC3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageUC3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3IUC3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUC3IUC3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUC3IUC3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUC3IUC3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_GetPointer,None,itkDanielssonDistanceMapImageFilterIUC3IUC3)
itkDanielssonDistanceMapImageFilterIUC3IUC3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_swigregister
itkDanielssonDistanceMapImageFilterIUC3IUC3_swigregister(itkDanielssonDistanceMapImageFilterIUC3IUC3)

def itkDanielssonDistanceMapImageFilterIUC3IUC3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUC3IUC3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUC3IUC3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUC3IUC3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUC3IUC3_cast(*args)

class itkDanielssonDistanceMapImageFilterIUL2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUL2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageD2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageD2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUL2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL2ID2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUL2ID2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUL2ID2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUL2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUL2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUL2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUL2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUL2ID2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_GetPointer,None,itkDanielssonDistanceMapImageFilterIUL2ID2)
itkDanielssonDistanceMapImageFilterIUL2ID2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_swigregister
itkDanielssonDistanceMapImageFilterIUL2ID2_swigregister(itkDanielssonDistanceMapImageFilterIUL2ID2)

def itkDanielssonDistanceMapImageFilterIUL2ID2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUL2ID2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUL2ID2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUL2ID2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL2ID2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2ID2_cast(*args)

class itkDanielssonDistanceMapImageFilterIUL2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUL2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUL2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUL2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUL2IF2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUL2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUL2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUL2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUL2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUL2IF2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_GetPointer,None,itkDanielssonDistanceMapImageFilterIUL2IF2)
itkDanielssonDistanceMapImageFilterIUL2IF2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_swigregister
itkDanielssonDistanceMapImageFilterIUL2IF2_swigregister(itkDanielssonDistanceMapImageFilterIUL2IF2)

def itkDanielssonDistanceMapImageFilterIUL2IF2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUL2IF2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUL2IF2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUL2IF2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL2IF2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IF2_cast(*args)

class itkDanielssonDistanceMapImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageUL2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageUL2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL2IUL2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUL2IUL2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUL2IUL2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUL2IUL2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_GetPointer,None,itkDanielssonDistanceMapImageFilterIUL2IUL2)
itkDanielssonDistanceMapImageFilterIUL2IUL2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_swigregister
itkDanielssonDistanceMapImageFilterIUL2IUL2_swigregister(itkDanielssonDistanceMapImageFilterIUL2IUL2)

def itkDanielssonDistanceMapImageFilterIUL2IUL2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUL2IUL2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUL2IUL2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL2IUL2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL2IUL2_cast(*args)

class itkDanielssonDistanceMapImageFilterIUL3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUL3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageD3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageD3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUL3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL3ID3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUL3ID3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUL3ID3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUL3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUL3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUL3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUL3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUL3ID3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_GetPointer,None,itkDanielssonDistanceMapImageFilterIUL3ID3)
itkDanielssonDistanceMapImageFilterIUL3ID3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_swigregister
itkDanielssonDistanceMapImageFilterIUL3ID3_swigregister(itkDanielssonDistanceMapImageFilterIUL3ID3)

def itkDanielssonDistanceMapImageFilterIUL3ID3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUL3ID3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUL3ID3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUL3ID3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL3ID3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3ID3_cast(*args)

class itkDanielssonDistanceMapImageFilterIUL3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUL3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUL3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUL3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUL3IF3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUL3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUL3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUL3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUL3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUL3IF3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_GetPointer,None,itkDanielssonDistanceMapImageFilterIUL3IF3)
itkDanielssonDistanceMapImageFilterIUL3IF3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_swigregister
itkDanielssonDistanceMapImageFilterIUL3IF3_swigregister(itkDanielssonDistanceMapImageFilterIUL3IF3)

def itkDanielssonDistanceMapImageFilterIUL3IF3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUL3IF3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUL3IF3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUL3IF3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL3IF3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IF3_cast(*args)

class itkDanielssonDistanceMapImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageUL3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageUL3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL3IUL3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUL3IUL3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUL3IUL3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUL3IUL3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_GetPointer,None,itkDanielssonDistanceMapImageFilterIUL3IUL3)
itkDanielssonDistanceMapImageFilterIUL3IUL3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_swigregister
itkDanielssonDistanceMapImageFilterIUL3IUL3_swigregister(itkDanielssonDistanceMapImageFilterIUL3IUL3)

def itkDanielssonDistanceMapImageFilterIUL3IUL3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUL3IUL3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUL3IUL3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUL3IUL3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUL3IUL3_cast(*args)

class itkDanielssonDistanceMapImageFilterIUS2ID2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageD2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageD2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2ID2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUS2ID2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS2ID2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUS2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUS2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS2ID2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_GetPointer,None,itkDanielssonDistanceMapImageFilterIUS2ID2)
itkDanielssonDistanceMapImageFilterIUS2ID2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_swigregister
itkDanielssonDistanceMapImageFilterIUS2ID2_swigregister(itkDanielssonDistanceMapImageFilterIUS2ID2)

def itkDanielssonDistanceMapImageFilterIUS2ID2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUS2ID2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS2ID2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUS2ID2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2ID2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2ID2_cast(*args)

class itkDanielssonDistanceMapImageFilterIUS2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUS2IF2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS2IF2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUS2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUS2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS2IF2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_GetPointer,None,itkDanielssonDistanceMapImageFilterIUS2IF2)
itkDanielssonDistanceMapImageFilterIUS2IF2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_swigregister
itkDanielssonDistanceMapImageFilterIUS2IF2_swigregister(itkDanielssonDistanceMapImageFilterIUS2IF2)

def itkDanielssonDistanceMapImageFilterIUS2IF2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUS2IF2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS2IF2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUS2IF2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2IF2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IF2_cast(*args)

class itkDanielssonDistanceMapImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageUS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageUS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO22"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2IUS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUS2IUS2"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS2IUS2
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS2IUS2.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_GetPointer,None,itkDanielssonDistanceMapImageFilterIUS2IUS2)
itkDanielssonDistanceMapImageFilterIUS2IUS2_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_swigregister
itkDanielssonDistanceMapImageFilterIUS2IUS2_swigregister(itkDanielssonDistanceMapImageFilterIUS2IUS2)

def itkDanielssonDistanceMapImageFilterIUS2IUS2___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUS2IUS2___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS2IUS2_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS2IUS2"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS2IUS2_cast(*args)

class itkDanielssonDistanceMapImageFilterIUS3ID3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageD3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageD3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3ID3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUS3ID3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS3ID3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUS3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUS3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS3ID3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_GetPointer,None,itkDanielssonDistanceMapImageFilterIUS3ID3)
itkDanielssonDistanceMapImageFilterIUS3ID3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_swigregister
itkDanielssonDistanceMapImageFilterIUS3ID3_swigregister(itkDanielssonDistanceMapImageFilterIUS3ID3)

def itkDanielssonDistanceMapImageFilterIUS3ID3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUS3ID3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS3ID3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUS3ID3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3ID3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3ID3_cast(*args)

class itkDanielssonDistanceMapImageFilterIUS3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUS3IF3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS3IF3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUS3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUS3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS3IF3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_GetPointer,None,itkDanielssonDistanceMapImageFilterIUS3IF3)
itkDanielssonDistanceMapImageFilterIUS3IF3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_swigregister
itkDanielssonDistanceMapImageFilterIUS3IF3_swigregister(itkDanielssonDistanceMapImageFilterIUS3IF3)

def itkDanielssonDistanceMapImageFilterIUS3IF3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUS3IF3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS3IF3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUS3IF3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3IF3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IF3_cast(*args)

class itkDanielssonDistanceMapImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkDanielssonDistanceMapImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputImageDimension
    OutputImageDimension = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_OutputImageDimension
    SameDimensionCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SameDimensionCheck
    UnsignedIntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_UnsignedIntConvertibleToOutputCheck
    IntConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_IntConvertibleToOutputCheck
    DoubleConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    InputConvertibleToOutputCheck = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSquaredDistance(self, *args):
        """SetSquaredDistance(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetSquaredDistance(self, *args)

    def GetSquaredDistance(self):
        """GetSquaredDistance(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        """SquaredDistanceOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        """SquaredDistanceOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SquaredDistanceOff(self)

    def SetInputIsBinary(self, *args):
        """SetInputIsBinary(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetInputIsBinary(self, *args)

    def GetInputIsBinary(self):
        """GetInputIsBinary(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetInputIsBinary(self)

    def InputIsBinaryOn(self):
        """InputIsBinaryOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputIsBinaryOn(self)

    def InputIsBinaryOff(self):
        """InputIsBinaryOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputIsBinaryOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        """UseImageSpacingOn(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        """UseImageSpacingOff(self)"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_UseImageSpacingOff(self)

    def GetVoronoiMap(self):
        """GetVoronoiMap(self) -> itkImageUS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetVoronoiMap(self)

    def GetDistanceMap(self):
        """GetDistanceMap(self) -> itkImageUS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetDistanceMap(self)

    def GetVectorDistanceMap(self):
        """GetVectorDistanceMap(self) -> itkImageO33"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetVectorDistanceMap(self)

    __swig_destroy__ = _itkDanielssonDistanceMapImageFilterPython.delete_itkDanielssonDistanceMapImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3IUS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDanielssonDistanceMapImageFilterIUS3IUS3"""
        return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDanielssonDistanceMapImageFilterIUS3IUS3
        
        Create a new object of the class itkDanielssonDistanceMapImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDanielssonDistanceMapImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDanielssonDistanceMapImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDanielssonDistanceMapImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDanielssonDistanceMapImageFilterIUS3IUS3.SetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetSquaredDistance = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetSquaredDistance,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.SquaredDistanceOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SquaredDistanceOn,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.SquaredDistanceOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SquaredDistanceOff,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.SetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetInputIsBinary = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetInputIsBinary,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.InputIsBinaryOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputIsBinaryOn,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.InputIsBinaryOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_InputIsBinaryOff,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.SetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_SetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetUseImageSpacing = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetUseImageSpacing,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.UseImageSpacingOn = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_UseImageSpacingOn,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.UseImageSpacingOff = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_UseImageSpacingOff,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetVoronoiMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetVoronoiMap,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetVectorDistanceMap = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetVectorDistanceMap,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_GetPointer,None,itkDanielssonDistanceMapImageFilterIUS3IUS3)
itkDanielssonDistanceMapImageFilterIUS3IUS3_swigregister = _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_swigregister
itkDanielssonDistanceMapImageFilterIUS3IUS3_swigregister(itkDanielssonDistanceMapImageFilterIUS3IUS3)

def itkDanielssonDistanceMapImageFilterIUS3IUS3___New_orig__():
  """itkDanielssonDistanceMapImageFilterIUS3IUS3___New_orig__()"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3___New_orig__()

def itkDanielssonDistanceMapImageFilterIUS3IUS3_cast(*args):
  """itkDanielssonDistanceMapImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkDanielssonDistanceMapImageFilterIUS3IUS3"""
  return _itkDanielssonDistanceMapImageFilterPython.itkDanielssonDistanceMapImageFilterIUS3IUS3_cast(*args)



