// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkChangeInformationImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkChangeInformationImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkChangeInformationImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkChangeInformationImageFilterJava
#endif
#ifdef SWIGLUA
%module itkChangeInformationImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkChangeInformationImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkChangeInformationImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkChangeInformationImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkChangeInformationImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkChangeInformationImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkChangeInformationImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkChangeInformationImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkChangeInformationImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkChangeInformationImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkChangeInformationImageFilterPython
#endif
#ifdef SWIGR
%module itkChangeInformationImageFilterR
#endif
#ifdef SWIGRUBY
%module itkChangeInformationImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkChangeInformationImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkChangeInformationImageFilterTcl
#endif
#ifdef SWIGXML
%module itkChangeInformationImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "SimpleFilters.includes"
%}


%{
%}




%import wrap_itkPoint.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkImage.i
%import wrap_itkVector.i
%import wrap_itkMatrix.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkChangeInformationImageFilter_ext.i


 class itkChangeInformationImageFilterID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkChangeInformationImageFilterID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageD2 * image);
     virtual itkImageD2 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterID2(itkChangeInformationImageFilterID2 const & arg0);
     void operator=(itkChangeInformationImageFilterID2 const & arg0);
   protected:
     itkChangeInformationImageFilterID2();
     ~itkChangeInformationImageFilterID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterID2_Pointer {
   public:
     itkChangeInformationImageFilterID2_Pointer();
     itkChangeInformationImageFilterID2_Pointer(itkChangeInformationImageFilterID2_Pointer const & p);
     itkChangeInformationImageFilterID2_Pointer(itkChangeInformationImageFilterID2 * p);
     ~itkChangeInformationImageFilterID2_Pointer();
     itkChangeInformationImageFilterID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterID2 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterID2_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterID2_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterID2_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterID2_Pointer const & r) const;
     itkChangeInformationImageFilterID2_Pointer & operator=(itkChangeInformationImageFilterID2_Pointer const & r);
     itkChangeInformationImageFilterID2_Pointer & operator=(itkChangeInformationImageFilterID2 * r);
     itkChangeInformationImageFilterID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeInformationImageFilterID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkChangeInformationImageFilterID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageD3 * image);
     virtual itkImageD3 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterID3(itkChangeInformationImageFilterID3 const & arg0);
     void operator=(itkChangeInformationImageFilterID3 const & arg0);
   protected:
     itkChangeInformationImageFilterID3();
     ~itkChangeInformationImageFilterID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterID3_Pointer {
   public:
     itkChangeInformationImageFilterID3_Pointer();
     itkChangeInformationImageFilterID3_Pointer(itkChangeInformationImageFilterID3_Pointer const & p);
     itkChangeInformationImageFilterID3_Pointer(itkChangeInformationImageFilterID3 * p);
     ~itkChangeInformationImageFilterID3_Pointer();
     itkChangeInformationImageFilterID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterID3 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterID3_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterID3_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterID3_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterID3_Pointer const & r) const;
     itkChangeInformationImageFilterID3_Pointer & operator=(itkChangeInformationImageFilterID3_Pointer const & r);
     itkChangeInformationImageFilterID3_Pointer & operator=(itkChangeInformationImageFilterID3 * r);
     itkChangeInformationImageFilterID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeInformationImageFilterIF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkChangeInformationImageFilterIF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageF2 * image);
     virtual itkImageF2 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterIF2(itkChangeInformationImageFilterIF2 const & arg0);
     void operator=(itkChangeInformationImageFilterIF2 const & arg0);
   protected:
     itkChangeInformationImageFilterIF2();
     ~itkChangeInformationImageFilterIF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterIF2_Pointer {
   public:
     itkChangeInformationImageFilterIF2_Pointer();
     itkChangeInformationImageFilterIF2_Pointer(itkChangeInformationImageFilterIF2_Pointer const & p);
     itkChangeInformationImageFilterIF2_Pointer(itkChangeInformationImageFilterIF2 * p);
     ~itkChangeInformationImageFilterIF2_Pointer();
     itkChangeInformationImageFilterIF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterIF2 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterIF2_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterIF2_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterIF2_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterIF2_Pointer const & r) const;
     itkChangeInformationImageFilterIF2_Pointer & operator=(itkChangeInformationImageFilterIF2_Pointer const & r);
     itkChangeInformationImageFilterIF2_Pointer & operator=(itkChangeInformationImageFilterIF2 * r);
     itkChangeInformationImageFilterIF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeInformationImageFilterIF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkChangeInformationImageFilterIF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageF3 * image);
     virtual itkImageF3 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterIF3(itkChangeInformationImageFilterIF3 const & arg0);
     void operator=(itkChangeInformationImageFilterIF3 const & arg0);
   protected:
     itkChangeInformationImageFilterIF3();
     ~itkChangeInformationImageFilterIF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterIF3_Pointer {
   public:
     itkChangeInformationImageFilterIF3_Pointer();
     itkChangeInformationImageFilterIF3_Pointer(itkChangeInformationImageFilterIF3_Pointer const & p);
     itkChangeInformationImageFilterIF3_Pointer(itkChangeInformationImageFilterIF3 * p);
     ~itkChangeInformationImageFilterIF3_Pointer();
     itkChangeInformationImageFilterIF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterIF3 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterIF3_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterIF3_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterIF3_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterIF3_Pointer const & r) const;
     itkChangeInformationImageFilterIF3_Pointer & operator=(itkChangeInformationImageFilterIF3_Pointer const & r);
     itkChangeInformationImageFilterIF3_Pointer & operator=(itkChangeInformationImageFilterIF3 * r);
     itkChangeInformationImageFilterIF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeInformationImageFilterIUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkChangeInformationImageFilterIUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageUC2 * image);
     virtual itkImageUC2 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterIUC2(itkChangeInformationImageFilterIUC2 const & arg0);
     void operator=(itkChangeInformationImageFilterIUC2 const & arg0);
   protected:
     itkChangeInformationImageFilterIUC2();
     ~itkChangeInformationImageFilterIUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterIUC2_Pointer {
   public:
     itkChangeInformationImageFilterIUC2_Pointer();
     itkChangeInformationImageFilterIUC2_Pointer(itkChangeInformationImageFilterIUC2_Pointer const & p);
     itkChangeInformationImageFilterIUC2_Pointer(itkChangeInformationImageFilterIUC2 * p);
     ~itkChangeInformationImageFilterIUC2_Pointer();
     itkChangeInformationImageFilterIUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterIUC2 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterIUC2_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterIUC2_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterIUC2_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterIUC2_Pointer const & r) const;
     itkChangeInformationImageFilterIUC2_Pointer & operator=(itkChangeInformationImageFilterIUC2_Pointer const & r);
     itkChangeInformationImageFilterIUC2_Pointer & operator=(itkChangeInformationImageFilterIUC2 * r);
     itkChangeInformationImageFilterIUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeInformationImageFilterIUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkChangeInformationImageFilterIUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageUC3 * image);
     virtual itkImageUC3 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterIUC3(itkChangeInformationImageFilterIUC3 const & arg0);
     void operator=(itkChangeInformationImageFilterIUC3 const & arg0);
   protected:
     itkChangeInformationImageFilterIUC3();
     ~itkChangeInformationImageFilterIUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterIUC3_Pointer {
   public:
     itkChangeInformationImageFilterIUC3_Pointer();
     itkChangeInformationImageFilterIUC3_Pointer(itkChangeInformationImageFilterIUC3_Pointer const & p);
     itkChangeInformationImageFilterIUC3_Pointer(itkChangeInformationImageFilterIUC3 * p);
     ~itkChangeInformationImageFilterIUC3_Pointer();
     itkChangeInformationImageFilterIUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterIUC3 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterIUC3_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterIUC3_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterIUC3_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterIUC3_Pointer const & r) const;
     itkChangeInformationImageFilterIUC3_Pointer & operator=(itkChangeInformationImageFilterIUC3_Pointer const & r);
     itkChangeInformationImageFilterIUC3_Pointer & operator=(itkChangeInformationImageFilterIUC3 * r);
     itkChangeInformationImageFilterIUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeInformationImageFilterIUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkChangeInformationImageFilterIUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageUL2 * image);
     virtual itkImageUL2 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterIUL2(itkChangeInformationImageFilterIUL2 const & arg0);
     void operator=(itkChangeInformationImageFilterIUL2 const & arg0);
   protected:
     itkChangeInformationImageFilterIUL2();
     ~itkChangeInformationImageFilterIUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterIUL2_Pointer {
   public:
     itkChangeInformationImageFilterIUL2_Pointer();
     itkChangeInformationImageFilterIUL2_Pointer(itkChangeInformationImageFilterIUL2_Pointer const & p);
     itkChangeInformationImageFilterIUL2_Pointer(itkChangeInformationImageFilterIUL2 * p);
     ~itkChangeInformationImageFilterIUL2_Pointer();
     itkChangeInformationImageFilterIUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterIUL2 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterIUL2_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterIUL2_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterIUL2_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterIUL2_Pointer const & r) const;
     itkChangeInformationImageFilterIUL2_Pointer & operator=(itkChangeInformationImageFilterIUL2_Pointer const & r);
     itkChangeInformationImageFilterIUL2_Pointer & operator=(itkChangeInformationImageFilterIUL2 * r);
     itkChangeInformationImageFilterIUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeInformationImageFilterIUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkChangeInformationImageFilterIUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageUL3 * image);
     virtual itkImageUL3 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterIUL3(itkChangeInformationImageFilterIUL3 const & arg0);
     void operator=(itkChangeInformationImageFilterIUL3 const & arg0);
   protected:
     itkChangeInformationImageFilterIUL3();
     ~itkChangeInformationImageFilterIUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterIUL3_Pointer {
   public:
     itkChangeInformationImageFilterIUL3_Pointer();
     itkChangeInformationImageFilterIUL3_Pointer(itkChangeInformationImageFilterIUL3_Pointer const & p);
     itkChangeInformationImageFilterIUL3_Pointer(itkChangeInformationImageFilterIUL3 * p);
     ~itkChangeInformationImageFilterIUL3_Pointer();
     itkChangeInformationImageFilterIUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterIUL3 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterIUL3_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterIUL3_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterIUL3_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterIUL3_Pointer const & r) const;
     itkChangeInformationImageFilterIUL3_Pointer & operator=(itkChangeInformationImageFilterIUL3_Pointer const & r);
     itkChangeInformationImageFilterIUL3_Pointer & operator=(itkChangeInformationImageFilterIUL3 * r);
     itkChangeInformationImageFilterIUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeInformationImageFilterIUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkChangeInformationImageFilterIUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageUS2 * image);
     virtual itkImageUS2 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD2 const _arg);
     virtual itkVectorD2 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD2 const _arg);
     virtual itkPointD2 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD22 const _arg);
     virtual itkMatrixD22 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterIUS2(itkChangeInformationImageFilterIUS2 const & arg0);
     void operator=(itkChangeInformationImageFilterIUS2 const & arg0);
   protected:
     itkChangeInformationImageFilterIUS2();
     ~itkChangeInformationImageFilterIUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterIUS2_Pointer {
   public:
     itkChangeInformationImageFilterIUS2_Pointer();
     itkChangeInformationImageFilterIUS2_Pointer(itkChangeInformationImageFilterIUS2_Pointer const & p);
     itkChangeInformationImageFilterIUS2_Pointer(itkChangeInformationImageFilterIUS2 * p);
     ~itkChangeInformationImageFilterIUS2_Pointer();
     itkChangeInformationImageFilterIUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterIUS2 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterIUS2_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterIUS2_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterIUS2_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterIUS2_Pointer const & r) const;
     itkChangeInformationImageFilterIUS2_Pointer & operator=(itkChangeInformationImageFilterIUS2_Pointer const & r);
     itkChangeInformationImageFilterIUS2_Pointer & operator=(itkChangeInformationImageFilterIUS2 * r);
     itkChangeInformationImageFilterIUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkChangeInformationImageFilterIUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkChangeInformationImageFilterIUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetReferenceImage(itkImageUS3 * image);
     virtual itkImageUS3 * GetReferenceImage();
     virtual void SetUseReferenceImage(bool const _arg);
     virtual void UseReferenceImageOn();
     virtual void UseReferenceImageOff();
     virtual bool GetUseReferenceImage() const;
     virtual void SetOutputSpacing(itkVectorD3 const _arg);
     virtual itkVectorD3 const & GetOutputSpacing() const;
     virtual void SetOutputOrigin(itkPointD3 const _arg);
     virtual itkPointD3 const & GetOutputOrigin() const;
     virtual void SetOutputDirection(itkMatrixD33 const _arg);
     virtual itkMatrixD33 const & GetOutputDirection() const;
     virtual void SetOutputOffset(long * data);
     virtual long const * GetOutputOffset() const;
     void ChangeAll();
     void ChangeNone();
     virtual void SetChangeSpacing(bool const _arg);
     virtual void ChangeSpacingOn();
     virtual void ChangeSpacingOff();
     virtual bool GetChangeSpacing() const;
     virtual void SetChangeOrigin(bool const _arg);
     virtual void ChangeOriginOn();
     virtual void ChangeOriginOff();
     virtual bool GetChangeOrigin() const;
     virtual void SetChangeDirection(bool const _arg);
     virtual void ChangeDirectionOn();
     virtual void ChangeDirectionOff();
     virtual bool GetChangeDirection() const;
     virtual void SetChangeRegion(bool const _arg);
     virtual void ChangeRegionOn();
     virtual void ChangeRegionOff();
     virtual bool GetChangeRegion() const;
     virtual void SetCenterImage(bool const _arg);
     virtual void CenterImageOn();
     virtual void CenterImageOff();
     virtual bool GetCenterImage() const;
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
     virtual void GenerateData();
   private:
     itkChangeInformationImageFilterIUS3(itkChangeInformationImageFilterIUS3 const & arg0);
     void operator=(itkChangeInformationImageFilterIUS3 const & arg0);
   protected:
     itkChangeInformationImageFilterIUS3();
     ~itkChangeInformationImageFilterIUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkChangeInformationImageFilterIUS3_Pointer {
   public:
     itkChangeInformationImageFilterIUS3_Pointer();
     itkChangeInformationImageFilterIUS3_Pointer(itkChangeInformationImageFilterIUS3_Pointer const & p);
     itkChangeInformationImageFilterIUS3_Pointer(itkChangeInformationImageFilterIUS3 * p);
     ~itkChangeInformationImageFilterIUS3_Pointer();
     itkChangeInformationImageFilterIUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkChangeInformationImageFilterIUS3 * GetPointer() const;
     bool operator<(itkChangeInformationImageFilterIUS3_Pointer const & r) const;
     bool operator>(itkChangeInformationImageFilterIUS3_Pointer const & r) const;
     bool operator<=(itkChangeInformationImageFilterIUS3_Pointer const & r) const;
     bool operator>=(itkChangeInformationImageFilterIUS3_Pointer const & r) const;
     itkChangeInformationImageFilterIUS3_Pointer & operator=(itkChangeInformationImageFilterIUS3_Pointer const & r);
     itkChangeInformationImageFilterIUS3_Pointer & operator=(itkChangeInformationImageFilterIUS3 * r);
     itkChangeInformationImageFilterIUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


