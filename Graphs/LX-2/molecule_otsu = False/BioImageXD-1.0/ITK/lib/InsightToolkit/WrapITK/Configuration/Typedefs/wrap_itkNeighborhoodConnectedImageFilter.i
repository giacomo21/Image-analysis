// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkNeighborhoodConnectedImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkNeighborhoodConnectedImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkNeighborhoodConnectedImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkNeighborhoodConnectedImageFilterJava
#endif
#ifdef SWIGLUA
%module itkNeighborhoodConnectedImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkNeighborhoodConnectedImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkNeighborhoodConnectedImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkNeighborhoodConnectedImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkNeighborhoodConnectedImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkNeighborhoodConnectedImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkNeighborhoodConnectedImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkNeighborhoodConnectedImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkNeighborhoodConnectedImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkNeighborhoodConnectedImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkNeighborhoodConnectedImageFilterPython
#endif
#ifdef SWIGR
%module itkNeighborhoodConnectedImageFilterR
#endif
#ifdef SWIGRUBY
%module itkNeighborhoodConnectedImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkNeighborhoodConnectedImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkNeighborhoodConnectedImageFilterTcl
#endif
#ifdef SWIGXML
%module itkNeighborhoodConnectedImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "SegmentationAndThreshold.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSize.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkIndex.i


%include itk.i
%include wrap_itkNeighborhoodConnectedImageFilter_ext.i


 class itkNeighborhoodConnectedImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex2 const & seed);
     void AddSeed(itkIndex2 const & seed);
     virtual void SetLower(double const _arg);
     virtual double GetLower() const;
     virtual void SetUpper(double const _arg);
     virtual double GetUpper() const;
     virtual void SetReplaceValue(double const _arg);
     virtual double GetReplaceValue() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterID2ID2(itkNeighborhoodConnectedImageFilterID2ID2 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterID2ID2 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterID2ID2();
     ~itkNeighborhoodConnectedImageFilterID2ID2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterID2ID2_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterID2ID2_Pointer();
     itkNeighborhoodConnectedImageFilterID2ID2_Pointer(itkNeighborhoodConnectedImageFilterID2ID2_Pointer const & p);
     itkNeighborhoodConnectedImageFilterID2ID2_Pointer(itkNeighborhoodConnectedImageFilterID2ID2 * p);
     ~itkNeighborhoodConnectedImageFilterID2ID2_Pointer();
     itkNeighborhoodConnectedImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterID2ID2_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterID2ID2_Pointer & operator=(itkNeighborhoodConnectedImageFilterID2ID2_Pointer const & r);
     itkNeighborhoodConnectedImageFilterID2ID2_Pointer & operator=(itkNeighborhoodConnectedImageFilterID2ID2 * r);
     itkNeighborhoodConnectedImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkNeighborhoodConnectedImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex3 const & seed);
     void AddSeed(itkIndex3 const & seed);
     virtual void SetLower(double const _arg);
     virtual double GetLower() const;
     virtual void SetUpper(double const _arg);
     virtual double GetUpper() const;
     virtual void SetReplaceValue(double const _arg);
     virtual double GetReplaceValue() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterID3ID3(itkNeighborhoodConnectedImageFilterID3ID3 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterID3ID3 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterID3ID3();
     ~itkNeighborhoodConnectedImageFilterID3ID3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterID3ID3_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterID3ID3_Pointer();
     itkNeighborhoodConnectedImageFilterID3ID3_Pointer(itkNeighborhoodConnectedImageFilterID3ID3_Pointer const & p);
     itkNeighborhoodConnectedImageFilterID3ID3_Pointer(itkNeighborhoodConnectedImageFilterID3ID3 * p);
     ~itkNeighborhoodConnectedImageFilterID3ID3_Pointer();
     itkNeighborhoodConnectedImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterID3ID3_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterID3ID3_Pointer & operator=(itkNeighborhoodConnectedImageFilterID3ID3_Pointer const & r);
     itkNeighborhoodConnectedImageFilterID3ID3_Pointer & operator=(itkNeighborhoodConnectedImageFilterID3ID3 * r);
     itkNeighborhoodConnectedImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkNeighborhoodConnectedImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex2 const & seed);
     void AddSeed(itkIndex2 const & seed);
     virtual void SetLower(float const _arg);
     virtual float GetLower() const;
     virtual void SetUpper(float const _arg);
     virtual float GetUpper() const;
     virtual void SetReplaceValue(float const _arg);
     virtual float GetReplaceValue() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterIF2IF2(itkNeighborhoodConnectedImageFilterIF2IF2 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterIF2IF2 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterIF2IF2();
     ~itkNeighborhoodConnectedImageFilterIF2IF2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterIF2IF2_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterIF2IF2_Pointer();
     itkNeighborhoodConnectedImageFilterIF2IF2_Pointer(itkNeighborhoodConnectedImageFilterIF2IF2_Pointer const & p);
     itkNeighborhoodConnectedImageFilterIF2IF2_Pointer(itkNeighborhoodConnectedImageFilterIF2IF2 * p);
     ~itkNeighborhoodConnectedImageFilterIF2IF2_Pointer();
     itkNeighborhoodConnectedImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterIF2IF2_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterIF2IF2_Pointer & operator=(itkNeighborhoodConnectedImageFilterIF2IF2_Pointer const & r);
     itkNeighborhoodConnectedImageFilterIF2IF2_Pointer & operator=(itkNeighborhoodConnectedImageFilterIF2IF2 * r);
     itkNeighborhoodConnectedImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkNeighborhoodConnectedImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex3 const & seed);
     void AddSeed(itkIndex3 const & seed);
     virtual void SetLower(float const _arg);
     virtual float GetLower() const;
     virtual void SetUpper(float const _arg);
     virtual float GetUpper() const;
     virtual void SetReplaceValue(float const _arg);
     virtual float GetReplaceValue() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterIF3IF3(itkNeighborhoodConnectedImageFilterIF3IF3 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterIF3IF3 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterIF3IF3();
     ~itkNeighborhoodConnectedImageFilterIF3IF3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterIF3IF3_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterIF3IF3_Pointer();
     itkNeighborhoodConnectedImageFilterIF3IF3_Pointer(itkNeighborhoodConnectedImageFilterIF3IF3_Pointer const & p);
     itkNeighborhoodConnectedImageFilterIF3IF3_Pointer(itkNeighborhoodConnectedImageFilterIF3IF3 * p);
     ~itkNeighborhoodConnectedImageFilterIF3IF3_Pointer();
     itkNeighborhoodConnectedImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterIF3IF3_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterIF3IF3_Pointer & operator=(itkNeighborhoodConnectedImageFilterIF3IF3_Pointer const & r);
     itkNeighborhoodConnectedImageFilterIF3IF3_Pointer & operator=(itkNeighborhoodConnectedImageFilterIF3IF3 * r);
     itkNeighborhoodConnectedImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkNeighborhoodConnectedImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex2 const & seed);
     void AddSeed(itkIndex2 const & seed);
     virtual void SetLower(unsigned char const _arg);
     virtual unsigned char GetLower() const;
     virtual void SetUpper(unsigned char const _arg);
     virtual unsigned char GetUpper() const;
     virtual void SetReplaceValue(unsigned char const _arg);
     virtual unsigned char GetReplaceValue() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterIUC2IUC2(itkNeighborhoodConnectedImageFilterIUC2IUC2 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterIUC2IUC2 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterIUC2IUC2();
     ~itkNeighborhoodConnectedImageFilterIUC2IUC2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer();
     itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer(itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer const & p);
     itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer(itkNeighborhoodConnectedImageFilterIUC2IUC2 * p);
     ~itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer();
     itkNeighborhoodConnectedImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer const & r);
     itkNeighborhoodConnectedImageFilterIUC2IUC2_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUC2IUC2 * r);
     itkNeighborhoodConnectedImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkNeighborhoodConnectedImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex3 const & seed);
     void AddSeed(itkIndex3 const & seed);
     virtual void SetLower(unsigned char const _arg);
     virtual unsigned char GetLower() const;
     virtual void SetUpper(unsigned char const _arg);
     virtual unsigned char GetUpper() const;
     virtual void SetReplaceValue(unsigned char const _arg);
     virtual unsigned char GetReplaceValue() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterIUC3IUC3(itkNeighborhoodConnectedImageFilterIUC3IUC3 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterIUC3IUC3 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterIUC3IUC3();
     ~itkNeighborhoodConnectedImageFilterIUC3IUC3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer();
     itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer(itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer const & p);
     itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer(itkNeighborhoodConnectedImageFilterIUC3IUC3 * p);
     ~itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer();
     itkNeighborhoodConnectedImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer const & r);
     itkNeighborhoodConnectedImageFilterIUC3IUC3_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUC3IUC3 * r);
     itkNeighborhoodConnectedImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkNeighborhoodConnectedImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex2 const & seed);
     void AddSeed(itkIndex2 const & seed);
     virtual void SetLower(unsigned long const _arg);
     virtual unsigned long GetLower() const;
     virtual void SetUpper(unsigned long const _arg);
     virtual unsigned long GetUpper() const;
     virtual void SetReplaceValue(unsigned long const _arg);
     virtual unsigned long GetReplaceValue() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterIUL2IUL2(itkNeighborhoodConnectedImageFilterIUL2IUL2 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterIUL2IUL2 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterIUL2IUL2();
     ~itkNeighborhoodConnectedImageFilterIUL2IUL2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer();
     itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer(itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer const & p);
     itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer(itkNeighborhoodConnectedImageFilterIUL2IUL2 * p);
     ~itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer();
     itkNeighborhoodConnectedImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer const & r);
     itkNeighborhoodConnectedImageFilterIUL2IUL2_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUL2IUL2 * r);
     itkNeighborhoodConnectedImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkNeighborhoodConnectedImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex3 const & seed);
     void AddSeed(itkIndex3 const & seed);
     virtual void SetLower(unsigned long const _arg);
     virtual unsigned long GetLower() const;
     virtual void SetUpper(unsigned long const _arg);
     virtual unsigned long GetUpper() const;
     virtual void SetReplaceValue(unsigned long const _arg);
     virtual unsigned long GetReplaceValue() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterIUL3IUL3(itkNeighborhoodConnectedImageFilterIUL3IUL3 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterIUL3IUL3 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterIUL3IUL3();
     ~itkNeighborhoodConnectedImageFilterIUL3IUL3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer();
     itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer(itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer const & p);
     itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer(itkNeighborhoodConnectedImageFilterIUL3IUL3 * p);
     ~itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer();
     itkNeighborhoodConnectedImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer const & r);
     itkNeighborhoodConnectedImageFilterIUL3IUL3_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUL3IUL3 * r);
     itkNeighborhoodConnectedImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkNeighborhoodConnectedImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex2 const & seed);
     void AddSeed(itkIndex2 const & seed);
     virtual void SetLower(unsigned short const _arg);
     virtual unsigned short GetLower() const;
     virtual void SetUpper(unsigned short const _arg);
     virtual unsigned short GetUpper() const;
     virtual void SetReplaceValue(unsigned short const _arg);
     virtual unsigned short GetReplaceValue() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterIUS2IUS2(itkNeighborhoodConnectedImageFilterIUS2IUS2 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterIUS2IUS2 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterIUS2IUS2();
     ~itkNeighborhoodConnectedImageFilterIUS2IUS2();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer();
     itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer(itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer const & p);
     itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer(itkNeighborhoodConnectedImageFilterIUS2IUS2 * p);
     ~itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer();
     itkNeighborhoodConnectedImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer const & r);
     itkNeighborhoodConnectedImageFilterIUS2IUS2_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUS2IUS2 * r);
     itkNeighborhoodConnectedImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkNeighborhoodConnectedImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     void ClearSeeds();
     void SetSeed(itkIndex3 const & seed);
     void AddSeed(itkIndex3 const & seed);
     virtual void SetLower(unsigned short const _arg);
     virtual unsigned short GetLower() const;
     virtual void SetUpper(unsigned short const _arg);
     virtual unsigned short GetUpper() const;
     virtual void SetReplaceValue(unsigned short const _arg);
     virtual unsigned short GetReplaceValue() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
   private:
     itkNeighborhoodConnectedImageFilterIUS3IUS3(itkNeighborhoodConnectedImageFilterIUS3IUS3 const & arg0);
     void operator=(itkNeighborhoodConnectedImageFilterIUS3IUS3 const & arg0);
   protected:
     itkNeighborhoodConnectedImageFilterIUS3IUS3();
     ~itkNeighborhoodConnectedImageFilterIUS3IUS3();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * output);
     virtual void GenerateData();
 };


 class itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer {
   public:
     itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer();
     itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer(itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer const & p);
     itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer(itkNeighborhoodConnectedImageFilterIUS3IUS3 * p);
     ~itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer();
     itkNeighborhoodConnectedImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkNeighborhoodConnectedImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer const & r) const;
     itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer const & r);
     itkNeighborhoodConnectedImageFilterIUS3IUS3_Pointer & operator=(itkNeighborhoodConnectedImageFilterIUS3IUS3 * r);
     itkNeighborhoodConnectedImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


