// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBinaryThresholdImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBinaryThresholdImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBinaryThresholdImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBinaryThresholdImageFilterJava
#endif
#ifdef SWIGLUA
%module itkBinaryThresholdImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBinaryThresholdImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBinaryThresholdImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBinaryThresholdImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBinaryThresholdImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBinaryThresholdImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBinaryThresholdImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBinaryThresholdImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBinaryThresholdImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBinaryThresholdImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBinaryThresholdImageFilterPython
#endif
#ifdef SWIGR
%module itkBinaryThresholdImageFilterR
#endif
#ifdef SWIGRUBY
%module itkBinaryThresholdImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBinaryThresholdImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkBinaryThresholdImageFilterTcl
#endif
#ifdef SWIGXML
%module itkBinaryThresholdImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i
%import wrap_ITKRegions.i
%import wrap_itkSimpleDataObjectDecorator.i


%include itk.i
%include wrap_itkBinaryThresholdImageFilter_ext.i


 class itkBinaryThresholdImageFilterID2ID2_Pointer {
   public:
     itkBinaryThresholdImageFilterID2ID2_Pointer();
     itkBinaryThresholdImageFilterID2ID2_Pointer(itkBinaryThresholdImageFilterID2ID2_Pointer const & p);
     itkBinaryThresholdImageFilterID2ID2_Pointer(itkBinaryThresholdImageFilterID2ID2 * p);
     ~itkBinaryThresholdImageFilterID2ID2_Pointer();
     itkBinaryThresholdImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2ID2_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2ID2_Pointer & operator=(itkBinaryThresholdImageFilterID2ID2_Pointer const & r);
     itkBinaryThresholdImageFilterID2ID2_Pointer & operator=(itkBinaryThresholdImageFilterID2ID2 * r);
     itkBinaryThresholdImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     static itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, double > & GetFunctor();
     itk::Functor::BinaryThreshold< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, double > const & functor);
   private:
     itkBinaryThresholdImageFilterID2ID2_Superclass(itkBinaryThresholdImageFilterID2ID2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2ID2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2ID2_Superclass();
     ~itkBinaryThresholdImageFilterID2ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer(itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer(itkBinaryThresholdImageFilterID2ID2_Superclass * p);
     ~itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID2ID2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2ID2_Superclass * r);
     itkBinaryThresholdImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2IF2_Pointer {
   public:
     itkBinaryThresholdImageFilterID2IF2_Pointer();
     itkBinaryThresholdImageFilterID2IF2_Pointer(itkBinaryThresholdImageFilterID2IF2_Pointer const & p);
     itkBinaryThresholdImageFilterID2IF2_Pointer(itkBinaryThresholdImageFilterID2IF2 * p);
     ~itkBinaryThresholdImageFilterID2IF2_Pointer();
     itkBinaryThresholdImageFilterID2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2IF2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2IF2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2IF2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2IF2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2IF2_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2IF2_Pointer & operator=(itkBinaryThresholdImageFilterID2IF2_Pointer const & r);
     itkBinaryThresholdImageFilterID2IF2_Pointer & operator=(itkBinaryThresholdImageFilterID2IF2 * r);
     itkBinaryThresholdImageFilterID2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2IF2_Superclass : public itkInPlaceImageFilterID2IF2 {
   public:
     static itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, float > & GetFunctor();
     itk::Functor::BinaryThreshold< double, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, float > const & functor);
   private:
     itkBinaryThresholdImageFilterID2IF2_Superclass(itkBinaryThresholdImageFilterID2IF2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2IF2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2IF2_Superclass();
     ~itkBinaryThresholdImageFilterID2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer(itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer(itkBinaryThresholdImageFilterID2IF2_Superclass * p);
     ~itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2IF2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID2IF2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2IF2_Superclass * r);
     itkBinaryThresholdImageFilterID2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2IUC2_Pointer {
   public:
     itkBinaryThresholdImageFilterID2IUC2_Pointer();
     itkBinaryThresholdImageFilterID2IUC2_Pointer(itkBinaryThresholdImageFilterID2IUC2_Pointer const & p);
     itkBinaryThresholdImageFilterID2IUC2_Pointer(itkBinaryThresholdImageFilterID2IUC2 * p);
     ~itkBinaryThresholdImageFilterID2IUC2_Pointer();
     itkBinaryThresholdImageFilterID2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2IUC2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2IUC2_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterID2IUC2_Pointer const & r);
     itkBinaryThresholdImageFilterID2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterID2IUC2 * r);
     itkBinaryThresholdImageFilterID2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2IUC2_Superclass : public itkInPlaceImageFilterID2IUC2 {
   public:
     static itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< double, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterID2IUC2_Superclass(itkBinaryThresholdImageFilterID2IUC2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2IUC2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2IUC2_Superclass();
     ~itkBinaryThresholdImageFilterID2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterID2IUC2_Superclass * p);
     ~itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2IUC2_Superclass * r);
     itkBinaryThresholdImageFilterID2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2IUL2_Pointer {
   public:
     itkBinaryThresholdImageFilterID2IUL2_Pointer();
     itkBinaryThresholdImageFilterID2IUL2_Pointer(itkBinaryThresholdImageFilterID2IUL2_Pointer const & p);
     itkBinaryThresholdImageFilterID2IUL2_Pointer(itkBinaryThresholdImageFilterID2IUL2 * p);
     ~itkBinaryThresholdImageFilterID2IUL2_Pointer();
     itkBinaryThresholdImageFilterID2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2IUL2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2IUL2_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2IUL2_Pointer & operator=(itkBinaryThresholdImageFilterID2IUL2_Pointer const & r);
     itkBinaryThresholdImageFilterID2IUL2_Pointer & operator=(itkBinaryThresholdImageFilterID2IUL2 * r);
     itkBinaryThresholdImageFilterID2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2IUL2_Superclass : public itkInPlaceImageFilterID2IUL2 {
   public:
     static itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, unsigned long > & GetFunctor();
     itk::Functor::BinaryThreshold< double, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, unsigned long > const & functor);
   private:
     itkBinaryThresholdImageFilterID2IUL2_Superclass(itkBinaryThresholdImageFilterID2IUL2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2IUL2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2IUL2_Superclass();
     ~itkBinaryThresholdImageFilterID2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer(itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer(itkBinaryThresholdImageFilterID2IUL2_Superclass * p);
     ~itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2IUL2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID2IUL2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2IUL2_Superclass * r);
     itkBinaryThresholdImageFilterID2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2IUS2_Pointer {
   public:
     itkBinaryThresholdImageFilterID2IUS2_Pointer();
     itkBinaryThresholdImageFilterID2IUS2_Pointer(itkBinaryThresholdImageFilterID2IUS2_Pointer const & p);
     itkBinaryThresholdImageFilterID2IUS2_Pointer(itkBinaryThresholdImageFilterID2IUS2 * p);
     ~itkBinaryThresholdImageFilterID2IUS2_Pointer();
     itkBinaryThresholdImageFilterID2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2IUS2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2IUS2_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2IUS2_Pointer & operator=(itkBinaryThresholdImageFilterID2IUS2_Pointer const & r);
     itkBinaryThresholdImageFilterID2IUS2_Pointer & operator=(itkBinaryThresholdImageFilterID2IUS2 * r);
     itkBinaryThresholdImageFilterID2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2IUS2_Superclass : public itkInPlaceImageFilterID2IUS2 {
   public:
     static itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, unsigned short > & GetFunctor();
     itk::Functor::BinaryThreshold< double, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, unsigned short > const & functor);
   private:
     itkBinaryThresholdImageFilterID2IUS2_Superclass(itkBinaryThresholdImageFilterID2IUS2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2IUS2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2IUS2_Superclass();
     ~itkBinaryThresholdImageFilterID2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer(itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer(itkBinaryThresholdImageFilterID2IUS2_Superclass * p);
     ~itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer();
     itkBinaryThresholdImageFilterID2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID2IUS2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID2IUS2_Superclass * r);
     itkBinaryThresholdImageFilterID2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3ID3_Pointer {
   public:
     itkBinaryThresholdImageFilterID3ID3_Pointer();
     itkBinaryThresholdImageFilterID3ID3_Pointer(itkBinaryThresholdImageFilterID3ID3_Pointer const & p);
     itkBinaryThresholdImageFilterID3ID3_Pointer(itkBinaryThresholdImageFilterID3ID3 * p);
     ~itkBinaryThresholdImageFilterID3ID3_Pointer();
     itkBinaryThresholdImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3ID3_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3ID3_Pointer & operator=(itkBinaryThresholdImageFilterID3ID3_Pointer const & r);
     itkBinaryThresholdImageFilterID3ID3_Pointer & operator=(itkBinaryThresholdImageFilterID3ID3 * r);
     itkBinaryThresholdImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     static itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, double > & GetFunctor();
     itk::Functor::BinaryThreshold< double, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, double > const & functor);
   private:
     itkBinaryThresholdImageFilterID3ID3_Superclass(itkBinaryThresholdImageFilterID3ID3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3ID3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3ID3_Superclass();
     ~itkBinaryThresholdImageFilterID3ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer(itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer(itkBinaryThresholdImageFilterID3ID3_Superclass * p);
     ~itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID3ID3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3ID3_Superclass * r);
     itkBinaryThresholdImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3IF3_Pointer {
   public:
     itkBinaryThresholdImageFilterID3IF3_Pointer();
     itkBinaryThresholdImageFilterID3IF3_Pointer(itkBinaryThresholdImageFilterID3IF3_Pointer const & p);
     itkBinaryThresholdImageFilterID3IF3_Pointer(itkBinaryThresholdImageFilterID3IF3 * p);
     ~itkBinaryThresholdImageFilterID3IF3_Pointer();
     itkBinaryThresholdImageFilterID3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3IF3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3IF3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3IF3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3IF3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3IF3_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3IF3_Pointer & operator=(itkBinaryThresholdImageFilterID3IF3_Pointer const & r);
     itkBinaryThresholdImageFilterID3IF3_Pointer & operator=(itkBinaryThresholdImageFilterID3IF3 * r);
     itkBinaryThresholdImageFilterID3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3IF3_Superclass : public itkInPlaceImageFilterID3IF3 {
   public:
     static itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, float > & GetFunctor();
     itk::Functor::BinaryThreshold< double, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, float > const & functor);
   private:
     itkBinaryThresholdImageFilterID3IF3_Superclass(itkBinaryThresholdImageFilterID3IF3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3IF3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3IF3_Superclass();
     ~itkBinaryThresholdImageFilterID3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer(itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer(itkBinaryThresholdImageFilterID3IF3_Superclass * p);
     ~itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3IF3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID3IF3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3IF3_Superclass * r);
     itkBinaryThresholdImageFilterID3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3IUC3_Pointer {
   public:
     itkBinaryThresholdImageFilterID3IUC3_Pointer();
     itkBinaryThresholdImageFilterID3IUC3_Pointer(itkBinaryThresholdImageFilterID3IUC3_Pointer const & p);
     itkBinaryThresholdImageFilterID3IUC3_Pointer(itkBinaryThresholdImageFilterID3IUC3 * p);
     ~itkBinaryThresholdImageFilterID3IUC3_Pointer();
     itkBinaryThresholdImageFilterID3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3IUC3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3IUC3_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterID3IUC3_Pointer const & r);
     itkBinaryThresholdImageFilterID3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterID3IUC3 * r);
     itkBinaryThresholdImageFilterID3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3IUC3_Superclass : public itkInPlaceImageFilterID3IUC3 {
   public:
     static itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< double, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterID3IUC3_Superclass(itkBinaryThresholdImageFilterID3IUC3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3IUC3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3IUC3_Superclass();
     ~itkBinaryThresholdImageFilterID3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterID3IUC3_Superclass * p);
     ~itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3IUC3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3IUC3_Superclass * r);
     itkBinaryThresholdImageFilterID3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3IUL3_Pointer {
   public:
     itkBinaryThresholdImageFilterID3IUL3_Pointer();
     itkBinaryThresholdImageFilterID3IUL3_Pointer(itkBinaryThresholdImageFilterID3IUL3_Pointer const & p);
     itkBinaryThresholdImageFilterID3IUL3_Pointer(itkBinaryThresholdImageFilterID3IUL3 * p);
     ~itkBinaryThresholdImageFilterID3IUL3_Pointer();
     itkBinaryThresholdImageFilterID3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3IUL3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3IUL3_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3IUL3_Pointer & operator=(itkBinaryThresholdImageFilterID3IUL3_Pointer const & r);
     itkBinaryThresholdImageFilterID3IUL3_Pointer & operator=(itkBinaryThresholdImageFilterID3IUL3 * r);
     itkBinaryThresholdImageFilterID3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3IUL3_Superclass : public itkInPlaceImageFilterID3IUL3 {
   public:
     static itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, unsigned long > & GetFunctor();
     itk::Functor::BinaryThreshold< double, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, unsigned long > const & functor);
   private:
     itkBinaryThresholdImageFilterID3IUL3_Superclass(itkBinaryThresholdImageFilterID3IUL3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3IUL3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3IUL3_Superclass();
     ~itkBinaryThresholdImageFilterID3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer(itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer(itkBinaryThresholdImageFilterID3IUL3_Superclass * p);
     ~itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3IUL3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID3IUL3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3IUL3_Superclass * r);
     itkBinaryThresholdImageFilterID3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3IUS3_Pointer {
   public:
     itkBinaryThresholdImageFilterID3IUS3_Pointer();
     itkBinaryThresholdImageFilterID3IUS3_Pointer(itkBinaryThresholdImageFilterID3IUS3_Pointer const & p);
     itkBinaryThresholdImageFilterID3IUS3_Pointer(itkBinaryThresholdImageFilterID3IUS3 * p);
     ~itkBinaryThresholdImageFilterID3IUS3_Pointer();
     itkBinaryThresholdImageFilterID3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3IUS3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3IUS3_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3IUS3_Pointer & operator=(itkBinaryThresholdImageFilterID3IUS3_Pointer const & r);
     itkBinaryThresholdImageFilterID3IUS3_Pointer & operator=(itkBinaryThresholdImageFilterID3IUS3 * r);
     itkBinaryThresholdImageFilterID3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID3IUS3_Superclass : public itkInPlaceImageFilterID3IUS3 {
   public:
     static itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< double, unsigned short > & GetFunctor();
     itk::Functor::BinaryThreshold< double, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< double, unsigned short > const & functor);
   private:
     itkBinaryThresholdImageFilterID3IUS3_Superclass(itkBinaryThresholdImageFilterID3IUS3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3IUS3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3IUS3_Superclass();
     ~itkBinaryThresholdImageFilterID3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer(itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer(itkBinaryThresholdImageFilterID3IUS3_Superclass * p);
     ~itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer();
     itkBinaryThresholdImageFilterID3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterID3IUS3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterID3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterID3IUS3_Superclass * r);
     itkBinaryThresholdImageFilterID3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF2IF2_Pointer {
   public:
     itkBinaryThresholdImageFilterIF2IF2_Pointer();
     itkBinaryThresholdImageFilterIF2IF2_Pointer(itkBinaryThresholdImageFilterIF2IF2_Pointer const & p);
     itkBinaryThresholdImageFilterIF2IF2_Pointer(itkBinaryThresholdImageFilterIF2IF2 * p);
     ~itkBinaryThresholdImageFilterIF2IF2_Pointer();
     itkBinaryThresholdImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF2IF2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF2IF2_Pointer & operator=(itkBinaryThresholdImageFilterIF2IF2_Pointer const & r);
     itkBinaryThresholdImageFilterIF2IF2_Pointer & operator=(itkBinaryThresholdImageFilterIF2IF2 * r);
     itkBinaryThresholdImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     static itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< float, float > & GetFunctor();
     itk::Functor::BinaryThreshold< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< float, float > const & functor);
   private:
     itkBinaryThresholdImageFilterIF2IF2_Superclass(itkBinaryThresholdImageFilterIF2IF2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF2IF2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF2IF2_Superclass();
     ~itkBinaryThresholdImageFilterIF2IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer(itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer(itkBinaryThresholdImageFilterIF2IF2_Superclass * p);
     ~itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIF2IF2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF2IF2_Superclass * r);
     itkBinaryThresholdImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF2IUC2_Pointer {
   public:
     itkBinaryThresholdImageFilterIF2IUC2_Pointer();
     itkBinaryThresholdImageFilterIF2IUC2_Pointer(itkBinaryThresholdImageFilterIF2IUC2_Pointer const & p);
     itkBinaryThresholdImageFilterIF2IUC2_Pointer(itkBinaryThresholdImageFilterIF2IUC2 * p);
     ~itkBinaryThresholdImageFilterIF2IUC2_Pointer();
     itkBinaryThresholdImageFilterIF2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF2IUC2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF2IUC2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUC2_Pointer const & r);
     itkBinaryThresholdImageFilterIF2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUC2 * r);
     itkBinaryThresholdImageFilterIF2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF2IUC2_Superclass : public itkInPlaceImageFilterIF2IUC2 {
   public:
     static itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< float, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< float, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< float, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterIF2IUC2_Superclass(itkBinaryThresholdImageFilterIF2IUC2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF2IUC2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF2IUC2_Superclass();
     ~itkBinaryThresholdImageFilterIF2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterIF2IUC2_Superclass * p);
     ~itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF2IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIF2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUC2_Superclass * r);
     itkBinaryThresholdImageFilterIF2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF2IUL2_Pointer {
   public:
     itkBinaryThresholdImageFilterIF2IUL2_Pointer();
     itkBinaryThresholdImageFilterIF2IUL2_Pointer(itkBinaryThresholdImageFilterIF2IUL2_Pointer const & p);
     itkBinaryThresholdImageFilterIF2IUL2_Pointer(itkBinaryThresholdImageFilterIF2IUL2 * p);
     ~itkBinaryThresholdImageFilterIF2IUL2_Pointer();
     itkBinaryThresholdImageFilterIF2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF2IUL2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF2IUL2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF2IUL2_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUL2_Pointer const & r);
     itkBinaryThresholdImageFilterIF2IUL2_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUL2 * r);
     itkBinaryThresholdImageFilterIF2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF2IUL2_Superclass : public itkInPlaceImageFilterIF2IUL2 {
   public:
     static itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< float, unsigned long > & GetFunctor();
     itk::Functor::BinaryThreshold< float, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< float, unsigned long > const & functor);
   private:
     itkBinaryThresholdImageFilterIF2IUL2_Superclass(itkBinaryThresholdImageFilterIF2IUL2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF2IUL2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF2IUL2_Superclass();
     ~itkBinaryThresholdImageFilterIF2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer(itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer(itkBinaryThresholdImageFilterIF2IUL2_Superclass * p);
     ~itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF2IUL2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIF2IUL2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUL2_Superclass * r);
     itkBinaryThresholdImageFilterIF2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF2IUS2_Pointer {
   public:
     itkBinaryThresholdImageFilterIF2IUS2_Pointer();
     itkBinaryThresholdImageFilterIF2IUS2_Pointer(itkBinaryThresholdImageFilterIF2IUS2_Pointer const & p);
     itkBinaryThresholdImageFilterIF2IUS2_Pointer(itkBinaryThresholdImageFilterIF2IUS2 * p);
     ~itkBinaryThresholdImageFilterIF2IUS2_Pointer();
     itkBinaryThresholdImageFilterIF2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF2IUS2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF2IUS2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF2IUS2_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUS2_Pointer const & r);
     itkBinaryThresholdImageFilterIF2IUS2_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUS2 * r);
     itkBinaryThresholdImageFilterIF2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF2IUS2_Superclass : public itkInPlaceImageFilterIF2IUS2 {
   public:
     static itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< float, unsigned short > & GetFunctor();
     itk::Functor::BinaryThreshold< float, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< float, unsigned short > const & functor);
   private:
     itkBinaryThresholdImageFilterIF2IUS2_Superclass(itkBinaryThresholdImageFilterIF2IUS2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF2IUS2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF2IUS2_Superclass();
     ~itkBinaryThresholdImageFilterIF2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer(itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer(itkBinaryThresholdImageFilterIF2IUS2_Superclass * p);
     ~itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF2IUS2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIF2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF2IUS2_Superclass * r);
     itkBinaryThresholdImageFilterIF2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF3IF3_Pointer {
   public:
     itkBinaryThresholdImageFilterIF3IF3_Pointer();
     itkBinaryThresholdImageFilterIF3IF3_Pointer(itkBinaryThresholdImageFilterIF3IF3_Pointer const & p);
     itkBinaryThresholdImageFilterIF3IF3_Pointer(itkBinaryThresholdImageFilterIF3IF3 * p);
     ~itkBinaryThresholdImageFilterIF3IF3_Pointer();
     itkBinaryThresholdImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF3IF3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF3IF3_Pointer & operator=(itkBinaryThresholdImageFilterIF3IF3_Pointer const & r);
     itkBinaryThresholdImageFilterIF3IF3_Pointer & operator=(itkBinaryThresholdImageFilterIF3IF3 * r);
     itkBinaryThresholdImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     static itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< float, float > & GetFunctor();
     itk::Functor::BinaryThreshold< float, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< float, float > const & functor);
   private:
     itkBinaryThresholdImageFilterIF3IF3_Superclass(itkBinaryThresholdImageFilterIF3IF3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF3IF3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF3IF3_Superclass();
     ~itkBinaryThresholdImageFilterIF3IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer(itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer(itkBinaryThresholdImageFilterIF3IF3_Superclass * p);
     ~itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIF3IF3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF3IF3_Superclass * r);
     itkBinaryThresholdImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF3IUC3_Pointer {
   public:
     itkBinaryThresholdImageFilterIF3IUC3_Pointer();
     itkBinaryThresholdImageFilterIF3IUC3_Pointer(itkBinaryThresholdImageFilterIF3IUC3_Pointer const & p);
     itkBinaryThresholdImageFilterIF3IUC3_Pointer(itkBinaryThresholdImageFilterIF3IUC3 * p);
     ~itkBinaryThresholdImageFilterIF3IUC3_Pointer();
     itkBinaryThresholdImageFilterIF3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF3IUC3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF3IUC3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUC3_Pointer const & r);
     itkBinaryThresholdImageFilterIF3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUC3 * r);
     itkBinaryThresholdImageFilterIF3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF3IUC3_Superclass : public itkInPlaceImageFilterIF3IUC3 {
   public:
     static itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< float, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< float, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< float, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterIF3IUC3_Superclass(itkBinaryThresholdImageFilterIF3IUC3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF3IUC3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF3IUC3_Superclass();
     ~itkBinaryThresholdImageFilterIF3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterIF3IUC3_Superclass * p);
     ~itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF3IUC3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIF3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUC3_Superclass * r);
     itkBinaryThresholdImageFilterIF3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF3IUL3_Pointer {
   public:
     itkBinaryThresholdImageFilterIF3IUL3_Pointer();
     itkBinaryThresholdImageFilterIF3IUL3_Pointer(itkBinaryThresholdImageFilterIF3IUL3_Pointer const & p);
     itkBinaryThresholdImageFilterIF3IUL3_Pointer(itkBinaryThresholdImageFilterIF3IUL3 * p);
     ~itkBinaryThresholdImageFilterIF3IUL3_Pointer();
     itkBinaryThresholdImageFilterIF3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF3IUL3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF3IUL3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF3IUL3_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUL3_Pointer const & r);
     itkBinaryThresholdImageFilterIF3IUL3_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUL3 * r);
     itkBinaryThresholdImageFilterIF3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF3IUL3_Superclass : public itkInPlaceImageFilterIF3IUL3 {
   public:
     static itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< float, unsigned long > & GetFunctor();
     itk::Functor::BinaryThreshold< float, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< float, unsigned long > const & functor);
   private:
     itkBinaryThresholdImageFilterIF3IUL3_Superclass(itkBinaryThresholdImageFilterIF3IUL3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF3IUL3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF3IUL3_Superclass();
     ~itkBinaryThresholdImageFilterIF3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer(itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer(itkBinaryThresholdImageFilterIF3IUL3_Superclass * p);
     ~itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF3IUL3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIF3IUL3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUL3_Superclass * r);
     itkBinaryThresholdImageFilterIF3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF3IUS3_Pointer {
   public:
     itkBinaryThresholdImageFilterIF3IUS3_Pointer();
     itkBinaryThresholdImageFilterIF3IUS3_Pointer(itkBinaryThresholdImageFilterIF3IUS3_Pointer const & p);
     itkBinaryThresholdImageFilterIF3IUS3_Pointer(itkBinaryThresholdImageFilterIF3IUS3 * p);
     ~itkBinaryThresholdImageFilterIF3IUS3_Pointer();
     itkBinaryThresholdImageFilterIF3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF3IUS3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF3IUS3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF3IUS3_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUS3_Pointer const & r);
     itkBinaryThresholdImageFilterIF3IUS3_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUS3 * r);
     itkBinaryThresholdImageFilterIF3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIF3IUS3_Superclass : public itkInPlaceImageFilterIF3IUS3 {
   public:
     static itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< float, unsigned short > & GetFunctor();
     itk::Functor::BinaryThreshold< float, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< float, unsigned short > const & functor);
   private:
     itkBinaryThresholdImageFilterIF3IUS3_Superclass(itkBinaryThresholdImageFilterIF3IUS3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF3IUS3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF3IUS3_Superclass();
     ~itkBinaryThresholdImageFilterIF3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer(itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer(itkBinaryThresholdImageFilterIF3IUS3_Superclass * p);
     ~itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIF3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIF3IUS3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIF3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIF3IUS3_Superclass * r);
     itkBinaryThresholdImageFilterIF3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUC2IUC2_Pointer {
   public:
     itkBinaryThresholdImageFilterIUC2IUC2_Pointer();
     itkBinaryThresholdImageFilterIUC2IUC2_Pointer(itkBinaryThresholdImageFilterIUC2IUC2_Pointer const & p);
     itkBinaryThresholdImageFilterIUC2IUC2_Pointer(itkBinaryThresholdImageFilterIUC2IUC2 * p);
     ~itkBinaryThresholdImageFilterIUC2IUC2_Pointer();
     itkBinaryThresholdImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUC2IUC2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUC2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterIUC2IUC2_Pointer const & r);
     itkBinaryThresholdImageFilterIUC2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterIUC2IUC2 * r);
     itkBinaryThresholdImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     static itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned char, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass(itkBinaryThresholdImageFilterIUC2IUC2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUC2IUC2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass();
     ~itkBinaryThresholdImageFilterIUC2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterIUC2IUC2_Superclass * p);
     ~itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUC2IUC2_Superclass * r);
     itkBinaryThresholdImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUC3IUC3_Pointer {
   public:
     itkBinaryThresholdImageFilterIUC3IUC3_Pointer();
     itkBinaryThresholdImageFilterIUC3IUC3_Pointer(itkBinaryThresholdImageFilterIUC3IUC3_Pointer const & p);
     itkBinaryThresholdImageFilterIUC3IUC3_Pointer(itkBinaryThresholdImageFilterIUC3IUC3 * p);
     ~itkBinaryThresholdImageFilterIUC3IUC3_Pointer();
     itkBinaryThresholdImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUC3IUC3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUC3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterIUC3IUC3_Pointer const & r);
     itkBinaryThresholdImageFilterIUC3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterIUC3IUC3 * r);
     itkBinaryThresholdImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     static itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned char, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned char, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass(itkBinaryThresholdImageFilterIUC3IUC3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUC3IUC3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass();
     ~itkBinaryThresholdImageFilterIUC3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterIUC3IUC3_Superclass * p);
     ~itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUC3IUC3_Superclass * r);
     itkBinaryThresholdImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL2IUC2_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL2IUC2_Pointer();
     itkBinaryThresholdImageFilterIUL2IUC2_Pointer(itkBinaryThresholdImageFilterIUL2IUC2_Pointer const & p);
     itkBinaryThresholdImageFilterIUL2IUC2_Pointer(itkBinaryThresholdImageFilterIUL2IUC2 * p);
     ~itkBinaryThresholdImageFilterIUL2IUC2_Pointer();
     itkBinaryThresholdImageFilterIUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL2IUC2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL2IUC2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUC2_Pointer const & r);
     itkBinaryThresholdImageFilterIUL2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUC2 * r);
     itkBinaryThresholdImageFilterIUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL2IUC2_Superclass : public itkInPlaceImageFilterIUL2IUC2 {
   public:
     static itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned long, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned long, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned long, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass(itkBinaryThresholdImageFilterIUL2IUC2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL2IUC2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass();
     ~itkBinaryThresholdImageFilterIUL2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterIUL2IUC2_Superclass * p);
     ~itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUC2_Superclass * r);
     itkBinaryThresholdImageFilterIUL2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL2IUL2_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL2IUL2_Pointer();
     itkBinaryThresholdImageFilterIUL2IUL2_Pointer(itkBinaryThresholdImageFilterIUL2IUL2_Pointer const & p);
     itkBinaryThresholdImageFilterIUL2IUL2_Pointer(itkBinaryThresholdImageFilterIUL2IUL2 * p);
     ~itkBinaryThresholdImageFilterIUL2IUL2_Pointer();
     itkBinaryThresholdImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL2IUL2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL2IUL2_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUL2_Pointer const & r);
     itkBinaryThresholdImageFilterIUL2IUL2_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUL2 * r);
     itkBinaryThresholdImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     static itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned long, unsigned long > const & functor);
   private:
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass(itkBinaryThresholdImageFilterIUL2IUL2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL2IUL2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass();
     ~itkBinaryThresholdImageFilterIUL2IUL2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer(itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer(itkBinaryThresholdImageFilterIUL2IUL2_Superclass * p);
     ~itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUL2_Superclass * r);
     itkBinaryThresholdImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL2IUS2_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL2IUS2_Pointer();
     itkBinaryThresholdImageFilterIUL2IUS2_Pointer(itkBinaryThresholdImageFilterIUL2IUS2_Pointer const & p);
     itkBinaryThresholdImageFilterIUL2IUS2_Pointer(itkBinaryThresholdImageFilterIUL2IUS2 * p);
     ~itkBinaryThresholdImageFilterIUL2IUS2_Pointer();
     itkBinaryThresholdImageFilterIUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL2IUS2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL2IUS2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL2IUS2_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUS2_Pointer const & r);
     itkBinaryThresholdImageFilterIUL2IUS2_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUS2 * r);
     itkBinaryThresholdImageFilterIUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL2IUS2_Superclass : public itkInPlaceImageFilterIUL2IUS2 {
   public:
     static itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned long, unsigned short > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned long, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned long, unsigned short > const & functor);
   private:
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass(itkBinaryThresholdImageFilterIUL2IUS2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL2IUS2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass();
     ~itkBinaryThresholdImageFilterIUL2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer(itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer(itkBinaryThresholdImageFilterIUL2IUS2_Superclass * p);
     ~itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL2IUS2_Superclass * r);
     itkBinaryThresholdImageFilterIUL2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL3IUC3_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL3IUC3_Pointer();
     itkBinaryThresholdImageFilterIUL3IUC3_Pointer(itkBinaryThresholdImageFilterIUL3IUC3_Pointer const & p);
     itkBinaryThresholdImageFilterIUL3IUC3_Pointer(itkBinaryThresholdImageFilterIUL3IUC3 * p);
     ~itkBinaryThresholdImageFilterIUL3IUC3_Pointer();
     itkBinaryThresholdImageFilterIUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL3IUC3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL3IUC3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUC3_Pointer const & r);
     itkBinaryThresholdImageFilterIUL3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUC3 * r);
     itkBinaryThresholdImageFilterIUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL3IUC3_Superclass : public itkInPlaceImageFilterIUL3IUC3 {
   public:
     static itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned long, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned long, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned long, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass(itkBinaryThresholdImageFilterIUL3IUC3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL3IUC3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass();
     ~itkBinaryThresholdImageFilterIUL3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterIUL3IUC3_Superclass * p);
     ~itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUC3_Superclass * r);
     itkBinaryThresholdImageFilterIUL3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL3IUL3_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL3IUL3_Pointer();
     itkBinaryThresholdImageFilterIUL3IUL3_Pointer(itkBinaryThresholdImageFilterIUL3IUL3_Pointer const & p);
     itkBinaryThresholdImageFilterIUL3IUL3_Pointer(itkBinaryThresholdImageFilterIUL3IUL3 * p);
     ~itkBinaryThresholdImageFilterIUL3IUL3_Pointer();
     itkBinaryThresholdImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL3IUL3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL3IUL3_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUL3_Pointer const & r);
     itkBinaryThresholdImageFilterIUL3IUL3_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUL3 * r);
     itkBinaryThresholdImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     static itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned long, unsigned long > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned long, unsigned long > const & functor);
   private:
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass(itkBinaryThresholdImageFilterIUL3IUL3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL3IUL3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass();
     ~itkBinaryThresholdImageFilterIUL3IUL3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer(itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer(itkBinaryThresholdImageFilterIUL3IUL3_Superclass * p);
     ~itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUL3_Superclass * r);
     itkBinaryThresholdImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL3IUS3_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL3IUS3_Pointer();
     itkBinaryThresholdImageFilterIUL3IUS3_Pointer(itkBinaryThresholdImageFilterIUL3IUS3_Pointer const & p);
     itkBinaryThresholdImageFilterIUL3IUS3_Pointer(itkBinaryThresholdImageFilterIUL3IUS3 * p);
     ~itkBinaryThresholdImageFilterIUL3IUS3_Pointer();
     itkBinaryThresholdImageFilterIUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL3IUS3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL3IUS3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL3IUS3_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUS3_Pointer const & r);
     itkBinaryThresholdImageFilterIUL3IUS3_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUS3 * r);
     itkBinaryThresholdImageFilterIUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUL3IUS3_Superclass : public itkInPlaceImageFilterIUL3IUS3 {
   public:
     static itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned long, unsigned short > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned long, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned long, unsigned short > const & functor);
   private:
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass(itkBinaryThresholdImageFilterIUL3IUS3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL3IUS3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass();
     ~itkBinaryThresholdImageFilterIUL3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer(itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer(itkBinaryThresholdImageFilterIUL3IUS3_Superclass * p);
     ~itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUL3IUS3_Superclass * r);
     itkBinaryThresholdImageFilterIUL3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUS2IUC2_Pointer {
   public:
     itkBinaryThresholdImageFilterIUS2IUC2_Pointer();
     itkBinaryThresholdImageFilterIUS2IUC2_Pointer(itkBinaryThresholdImageFilterIUS2IUC2_Pointer const & p);
     itkBinaryThresholdImageFilterIUS2IUC2_Pointer(itkBinaryThresholdImageFilterIUS2IUC2 * p);
     ~itkBinaryThresholdImageFilterIUS2IUC2_Pointer();
     itkBinaryThresholdImageFilterIUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUS2IUC2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUS2IUC2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUS2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterIUS2IUC2_Pointer const & r);
     itkBinaryThresholdImageFilterIUS2IUC2_Pointer & operator=(itkBinaryThresholdImageFilterIUS2IUC2 * r);
     itkBinaryThresholdImageFilterIUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUS2IUC2_Superclass : public itkInPlaceImageFilterIUS2IUC2 {
   public:
     static itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned short, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned short, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned short, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass(itkBinaryThresholdImageFilterIUS2IUC2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUS2IUC2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass();
     ~itkBinaryThresholdImageFilterIUS2IUC2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer(itkBinaryThresholdImageFilterIUS2IUC2_Superclass * p);
     ~itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUS2IUC2_Superclass * r);
     itkBinaryThresholdImageFilterIUS2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUS2IUS2_Pointer {
   public:
     itkBinaryThresholdImageFilterIUS2IUS2_Pointer();
     itkBinaryThresholdImageFilterIUS2IUS2_Pointer(itkBinaryThresholdImageFilterIUS2IUS2_Pointer const & p);
     itkBinaryThresholdImageFilterIUS2IUS2_Pointer(itkBinaryThresholdImageFilterIUS2IUS2 * p);
     ~itkBinaryThresholdImageFilterIUS2IUS2_Pointer();
     itkBinaryThresholdImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUS2IUS2_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUS2IUS2_Pointer & operator=(itkBinaryThresholdImageFilterIUS2IUS2_Pointer const & r);
     itkBinaryThresholdImageFilterIUS2IUS2_Pointer & operator=(itkBinaryThresholdImageFilterIUS2IUS2 * r);
     itkBinaryThresholdImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     static itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned short, unsigned short > const & functor);
   private:
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass(itkBinaryThresholdImageFilterIUS2IUS2_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUS2IUS2_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass();
     ~itkBinaryThresholdImageFilterIUS2IUS2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer(itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer(itkBinaryThresholdImageFilterIUS2IUS2_Superclass * p);
     ~itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUS2IUS2_Superclass * r);
     itkBinaryThresholdImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUS3IUC3_Pointer {
   public:
     itkBinaryThresholdImageFilterIUS3IUC3_Pointer();
     itkBinaryThresholdImageFilterIUS3IUC3_Pointer(itkBinaryThresholdImageFilterIUS3IUC3_Pointer const & p);
     itkBinaryThresholdImageFilterIUS3IUC3_Pointer(itkBinaryThresholdImageFilterIUS3IUC3 * p);
     ~itkBinaryThresholdImageFilterIUS3IUC3_Pointer();
     itkBinaryThresholdImageFilterIUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUS3IUC3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUS3IUC3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUS3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterIUS3IUC3_Pointer const & r);
     itkBinaryThresholdImageFilterIUS3IUC3_Pointer & operator=(itkBinaryThresholdImageFilterIUS3IUC3 * r);
     itkBinaryThresholdImageFilterIUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUS3IUC3_Superclass : public itkInPlaceImageFilterIUS3IUC3 {
   public:
     static itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned short, unsigned char > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned short, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned short, unsigned char > const & functor);
   private:
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass(itkBinaryThresholdImageFilterIUS3IUC3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUS3IUC3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass();
     ~itkBinaryThresholdImageFilterIUS3IUC3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer(itkBinaryThresholdImageFilterIUS3IUC3_Superclass * p);
     ~itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUS3IUC3_Superclass * r);
     itkBinaryThresholdImageFilterIUS3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUS3IUS3_Pointer {
   public:
     itkBinaryThresholdImageFilterIUS3IUS3_Pointer();
     itkBinaryThresholdImageFilterIUS3IUS3_Pointer(itkBinaryThresholdImageFilterIUS3IUS3_Pointer const & p);
     itkBinaryThresholdImageFilterIUS3IUS3_Pointer(itkBinaryThresholdImageFilterIUS3IUS3 * p);
     ~itkBinaryThresholdImageFilterIUS3IUS3_Pointer();
     itkBinaryThresholdImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUS3IUS3_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUS3IUS3_Pointer & operator=(itkBinaryThresholdImageFilterIUS3IUS3_Pointer const & r);
     itkBinaryThresholdImageFilterIUS3IUS3_Pointer & operator=(itkBinaryThresholdImageFilterIUS3IUS3 * r);
     itkBinaryThresholdImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterIUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     static itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::BinaryThreshold< unsigned short, unsigned short > & GetFunctor();
     itk::Functor::BinaryThreshold< unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Functor::BinaryThreshold< unsigned short, unsigned short > const & functor);
   private:
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass(itkBinaryThresholdImageFilterIUS3IUS3_Superclass const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUS3IUS3_Superclass const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass();
     ~itkBinaryThresholdImageFilterIUS3IUS3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer(itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer(itkBinaryThresholdImageFilterIUS3IUS3_Superclass * p);
     ~itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer();
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkBinaryThresholdImageFilterIUS3IUS3_Superclass * r);
     itkBinaryThresholdImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryThresholdImageFilterID2ID2 : public itkBinaryThresholdImageFilterID2ID2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double const & GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID2ID2(itkBinaryThresholdImageFilterID2ID2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2ID2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2ID2();
     ~itkBinaryThresholdImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterID2IF2 : public itkBinaryThresholdImageFilterID2IF2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float const & GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID2IF2(itkBinaryThresholdImageFilterID2IF2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2IF2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2IF2();
     ~itkBinaryThresholdImageFilterID2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterID2IUC2 : public itkBinaryThresholdImageFilterID2IUC2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID2IUC2(itkBinaryThresholdImageFilterID2IUC2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2IUC2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2IUC2();
     ~itkBinaryThresholdImageFilterID2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterID2IUL2 : public itkBinaryThresholdImageFilterID2IUL2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID2IUL2(itkBinaryThresholdImageFilterID2IUL2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2IUL2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2IUL2();
     ~itkBinaryThresholdImageFilterID2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterID2IUS2 : public itkBinaryThresholdImageFilterID2IUS2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID2IUS2(itkBinaryThresholdImageFilterID2IUS2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID2IUS2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID2IUS2();
     ~itkBinaryThresholdImageFilterID2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterID3ID3 : public itkBinaryThresholdImageFilterID3ID3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(double const _arg);
     virtual double const & GetOutsideValue() const;
     virtual void SetInsideValue(double const _arg);
     virtual double const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID3ID3(itkBinaryThresholdImageFilterID3ID3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3ID3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3ID3();
     ~itkBinaryThresholdImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterID3IF3 : public itkBinaryThresholdImageFilterID3IF3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float const & GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID3IF3(itkBinaryThresholdImageFilterID3IF3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3IF3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3IF3();
     ~itkBinaryThresholdImageFilterID3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterID3IUC3 : public itkBinaryThresholdImageFilterID3IUC3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID3IUC3(itkBinaryThresholdImageFilterID3IUC3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3IUC3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3IUC3();
     ~itkBinaryThresholdImageFilterID3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterID3IUL3 : public itkBinaryThresholdImageFilterID3IUL3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID3IUL3(itkBinaryThresholdImageFilterID3IUL3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3IUL3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3IUL3();
     ~itkBinaryThresholdImageFilterID3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterID3IUS3 : public itkBinaryThresholdImageFilterID3IUS3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterID3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short const & GetInsideValue() const;
     virtual void SetUpperThreshold(double const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual void SetLowerThreshold(double const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorD const * arg0);
     virtual double GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetUpperThresholdInput() const;
     virtual double GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorD * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorD const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterID3IUS3(itkBinaryThresholdImageFilterID3IUS3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterID3IUS3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterID3IUS3();
     ~itkBinaryThresholdImageFilterID3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIF2IF2 : public itkBinaryThresholdImageFilterIF2IF2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float const & GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float const & GetInsideValue() const;
     virtual void SetUpperThreshold(float const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual void SetLowerThreshold(float const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual float GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetUpperThresholdInput() const;
     virtual float GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIF2IF2(itkBinaryThresholdImageFilterIF2IF2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF2IF2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF2IF2();
     ~itkBinaryThresholdImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIF2IUC2 : public itkBinaryThresholdImageFilterIF2IUC2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIF2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(float const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual void SetLowerThreshold(float const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual float GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetUpperThresholdInput() const;
     virtual float GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIF2IUC2(itkBinaryThresholdImageFilterIF2IUC2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF2IUC2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF2IUC2();
     ~itkBinaryThresholdImageFilterIF2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIF2IUL2 : public itkBinaryThresholdImageFilterIF2IUL2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIF2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long const & GetInsideValue() const;
     virtual void SetUpperThreshold(float const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual void SetLowerThreshold(float const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual float GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetUpperThresholdInput() const;
     virtual float GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIF2IUL2(itkBinaryThresholdImageFilterIF2IUL2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF2IUL2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF2IUL2();
     ~itkBinaryThresholdImageFilterIF2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIF2IUS2 : public itkBinaryThresholdImageFilterIF2IUS2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIF2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short const & GetInsideValue() const;
     virtual void SetUpperThreshold(float const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual void SetLowerThreshold(float const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual float GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetUpperThresholdInput() const;
     virtual float GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIF2IUS2(itkBinaryThresholdImageFilterIF2IUS2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF2IUS2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF2IUS2();
     ~itkBinaryThresholdImageFilterIF2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIF3IF3 : public itkBinaryThresholdImageFilterIF3IF3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(float const _arg);
     virtual float const & GetOutsideValue() const;
     virtual void SetInsideValue(float const _arg);
     virtual float const & GetInsideValue() const;
     virtual void SetUpperThreshold(float const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual void SetLowerThreshold(float const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual float GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetUpperThresholdInput() const;
     virtual float GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIF3IF3(itkBinaryThresholdImageFilterIF3IF3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF3IF3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF3IF3();
     ~itkBinaryThresholdImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIF3IUC3 : public itkBinaryThresholdImageFilterIF3IUC3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIF3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(float const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual void SetLowerThreshold(float const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual float GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetUpperThresholdInput() const;
     virtual float GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIF3IUC3(itkBinaryThresholdImageFilterIF3IUC3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF3IUC3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF3IUC3();
     ~itkBinaryThresholdImageFilterIF3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIF3IUL3 : public itkBinaryThresholdImageFilterIF3IUL3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIF3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long const & GetInsideValue() const;
     virtual void SetUpperThreshold(float const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual void SetLowerThreshold(float const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual float GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetUpperThresholdInput() const;
     virtual float GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIF3IUL3(itkBinaryThresholdImageFilterIF3IUL3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF3IUL3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF3IUL3();
     ~itkBinaryThresholdImageFilterIF3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIF3IUS3 : public itkBinaryThresholdImageFilterIF3IUS3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIF3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short const & GetInsideValue() const;
     virtual void SetUpperThreshold(float const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual void SetLowerThreshold(float const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorF const * arg0);
     virtual float GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetUpperThresholdInput() const;
     virtual float GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorF * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorF const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIF3IUS3(itkBinaryThresholdImageFilterIF3IUS3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIF3IUS3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIF3IUS3();
     ~itkBinaryThresholdImageFilterIF3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUC2IUC2 : public itkBinaryThresholdImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned char const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUC const * arg0);
     virtual void SetLowerThreshold(unsigned char const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUC const * arg0);
     virtual unsigned char GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUC * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUC const * GetUpperThresholdInput() const;
     virtual unsigned char GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUC * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUC const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUC2IUC2(itkBinaryThresholdImageFilterIUC2IUC2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUC2IUC2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUC2IUC2();
     ~itkBinaryThresholdImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUC3IUC3 : public itkBinaryThresholdImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned char const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUC const * arg0);
     virtual void SetLowerThreshold(unsigned char const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUC const * arg0);
     virtual unsigned char GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUC * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUC const * GetUpperThresholdInput() const;
     virtual unsigned char GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUC * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUC const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUC3IUC3(itkBinaryThresholdImageFilterIUC3IUC3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUC3IUC3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUC3IUC3();
     ~itkBinaryThresholdImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUL2IUC2 : public itkBinaryThresholdImageFilterIUL2IUC2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUL2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned long const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual void SetLowerThreshold(unsigned long const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual unsigned long GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetUpperThresholdInput() const;
     virtual unsigned long GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUL2IUC2(itkBinaryThresholdImageFilterIUL2IUC2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL2IUC2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL2IUC2();
     ~itkBinaryThresholdImageFilterIUL2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUL2IUL2 : public itkBinaryThresholdImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned long const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual void SetLowerThreshold(unsigned long const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual unsigned long GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetUpperThresholdInput() const;
     virtual unsigned long GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUL2IUL2(itkBinaryThresholdImageFilterIUL2IUL2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL2IUL2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL2IUL2();
     ~itkBinaryThresholdImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUL2IUS2 : public itkBinaryThresholdImageFilterIUL2IUS2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUL2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned long const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual void SetLowerThreshold(unsigned long const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual unsigned long GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetUpperThresholdInput() const;
     virtual unsigned long GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUL2IUS2(itkBinaryThresholdImageFilterIUL2IUS2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL2IUS2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL2IUS2();
     ~itkBinaryThresholdImageFilterIUL2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUL3IUC3 : public itkBinaryThresholdImageFilterIUL3IUC3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUL3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned long const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual void SetLowerThreshold(unsigned long const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual unsigned long GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetUpperThresholdInput() const;
     virtual unsigned long GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUL3IUC3(itkBinaryThresholdImageFilterIUL3IUC3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL3IUC3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL3IUC3();
     ~itkBinaryThresholdImageFilterIUL3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUL3IUL3 : public itkBinaryThresholdImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned long const _arg);
     virtual unsigned long const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned long const _arg);
     virtual unsigned long const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned long const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual void SetLowerThreshold(unsigned long const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual unsigned long GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetUpperThresholdInput() const;
     virtual unsigned long GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUL3IUL3(itkBinaryThresholdImageFilterIUL3IUL3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL3IUL3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL3IUL3();
     ~itkBinaryThresholdImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUL3IUS3 : public itkBinaryThresholdImageFilterIUL3IUS3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUL3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned long const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual void SetLowerThreshold(unsigned long const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUL const * arg0);
     virtual unsigned long GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetUpperThresholdInput() const;
     virtual unsigned long GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUL * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUL const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUL3IUS3(itkBinaryThresholdImageFilterIUL3IUS3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUL3IUS3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUL3IUS3();
     ~itkBinaryThresholdImageFilterIUL3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUS2IUC2 : public itkBinaryThresholdImageFilterIUS2IUC2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUS2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned short const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUS const * arg0);
     virtual void SetLowerThreshold(unsigned short const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUS const * arg0);
     virtual unsigned short GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUS * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUS const * GetUpperThresholdInput() const;
     virtual unsigned short GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUS * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUS const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUS2IUC2(itkBinaryThresholdImageFilterIUS2IUC2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUS2IUC2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUS2IUC2();
     ~itkBinaryThresholdImageFilterIUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUS2IUS2 : public itkBinaryThresholdImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned short const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUS const * arg0);
     virtual void SetLowerThreshold(unsigned short const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUS const * arg0);
     virtual unsigned short GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUS * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUS const * GetUpperThresholdInput() const;
     virtual unsigned short GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUS * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUS const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUS2IUS2(itkBinaryThresholdImageFilterIUS2IUS2 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUS2IUS2 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUS2IUS2();
     ~itkBinaryThresholdImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUS3IUC3 : public itkBinaryThresholdImageFilterIUS3IUC3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUS3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned char const _arg);
     virtual unsigned char const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned char const _arg);
     virtual unsigned char const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned short const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUS const * arg0);
     virtual void SetLowerThreshold(unsigned short const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUS const * arg0);
     virtual unsigned short GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUS * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUS const * GetUpperThresholdInput() const;
     virtual unsigned short GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUS * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUS const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUS3IUC3(itkBinaryThresholdImageFilterIUS3IUC3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUS3IUC3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUS3IUC3();
     ~itkBinaryThresholdImageFilterIUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


 class itkBinaryThresholdImageFilterIUS3IUS3 : public itkBinaryThresholdImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  InputPixelTypeComparable = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkBinaryThresholdImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetOutsideValue(unsigned short const _arg);
     virtual unsigned short const & GetOutsideValue() const;
     virtual void SetInsideValue(unsigned short const _arg);
     virtual unsigned short const & GetInsideValue() const;
     virtual void SetUpperThreshold(unsigned short const threshold);
     virtual void SetUpperThresholdInput(itkSimpleDataObjectDecoratorUS const * arg0);
     virtual void SetLowerThreshold(unsigned short const threshold);
     virtual void SetLowerThresholdInput(itkSimpleDataObjectDecoratorUS const * arg0);
     virtual unsigned short GetUpperThreshold() const;
     virtual itkSimpleDataObjectDecoratorUS * GetUpperThresholdInput();
     virtual itkSimpleDataObjectDecoratorUS const * GetUpperThresholdInput() const;
     virtual unsigned short GetLowerThreshold() const;
     virtual itkSimpleDataObjectDecoratorUS * GetLowerThresholdInput();
     virtual itkSimpleDataObjectDecoratorUS const * GetLowerThresholdInput() const;
   private:
     itkBinaryThresholdImageFilterIUS3IUS3(itkBinaryThresholdImageFilterIUS3IUS3 const & arg0);
     void operator=(itkBinaryThresholdImageFilterIUS3IUS3 const & arg0);
   protected:
     itkBinaryThresholdImageFilterIUS3IUS3();
     ~itkBinaryThresholdImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void BeforeThreadedGenerateData();
 };


