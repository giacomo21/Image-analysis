# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkDerivativeImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkDerivativeImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkDerivativeImageFilterPython
            return _itkDerivativeImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkDerivativeImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkDerivativeImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkDerivativeImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterAPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkDerivativeImageFilterID3ID3_New():
  return itkDerivativeImageFilterID3ID3.New()

def itkDerivativeImageFilterID2ID2_New():
  return itkDerivativeImageFilterID2ID2.New()

def itkDerivativeImageFilterIF3IF3_New():
  return itkDerivativeImageFilterIF3IF3.New()

def itkDerivativeImageFilterIF2IF2_New():
  return itkDerivativeImageFilterIF2IF2.New()

class itkDerivativeImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkDerivativeImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_ImageDimension
    SignedOutputPixelType = _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SignedOutputPixelType
    def __New_orig__():
        """__New_orig__()"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetOrder(self, *args):
        """SetOrder(self, unsigned int _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetOrder(self, *args)

    def GetOrder(self):
        """GetOrder(self) -> unsigned int"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GetOrder(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetDirection(self, *args)

    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GetDirection(self)

    def SetUseImageSpacingOn(self):
        """SetUseImageSpacingOn(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        """SetUseImageSpacingOff(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetUseImageSpacingOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GetUseImageSpacing(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkDerivativeImageFilterPython.delete_itkDerivativeImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDerivativeImageFilterID2ID2"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDerivativeImageFilterID2ID2"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDerivativeImageFilterID2ID2
        
        Create a new object of the class itkDerivativeImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDerivativeImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDerivativeImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDerivativeImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDerivativeImageFilterID2ID2.SetOrder = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetOrder,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2.GetOrder = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GetOrder,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2.SetDirection = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetDirection,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2.GetDirection = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GetDirection,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2.SetUseImageSpacingOn = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetUseImageSpacingOn,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2.SetUseImageSpacingOff = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetUseImageSpacingOff,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2.SetUseImageSpacing = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_SetUseImageSpacing,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2.GetUseImageSpacing = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GetUseImageSpacing,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2.GenerateInputRequestedRegion = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GenerateInputRequestedRegion,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2.GetPointer = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_GetPointer,None,itkDerivativeImageFilterID2ID2)
itkDerivativeImageFilterID2ID2_swigregister = _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_swigregister
itkDerivativeImageFilterID2ID2_swigregister(itkDerivativeImageFilterID2ID2)

def itkDerivativeImageFilterID2ID2___New_orig__():
  """itkDerivativeImageFilterID2ID2___New_orig__()"""
  return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2___New_orig__()

def itkDerivativeImageFilterID2ID2_cast(*args):
  """itkDerivativeImageFilterID2ID2_cast(itkLightObject obj) -> itkDerivativeImageFilterID2ID2"""
  return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID2ID2_cast(*args)

class itkDerivativeImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkDerivativeImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_ImageDimension
    SignedOutputPixelType = _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SignedOutputPixelType
    def __New_orig__():
        """__New_orig__()"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetOrder(self, *args):
        """SetOrder(self, unsigned int _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetOrder(self, *args)

    def GetOrder(self):
        """GetOrder(self) -> unsigned int"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GetOrder(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetDirection(self, *args)

    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GetDirection(self)

    def SetUseImageSpacingOn(self):
        """SetUseImageSpacingOn(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        """SetUseImageSpacingOff(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetUseImageSpacingOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GetUseImageSpacing(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkDerivativeImageFilterPython.delete_itkDerivativeImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDerivativeImageFilterID3ID3"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDerivativeImageFilterID3ID3"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDerivativeImageFilterID3ID3
        
        Create a new object of the class itkDerivativeImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDerivativeImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDerivativeImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDerivativeImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDerivativeImageFilterID3ID3.SetOrder = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetOrder,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3.GetOrder = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GetOrder,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3.SetDirection = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetDirection,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3.GetDirection = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GetDirection,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3.SetUseImageSpacingOn = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetUseImageSpacingOn,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3.SetUseImageSpacingOff = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetUseImageSpacingOff,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3.SetUseImageSpacing = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_SetUseImageSpacing,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3.GetUseImageSpacing = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GetUseImageSpacing,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3.GenerateInputRequestedRegion = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GenerateInputRequestedRegion,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3.GetPointer = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_GetPointer,None,itkDerivativeImageFilterID3ID3)
itkDerivativeImageFilterID3ID3_swigregister = _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_swigregister
itkDerivativeImageFilterID3ID3_swigregister(itkDerivativeImageFilterID3ID3)

def itkDerivativeImageFilterID3ID3___New_orig__():
  """itkDerivativeImageFilterID3ID3___New_orig__()"""
  return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3___New_orig__()

def itkDerivativeImageFilterID3ID3_cast(*args):
  """itkDerivativeImageFilterID3ID3_cast(itkLightObject obj) -> itkDerivativeImageFilterID3ID3"""
  return _itkDerivativeImageFilterPython.itkDerivativeImageFilterID3ID3_cast(*args)

class itkDerivativeImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkDerivativeImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_ImageDimension
    SignedOutputPixelType = _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SignedOutputPixelType
    def __New_orig__():
        """__New_orig__()"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetOrder(self, *args):
        """SetOrder(self, unsigned int _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetOrder(self, *args)

    def GetOrder(self):
        """GetOrder(self) -> unsigned int"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GetOrder(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetDirection(self, *args)

    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GetDirection(self)

    def SetUseImageSpacingOn(self):
        """SetUseImageSpacingOn(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        """SetUseImageSpacingOff(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetUseImageSpacingOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GetUseImageSpacing(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkDerivativeImageFilterPython.delete_itkDerivativeImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkDerivativeImageFilterIF2IF2"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDerivativeImageFilterIF2IF2"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDerivativeImageFilterIF2IF2
        
        Create a new object of the class itkDerivativeImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDerivativeImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDerivativeImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDerivativeImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDerivativeImageFilterIF2IF2.SetOrder = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetOrder,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2.GetOrder = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GetOrder,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2.SetDirection = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetDirection,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2.GetDirection = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GetDirection,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2.SetUseImageSpacingOn = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetUseImageSpacingOn,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2.SetUseImageSpacingOff = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetUseImageSpacingOff,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2.SetUseImageSpacing = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_SetUseImageSpacing,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2.GetUseImageSpacing = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GetUseImageSpacing,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2.GenerateInputRequestedRegion = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GenerateInputRequestedRegion,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2.GetPointer = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_GetPointer,None,itkDerivativeImageFilterIF2IF2)
itkDerivativeImageFilterIF2IF2_swigregister = _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_swigregister
itkDerivativeImageFilterIF2IF2_swigregister(itkDerivativeImageFilterIF2IF2)

def itkDerivativeImageFilterIF2IF2___New_orig__():
  """itkDerivativeImageFilterIF2IF2___New_orig__()"""
  return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2___New_orig__()

def itkDerivativeImageFilterIF2IF2_cast(*args):
  """itkDerivativeImageFilterIF2IF2_cast(itkLightObject obj) -> itkDerivativeImageFilterIF2IF2"""
  return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF2IF2_cast(*args)

class itkDerivativeImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkDerivativeImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_ImageDimension
    SignedOutputPixelType = _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SignedOutputPixelType
    def __New_orig__():
        """__New_orig__()"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetOrder(self, *args):
        """SetOrder(self, unsigned int _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetOrder(self, *args)

    def GetOrder(self):
        """GetOrder(self) -> unsigned int"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GetOrder(self)

    def SetDirection(self, *args):
        """SetDirection(self, unsigned int _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetDirection(self, *args)

    def GetDirection(self):
        """GetDirection(self) -> unsigned int"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GetDirection(self)

    def SetUseImageSpacingOn(self):
        """SetUseImageSpacingOn(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        """SetUseImageSpacingOff(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetUseImageSpacingOff(self)

    def SetUseImageSpacing(self, *args):
        """SetUseImageSpacing(self, bool _arg)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetUseImageSpacing(self, *args)

    def GetUseImageSpacing(self):
        """GetUseImageSpacing(self) -> bool"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GetUseImageSpacing(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkDerivativeImageFilterPython.delete_itkDerivativeImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkDerivativeImageFilterIF3IF3"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkDerivativeImageFilterIF3IF3"""
        return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkDerivativeImageFilterIF3IF3
        
        Create a new object of the class itkDerivativeImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkDerivativeImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkDerivativeImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDerivativeImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDerivativeImageFilterIF3IF3.SetOrder = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetOrder,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3.GetOrder = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GetOrder,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3.SetDirection = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetDirection,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3.GetDirection = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GetDirection,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3.SetUseImageSpacingOn = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetUseImageSpacingOn,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3.SetUseImageSpacingOff = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetUseImageSpacingOff,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3.SetUseImageSpacing = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_SetUseImageSpacing,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3.GetUseImageSpacing = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GetUseImageSpacing,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3.GenerateInputRequestedRegion = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GenerateInputRequestedRegion,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3.GetPointer = new_instancemethod(_itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_GetPointer,None,itkDerivativeImageFilterIF3IF3)
itkDerivativeImageFilterIF3IF3_swigregister = _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_swigregister
itkDerivativeImageFilterIF3IF3_swigregister(itkDerivativeImageFilterIF3IF3)

def itkDerivativeImageFilterIF3IF3___New_orig__():
  """itkDerivativeImageFilterIF3IF3___New_orig__()"""
  return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3___New_orig__()

def itkDerivativeImageFilterIF3IF3_cast(*args):
  """itkDerivativeImageFilterIF3IF3_cast(itkLightObject obj) -> itkDerivativeImageFilterIF3IF3"""
  return _itkDerivativeImageFilterPython.itkDerivativeImageFilterIF3IF3_cast(*args)



