# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkMultiplyImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMultiplyImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMultiplyImageFilterPython
            return _itkMultiplyImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMultiplyImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMultiplyImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMultiplyImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkInPlaceImageFilterBPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterAPython
def itkMultiplyImageFilterICF3IF3ICF3_New():
  return itkMultiplyImageFilterICF3IF3ICF3.New()

def itkMultiplyImageFilterICF3IF3ICF3_Superclass_New():
  return itkMultiplyImageFilterICF3IF3ICF3_Superclass.New()

def itkMultiplyImageFilterICF2IF2ICF2_New():
  return itkMultiplyImageFilterICF2IF2ICF2.New()

def itkMultiplyImageFilterICF2IF2ICF2_Superclass_New():
  return itkMultiplyImageFilterICF2IF2ICF2_Superclass.New()

def itkMultiplyImageFilterICF3ICF3ICF3_New():
  return itkMultiplyImageFilterICF3ICF3ICF3.New()

def itkMultiplyImageFilterICF3ICF3ICF3_Superclass_New():
  return itkMultiplyImageFilterICF3ICF3ICF3_Superclass.New()

def itkMultiplyImageFilterICF2ICF2ICF2_New():
  return itkMultiplyImageFilterICF2ICF2ICF2.New()

def itkMultiplyImageFilterICF2ICF2ICF2_Superclass_New():
  return itkMultiplyImageFilterICF2ICF2ICF2_Superclass.New()

def itkMultiplyImageFilterID3ID3ID3_New():
  return itkMultiplyImageFilterID3ID3ID3.New()

def itkMultiplyImageFilterID3ID3ID3_Superclass_New():
  return itkMultiplyImageFilterID3ID3ID3_Superclass.New()

def itkMultiplyImageFilterID2ID2ID2_New():
  return itkMultiplyImageFilterID2ID2ID2.New()

def itkMultiplyImageFilterID2ID2ID2_Superclass_New():
  return itkMultiplyImageFilterID2ID2ID2_Superclass.New()

def itkMultiplyImageFilterIF3IF3IF3_New():
  return itkMultiplyImageFilterIF3IF3IF3.New()

def itkMultiplyImageFilterIF3IF3IF3_Superclass_New():
  return itkMultiplyImageFilterIF3IF3IF3_Superclass.New()

def itkMultiplyImageFilterIF2IF2IF2_New():
  return itkMultiplyImageFilterIF2IF2IF2.New()

def itkMultiplyImageFilterIF2IF2IF2_Superclass_New():
  return itkMultiplyImageFilterIF2IF2IF2_Superclass.New()

def itkMultiplyImageFilterIUS3IUS3IUS3_New():
  return itkMultiplyImageFilterIUS3IUS3IUS3.New()

def itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_New():
  return itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.New()

def itkMultiplyImageFilterIUS2IUS2IUS2_New():
  return itkMultiplyImageFilterIUS2IUS2IUS2.New()

def itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_New():
  return itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.New()

def itkMultiplyImageFilterIUL3IUL3IUL3_New():
  return itkMultiplyImageFilterIUL3IUL3IUL3.New()

def itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_New():
  return itkMultiplyImageFilterIUL3IUL3IUL3_Superclass.New()

def itkMultiplyImageFilterIUL2IUL2IUL2_New():
  return itkMultiplyImageFilterIUL2IUL2IUL2.New()

def itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_New():
  return itkMultiplyImageFilterIUL2IUL2IUL2_Superclass.New()

def itkMultiplyImageFilterIUC3IUC3IUC3_New():
  return itkMultiplyImageFilterIUC3IUC3IUC3.New()

def itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_New():
  return itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.New()

def itkMultiplyImageFilterIUC2IUC2IUC2_New():
  return itkMultiplyImageFilterIUC2IUC2IUC2.New()

def itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_New():
  return itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.New()

class itkMultiplyImageFilterICF2ICF2ICF2_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    """Proxy of C++ itkMultiplyImageFilterICF2ICF2ICF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageCF2 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageCF2 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(std::complex<(float)>,std::complex<(float)>,std::complex<(float)>)>
        GetFunctor(self) -> itk::Function::Mult<(std::complex<(float)>,std::complex<(float)>,std::complex<(float)>)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(std::complex<(float)>,std::complex<(float)>,std::complex<(float)>)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF2ICF2ICF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass
        
        Create a new object of the class itkMultiplyImageFilterICF2ICF2ICF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterICF2ICF2ICF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterICF2ICF2ICF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF2ICF2ICF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF2ICF2ICF2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetInput1,None,itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetInput2,None,itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetFunctor,None,itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetFunctor,None,itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetPointer,None,itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_swigregister
itkMultiplyImageFilterICF2ICF2ICF2_Superclass_swigregister(itkMultiplyImageFilterICF2ICF2ICF2_Superclass)

def itkMultiplyImageFilterICF2ICF2ICF2_Superclass___New_orig__():
  """itkMultiplyImageFilterICF2ICF2ICF2_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass___New_orig__()

def itkMultiplyImageFilterICF2ICF2ICF2_Superclass_cast(*args):
  """itkMultiplyImageFilterICF2ICF2ICF2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_cast(*args)

class itkMultiplyImageFilterICF2IF2ICF2_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    """Proxy of C++ itkMultiplyImageFilterICF2IF2ICF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageCF2 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF2 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(std::complex<(float)>,float,std::complex<(float)>)>
        GetFunctor(self) -> itk::Function::Mult<(std::complex<(float)>,float,std::complex<(float)>)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(std::complex<(float)>,float,std::complex<(float)>)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF2IF2ICF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF2IF2ICF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterICF2IF2ICF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF2IF2ICF2_Superclass
        
        Create a new object of the class itkMultiplyImageFilterICF2IF2ICF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterICF2IF2ICF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterICF2IF2ICF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF2IF2ICF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF2IF2ICF2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetInput1,None,itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetInput2,None,itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetFunctor,None,itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetFunctor,None,itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetPointer,None,itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_swigregister
itkMultiplyImageFilterICF2IF2ICF2_Superclass_swigregister(itkMultiplyImageFilterICF2IF2ICF2_Superclass)

def itkMultiplyImageFilterICF2IF2ICF2_Superclass___New_orig__():
  """itkMultiplyImageFilterICF2IF2ICF2_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass___New_orig__()

def itkMultiplyImageFilterICF2IF2ICF2_Superclass_cast(*args):
  """itkMultiplyImageFilterICF2IF2ICF2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterICF2IF2ICF2_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_cast(*args)

class itkMultiplyImageFilterICF3ICF3ICF3_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    """Proxy of C++ itkMultiplyImageFilterICF3ICF3ICF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageCF3 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageCF3 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(std::complex<(float)>,std::complex<(float)>,std::complex<(float)>)>
        GetFunctor(self) -> itk::Function::Mult<(std::complex<(float)>,std::complex<(float)>,std::complex<(float)>)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(std::complex<(float)>,std::complex<(float)>,std::complex<(float)>)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF3ICF3ICF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass
        
        Create a new object of the class itkMultiplyImageFilterICF3ICF3ICF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterICF3ICF3ICF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterICF3ICF3ICF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF3ICF3ICF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF3ICF3ICF3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetInput1,None,itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetInput2,None,itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetFunctor,None,itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetFunctor,None,itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetPointer,None,itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_swigregister
itkMultiplyImageFilterICF3ICF3ICF3_Superclass_swigregister(itkMultiplyImageFilterICF3ICF3ICF3_Superclass)

def itkMultiplyImageFilterICF3ICF3ICF3_Superclass___New_orig__():
  """itkMultiplyImageFilterICF3ICF3ICF3_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass___New_orig__()

def itkMultiplyImageFilterICF3ICF3ICF3_Superclass_cast(*args):
  """itkMultiplyImageFilterICF3ICF3ICF3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_cast(*args)

class itkMultiplyImageFilterICF3IF3ICF3_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    """Proxy of C++ itkMultiplyImageFilterICF3IF3ICF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageCF3 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF3 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(std::complex<(float)>,float,std::complex<(float)>)>
        GetFunctor(self) -> itk::Function::Mult<(std::complex<(float)>,float,std::complex<(float)>)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(std::complex<(float)>,float,std::complex<(float)>)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF3IF3ICF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF3IF3ICF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterICF3IF3ICF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF3IF3ICF3_Superclass
        
        Create a new object of the class itkMultiplyImageFilterICF3IF3ICF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterICF3IF3ICF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterICF3IF3ICF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF3IF3ICF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF3IF3ICF3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetInput1,None,itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetInput2,None,itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetFunctor,None,itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetFunctor,None,itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetPointer,None,itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_swigregister
itkMultiplyImageFilterICF3IF3ICF3_Superclass_swigregister(itkMultiplyImageFilterICF3IF3ICF3_Superclass)

def itkMultiplyImageFilterICF3IF3ICF3_Superclass___New_orig__():
  """itkMultiplyImageFilterICF3IF3ICF3_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass___New_orig__()

def itkMultiplyImageFilterICF3IF3ICF3_Superclass_cast(*args):
  """itkMultiplyImageFilterICF3IF3ICF3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterICF3IF3ICF3_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_cast(*args)

class itkMultiplyImageFilterID2ID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkMultiplyImageFilterID2ID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD2 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD2 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(double,double,double)>
        GetFunctor(self) -> itk::Function::Mult<(double,double,double)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(double,double,double)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterID2ID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterID2ID2ID2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterID2ID2ID2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterID2ID2ID2_Superclass
        
        Create a new object of the class itkMultiplyImageFilterID2ID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterID2ID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterID2ID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterID2ID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterID2ID2ID2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_SetInput1,None,itkMultiplyImageFilterID2ID2ID2_Superclass)
itkMultiplyImageFilterID2ID2ID2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_SetInput2,None,itkMultiplyImageFilterID2ID2ID2_Superclass)
itkMultiplyImageFilterID2ID2ID2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_GetFunctor,None,itkMultiplyImageFilterID2ID2ID2_Superclass)
itkMultiplyImageFilterID2ID2ID2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_SetFunctor,None,itkMultiplyImageFilterID2ID2ID2_Superclass)
itkMultiplyImageFilterID2ID2ID2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_GetPointer,None,itkMultiplyImageFilterID2ID2ID2_Superclass)
itkMultiplyImageFilterID2ID2ID2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_swigregister
itkMultiplyImageFilterID2ID2ID2_Superclass_swigregister(itkMultiplyImageFilterID2ID2ID2_Superclass)

def itkMultiplyImageFilterID2ID2ID2_Superclass___New_orig__():
  """itkMultiplyImageFilterID2ID2ID2_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass___New_orig__()

def itkMultiplyImageFilterID2ID2ID2_Superclass_cast(*args):
  """itkMultiplyImageFilterID2ID2ID2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterID2ID2ID2_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Superclass_cast(*args)

class itkMultiplyImageFilterID3ID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkMultiplyImageFilterID3ID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD3 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD3 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(double,double,double)>
        GetFunctor(self) -> itk::Function::Mult<(double,double,double)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(double,double,double)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterID3ID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterID3ID3ID3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterID3ID3ID3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterID3ID3ID3_Superclass
        
        Create a new object of the class itkMultiplyImageFilterID3ID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterID3ID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterID3ID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterID3ID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterID3ID3ID3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_SetInput1,None,itkMultiplyImageFilterID3ID3ID3_Superclass)
itkMultiplyImageFilterID3ID3ID3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_SetInput2,None,itkMultiplyImageFilterID3ID3ID3_Superclass)
itkMultiplyImageFilterID3ID3ID3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_GetFunctor,None,itkMultiplyImageFilterID3ID3ID3_Superclass)
itkMultiplyImageFilterID3ID3ID3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_SetFunctor,None,itkMultiplyImageFilterID3ID3ID3_Superclass)
itkMultiplyImageFilterID3ID3ID3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_GetPointer,None,itkMultiplyImageFilterID3ID3ID3_Superclass)
itkMultiplyImageFilterID3ID3ID3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_swigregister
itkMultiplyImageFilterID3ID3ID3_Superclass_swigregister(itkMultiplyImageFilterID3ID3ID3_Superclass)

def itkMultiplyImageFilterID3ID3ID3_Superclass___New_orig__():
  """itkMultiplyImageFilterID3ID3ID3_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass___New_orig__()

def itkMultiplyImageFilterID3ID3ID3_Superclass_cast(*args):
  """itkMultiplyImageFilterID3ID3ID3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterID3ID3ID3_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Superclass_cast(*args)

class itkMultiplyImageFilterIF2IF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkMultiplyImageFilterIF2IF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF2 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF2 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(float,float,float)>
        GetFunctor(self) -> itk::Function::Mult<(float,float,float)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(float,float,float)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIF2IF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIF2IF2IF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIF2IF2IF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIF2IF2IF2_Superclass
        
        Create a new object of the class itkMultiplyImageFilterIF2IF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIF2IF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIF2IF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIF2IF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIF2IF2IF2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetInput1,None,itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetInput2,None,itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetFunctor,None,itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetFunctor,None,itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetPointer,None,itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_swigregister
itkMultiplyImageFilterIF2IF2IF2_Superclass_swigregister(itkMultiplyImageFilterIF2IF2IF2_Superclass)

def itkMultiplyImageFilterIF2IF2IF2_Superclass___New_orig__():
  """itkMultiplyImageFilterIF2IF2IF2_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass___New_orig__()

def itkMultiplyImageFilterIF2IF2IF2_Superclass_cast(*args):
  """itkMultiplyImageFilterIF2IF2IF2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIF2IF2IF2_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_cast(*args)

class itkMultiplyImageFilterIF3IF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkMultiplyImageFilterIF3IF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF3 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF3 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(float,float,float)>
        GetFunctor(self) -> itk::Function::Mult<(float,float,float)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(float,float,float)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIF3IF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIF3IF3IF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIF3IF3IF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIF3IF3IF3_Superclass
        
        Create a new object of the class itkMultiplyImageFilterIF3IF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIF3IF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIF3IF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIF3IF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIF3IF3IF3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetInput1,None,itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetInput2,None,itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetFunctor,None,itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetFunctor,None,itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetPointer,None,itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_swigregister
itkMultiplyImageFilterIF3IF3IF3_Superclass_swigregister(itkMultiplyImageFilterIF3IF3IF3_Superclass)

def itkMultiplyImageFilterIF3IF3IF3_Superclass___New_orig__():
  """itkMultiplyImageFilterIF3IF3IF3_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass___New_orig__()

def itkMultiplyImageFilterIF3IF3IF3_Superclass_cast(*args):
  """itkMultiplyImageFilterIF3IF3IF3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIF3IF3IF3_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_cast(*args)

class itkMultiplyImageFilterIUC2IUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkMultiplyImageFilterIUC2IUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC2 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC2 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(unsigned char,unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Mult<(unsigned char,unsigned char,unsigned char)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(unsigned char,unsigned char,unsigned char)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUC2IUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass
        
        Create a new object of the class itkMultiplyImageFilterIUC2IUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetInput1,None,itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetInput2,None,itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetFunctor,None,itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetFunctor,None,itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetPointer,None,itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_swigregister
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_swigregister(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)

def itkMultiplyImageFilterIUC2IUC2IUC2_Superclass___New_orig__():
  """itkMultiplyImageFilterIUC2IUC2IUC2_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

def itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_cast(*args):
  """itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_cast(*args)

class itkMultiplyImageFilterIUC3IUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkMultiplyImageFilterIUC3IUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC3 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC3 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(unsigned char,unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Mult<(unsigned char,unsigned char,unsigned char)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(unsigned char,unsigned char,unsigned char)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUC3IUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass
        
        Create a new object of the class itkMultiplyImageFilterIUC3IUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetInput1,None,itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetInput2,None,itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetFunctor,None,itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetFunctor,None,itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetPointer,None,itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_swigregister
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_swigregister(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)

def itkMultiplyImageFilterIUC3IUC3IUC3_Superclass___New_orig__():
  """itkMultiplyImageFilterIUC3IUC3IUC3_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

def itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_cast(*args):
  """itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_cast(*args)

class itkMultiplyImageFilterIUL2IUL2IUL2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkMultiplyImageFilterIUL2IUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL2 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL2 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(unsigned long,unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Mult<(unsigned long,unsigned long,unsigned long)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(unsigned long,unsigned long,unsigned long)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUL2IUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUL2IUL2IUL2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUL2IUL2IUL2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUL2IUL2IUL2_Superclass
        
        Create a new object of the class itkMultiplyImageFilterIUL2IUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUL2IUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUL2IUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUL2IUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUL2IUL2IUL2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_SetInput1,None,itkMultiplyImageFilterIUL2IUL2IUL2_Superclass)
itkMultiplyImageFilterIUL2IUL2IUL2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_SetInput2,None,itkMultiplyImageFilterIUL2IUL2IUL2_Superclass)
itkMultiplyImageFilterIUL2IUL2IUL2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_GetFunctor,None,itkMultiplyImageFilterIUL2IUL2IUL2_Superclass)
itkMultiplyImageFilterIUL2IUL2IUL2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_SetFunctor,None,itkMultiplyImageFilterIUL2IUL2IUL2_Superclass)
itkMultiplyImageFilterIUL2IUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_GetPointer,None,itkMultiplyImageFilterIUL2IUL2IUL2_Superclass)
itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_swigregister
itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_swigregister(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass)

def itkMultiplyImageFilterIUL2IUL2IUL2_Superclass___New_orig__():
  """itkMultiplyImageFilterIUL2IUL2IUL2_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass___New_orig__()

def itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_cast(*args):
  """itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUL2IUL2IUL2_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_cast(*args)

class itkMultiplyImageFilterIUL3IUL3IUL3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkMultiplyImageFilterIUL3IUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL3 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL3 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(unsigned long,unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Mult<(unsigned long,unsigned long,unsigned long)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(unsigned long,unsigned long,unsigned long)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUL3IUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUL3IUL3IUL3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUL3IUL3IUL3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUL3IUL3IUL3_Superclass
        
        Create a new object of the class itkMultiplyImageFilterIUL3IUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUL3IUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUL3IUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUL3IUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUL3IUL3IUL3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_SetInput1,None,itkMultiplyImageFilterIUL3IUL3IUL3_Superclass)
itkMultiplyImageFilterIUL3IUL3IUL3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_SetInput2,None,itkMultiplyImageFilterIUL3IUL3IUL3_Superclass)
itkMultiplyImageFilterIUL3IUL3IUL3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_GetFunctor,None,itkMultiplyImageFilterIUL3IUL3IUL3_Superclass)
itkMultiplyImageFilterIUL3IUL3IUL3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_SetFunctor,None,itkMultiplyImageFilterIUL3IUL3IUL3_Superclass)
itkMultiplyImageFilterIUL3IUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_GetPointer,None,itkMultiplyImageFilterIUL3IUL3IUL3_Superclass)
itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_swigregister
itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_swigregister(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass)

def itkMultiplyImageFilterIUL3IUL3IUL3_Superclass___New_orig__():
  """itkMultiplyImageFilterIUL3IUL3IUL3_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass___New_orig__()

def itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_cast(*args):
  """itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUL3IUL3IUL3_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_cast(*args)

class itkMultiplyImageFilterIUS2IUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkMultiplyImageFilterIUS2IUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS2 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS2 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(unsigned short,unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Mult<(unsigned short,unsigned short,unsigned short)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(unsigned short,unsigned short,unsigned short)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUS2IUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass
        
        Create a new object of the class itkMultiplyImageFilterIUS2IUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetInput1,None,itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetInput2,None,itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetFunctor,None,itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetFunctor,None,itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetPointer,None,itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_swigregister
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_swigregister(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)

def itkMultiplyImageFilterIUS2IUS2IUS2_Superclass___New_orig__():
  """itkMultiplyImageFilterIUS2IUS2IUS2_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

def itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_cast(*args):
  """itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_cast(*args)

class itkMultiplyImageFilterIUS3IUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkMultiplyImageFilterIUS3IUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    InputImage1Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_InputImage1Dimension
    InputImage2Dimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_InputImage2Dimension
    OutputImageDimension = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_OutputImageDimension
    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck2
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS3 image1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS3 image2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetInput2(self, *args)

    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Mult<(unsigned short,unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Mult<(unsigned short,unsigned short,unsigned short)>
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Mult<(unsigned short,unsigned short,unsigned short)> functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUS3IUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass
        
        Create a new object of the class itkMultiplyImageFilterIUS3IUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetInput1,None,itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetInput2,None,itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetFunctor,None,itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetFunctor,None,itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetPointer,None,itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_swigregister
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_swigregister(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)

def itkMultiplyImageFilterIUS3IUS3IUS3_Superclass___New_orig__():
  """itkMultiplyImageFilterIUS3IUS3IUS3_Superclass___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

def itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_cast(*args):
  """itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_cast(*args)

class itkMultiplyImageFilterICF2ICF2ICF2(itkMultiplyImageFilterICF2ICF2ICF2_Superclass):
    """Proxy of C++ itkMultiplyImageFilterICF2ICF2ICF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF2ICF2ICF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF2ICF2ICF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterICF2ICF2ICF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF2ICF2ICF2
        
        Create a new object of the class itkMultiplyImageFilterICF2ICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterICF2ICF2ICF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterICF2ICF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF2ICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF2ICF2ICF2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_GetPointer,None,itkMultiplyImageFilterICF2ICF2ICF2)
itkMultiplyImageFilterICF2ICF2ICF2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_swigregister
itkMultiplyImageFilterICF2ICF2ICF2_swigregister(itkMultiplyImageFilterICF2ICF2ICF2)

def itkMultiplyImageFilterICF2ICF2ICF2___New_orig__():
  """itkMultiplyImageFilterICF2ICF2ICF2___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2___New_orig__()

def itkMultiplyImageFilterICF2ICF2ICF2_cast(*args):
  """itkMultiplyImageFilterICF2ICF2ICF2_cast(itkLightObject obj) -> itkMultiplyImageFilterICF2ICF2ICF2"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_cast(*args)

class itkMultiplyImageFilterICF2IF2ICF2(itkMultiplyImageFilterICF2IF2ICF2_Superclass):
    """Proxy of C++ itkMultiplyImageFilterICF2IF2ICF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF2IF2ICF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF2IF2ICF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterICF2IF2ICF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF2IF2ICF2
        
        Create a new object of the class itkMultiplyImageFilterICF2IF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterICF2IF2ICF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterICF2IF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF2IF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF2IF2ICF2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_GetPointer,None,itkMultiplyImageFilterICF2IF2ICF2)
itkMultiplyImageFilterICF2IF2ICF2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_swigregister
itkMultiplyImageFilterICF2IF2ICF2_swigregister(itkMultiplyImageFilterICF2IF2ICF2)

def itkMultiplyImageFilterICF2IF2ICF2___New_orig__():
  """itkMultiplyImageFilterICF2IF2ICF2___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2___New_orig__()

def itkMultiplyImageFilterICF2IF2ICF2_cast(*args):
  """itkMultiplyImageFilterICF2IF2ICF2_cast(itkLightObject obj) -> itkMultiplyImageFilterICF2IF2ICF2"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_cast(*args)

class itkMultiplyImageFilterICF3ICF3ICF3(itkMultiplyImageFilterICF3ICF3ICF3_Superclass):
    """Proxy of C++ itkMultiplyImageFilterICF3ICF3ICF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF3ICF3ICF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF3ICF3ICF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterICF3ICF3ICF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF3ICF3ICF3
        
        Create a new object of the class itkMultiplyImageFilterICF3ICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterICF3ICF3ICF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterICF3ICF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF3ICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF3ICF3ICF3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_GetPointer,None,itkMultiplyImageFilterICF3ICF3ICF3)
itkMultiplyImageFilterICF3ICF3ICF3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_swigregister
itkMultiplyImageFilterICF3ICF3ICF3_swigregister(itkMultiplyImageFilterICF3ICF3ICF3)

def itkMultiplyImageFilterICF3ICF3ICF3___New_orig__():
  """itkMultiplyImageFilterICF3ICF3ICF3___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3___New_orig__()

def itkMultiplyImageFilterICF3ICF3ICF3_cast(*args):
  """itkMultiplyImageFilterICF3ICF3ICF3_cast(itkLightObject obj) -> itkMultiplyImageFilterICF3ICF3ICF3"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_cast(*args)

class itkMultiplyImageFilterICF3IF3ICF3(itkMultiplyImageFilterICF3IF3ICF3_Superclass):
    """Proxy of C++ itkMultiplyImageFilterICF3IF3ICF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF3IF3ICF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF3IF3ICF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterICF3IF3ICF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF3IF3ICF3
        
        Create a new object of the class itkMultiplyImageFilterICF3IF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterICF3IF3ICF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterICF3IF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF3IF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF3IF3ICF3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_GetPointer,None,itkMultiplyImageFilterICF3IF3ICF3)
itkMultiplyImageFilterICF3IF3ICF3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_swigregister
itkMultiplyImageFilterICF3IF3ICF3_swigregister(itkMultiplyImageFilterICF3IF3ICF3)

def itkMultiplyImageFilterICF3IF3ICF3___New_orig__():
  """itkMultiplyImageFilterICF3IF3ICF3___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3___New_orig__()

def itkMultiplyImageFilterICF3IF3ICF3_cast(*args):
  """itkMultiplyImageFilterICF3IF3ICF3_cast(itkLightObject obj) -> itkMultiplyImageFilterICF3IF3ICF3"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_cast(*args)

class itkMultiplyImageFilterID2ID2ID2(itkMultiplyImageFilterID2ID2ID2_Superclass):
    """Proxy of C++ itkMultiplyImageFilterID2ID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterID2ID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterID2ID2ID2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterID2ID2ID2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterID2ID2ID2
        
        Create a new object of the class itkMultiplyImageFilterID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterID2ID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterID2ID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterID2ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterID2ID2ID2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_GetPointer,None,itkMultiplyImageFilterID2ID2ID2)
itkMultiplyImageFilterID2ID2ID2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_swigregister
itkMultiplyImageFilterID2ID2ID2_swigregister(itkMultiplyImageFilterID2ID2ID2)

def itkMultiplyImageFilterID2ID2ID2___New_orig__():
  """itkMultiplyImageFilterID2ID2ID2___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2___New_orig__()

def itkMultiplyImageFilterID2ID2ID2_cast(*args):
  """itkMultiplyImageFilterID2ID2ID2_cast(itkLightObject obj) -> itkMultiplyImageFilterID2ID2ID2"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID2ID2ID2_cast(*args)

class itkMultiplyImageFilterID3ID3ID3(itkMultiplyImageFilterID3ID3ID3_Superclass):
    """Proxy of C++ itkMultiplyImageFilterID3ID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterID3ID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterID3ID3ID3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterID3ID3ID3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterID3ID3ID3
        
        Create a new object of the class itkMultiplyImageFilterID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterID3ID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterID3ID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterID3ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterID3ID3ID3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_GetPointer,None,itkMultiplyImageFilterID3ID3ID3)
itkMultiplyImageFilterID3ID3ID3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_swigregister
itkMultiplyImageFilterID3ID3ID3_swigregister(itkMultiplyImageFilterID3ID3ID3)

def itkMultiplyImageFilterID3ID3ID3___New_orig__():
  """itkMultiplyImageFilterID3ID3ID3___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3___New_orig__()

def itkMultiplyImageFilterID3ID3ID3_cast(*args):
  """itkMultiplyImageFilterID3ID3ID3_cast(itkLightObject obj) -> itkMultiplyImageFilterID3ID3ID3"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterID3ID3ID3_cast(*args)

class itkMultiplyImageFilterIF2IF2IF2(itkMultiplyImageFilterIF2IF2IF2_Superclass):
    """Proxy of C++ itkMultiplyImageFilterIF2IF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIF2IF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIF2IF2IF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIF2IF2IF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIF2IF2IF2
        
        Create a new object of the class itkMultiplyImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIF2IF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIF2IF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIF2IF2IF2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_GetPointer,None,itkMultiplyImageFilterIF2IF2IF2)
itkMultiplyImageFilterIF2IF2IF2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_swigregister
itkMultiplyImageFilterIF2IF2IF2_swigregister(itkMultiplyImageFilterIF2IF2IF2)

def itkMultiplyImageFilterIF2IF2IF2___New_orig__():
  """itkMultiplyImageFilterIF2IF2IF2___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2___New_orig__()

def itkMultiplyImageFilterIF2IF2IF2_cast(*args):
  """itkMultiplyImageFilterIF2IF2IF2_cast(itkLightObject obj) -> itkMultiplyImageFilterIF2IF2IF2"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_cast(*args)

class itkMultiplyImageFilterIF3IF3IF3(itkMultiplyImageFilterIF3IF3IF3_Superclass):
    """Proxy of C++ itkMultiplyImageFilterIF3IF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIF3IF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIF3IF3IF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIF3IF3IF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIF3IF3IF3
        
        Create a new object of the class itkMultiplyImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIF3IF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIF3IF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIF3IF3IF3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_GetPointer,None,itkMultiplyImageFilterIF3IF3IF3)
itkMultiplyImageFilterIF3IF3IF3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_swigregister
itkMultiplyImageFilterIF3IF3IF3_swigregister(itkMultiplyImageFilterIF3IF3IF3)

def itkMultiplyImageFilterIF3IF3IF3___New_orig__():
  """itkMultiplyImageFilterIF3IF3IF3___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3___New_orig__()

def itkMultiplyImageFilterIF3IF3IF3_cast(*args):
  """itkMultiplyImageFilterIF3IF3IF3_cast(itkLightObject obj) -> itkMultiplyImageFilterIF3IF3IF3"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_cast(*args)

class itkMultiplyImageFilterIUC2IUC2IUC2(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass):
    """Proxy of C++ itkMultiplyImageFilterIUC2IUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUC2IUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUC2IUC2IUC2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUC2IUC2IUC2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUC2IUC2IUC2
        
        Create a new object of the class itkMultiplyImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUC2IUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUC2IUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUC2IUC2IUC2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_GetPointer,None,itkMultiplyImageFilterIUC2IUC2IUC2)
itkMultiplyImageFilterIUC2IUC2IUC2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_swigregister
itkMultiplyImageFilterIUC2IUC2IUC2_swigregister(itkMultiplyImageFilterIUC2IUC2IUC2)

def itkMultiplyImageFilterIUC2IUC2IUC2___New_orig__():
  """itkMultiplyImageFilterIUC2IUC2IUC2___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2___New_orig__()

def itkMultiplyImageFilterIUC2IUC2IUC2_cast(*args):
  """itkMultiplyImageFilterIUC2IUC2IUC2_cast(itkLightObject obj) -> itkMultiplyImageFilterIUC2IUC2IUC2"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_cast(*args)

class itkMultiplyImageFilterIUC3IUC3IUC3(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass):
    """Proxy of C++ itkMultiplyImageFilterIUC3IUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUC3IUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUC3IUC3IUC3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUC3IUC3IUC3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUC3IUC3IUC3
        
        Create a new object of the class itkMultiplyImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUC3IUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUC3IUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUC3IUC3IUC3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_GetPointer,None,itkMultiplyImageFilterIUC3IUC3IUC3)
itkMultiplyImageFilterIUC3IUC3IUC3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_swigregister
itkMultiplyImageFilterIUC3IUC3IUC3_swigregister(itkMultiplyImageFilterIUC3IUC3IUC3)

def itkMultiplyImageFilterIUC3IUC3IUC3___New_orig__():
  """itkMultiplyImageFilterIUC3IUC3IUC3___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3___New_orig__()

def itkMultiplyImageFilterIUC3IUC3IUC3_cast(*args):
  """itkMultiplyImageFilterIUC3IUC3IUC3_cast(itkLightObject obj) -> itkMultiplyImageFilterIUC3IUC3IUC3"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_cast(*args)

class itkMultiplyImageFilterIUL2IUL2IUL2(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass):
    """Proxy of C++ itkMultiplyImageFilterIUL2IUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUL2IUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUL2IUL2IUL2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUL2IUL2IUL2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUL2IUL2IUL2
        
        Create a new object of the class itkMultiplyImageFilterIUL2IUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUL2IUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUL2IUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUL2IUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUL2IUL2IUL2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_GetPointer,None,itkMultiplyImageFilterIUL2IUL2IUL2)
itkMultiplyImageFilterIUL2IUL2IUL2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_swigregister
itkMultiplyImageFilterIUL2IUL2IUL2_swigregister(itkMultiplyImageFilterIUL2IUL2IUL2)

def itkMultiplyImageFilterIUL2IUL2IUL2___New_orig__():
  """itkMultiplyImageFilterIUL2IUL2IUL2___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2___New_orig__()

def itkMultiplyImageFilterIUL2IUL2IUL2_cast(*args):
  """itkMultiplyImageFilterIUL2IUL2IUL2_cast(itkLightObject obj) -> itkMultiplyImageFilterIUL2IUL2IUL2"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL2IUL2IUL2_cast(*args)

class itkMultiplyImageFilterIUL3IUL3IUL3(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass):
    """Proxy of C++ itkMultiplyImageFilterIUL3IUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUL3IUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUL3IUL3IUL3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUL3IUL3IUL3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUL3IUL3IUL3
        
        Create a new object of the class itkMultiplyImageFilterIUL3IUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUL3IUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUL3IUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUL3IUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUL3IUL3IUL3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_GetPointer,None,itkMultiplyImageFilterIUL3IUL3IUL3)
itkMultiplyImageFilterIUL3IUL3IUL3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_swigregister
itkMultiplyImageFilterIUL3IUL3IUL3_swigregister(itkMultiplyImageFilterIUL3IUL3IUL3)

def itkMultiplyImageFilterIUL3IUL3IUL3___New_orig__():
  """itkMultiplyImageFilterIUL3IUL3IUL3___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3___New_orig__()

def itkMultiplyImageFilterIUL3IUL3IUL3_cast(*args):
  """itkMultiplyImageFilterIUL3IUL3IUL3_cast(itkLightObject obj) -> itkMultiplyImageFilterIUL3IUL3IUL3"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUL3IUL3IUL3_cast(*args)

class itkMultiplyImageFilterIUS2IUS2IUS2(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass):
    """Proxy of C++ itkMultiplyImageFilterIUS2IUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUS2IUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUS2IUS2IUS2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUS2IUS2IUS2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUS2IUS2IUS2
        
        Create a new object of the class itkMultiplyImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUS2IUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUS2IUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUS2IUS2IUS2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_GetPointer,None,itkMultiplyImageFilterIUS2IUS2IUS2)
itkMultiplyImageFilterIUS2IUS2IUS2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_swigregister
itkMultiplyImageFilterIUS2IUS2IUS2_swigregister(itkMultiplyImageFilterIUS2IUS2IUS2)

def itkMultiplyImageFilterIUS2IUS2IUS2___New_orig__():
  """itkMultiplyImageFilterIUS2IUS2IUS2___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2___New_orig__()

def itkMultiplyImageFilterIUS2IUS2IUS2_cast(*args):
  """itkMultiplyImageFilterIUS2IUS2IUS2_cast(itkLightObject obj) -> itkMultiplyImageFilterIUS2IUS2IUS2"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_cast(*args)

class itkMultiplyImageFilterIUS3IUS3IUS3(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass):
    """Proxy of C++ itkMultiplyImageFilterIUS3IUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Input1Input2OutputMultiplyOperatorCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUS3IUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUS3IUS3IUS3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkMultiplyImageFilterIUS3IUS3IUS3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUS3IUS3IUS3
        
        Create a new object of the class itkMultiplyImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkMultiplyImageFilterIUS3IUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkMultiplyImageFilterIUS3IUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUS3IUS3IUS3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_GetPointer,None,itkMultiplyImageFilterIUS3IUS3IUS3)
itkMultiplyImageFilterIUS3IUS3IUS3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_swigregister
itkMultiplyImageFilterIUS3IUS3IUS3_swigregister(itkMultiplyImageFilterIUS3IUS3IUS3)

def itkMultiplyImageFilterIUS3IUS3IUS3___New_orig__():
  """itkMultiplyImageFilterIUS3IUS3IUS3___New_orig__()"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3___New_orig__()

def itkMultiplyImageFilterIUS3IUS3IUS3_cast(*args):
  """itkMultiplyImageFilterIUS3IUS3IUS3_cast(itkLightObject obj) -> itkMultiplyImageFilterIUS3IUS3IUS3"""
  return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_cast(*args)



