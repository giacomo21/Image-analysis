# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkShapeLabelMapFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkShapeLabelMapFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkShapeLabelMapFilterPython
            return _itkShapeLabelMapFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkShapeLabelMapFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkShapeLabelMapFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkShapeLabelMapFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkStatisticsLabelObjectPython
import itkAffineTransformPython
import itkTransformPython
import itkArray2DPython
import itkArrayPython
import itkMatrixOffsetTransformBasePython
import itkLabelObjectPython
import itkLabelObjectLinePython
import itkShapeLabelObjectPython
import itkHistogramPython
import itkSamplePython
import itkInPlaceLabelMapFilterPython
import itkLabelMapFilterPython
import itkLabelMapPython
import ITKLabelMapBasePython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkShapeLabelMapFilterLM3_New():
  return itkShapeLabelMapFilterLM3.New()

def itkShapeLabelMapFilterLM2_New():
  return itkShapeLabelMapFilterLM2.New()

class itkShapeLabelMapFilterLM2(itkInPlaceLabelMapFilterPython.itkInPlaceLabelMapFilterLM2):
    """Proxy of C++ itkShapeLabelMapFilterLM2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetComputeFeretDiameter(self, *args):
        """SetComputeFeretDiameter(self, bool _arg)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_SetComputeFeretDiameter(self, *args)

    def GetComputeFeretDiameter(self):
        """GetComputeFeretDiameter(self) -> bool"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_GetComputeFeretDiameter(self)

    def ComputeFeretDiameterOn(self):
        """ComputeFeretDiameterOn(self)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_ComputeFeretDiameterOn(self)

    def ComputeFeretDiameterOff(self):
        """ComputeFeretDiameterOff(self)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_ComputeFeretDiameterOff(self)

    def SetComputePerimeter(self, *args):
        """SetComputePerimeter(self, bool _arg)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_SetComputePerimeter(self, *args)

    def GetComputePerimeter(self):
        """GetComputePerimeter(self) -> bool"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_GetComputePerimeter(self)

    def ComputePerimeterOn(self):
        """ComputePerimeterOn(self)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_ComputePerimeterOn(self)

    def ComputePerimeterOff(self):
        """ComputePerimeterOff(self)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_ComputePerimeterOff(self)

    def SetLabelImage(self, *args):
        """SetLabelImage(self, itkImageUL2 input)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_SetLabelImage(self, *args)

    __swig_destroy__ = _itkShapeLabelMapFilterPython.delete_itkShapeLabelMapFilterLM2
    def cast(*args):
        """cast(itkLightObject obj) -> itkShapeLabelMapFilterLM2"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkShapeLabelMapFilterLM2"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkShapeLabelMapFilterLM2
        
        Create a new object of the class itkShapeLabelMapFilterLM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkShapeLabelMapFilterLM2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkShapeLabelMapFilterLM2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShapeLabelMapFilterLM2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShapeLabelMapFilterLM2.SetComputeFeretDiameter = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_SetComputeFeretDiameter,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2.GetComputeFeretDiameter = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_GetComputeFeretDiameter,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2.ComputeFeretDiameterOn = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_ComputeFeretDiameterOn,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2.ComputeFeretDiameterOff = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_ComputeFeretDiameterOff,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2.SetComputePerimeter = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_SetComputePerimeter,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2.GetComputePerimeter = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_GetComputePerimeter,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2.ComputePerimeterOn = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_ComputePerimeterOn,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2.ComputePerimeterOff = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_ComputePerimeterOff,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2.SetLabelImage = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_SetLabelImage,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2.GetPointer = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_GetPointer,None,itkShapeLabelMapFilterLM2)
itkShapeLabelMapFilterLM2_swigregister = _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_swigregister
itkShapeLabelMapFilterLM2_swigregister(itkShapeLabelMapFilterLM2)

def itkShapeLabelMapFilterLM2___New_orig__():
  """itkShapeLabelMapFilterLM2___New_orig__()"""
  return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2___New_orig__()

def itkShapeLabelMapFilterLM2_cast(*args):
  """itkShapeLabelMapFilterLM2_cast(itkLightObject obj) -> itkShapeLabelMapFilterLM2"""
  return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2_cast(*args)

class itkShapeLabelMapFilterLM3(itkInPlaceLabelMapFilterPython.itkInPlaceLabelMapFilterLM3):
    """Proxy of C++ itkShapeLabelMapFilterLM3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetComputeFeretDiameter(self, *args):
        """SetComputeFeretDiameter(self, bool _arg)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_SetComputeFeretDiameter(self, *args)

    def GetComputeFeretDiameter(self):
        """GetComputeFeretDiameter(self) -> bool"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_GetComputeFeretDiameter(self)

    def ComputeFeretDiameterOn(self):
        """ComputeFeretDiameterOn(self)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_ComputeFeretDiameterOn(self)

    def ComputeFeretDiameterOff(self):
        """ComputeFeretDiameterOff(self)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_ComputeFeretDiameterOff(self)

    def SetComputePerimeter(self, *args):
        """SetComputePerimeter(self, bool _arg)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_SetComputePerimeter(self, *args)

    def GetComputePerimeter(self):
        """GetComputePerimeter(self) -> bool"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_GetComputePerimeter(self)

    def ComputePerimeterOn(self):
        """ComputePerimeterOn(self)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_ComputePerimeterOn(self)

    def ComputePerimeterOff(self):
        """ComputePerimeterOff(self)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_ComputePerimeterOff(self)

    def SetLabelImage(self, *args):
        """SetLabelImage(self, itkImageUL3 input)"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_SetLabelImage(self, *args)

    __swig_destroy__ = _itkShapeLabelMapFilterPython.delete_itkShapeLabelMapFilterLM3
    def cast(*args):
        """cast(itkLightObject obj) -> itkShapeLabelMapFilterLM3"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkShapeLabelMapFilterLM3"""
        return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkShapeLabelMapFilterLM3
        
        Create a new object of the class itkShapeLabelMapFilterLM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkShapeLabelMapFilterLM3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkShapeLabelMapFilterLM3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkShapeLabelMapFilterLM3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkShapeLabelMapFilterLM3.SetComputeFeretDiameter = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_SetComputeFeretDiameter,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3.GetComputeFeretDiameter = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_GetComputeFeretDiameter,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3.ComputeFeretDiameterOn = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_ComputeFeretDiameterOn,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3.ComputeFeretDiameterOff = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_ComputeFeretDiameterOff,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3.SetComputePerimeter = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_SetComputePerimeter,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3.GetComputePerimeter = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_GetComputePerimeter,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3.ComputePerimeterOn = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_ComputePerimeterOn,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3.ComputePerimeterOff = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_ComputePerimeterOff,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3.SetLabelImage = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_SetLabelImage,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3.GetPointer = new_instancemethod(_itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_GetPointer,None,itkShapeLabelMapFilterLM3)
itkShapeLabelMapFilterLM3_swigregister = _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_swigregister
itkShapeLabelMapFilterLM3_swigregister(itkShapeLabelMapFilterLM3)

def itkShapeLabelMapFilterLM3___New_orig__():
  """itkShapeLabelMapFilterLM3___New_orig__()"""
  return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3___New_orig__()

def itkShapeLabelMapFilterLM3_cast(*args):
  """itkShapeLabelMapFilterLM3_cast(itkLightObject obj) -> itkShapeLabelMapFilterLM3"""
  return _itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3_cast(*args)



