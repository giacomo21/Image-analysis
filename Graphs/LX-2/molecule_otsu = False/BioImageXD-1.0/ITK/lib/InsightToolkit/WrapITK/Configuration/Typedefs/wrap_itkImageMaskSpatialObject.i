// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkImageMaskSpatialObjectChicken
#endif
#ifdef SWIGCSHARP
%module itkImageMaskSpatialObjectCsharp
#endif
#ifdef SWIGGUILE
%module itkImageMaskSpatialObjectGuile
#endif
#ifdef SWIGJAVA
%module itkImageMaskSpatialObjectJava
#endif
#ifdef SWIGLUA
%module itkImageMaskSpatialObjectLua
#endif
#ifdef SWIGMODULA3
%module itkImageMaskSpatialObjectModula3
#endif
#ifdef SWIGMZSCHEME
%module itkImageMaskSpatialObjectMzscheme
#endif
#ifdef SWIGOCAML
%module itkImageMaskSpatialObjectOcaml
#endif
#ifdef SWIGPERL
%module itkImageMaskSpatialObjectPerl
#endif
#ifdef SWIGPERL5
%module itkImageMaskSpatialObjectPerl5
#endif
#ifdef SWIGPHP
%module itkImageMaskSpatialObjectPhp
#endif
#ifdef SWIGPHP4
%module itkImageMaskSpatialObjectPhp4
#endif
#ifdef SWIGPHP5
%module itkImageMaskSpatialObjectPhp5
#endif
#ifdef SWIGPIKE
%module itkImageMaskSpatialObjectPike
#endif
#ifdef SWIGPYTHON
%module itkImageMaskSpatialObjectPython
#endif
#ifdef SWIGR
%module itkImageMaskSpatialObjectR
#endif
#ifdef SWIGRUBY
%module itkImageMaskSpatialObjectRuby
#endif
#ifdef SWIGSEXP
%module itkImageMaskSpatialObjectSexp
#endif
#ifdef SWIGTCL
%module itkImageMaskSpatialObjectTcl
#endif
#ifdef SWIGXML
%module itkImageMaskSpatialObjectXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Calculators.includes"
#include "SpatialObject.includes"
%}


%{
%}




%import wrap_itkImageSpatialObject.i
%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkPoint.i


%include itk.i
%include wrap_itkImageMaskSpatialObject_ext.i


 class itkImageMaskSpatialObject2 : public itkImageSpatialObject2UC {
   public:
     static itkImageMaskSpatialObject2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual bool IsInside(itkPointD2 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD2 const & point) const;
     itkImageRegion2 GetAxisAlignedBoundingBoxRegion() const;
   private:
   protected:
     itkImageMaskSpatialObject2(itkImageMaskSpatialObject2 const & arg0);
     void operator=(itkImageMaskSpatialObject2 const & arg0);
     itkImageMaskSpatialObject2();
     ~itkImageMaskSpatialObject2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMaskSpatialObject2_Pointer {
   public:
     itkImageMaskSpatialObject2_Pointer();
     itkImageMaskSpatialObject2_Pointer(itkImageMaskSpatialObject2_Pointer const & p);
     itkImageMaskSpatialObject2_Pointer(itkImageMaskSpatialObject2 * p);
     ~itkImageMaskSpatialObject2_Pointer();
     itkImageMaskSpatialObject2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMaskSpatialObject2 * GetPointer() const;
     bool operator<(itkImageMaskSpatialObject2_Pointer const & r) const;
     bool operator>(itkImageMaskSpatialObject2_Pointer const & r) const;
     bool operator<=(itkImageMaskSpatialObject2_Pointer const & r) const;
     bool operator>=(itkImageMaskSpatialObject2_Pointer const & r) const;
     itkImageMaskSpatialObject2_Pointer & operator=(itkImageMaskSpatialObject2_Pointer const & r);
     itkImageMaskSpatialObject2_Pointer & operator=(itkImageMaskSpatialObject2 * r);
     itkImageMaskSpatialObject2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkImageMaskSpatialObject3 : public itkImageSpatialObject3UC {
   public:
     static itkImageMaskSpatialObject3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual bool IsInside(itkPointD3 const & point, unsigned int depth, char * name) const;
     virtual bool IsInside(itkPointD3 const & point) const;
     itkImageRegion3 GetAxisAlignedBoundingBoxRegion() const;
   private:
   protected:
     itkImageMaskSpatialObject3(itkImageMaskSpatialObject3 const & arg0);
     void operator=(itkImageMaskSpatialObject3 const & arg0);
     itkImageMaskSpatialObject3();
     ~itkImageMaskSpatialObject3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkImageMaskSpatialObject3_Pointer {
   public:
     itkImageMaskSpatialObject3_Pointer();
     itkImageMaskSpatialObject3_Pointer(itkImageMaskSpatialObject3_Pointer const & p);
     itkImageMaskSpatialObject3_Pointer(itkImageMaskSpatialObject3 * p);
     ~itkImageMaskSpatialObject3_Pointer();
     itkImageMaskSpatialObject3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkImageMaskSpatialObject3 * GetPointer() const;
     bool operator<(itkImageMaskSpatialObject3_Pointer const & r) const;
     bool operator>(itkImageMaskSpatialObject3_Pointer const & r) const;
     bool operator<=(itkImageMaskSpatialObject3_Pointer const & r) const;
     bool operator>=(itkImageMaskSpatialObject3_Pointer const & r) const;
     itkImageMaskSpatialObject3_Pointer & operator=(itkImageMaskSpatialObject3_Pointer const & r);
     itkImageMaskSpatialObject3_Pointer & operator=(itkImageMaskSpatialObject3 * r);
     itkImageMaskSpatialObject3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


