# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkContourDirectedMeanDistanceImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkContourDirectedMeanDistanceImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkContourDirectedMeanDistanceImageFilterPython
            return _itkContourDirectedMeanDistanceImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkContourDirectedMeanDistanceImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkContourDirectedMeanDistanceImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkContourDirectedMeanDistanceImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkContourDirectedMeanDistanceImageFilterID3ID3_New():
  return itkContourDirectedMeanDistanceImageFilterID3ID3.New()

def itkContourDirectedMeanDistanceImageFilterID2ID2_New():
  return itkContourDirectedMeanDistanceImageFilterID2ID2.New()

def itkContourDirectedMeanDistanceImageFilterIF3IF3_New():
  return itkContourDirectedMeanDistanceImageFilterIF3IF3.New()

def itkContourDirectedMeanDistanceImageFilterIF2IF2_New():
  return itkContourDirectedMeanDistanceImageFilterIF2IF2.New()

def itkContourDirectedMeanDistanceImageFilterIUS3IUS3_New():
  return itkContourDirectedMeanDistanceImageFilterIUS3IUS3.New()

def itkContourDirectedMeanDistanceImageFilterIUS2IUS2_New():
  return itkContourDirectedMeanDistanceImageFilterIUS2IUS2.New()

def itkContourDirectedMeanDistanceImageFilterIUL3IUL3_New():
  return itkContourDirectedMeanDistanceImageFilterIUL3IUL3.New()

def itkContourDirectedMeanDistanceImageFilterIUL2IUL2_New():
  return itkContourDirectedMeanDistanceImageFilterIUL2IUL2.New()

def itkContourDirectedMeanDistanceImageFilterIUC3IUC3_New():
  return itkContourDirectedMeanDistanceImageFilterIUC3IUC3.New()

def itkContourDirectedMeanDistanceImageFilterIUC2IUC2_New():
  return itkContourDirectedMeanDistanceImageFilterIUC2IUC2.New()

class itkContourDirectedMeanDistanceImageFilterID2ID2(itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageD2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageD2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterID2ID2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterID2ID2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterID2ID2
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterID2ID2.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_SetInput1,None,itkContourDirectedMeanDistanceImageFilterID2ID2)
itkContourDirectedMeanDistanceImageFilterID2ID2.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_SetInput2,None,itkContourDirectedMeanDistanceImageFilterID2ID2)
itkContourDirectedMeanDistanceImageFilterID2ID2.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_GetInput1,None,itkContourDirectedMeanDistanceImageFilterID2ID2)
itkContourDirectedMeanDistanceImageFilterID2ID2.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_GetInput2,None,itkContourDirectedMeanDistanceImageFilterID2ID2)
itkContourDirectedMeanDistanceImageFilterID2ID2.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterID2ID2)
itkContourDirectedMeanDistanceImageFilterID2ID2.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_GetPointer,None,itkContourDirectedMeanDistanceImageFilterID2ID2)
itkContourDirectedMeanDistanceImageFilterID2ID2_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_swigregister
itkContourDirectedMeanDistanceImageFilterID2ID2_swigregister(itkContourDirectedMeanDistanceImageFilterID2ID2)

def itkContourDirectedMeanDistanceImageFilterID2ID2___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterID2ID2___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2___New_orig__()

def itkContourDirectedMeanDistanceImageFilterID2ID2_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterID2ID2_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterID2ID2"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID2ID2_cast(*args)

class itkContourDirectedMeanDistanceImageFilterID3ID3(itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageD3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageD3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageD3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageD3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterID3ID3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterID3ID3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterID3ID3
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterID3ID3.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_SetInput1,None,itkContourDirectedMeanDistanceImageFilterID3ID3)
itkContourDirectedMeanDistanceImageFilterID3ID3.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_SetInput2,None,itkContourDirectedMeanDistanceImageFilterID3ID3)
itkContourDirectedMeanDistanceImageFilterID3ID3.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_GetInput1,None,itkContourDirectedMeanDistanceImageFilterID3ID3)
itkContourDirectedMeanDistanceImageFilterID3ID3.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_GetInput2,None,itkContourDirectedMeanDistanceImageFilterID3ID3)
itkContourDirectedMeanDistanceImageFilterID3ID3.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterID3ID3)
itkContourDirectedMeanDistanceImageFilterID3ID3.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_GetPointer,None,itkContourDirectedMeanDistanceImageFilterID3ID3)
itkContourDirectedMeanDistanceImageFilterID3ID3_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_swigregister
itkContourDirectedMeanDistanceImageFilterID3ID3_swigregister(itkContourDirectedMeanDistanceImageFilterID3ID3)

def itkContourDirectedMeanDistanceImageFilterID3ID3___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterID3ID3___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3___New_orig__()

def itkContourDirectedMeanDistanceImageFilterID3ID3_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterID3ID3_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterID3ID3"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterID3ID3_cast(*args)

class itkContourDirectedMeanDistanceImageFilterIF2IF2(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIF2IF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterIF2IF2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIF2IF2
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIF2IF2.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetInput1,None,itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_SetInput2,None,itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetInput1,None,itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetInput2,None,itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_GetPointer,None,itkContourDirectedMeanDistanceImageFilterIF2IF2)
itkContourDirectedMeanDistanceImageFilterIF2IF2_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_swigregister
itkContourDirectedMeanDistanceImageFilterIF2IF2_swigregister(itkContourDirectedMeanDistanceImageFilterIF2IF2)

def itkContourDirectedMeanDistanceImageFilterIF2IF2___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterIF2IF2___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIF2IF2_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterIF2IF2_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIF2IF2"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF2IF2_cast(*args)

class itkContourDirectedMeanDistanceImageFilterIF3IF3(itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageF3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageF3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIF3IF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterIF3IF3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIF3IF3
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIF3IF3.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetInput1,None,itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_SetInput2,None,itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetInput1,None,itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetInput2,None,itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_GetPointer,None,itkContourDirectedMeanDistanceImageFilterIF3IF3)
itkContourDirectedMeanDistanceImageFilterIF3IF3_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_swigregister
itkContourDirectedMeanDistanceImageFilterIF3IF3_swigregister(itkContourDirectedMeanDistanceImageFilterIF3IF3)

def itkContourDirectedMeanDistanceImageFilterIF3IF3___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterIF3IF3___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIF3IF3_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterIF3IF3_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIF3IF3"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIF3IF3_cast(*args)

class itkContourDirectedMeanDistanceImageFilterIUC2IUC2(itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUC2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUC2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUC2IUC2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterIUC2IUC2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUC2IUC2
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUC2IUC2.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_SetInput1,None,itkContourDirectedMeanDistanceImageFilterIUC2IUC2)
itkContourDirectedMeanDistanceImageFilterIUC2IUC2.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_SetInput2,None,itkContourDirectedMeanDistanceImageFilterIUC2IUC2)
itkContourDirectedMeanDistanceImageFilterIUC2IUC2.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_GetInput1,None,itkContourDirectedMeanDistanceImageFilterIUC2IUC2)
itkContourDirectedMeanDistanceImageFilterIUC2IUC2.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_GetInput2,None,itkContourDirectedMeanDistanceImageFilterIUC2IUC2)
itkContourDirectedMeanDistanceImageFilterIUC2IUC2.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterIUC2IUC2)
itkContourDirectedMeanDistanceImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_GetPointer,None,itkContourDirectedMeanDistanceImageFilterIUC2IUC2)
itkContourDirectedMeanDistanceImageFilterIUC2IUC2_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_swigregister
itkContourDirectedMeanDistanceImageFilterIUC2IUC2_swigregister(itkContourDirectedMeanDistanceImageFilterIUC2IUC2)

def itkContourDirectedMeanDistanceImageFilterIUC2IUC2___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterIUC2IUC2___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUC2IUC2_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUC2IUC2"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC2IUC2_cast(*args)

class itkContourDirectedMeanDistanceImageFilterIUC3IUC3(itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUC3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUC3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUC3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUC3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUC3IUC3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterIUC3IUC3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUC3IUC3
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUC3IUC3.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_SetInput1,None,itkContourDirectedMeanDistanceImageFilterIUC3IUC3)
itkContourDirectedMeanDistanceImageFilterIUC3IUC3.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_SetInput2,None,itkContourDirectedMeanDistanceImageFilterIUC3IUC3)
itkContourDirectedMeanDistanceImageFilterIUC3IUC3.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_GetInput1,None,itkContourDirectedMeanDistanceImageFilterIUC3IUC3)
itkContourDirectedMeanDistanceImageFilterIUC3IUC3.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_GetInput2,None,itkContourDirectedMeanDistanceImageFilterIUC3IUC3)
itkContourDirectedMeanDistanceImageFilterIUC3IUC3.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterIUC3IUC3)
itkContourDirectedMeanDistanceImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_GetPointer,None,itkContourDirectedMeanDistanceImageFilterIUC3IUC3)
itkContourDirectedMeanDistanceImageFilterIUC3IUC3_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_swigregister
itkContourDirectedMeanDistanceImageFilterIUC3IUC3_swigregister(itkContourDirectedMeanDistanceImageFilterIUC3IUC3)

def itkContourDirectedMeanDistanceImageFilterIUC3IUC3___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterIUC3IUC3___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUC3IUC3_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUC3IUC3"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUC3IUC3_cast(*args)

class itkContourDirectedMeanDistanceImageFilterIUL2IUL2(itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUL2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUL2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUL2IUL2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterIUL2IUL2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUL2IUL2
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUL2IUL2.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_SetInput1,None,itkContourDirectedMeanDistanceImageFilterIUL2IUL2)
itkContourDirectedMeanDistanceImageFilterIUL2IUL2.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_SetInput2,None,itkContourDirectedMeanDistanceImageFilterIUL2IUL2)
itkContourDirectedMeanDistanceImageFilterIUL2IUL2.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_GetInput1,None,itkContourDirectedMeanDistanceImageFilterIUL2IUL2)
itkContourDirectedMeanDistanceImageFilterIUL2IUL2.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_GetInput2,None,itkContourDirectedMeanDistanceImageFilterIUL2IUL2)
itkContourDirectedMeanDistanceImageFilterIUL2IUL2.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterIUL2IUL2)
itkContourDirectedMeanDistanceImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_GetPointer,None,itkContourDirectedMeanDistanceImageFilterIUL2IUL2)
itkContourDirectedMeanDistanceImageFilterIUL2IUL2_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_swigregister
itkContourDirectedMeanDistanceImageFilterIUL2IUL2_swigregister(itkContourDirectedMeanDistanceImageFilterIUL2IUL2)

def itkContourDirectedMeanDistanceImageFilterIUL2IUL2___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterIUL2IUL2___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUL2IUL2_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUL2IUL2"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL2IUL2_cast(*args)

class itkContourDirectedMeanDistanceImageFilterIUL3IUL3(itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUL3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUL3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUL3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUL3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUL3IUL3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterIUL3IUL3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUL3IUL3
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUL3IUL3.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_SetInput1,None,itkContourDirectedMeanDistanceImageFilterIUL3IUL3)
itkContourDirectedMeanDistanceImageFilterIUL3IUL3.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_SetInput2,None,itkContourDirectedMeanDistanceImageFilterIUL3IUL3)
itkContourDirectedMeanDistanceImageFilterIUL3IUL3.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_GetInput1,None,itkContourDirectedMeanDistanceImageFilterIUL3IUL3)
itkContourDirectedMeanDistanceImageFilterIUL3IUL3.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_GetInput2,None,itkContourDirectedMeanDistanceImageFilterIUL3IUL3)
itkContourDirectedMeanDistanceImageFilterIUL3IUL3.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterIUL3IUL3)
itkContourDirectedMeanDistanceImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_GetPointer,None,itkContourDirectedMeanDistanceImageFilterIUL3IUL3)
itkContourDirectedMeanDistanceImageFilterIUL3IUL3_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_swigregister
itkContourDirectedMeanDistanceImageFilterIUL3IUL3_swigregister(itkContourDirectedMeanDistanceImageFilterIUL3IUL3)

def itkContourDirectedMeanDistanceImageFilterIUL3IUL3___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterIUL3IUL3___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUL3IUL3_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUL3IUL3"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUL3IUL3_cast(*args)

class itkContourDirectedMeanDistanceImageFilterIUS2IUS2(itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS2 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUS2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUS2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUS2IUS2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterIUS2IUS2"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUS2IUS2
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUS2IUS2.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_SetInput1,None,itkContourDirectedMeanDistanceImageFilterIUS2IUS2)
itkContourDirectedMeanDistanceImageFilterIUS2IUS2.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_SetInput2,None,itkContourDirectedMeanDistanceImageFilterIUS2IUS2)
itkContourDirectedMeanDistanceImageFilterIUS2IUS2.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_GetInput1,None,itkContourDirectedMeanDistanceImageFilterIUS2IUS2)
itkContourDirectedMeanDistanceImageFilterIUS2IUS2.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_GetInput2,None,itkContourDirectedMeanDistanceImageFilterIUS2IUS2)
itkContourDirectedMeanDistanceImageFilterIUS2IUS2.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterIUS2IUS2)
itkContourDirectedMeanDistanceImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_GetPointer,None,itkContourDirectedMeanDistanceImageFilterIUS2IUS2)
itkContourDirectedMeanDistanceImageFilterIUS2IUS2_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_swigregister
itkContourDirectedMeanDistanceImageFilterIUS2IUS2_swigregister(itkContourDirectedMeanDistanceImageFilterIUS2IUS2)

def itkContourDirectedMeanDistanceImageFilterIUS2IUS2___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterIUS2IUS2___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUS2IUS2_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUS2IUS2"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS2IUS2_cast(*args)

class itkContourDirectedMeanDistanceImageFilterIUS3IUS3(itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    """Proxy of C++ itkContourDirectedMeanDistanceImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_ImageDimension
    InputHasNumericTraitsCheck = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetInput1(self, *args):
        """SetInput1(self, itkImageUS3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_SetInput1(self, *args)

    def SetInput2(self, *args):
        """SetInput2(self, itkImageUS3 image)"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_SetInput2(self, *args)

    def GetInput1(self):
        """GetInput1(self) -> itkImageUS3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_GetInput1(self)

    def GetInput2(self):
        """GetInput2(self) -> itkImageUS3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_GetInput2(self)

    def GetContourDirectedMeanDistance(self):
        """GetContourDirectedMeanDistance(self) -> double"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_GetContourDirectedMeanDistance(self)

    __swig_destroy__ = _itkContourDirectedMeanDistanceImageFilterPython.delete_itkContourDirectedMeanDistanceImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUS3IUS3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkContourDirectedMeanDistanceImageFilterIUS3IUS3"""
        return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkContourDirectedMeanDistanceImageFilterIUS3IUS3
        
        Create a new object of the class itkContourDirectedMeanDistanceImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkContourDirectedMeanDistanceImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkContourDirectedMeanDistanceImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkContourDirectedMeanDistanceImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkContourDirectedMeanDistanceImageFilterIUS3IUS3.SetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_SetInput1,None,itkContourDirectedMeanDistanceImageFilterIUS3IUS3)
itkContourDirectedMeanDistanceImageFilterIUS3IUS3.SetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_SetInput2,None,itkContourDirectedMeanDistanceImageFilterIUS3IUS3)
itkContourDirectedMeanDistanceImageFilterIUS3IUS3.GetInput1 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_GetInput1,None,itkContourDirectedMeanDistanceImageFilterIUS3IUS3)
itkContourDirectedMeanDistanceImageFilterIUS3IUS3.GetInput2 = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_GetInput2,None,itkContourDirectedMeanDistanceImageFilterIUS3IUS3)
itkContourDirectedMeanDistanceImageFilterIUS3IUS3.GetContourDirectedMeanDistance = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_GetContourDirectedMeanDistance,None,itkContourDirectedMeanDistanceImageFilterIUS3IUS3)
itkContourDirectedMeanDistanceImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_GetPointer,None,itkContourDirectedMeanDistanceImageFilterIUS3IUS3)
itkContourDirectedMeanDistanceImageFilterIUS3IUS3_swigregister = _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_swigregister
itkContourDirectedMeanDistanceImageFilterIUS3IUS3_swigregister(itkContourDirectedMeanDistanceImageFilterIUS3IUS3)

def itkContourDirectedMeanDistanceImageFilterIUS3IUS3___New_orig__():
  """itkContourDirectedMeanDistanceImageFilterIUS3IUS3___New_orig__()"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3___New_orig__()

def itkContourDirectedMeanDistanceImageFilterIUS3IUS3_cast(*args):
  """itkContourDirectedMeanDistanceImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkContourDirectedMeanDistanceImageFilterIUS3IUS3"""
  return _itkContourDirectedMeanDistanceImageFilterPython.itkContourDirectedMeanDistanceImageFilterIUS3IUS3_cast(*args)



