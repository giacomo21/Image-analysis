# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkHessianRecursiveGaussianImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHessianRecursiveGaussianImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkHessianRecursiveGaussianImageFilterPython
            return _itkHessianRecursiveGaussianImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkHessianRecursiveGaussianImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkHessianRecursiveGaussianImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHessianRecursiveGaussianImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
def itkHessianRecursiveGaussianImageFilterID3_New():
  return itkHessianRecursiveGaussianImageFilterID3.New()

def itkHessianRecursiveGaussianImageFilterID2_New():
  return itkHessianRecursiveGaussianImageFilterID2.New()

def itkHessianRecursiveGaussianImageFilterIF3_New():
  return itkHessianRecursiveGaussianImageFilterIF3.New()

def itkHessianRecursiveGaussianImageFilterIF2_New():
  return itkHessianRecursiveGaussianImageFilterIF2.New()

def itkHessianRecursiveGaussianImageFilterIUS3_New():
  return itkHessianRecursiveGaussianImageFilterIUS3.New()

def itkHessianRecursiveGaussianImageFilterIUS2_New():
  return itkHessianRecursiveGaussianImageFilterIUS2.New()

def itkHessianRecursiveGaussianImageFilterIUL3_New():
  return itkHessianRecursiveGaussianImageFilterIUL3.New()

def itkHessianRecursiveGaussianImageFilterIUL2_New():
  return itkHessianRecursiveGaussianImageFilterIUL2.New()

def itkHessianRecursiveGaussianImageFilterIUC3_New():
  return itkHessianRecursiveGaussianImageFilterIUC3.New()

def itkHessianRecursiveGaussianImageFilterIUC2_New():
  return itkHessianRecursiveGaussianImageFilterIUC2.New()

class itkHessianRecursiveGaussianImageFilterID2(itkImageToImageFilterBPython.itkImageToImageFilterID2ISSRTD22):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterID2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterID2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterID2
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterID2.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_SetSigma,None,itkHessianRecursiveGaussianImageFilterID2)
itkHessianRecursiveGaussianImageFilterID2.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterID2)
itkHessianRecursiveGaussianImageFilterID2.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterID2)
itkHessianRecursiveGaussianImageFilterID2.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterID2)
itkHessianRecursiveGaussianImageFilterID2.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_GetPointer,None,itkHessianRecursiveGaussianImageFilterID2)
itkHessianRecursiveGaussianImageFilterID2_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_swigregister
itkHessianRecursiveGaussianImageFilterID2_swigregister(itkHessianRecursiveGaussianImageFilterID2)

def itkHessianRecursiveGaussianImageFilterID2___New_orig__():
  """itkHessianRecursiveGaussianImageFilterID2___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2___New_orig__()

def itkHessianRecursiveGaussianImageFilterID2_cast(*args):
  """itkHessianRecursiveGaussianImageFilterID2_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterID2"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID2_cast(*args)

class itkHessianRecursiveGaussianImageFilterID3(itkImageToImageFilterBPython.itkImageToImageFilterID3ISSRTD33):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterID3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterID3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterID3
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterID3.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_SetSigma,None,itkHessianRecursiveGaussianImageFilterID3)
itkHessianRecursiveGaussianImageFilterID3.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterID3)
itkHessianRecursiveGaussianImageFilterID3.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterID3)
itkHessianRecursiveGaussianImageFilterID3.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterID3)
itkHessianRecursiveGaussianImageFilterID3.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_GetPointer,None,itkHessianRecursiveGaussianImageFilterID3)
itkHessianRecursiveGaussianImageFilterID3_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_swigregister
itkHessianRecursiveGaussianImageFilterID3_swigregister(itkHessianRecursiveGaussianImageFilterID3)

def itkHessianRecursiveGaussianImageFilterID3___New_orig__():
  """itkHessianRecursiveGaussianImageFilterID3___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3___New_orig__()

def itkHessianRecursiveGaussianImageFilterID3_cast(*args):
  """itkHessianRecursiveGaussianImageFilterID3_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterID3"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterID3_cast(*args)

class itkHessianRecursiveGaussianImageFilterIF2(itkImageToImageFilterBPython.itkImageToImageFilterIF2ISSRTD22):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIF2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterIF2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIF2
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterIF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIF2.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_SetSigma,None,itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_GetPointer,None,itkHessianRecursiveGaussianImageFilterIF2)
itkHessianRecursiveGaussianImageFilterIF2_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_swigregister
itkHessianRecursiveGaussianImageFilterIF2_swigregister(itkHessianRecursiveGaussianImageFilterIF2)

def itkHessianRecursiveGaussianImageFilterIF2___New_orig__():
  """itkHessianRecursiveGaussianImageFilterIF2___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2___New_orig__()

def itkHessianRecursiveGaussianImageFilterIF2_cast(*args):
  """itkHessianRecursiveGaussianImageFilterIF2_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIF2"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF2_cast(*args)

class itkHessianRecursiveGaussianImageFilterIF3(itkImageToImageFilterBPython.itkImageToImageFilterIF3ISSRTD33):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIF3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterIF3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIF3
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterIF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIF3.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_SetSigma,None,itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_GetPointer,None,itkHessianRecursiveGaussianImageFilterIF3)
itkHessianRecursiveGaussianImageFilterIF3_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_swigregister
itkHessianRecursiveGaussianImageFilterIF3_swigregister(itkHessianRecursiveGaussianImageFilterIF3)

def itkHessianRecursiveGaussianImageFilterIF3___New_orig__():
  """itkHessianRecursiveGaussianImageFilterIF3___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3___New_orig__()

def itkHessianRecursiveGaussianImageFilterIF3_cast(*args):
  """itkHessianRecursiveGaussianImageFilterIF3_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIF3"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIF3_cast(*args)

class itkHessianRecursiveGaussianImageFilterIUC2(itkImageToImageFilterBPython.itkImageToImageFilterIUC2ISSRTD22):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUC2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterIUC2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUC2
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterIUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUC2.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_SetSigma,None,itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_GetPointer,None,itkHessianRecursiveGaussianImageFilterIUC2)
itkHessianRecursiveGaussianImageFilterIUC2_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_swigregister
itkHessianRecursiveGaussianImageFilterIUC2_swigregister(itkHessianRecursiveGaussianImageFilterIUC2)

def itkHessianRecursiveGaussianImageFilterIUC2___New_orig__():
  """itkHessianRecursiveGaussianImageFilterIUC2___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUC2_cast(*args):
  """itkHessianRecursiveGaussianImageFilterIUC2_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUC2"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC2_cast(*args)

class itkHessianRecursiveGaussianImageFilterIUC3(itkImageToImageFilterBPython.itkImageToImageFilterIUC3ISSRTD33):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUC3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterIUC3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUC3
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterIUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUC3.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_SetSigma,None,itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_GetPointer,None,itkHessianRecursiveGaussianImageFilterIUC3)
itkHessianRecursiveGaussianImageFilterIUC3_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_swigregister
itkHessianRecursiveGaussianImageFilterIUC3_swigregister(itkHessianRecursiveGaussianImageFilterIUC3)

def itkHessianRecursiveGaussianImageFilterIUC3___New_orig__():
  """itkHessianRecursiveGaussianImageFilterIUC3___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUC3_cast(*args):
  """itkHessianRecursiveGaussianImageFilterIUC3_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUC3"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUC3_cast(*args)

class itkHessianRecursiveGaussianImageFilterIUL2(itkImageToImageFilterBPython.itkImageToImageFilterIUL2ISSRTD22):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUL2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterIUL2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUL2
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterIUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterIUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUL2.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_SetSigma,None,itkHessianRecursiveGaussianImageFilterIUL2)
itkHessianRecursiveGaussianImageFilterIUL2.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUL2)
itkHessianRecursiveGaussianImageFilterIUL2.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUL2)
itkHessianRecursiveGaussianImageFilterIUL2.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterIUL2)
itkHessianRecursiveGaussianImageFilterIUL2.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_GetPointer,None,itkHessianRecursiveGaussianImageFilterIUL2)
itkHessianRecursiveGaussianImageFilterIUL2_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_swigregister
itkHessianRecursiveGaussianImageFilterIUL2_swigregister(itkHessianRecursiveGaussianImageFilterIUL2)

def itkHessianRecursiveGaussianImageFilterIUL2___New_orig__():
  """itkHessianRecursiveGaussianImageFilterIUL2___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUL2_cast(*args):
  """itkHessianRecursiveGaussianImageFilterIUL2_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUL2"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL2_cast(*args)

class itkHessianRecursiveGaussianImageFilterIUL3(itkImageToImageFilterBPython.itkImageToImageFilterIUL3ISSRTD33):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUL3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterIUL3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUL3
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterIUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterIUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUL3.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_SetSigma,None,itkHessianRecursiveGaussianImageFilterIUL3)
itkHessianRecursiveGaussianImageFilterIUL3.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUL3)
itkHessianRecursiveGaussianImageFilterIUL3.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUL3)
itkHessianRecursiveGaussianImageFilterIUL3.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterIUL3)
itkHessianRecursiveGaussianImageFilterIUL3.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_GetPointer,None,itkHessianRecursiveGaussianImageFilterIUL3)
itkHessianRecursiveGaussianImageFilterIUL3_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_swigregister
itkHessianRecursiveGaussianImageFilterIUL3_swigregister(itkHessianRecursiveGaussianImageFilterIUL3)

def itkHessianRecursiveGaussianImageFilterIUL3___New_orig__():
  """itkHessianRecursiveGaussianImageFilterIUL3___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUL3_cast(*args):
  """itkHessianRecursiveGaussianImageFilterIUL3_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUL3"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUL3_cast(*args)

class itkHessianRecursiveGaussianImageFilterIUS2(itkImageToImageFilterBPython.itkImageToImageFilterIUS2ISSRTD22):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUS2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterIUS2"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUS2
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterIUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUS2.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_SetSigma,None,itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_GetPointer,None,itkHessianRecursiveGaussianImageFilterIUS2)
itkHessianRecursiveGaussianImageFilterIUS2_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_swigregister
itkHessianRecursiveGaussianImageFilterIUS2_swigregister(itkHessianRecursiveGaussianImageFilterIUS2)

def itkHessianRecursiveGaussianImageFilterIUS2___New_orig__():
  """itkHessianRecursiveGaussianImageFilterIUS2___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUS2_cast(*args):
  """itkHessianRecursiveGaussianImageFilterIUS2_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUS2"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS2_cast(*args)

class itkHessianRecursiveGaussianImageFilterIUS3(itkImageToImageFilterBPython.itkImageToImageFilterIUS3ISSRTD33):
    """Proxy of C++ itkHessianRecursiveGaussianImageFilterIUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_ImageDimension
    NumberOfSmoothingFilters = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_NumberOfSmoothingFilters
    InputHasNumericTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_InputHasNumericTraitsCheck
    OutputHasPixelTraitsCheck = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_OutputHasPixelTraitsCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetSigma(self, *args):
        """SetSigma(self, double sigma)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_SetSigma(self, *args)

    def SetNormalizeAcrossScale(self, *args):
        """SetNormalizeAcrossScale(self, bool normalizeInScaleSpace)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_SetNormalizeAcrossScale(self, *args)

    def GetNormalizeAcrossScale(self):
        """GetNormalizeAcrossScale(self) -> bool"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        """GenerateInputRequestedRegion(self)"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GenerateInputRequestedRegion(self)

    __swig_destroy__ = _itkHessianRecursiveGaussianImageFilterPython.delete_itkHessianRecursiveGaussianImageFilterIUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUS3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkHessianRecursiveGaussianImageFilterIUS3"""
        return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkHessianRecursiveGaussianImageFilterIUS3
        
        Create a new object of the class itkHessianRecursiveGaussianImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkHessianRecursiveGaussianImageFilterIUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkHessianRecursiveGaussianImageFilterIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHessianRecursiveGaussianImageFilterIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHessianRecursiveGaussianImageFilterIUS3.SetSigma = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_SetSigma,None,itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3.SetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_SetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3.GetNormalizeAcrossScale = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GetNormalizeAcrossScale,None,itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3.GenerateInputRequestedRegion = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GenerateInputRequestedRegion,None,itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3.GetPointer = new_instancemethod(_itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_GetPointer,None,itkHessianRecursiveGaussianImageFilterIUS3)
itkHessianRecursiveGaussianImageFilterIUS3_swigregister = _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_swigregister
itkHessianRecursiveGaussianImageFilterIUS3_swigregister(itkHessianRecursiveGaussianImageFilterIUS3)

def itkHessianRecursiveGaussianImageFilterIUS3___New_orig__():
  """itkHessianRecursiveGaussianImageFilterIUS3___New_orig__()"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3___New_orig__()

def itkHessianRecursiveGaussianImageFilterIUS3_cast(*args):
  """itkHessianRecursiveGaussianImageFilterIUS3_cast(itkLightObject obj) -> itkHessianRecursiveGaussianImageFilterIUS3"""
  return _itkHessianRecursiveGaussianImageFilterPython.itkHessianRecursiveGaussianImageFilterIUS3_cast(*args)



