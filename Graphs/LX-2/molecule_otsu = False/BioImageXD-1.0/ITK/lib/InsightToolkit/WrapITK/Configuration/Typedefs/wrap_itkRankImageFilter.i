// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkRankImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkRankImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkRankImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkRankImageFilterJava
#endif
#ifdef SWIGLUA
%module itkRankImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkRankImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkRankImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkRankImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkRankImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkRankImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkRankImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkRankImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkRankImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkRankImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkRankImageFilterPython
#endif
#ifdef SWIGR
%module itkRankImageFilterR
#endif
#ifdef SWIGRUBY
%module itkRankImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkRankImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkRankImageFilterTcl
#endif
#ifdef SWIGXML
%module itkRankImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKRegions.i
%import wrap_itkOffset.i
%import wrap_itkIndex.i
%import wrap_itkImage.i
%import wrap_itkMovingHistogramImageFilterBase.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkRankImageFilter_ext.i


 class itkRankImageFilterID2ID2SE2_Pointer {
   public:
     itkRankImageFilterID2ID2SE2_Pointer();
     itkRankImageFilterID2ID2SE2_Pointer(itkRankImageFilterID2ID2SE2_Pointer const & p);
     itkRankImageFilterID2ID2SE2_Pointer(itkRankImageFilterID2ID2SE2 * p);
     ~itkRankImageFilterID2ID2SE2_Pointer();
     itkRankImageFilterID2ID2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterID2ID2SE2 * GetPointer() const;
     bool operator<(itkRankImageFilterID2ID2SE2_Pointer const & r) const;
     bool operator>(itkRankImageFilterID2ID2SE2_Pointer const & r) const;
     bool operator<=(itkRankImageFilterID2ID2SE2_Pointer const & r) const;
     bool operator>=(itkRankImageFilterID2ID2SE2_Pointer const & r) const;
     itkRankImageFilterID2ID2SE2_Pointer & operator=(itkRankImageFilterID2ID2SE2_Pointer const & r);
     itkRankImageFilterID2ID2SE2_Pointer & operator=(itkRankImageFilterID2ID2SE2 * r);
     itkRankImageFilterID2ID2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterID2ID2SE2_Superclass : public itkMovingHistogramImageFilterBaseID2ID2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterID2ID2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterID2ID2SE2_Superclass(itkRankImageFilterID2ID2SE2_Superclass const & arg0);
     void operator=(itkRankImageFilterID2ID2SE2_Superclass const & arg0);
   protected:
     itkRankImageFilterID2ID2SE2_Superclass();
     ~itkRankImageFilterID2ID2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< double > * NewHistogram();
     void PushHistogram(itk::RankHistogram< double > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageD2 const * inputImage, itkIndex2 const currentIdx);
     void PrintHistogram(itk::RankHistogram< double > const & H);
 };


 class itkRankImageFilterID2ID2SE2_Superclass_Pointer {
   public:
     itkRankImageFilterID2ID2SE2_Superclass_Pointer();
     itkRankImageFilterID2ID2SE2_Superclass_Pointer(itkRankImageFilterID2ID2SE2_Superclass_Pointer const & p);
     itkRankImageFilterID2ID2SE2_Superclass_Pointer(itkRankImageFilterID2ID2SE2_Superclass * p);
     ~itkRankImageFilterID2ID2SE2_Superclass_Pointer();
     itkRankImageFilterID2ID2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterID2ID2SE2_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterID2ID2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterID2ID2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterID2ID2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterID2ID2SE2_Superclass_Pointer const & r) const;
     itkRankImageFilterID2ID2SE2_Superclass_Pointer & operator=(itkRankImageFilterID2ID2SE2_Superclass_Pointer const & r);
     itkRankImageFilterID2ID2SE2_Superclass_Pointer & operator=(itkRankImageFilterID2ID2SE2_Superclass * r);
     itkRankImageFilterID2ID2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterID3ID3SE3_Pointer {
   public:
     itkRankImageFilterID3ID3SE3_Pointer();
     itkRankImageFilterID3ID3SE3_Pointer(itkRankImageFilterID3ID3SE3_Pointer const & p);
     itkRankImageFilterID3ID3SE3_Pointer(itkRankImageFilterID3ID3SE3 * p);
     ~itkRankImageFilterID3ID3SE3_Pointer();
     itkRankImageFilterID3ID3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterID3ID3SE3 * GetPointer() const;
     bool operator<(itkRankImageFilterID3ID3SE3_Pointer const & r) const;
     bool operator>(itkRankImageFilterID3ID3SE3_Pointer const & r) const;
     bool operator<=(itkRankImageFilterID3ID3SE3_Pointer const & r) const;
     bool operator>=(itkRankImageFilterID3ID3SE3_Pointer const & r) const;
     itkRankImageFilterID3ID3SE3_Pointer & operator=(itkRankImageFilterID3ID3SE3_Pointer const & r);
     itkRankImageFilterID3ID3SE3_Pointer & operator=(itkRankImageFilterID3ID3SE3 * r);
     itkRankImageFilterID3ID3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterID3ID3SE3_Superclass : public itkMovingHistogramImageFilterBaseID3ID3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterID3ID3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterID3ID3SE3_Superclass(itkRankImageFilterID3ID3SE3_Superclass const & arg0);
     void operator=(itkRankImageFilterID3ID3SE3_Superclass const & arg0);
   protected:
     itkRankImageFilterID3ID3SE3_Superclass();
     ~itkRankImageFilterID3ID3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< double > * NewHistogram();
     void PushHistogram(itk::RankHistogram< double > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageD3 const * inputImage, itkIndex3 const currentIdx);
     void PrintHistogram(itk::RankHistogram< double > const & H);
 };


 class itkRankImageFilterID3ID3SE3_Superclass_Pointer {
   public:
     itkRankImageFilterID3ID3SE3_Superclass_Pointer();
     itkRankImageFilterID3ID3SE3_Superclass_Pointer(itkRankImageFilterID3ID3SE3_Superclass_Pointer const & p);
     itkRankImageFilterID3ID3SE3_Superclass_Pointer(itkRankImageFilterID3ID3SE3_Superclass * p);
     ~itkRankImageFilterID3ID3SE3_Superclass_Pointer();
     itkRankImageFilterID3ID3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterID3ID3SE3_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterID3ID3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterID3ID3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterID3ID3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterID3ID3SE3_Superclass_Pointer const & r) const;
     itkRankImageFilterID3ID3SE3_Superclass_Pointer & operator=(itkRankImageFilterID3ID3SE3_Superclass_Pointer const & r);
     itkRankImageFilterID3ID3SE3_Superclass_Pointer & operator=(itkRankImageFilterID3ID3SE3_Superclass * r);
     itkRankImageFilterID3ID3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIF2IF2SE2_Pointer {
   public:
     itkRankImageFilterIF2IF2SE2_Pointer();
     itkRankImageFilterIF2IF2SE2_Pointer(itkRankImageFilterIF2IF2SE2_Pointer const & p);
     itkRankImageFilterIF2IF2SE2_Pointer(itkRankImageFilterIF2IF2SE2 * p);
     ~itkRankImageFilterIF2IF2SE2_Pointer();
     itkRankImageFilterIF2IF2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIF2IF2SE2 * GetPointer() const;
     bool operator<(itkRankImageFilterIF2IF2SE2_Pointer const & r) const;
     bool operator>(itkRankImageFilterIF2IF2SE2_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIF2IF2SE2_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIF2IF2SE2_Pointer const & r) const;
     itkRankImageFilterIF2IF2SE2_Pointer & operator=(itkRankImageFilterIF2IF2SE2_Pointer const & r);
     itkRankImageFilterIF2IF2SE2_Pointer & operator=(itkRankImageFilterIF2IF2SE2 * r);
     itkRankImageFilterIF2IF2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIF2IF2SE2_Superclass : public itkMovingHistogramImageFilterBaseIF2IF2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterIF2IF2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterIF2IF2SE2_Superclass(itkRankImageFilterIF2IF2SE2_Superclass const & arg0);
     void operator=(itkRankImageFilterIF2IF2SE2_Superclass const & arg0);
   protected:
     itkRankImageFilterIF2IF2SE2_Superclass();
     ~itkRankImageFilterIF2IF2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< float > * NewHistogram();
     void PushHistogram(itk::RankHistogram< float > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageF2 const * inputImage, itkIndex2 const currentIdx);
     void PrintHistogram(itk::RankHistogram< float > const & H);
 };


 class itkRankImageFilterIF2IF2SE2_Superclass_Pointer {
   public:
     itkRankImageFilterIF2IF2SE2_Superclass_Pointer();
     itkRankImageFilterIF2IF2SE2_Superclass_Pointer(itkRankImageFilterIF2IF2SE2_Superclass_Pointer const & p);
     itkRankImageFilterIF2IF2SE2_Superclass_Pointer(itkRankImageFilterIF2IF2SE2_Superclass * p);
     ~itkRankImageFilterIF2IF2SE2_Superclass_Pointer();
     itkRankImageFilterIF2IF2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIF2IF2SE2_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterIF2IF2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterIF2IF2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIF2IF2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIF2IF2SE2_Superclass_Pointer const & r) const;
     itkRankImageFilterIF2IF2SE2_Superclass_Pointer & operator=(itkRankImageFilterIF2IF2SE2_Superclass_Pointer const & r);
     itkRankImageFilterIF2IF2SE2_Superclass_Pointer & operator=(itkRankImageFilterIF2IF2SE2_Superclass * r);
     itkRankImageFilterIF2IF2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIF3IF3SE3_Pointer {
   public:
     itkRankImageFilterIF3IF3SE3_Pointer();
     itkRankImageFilterIF3IF3SE3_Pointer(itkRankImageFilterIF3IF3SE3_Pointer const & p);
     itkRankImageFilterIF3IF3SE3_Pointer(itkRankImageFilterIF3IF3SE3 * p);
     ~itkRankImageFilterIF3IF3SE3_Pointer();
     itkRankImageFilterIF3IF3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIF3IF3SE3 * GetPointer() const;
     bool operator<(itkRankImageFilterIF3IF3SE3_Pointer const & r) const;
     bool operator>(itkRankImageFilterIF3IF3SE3_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIF3IF3SE3_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIF3IF3SE3_Pointer const & r) const;
     itkRankImageFilterIF3IF3SE3_Pointer & operator=(itkRankImageFilterIF3IF3SE3_Pointer const & r);
     itkRankImageFilterIF3IF3SE3_Pointer & operator=(itkRankImageFilterIF3IF3SE3 * r);
     itkRankImageFilterIF3IF3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIF3IF3SE3_Superclass : public itkMovingHistogramImageFilterBaseIF3IF3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterIF3IF3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterIF3IF3SE3_Superclass(itkRankImageFilterIF3IF3SE3_Superclass const & arg0);
     void operator=(itkRankImageFilterIF3IF3SE3_Superclass const & arg0);
   protected:
     itkRankImageFilterIF3IF3SE3_Superclass();
     ~itkRankImageFilterIF3IF3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< float > * NewHistogram();
     void PushHistogram(itk::RankHistogram< float > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageF3 const * inputImage, itkIndex3 const currentIdx);
     void PrintHistogram(itk::RankHistogram< float > const & H);
 };


 class itkRankImageFilterIF3IF3SE3_Superclass_Pointer {
   public:
     itkRankImageFilterIF3IF3SE3_Superclass_Pointer();
     itkRankImageFilterIF3IF3SE3_Superclass_Pointer(itkRankImageFilterIF3IF3SE3_Superclass_Pointer const & p);
     itkRankImageFilterIF3IF3SE3_Superclass_Pointer(itkRankImageFilterIF3IF3SE3_Superclass * p);
     ~itkRankImageFilterIF3IF3SE3_Superclass_Pointer();
     itkRankImageFilterIF3IF3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIF3IF3SE3_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterIF3IF3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterIF3IF3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIF3IF3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIF3IF3SE3_Superclass_Pointer const & r) const;
     itkRankImageFilterIF3IF3SE3_Superclass_Pointer & operator=(itkRankImageFilterIF3IF3SE3_Superclass_Pointer const & r);
     itkRankImageFilterIF3IF3SE3_Superclass_Pointer & operator=(itkRankImageFilterIF3IF3SE3_Superclass * r);
     itkRankImageFilterIF3IF3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUC2IUC2SE2_Pointer {
   public:
     itkRankImageFilterIUC2IUC2SE2_Pointer();
     itkRankImageFilterIUC2IUC2SE2_Pointer(itkRankImageFilterIUC2IUC2SE2_Pointer const & p);
     itkRankImageFilterIUC2IUC2SE2_Pointer(itkRankImageFilterIUC2IUC2SE2 * p);
     ~itkRankImageFilterIUC2IUC2SE2_Pointer();
     itkRankImageFilterIUC2IUC2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUC2IUC2SE2 * GetPointer() const;
     bool operator<(itkRankImageFilterIUC2IUC2SE2_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUC2IUC2SE2_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUC2IUC2SE2_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUC2IUC2SE2_Pointer const & r) const;
     itkRankImageFilterIUC2IUC2SE2_Pointer & operator=(itkRankImageFilterIUC2IUC2SE2_Pointer const & r);
     itkRankImageFilterIUC2IUC2SE2_Pointer & operator=(itkRankImageFilterIUC2IUC2SE2 * r);
     itkRankImageFilterIUC2IUC2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUC2IUC2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUC2IUC2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterIUC2IUC2SE2_Superclass(itkRankImageFilterIUC2IUC2SE2_Superclass const & arg0);
     void operator=(itkRankImageFilterIUC2IUC2SE2_Superclass const & arg0);
   protected:
     itkRankImageFilterIUC2IUC2SE2_Superclass();
     ~itkRankImageFilterIUC2IUC2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< unsigned char > * NewHistogram();
     void PushHistogram(itk::RankHistogram< unsigned char > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUC2 const * inputImage, itkIndex2 const currentIdx);
     void PrintHistogram(itk::RankHistogram< unsigned char > const & H);
 };


 class itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer {
   public:
     itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer();
     itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer(itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer const & p);
     itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer(itkRankImageFilterIUC2IUC2SE2_Superclass * p);
     ~itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer();
     itkRankImageFilterIUC2IUC2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUC2IUC2SE2_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer const & r) const;
     itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer & operator=(itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer const & r);
     itkRankImageFilterIUC2IUC2SE2_Superclass_Pointer & operator=(itkRankImageFilterIUC2IUC2SE2_Superclass * r);
     itkRankImageFilterIUC2IUC2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUC3IUC3SE3_Pointer {
   public:
     itkRankImageFilterIUC3IUC3SE3_Pointer();
     itkRankImageFilterIUC3IUC3SE3_Pointer(itkRankImageFilterIUC3IUC3SE3_Pointer const & p);
     itkRankImageFilterIUC3IUC3SE3_Pointer(itkRankImageFilterIUC3IUC3SE3 * p);
     ~itkRankImageFilterIUC3IUC3SE3_Pointer();
     itkRankImageFilterIUC3IUC3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUC3IUC3SE3 * GetPointer() const;
     bool operator<(itkRankImageFilterIUC3IUC3SE3_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUC3IUC3SE3_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUC3IUC3SE3_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUC3IUC3SE3_Pointer const & r) const;
     itkRankImageFilterIUC3IUC3SE3_Pointer & operator=(itkRankImageFilterIUC3IUC3SE3_Pointer const & r);
     itkRankImageFilterIUC3IUC3SE3_Pointer & operator=(itkRankImageFilterIUC3IUC3SE3 * r);
     itkRankImageFilterIUC3IUC3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUC3IUC3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUC3IUC3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterIUC3IUC3SE3_Superclass(itkRankImageFilterIUC3IUC3SE3_Superclass const & arg0);
     void operator=(itkRankImageFilterIUC3IUC3SE3_Superclass const & arg0);
   protected:
     itkRankImageFilterIUC3IUC3SE3_Superclass();
     ~itkRankImageFilterIUC3IUC3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< unsigned char > * NewHistogram();
     void PushHistogram(itk::RankHistogram< unsigned char > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUC3 const * inputImage, itkIndex3 const currentIdx);
     void PrintHistogram(itk::RankHistogram< unsigned char > const & H);
 };


 class itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer {
   public:
     itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer();
     itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer(itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer const & p);
     itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer(itkRankImageFilterIUC3IUC3SE3_Superclass * p);
     ~itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer();
     itkRankImageFilterIUC3IUC3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUC3IUC3SE3_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer const & r) const;
     itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer & operator=(itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer const & r);
     itkRankImageFilterIUC3IUC3SE3_Superclass_Pointer & operator=(itkRankImageFilterIUC3IUC3SE3_Superclass * r);
     itkRankImageFilterIUC3IUC3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUL2IUL2SE2_Pointer {
   public:
     itkRankImageFilterIUL2IUL2SE2_Pointer();
     itkRankImageFilterIUL2IUL2SE2_Pointer(itkRankImageFilterIUL2IUL2SE2_Pointer const & p);
     itkRankImageFilterIUL2IUL2SE2_Pointer(itkRankImageFilterIUL2IUL2SE2 * p);
     ~itkRankImageFilterIUL2IUL2SE2_Pointer();
     itkRankImageFilterIUL2IUL2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUL2IUL2SE2 * GetPointer() const;
     bool operator<(itkRankImageFilterIUL2IUL2SE2_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUL2IUL2SE2_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUL2IUL2SE2_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUL2IUL2SE2_Pointer const & r) const;
     itkRankImageFilterIUL2IUL2SE2_Pointer & operator=(itkRankImageFilterIUL2IUL2SE2_Pointer const & r);
     itkRankImageFilterIUL2IUL2SE2_Pointer & operator=(itkRankImageFilterIUL2IUL2SE2 * r);
     itkRankImageFilterIUL2IUL2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUL2IUL2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUL2IUL2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterIUL2IUL2SE2_Superclass(itkRankImageFilterIUL2IUL2SE2_Superclass const & arg0);
     void operator=(itkRankImageFilterIUL2IUL2SE2_Superclass const & arg0);
   protected:
     itkRankImageFilterIUL2IUL2SE2_Superclass();
     ~itkRankImageFilterIUL2IUL2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< unsigned long > * NewHistogram();
     void PushHistogram(itk::RankHistogram< unsigned long > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUL2 const * inputImage, itkIndex2 const currentIdx);
     void PrintHistogram(itk::RankHistogram< unsigned long > const & H);
 };


 class itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer {
   public:
     itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer();
     itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer(itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer const & p);
     itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer(itkRankImageFilterIUL2IUL2SE2_Superclass * p);
     ~itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer();
     itkRankImageFilterIUL2IUL2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUL2IUL2SE2_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer const & r) const;
     itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer & operator=(itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer const & r);
     itkRankImageFilterIUL2IUL2SE2_Superclass_Pointer & operator=(itkRankImageFilterIUL2IUL2SE2_Superclass * r);
     itkRankImageFilterIUL2IUL2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUL3IUL3SE3_Pointer {
   public:
     itkRankImageFilterIUL3IUL3SE3_Pointer();
     itkRankImageFilterIUL3IUL3SE3_Pointer(itkRankImageFilterIUL3IUL3SE3_Pointer const & p);
     itkRankImageFilterIUL3IUL3SE3_Pointer(itkRankImageFilterIUL3IUL3SE3 * p);
     ~itkRankImageFilterIUL3IUL3SE3_Pointer();
     itkRankImageFilterIUL3IUL3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUL3IUL3SE3 * GetPointer() const;
     bool operator<(itkRankImageFilterIUL3IUL3SE3_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUL3IUL3SE3_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUL3IUL3SE3_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUL3IUL3SE3_Pointer const & r) const;
     itkRankImageFilterIUL3IUL3SE3_Pointer & operator=(itkRankImageFilterIUL3IUL3SE3_Pointer const & r);
     itkRankImageFilterIUL3IUL3SE3_Pointer & operator=(itkRankImageFilterIUL3IUL3SE3 * r);
     itkRankImageFilterIUL3IUL3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUL3IUL3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUL3IUL3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterIUL3IUL3SE3_Superclass(itkRankImageFilterIUL3IUL3SE3_Superclass const & arg0);
     void operator=(itkRankImageFilterIUL3IUL3SE3_Superclass const & arg0);
   protected:
     itkRankImageFilterIUL3IUL3SE3_Superclass();
     ~itkRankImageFilterIUL3IUL3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< unsigned long > * NewHistogram();
     void PushHistogram(itk::RankHistogram< unsigned long > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUL3 const * inputImage, itkIndex3 const currentIdx);
     void PrintHistogram(itk::RankHistogram< unsigned long > const & H);
 };


 class itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer {
   public:
     itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer();
     itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer(itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer const & p);
     itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer(itkRankImageFilterIUL3IUL3SE3_Superclass * p);
     ~itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer();
     itkRankImageFilterIUL3IUL3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUL3IUL3SE3_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer const & r) const;
     itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer & operator=(itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer const & r);
     itkRankImageFilterIUL3IUL3SE3_Superclass_Pointer & operator=(itkRankImageFilterIUL3IUL3SE3_Superclass * r);
     itkRankImageFilterIUL3IUL3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUS2IUS2SE2_Pointer {
   public:
     itkRankImageFilterIUS2IUS2SE2_Pointer();
     itkRankImageFilterIUS2IUS2SE2_Pointer(itkRankImageFilterIUS2IUS2SE2_Pointer const & p);
     itkRankImageFilterIUS2IUS2SE2_Pointer(itkRankImageFilterIUS2IUS2SE2 * p);
     ~itkRankImageFilterIUS2IUS2SE2_Pointer();
     itkRankImageFilterIUS2IUS2SE2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUS2IUS2SE2 * GetPointer() const;
     bool operator<(itkRankImageFilterIUS2IUS2SE2_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUS2IUS2SE2_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUS2IUS2SE2_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUS2IUS2SE2_Pointer const & r) const;
     itkRankImageFilterIUS2IUS2SE2_Pointer & operator=(itkRankImageFilterIUS2IUS2SE2_Pointer const & r);
     itkRankImageFilterIUS2IUS2SE2_Pointer & operator=(itkRankImageFilterIUS2IUS2SE2 * r);
     itkRankImageFilterIUS2IUS2SE2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUS2IUS2SE2_Superclass : public itkMovingHistogramImageFilterBaseIUS2IUS2SE2 {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterIUS2IUS2SE2_Superclass(itkRankImageFilterIUS2IUS2SE2_Superclass const & arg0);
     void operator=(itkRankImageFilterIUS2IUS2SE2_Superclass const & arg0);
   protected:
     itkRankImageFilterIUS2IUS2SE2_Superclass();
     ~itkRankImageFilterIUS2IUS2SE2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< unsigned short > * NewHistogram();
     void PushHistogram(itk::RankHistogram< unsigned short > * histogram, std::list< itkOffset2 > const * addedList, std::list< itkOffset2 > const * removedList, itkImageRegion2 const & inputRegion, itkImageRegion2 const & kernRegion, itkImageUS2 const * inputImage, itkIndex2 const currentIdx);
     void PrintHistogram(itk::RankHistogram< unsigned short > const & H);
 };


 class itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer {
   public:
     itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer();
     itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer(itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer const & p);
     itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer(itkRankImageFilterIUS2IUS2SE2_Superclass * p);
     ~itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer();
     itkRankImageFilterIUS2IUS2SE2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUS2IUS2SE2_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer const & r) const;
     itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer & operator=(itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer const & r);
     itkRankImageFilterIUS2IUS2SE2_Superclass_Pointer & operator=(itkRankImageFilterIUS2IUS2SE2_Superclass * r);
     itkRankImageFilterIUS2IUS2SE2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUS3IUS3SE3_Pointer {
   public:
     itkRankImageFilterIUS3IUS3SE3_Pointer();
     itkRankImageFilterIUS3IUS3SE3_Pointer(itkRankImageFilterIUS3IUS3SE3_Pointer const & p);
     itkRankImageFilterIUS3IUS3SE3_Pointer(itkRankImageFilterIUS3IUS3SE3 * p);
     ~itkRankImageFilterIUS3IUS3SE3_Pointer();
     itkRankImageFilterIUS3IUS3SE3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUS3IUS3SE3 * GetPointer() const;
     bool operator<(itkRankImageFilterIUS3IUS3SE3_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUS3IUS3SE3_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUS3IUS3SE3_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUS3IUS3SE3_Pointer const & r) const;
     itkRankImageFilterIUS3IUS3SE3_Pointer & operator=(itkRankImageFilterIUS3IUS3SE3_Pointer const & r);
     itkRankImageFilterIUS3IUS3SE3_Pointer & operator=(itkRankImageFilterIUS3IUS3SE3 * r);
     itkRankImageFilterIUS3IUS3SE3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterIUS3IUS3SE3_Superclass : public itkMovingHistogramImageFilterBaseIUS3IUS3SE3 {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkRankImageFilterIUS3IUS3SE3_Superclass(itkRankImageFilterIUS3IUS3SE3_Superclass const & arg0);
     void operator=(itkRankImageFilterIUS3IUS3SE3_Superclass const & arg0);
   protected:
     itkRankImageFilterIUS3IUS3SE3_Superclass();
     ~itkRankImageFilterIUS3IUS3SE3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual itk::RankHistogram< unsigned short > * NewHistogram();
     void PushHistogram(itk::RankHistogram< unsigned short > * histogram, std::list< itkOffset3 > const * addedList, std::list< itkOffset3 > const * removedList, itkImageRegion3 const & inputRegion, itkImageRegion3 const & kernRegion, itkImageUS3 const * inputImage, itkIndex3 const currentIdx);
     void PrintHistogram(itk::RankHistogram< unsigned short > const & H);
 };


 class itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer {
   public:
     itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer();
     itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer(itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer const & p);
     itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer(itkRankImageFilterIUS3IUS3SE3_Superclass * p);
     ~itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer();
     itkRankImageFilterIUS3IUS3SE3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkRankImageFilterIUS3IUS3SE3_Superclass * GetPointer() const;
     bool operator<(itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator>(itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator<=(itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer const & r) const;
     bool operator>=(itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer const & r) const;
     itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer & operator=(itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer const & r);
     itkRankImageFilterIUS3IUS3SE3_Superclass_Pointer & operator=(itkRankImageFilterIUS3IUS3SE3_Superclass * r);
     itkRankImageFilterIUS3IUS3SE3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkRankImageFilterID2ID2SE2 : public itkRankImageFilterID2ID2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterID2ID2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterID2ID2SE2(itkRankImageFilterID2ID2SE2 const & arg0);
     void operator=(itkRankImageFilterID2ID2SE2 const & arg0);
   protected:
     itkRankImageFilterID2ID2SE2();
     ~itkRankImageFilterID2ID2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< double > * NewHistogram();
 };


 class itkRankImageFilterID3ID3SE3 : public itkRankImageFilterID3ID3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterID3ID3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterID3ID3SE3(itkRankImageFilterID3ID3SE3 const & arg0);
     void operator=(itkRankImageFilterID3ID3SE3 const & arg0);
   protected:
     itkRankImageFilterID3ID3SE3();
     ~itkRankImageFilterID3ID3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< double > * NewHistogram();
 };


 class itkRankImageFilterIF2IF2SE2 : public itkRankImageFilterIF2IF2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterIF2IF2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterIF2IF2SE2(itkRankImageFilterIF2IF2SE2 const & arg0);
     void operator=(itkRankImageFilterIF2IF2SE2 const & arg0);
   protected:
     itkRankImageFilterIF2IF2SE2();
     ~itkRankImageFilterIF2IF2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< float > * NewHistogram();
 };


 class itkRankImageFilterIF3IF3SE3 : public itkRankImageFilterIF3IF3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterIF3IF3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterIF3IF3SE3(itkRankImageFilterIF3IF3SE3 const & arg0);
     void operator=(itkRankImageFilterIF3IF3SE3 const & arg0);
   protected:
     itkRankImageFilterIF3IF3SE3();
     ~itkRankImageFilterIF3IF3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< float > * NewHistogram();
 };


 class itkRankImageFilterIUC2IUC2SE2 : public itkRankImageFilterIUC2IUC2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterIUC2IUC2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterIUC2IUC2SE2(itkRankImageFilterIUC2IUC2SE2 const & arg0);
     void operator=(itkRankImageFilterIUC2IUC2SE2 const & arg0);
   protected:
     itkRankImageFilterIUC2IUC2SE2();
     ~itkRankImageFilterIUC2IUC2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< unsigned char > * NewHistogram();
 };


 class itkRankImageFilterIUC3IUC3SE3 : public itkRankImageFilterIUC3IUC3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterIUC3IUC3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterIUC3IUC3SE3(itkRankImageFilterIUC3IUC3SE3 const & arg0);
     void operator=(itkRankImageFilterIUC3IUC3SE3 const & arg0);
   protected:
     itkRankImageFilterIUC3IUC3SE3();
     ~itkRankImageFilterIUC3IUC3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< unsigned char > * NewHistogram();
 };


 class itkRankImageFilterIUL2IUL2SE2 : public itkRankImageFilterIUL2IUL2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterIUL2IUL2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterIUL2IUL2SE2(itkRankImageFilterIUL2IUL2SE2 const & arg0);
     void operator=(itkRankImageFilterIUL2IUL2SE2 const & arg0);
   protected:
     itkRankImageFilterIUL2IUL2SE2();
     ~itkRankImageFilterIUL2IUL2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< unsigned long > * NewHistogram();
 };


 class itkRankImageFilterIUL3IUL3SE3 : public itkRankImageFilterIUL3IUL3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterIUL3IUL3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterIUL3IUL3SE3(itkRankImageFilterIUL3IUL3SE3 const & arg0);
     void operator=(itkRankImageFilterIUL3IUL3SE3 const & arg0);
   protected:
     itkRankImageFilterIUL3IUL3SE3();
     ~itkRankImageFilterIUL3IUL3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< unsigned long > * NewHistogram();
 };


 class itkRankImageFilterIUS2IUS2SE2 : public itkRankImageFilterIUS2IUS2SE2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkRankImageFilterIUS2IUS2SE2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterIUS2IUS2SE2(itkRankImageFilterIUS2IUS2SE2 const & arg0);
     void operator=(itkRankImageFilterIUS2IUS2SE2 const & arg0);
   protected:
     itkRankImageFilterIUS2IUS2SE2();
     ~itkRankImageFilterIUS2IUS2SE2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< unsigned short > * NewHistogram();
 };


 class itkRankImageFilterIUS3IUS3SE3 : public itkRankImageFilterIUS3IUS3SE3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkRankImageFilterIUS3IUS3SE3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRank(float const _arg);
     virtual float GetRank() const;
   private:
     itkRankImageFilterIUS3IUS3SE3(itkRankImageFilterIUS3IUS3SE3 const & arg0);
     void operator=(itkRankImageFilterIUS3IUS3SE3 const & arg0);
   protected:
     itkRankImageFilterIUS3IUS3SE3();
     ~itkRankImageFilterIUS3IUS3SE3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     bool UseVectorBasedHistogram();
     virtual itk::RankHistogram< unsigned short > * NewHistogram();
 };


