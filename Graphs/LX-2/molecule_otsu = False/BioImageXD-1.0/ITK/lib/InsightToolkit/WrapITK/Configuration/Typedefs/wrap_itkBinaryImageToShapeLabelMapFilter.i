// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBinaryImageToShapeLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBinaryImageToShapeLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBinaryImageToShapeLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBinaryImageToShapeLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkBinaryImageToShapeLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBinaryImageToShapeLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBinaryImageToShapeLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBinaryImageToShapeLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBinaryImageToShapeLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBinaryImageToShapeLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBinaryImageToShapeLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBinaryImageToShapeLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBinaryImageToShapeLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBinaryImageToShapeLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBinaryImageToShapeLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkBinaryImageToShapeLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkBinaryImageToShapeLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBinaryImageToShapeLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkBinaryImageToShapeLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkBinaryImageToShapeLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKLabelMapBase.i


%include itk.i
%include wrap_itkBinaryImageToShapeLabelMapFilter_ext.i


 class itkBinaryImageToShapeLabelMapFilterIUC2LM2 : public itkImageToImageFilterIUC2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
   private:
     itkBinaryImageToShapeLabelMapFilterIUC2LM2(itkBinaryImageToShapeLabelMapFilterIUC2LM2 const & arg0);
     void operator=(itkBinaryImageToShapeLabelMapFilterIUC2LM2 const & arg0);
   protected:
     itkBinaryImageToShapeLabelMapFilterIUC2LM2();
     ~itkBinaryImageToShapeLabelMapFilterIUC2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer {
   public:
     itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer(itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer const & p);
     itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer(itkBinaryImageToShapeLabelMapFilterIUC2LM2 * p);
     ~itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUC2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToShapeLabelMapFilterIUC2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer const & r) const;
     itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer const & r);
     itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUC2LM2 * r);
     itkBinaryImageToShapeLabelMapFilterIUC2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToShapeLabelMapFilterIUC3LM3 : public itkImageToImageFilterIUC3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned char const _arg);
     virtual unsigned char GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
   private:
     itkBinaryImageToShapeLabelMapFilterIUC3LM3(itkBinaryImageToShapeLabelMapFilterIUC3LM3 const & arg0);
     void operator=(itkBinaryImageToShapeLabelMapFilterIUC3LM3 const & arg0);
   protected:
     itkBinaryImageToShapeLabelMapFilterIUC3LM3();
     ~itkBinaryImageToShapeLabelMapFilterIUC3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer {
   public:
     itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer(itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer const & p);
     itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer(itkBinaryImageToShapeLabelMapFilterIUC3LM3 * p);
     ~itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUC3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToShapeLabelMapFilterIUC3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer const & r) const;
     itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer const & r);
     itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUC3LM3 * r);
     itkBinaryImageToShapeLabelMapFilterIUC3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToShapeLabelMapFilterIUL2LM2 : public itkImageToImageFilterIUL2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
   private:
     itkBinaryImageToShapeLabelMapFilterIUL2LM2(itkBinaryImageToShapeLabelMapFilterIUL2LM2 const & arg0);
     void operator=(itkBinaryImageToShapeLabelMapFilterIUL2LM2 const & arg0);
   protected:
     itkBinaryImageToShapeLabelMapFilterIUL2LM2();
     ~itkBinaryImageToShapeLabelMapFilterIUL2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer {
   public:
     itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer(itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer const & p);
     itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer(itkBinaryImageToShapeLabelMapFilterIUL2LM2 * p);
     ~itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUL2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToShapeLabelMapFilterIUL2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer const & r) const;
     itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer const & r);
     itkBinaryImageToShapeLabelMapFilterIUL2LM2_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUL2LM2 * r);
     itkBinaryImageToShapeLabelMapFilterIUL2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToShapeLabelMapFilterIUL3LM3 : public itkImageToImageFilterIUL3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned long const _arg);
     virtual unsigned long GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
   private:
     itkBinaryImageToShapeLabelMapFilterIUL3LM3(itkBinaryImageToShapeLabelMapFilterIUL3LM3 const & arg0);
     void operator=(itkBinaryImageToShapeLabelMapFilterIUL3LM3 const & arg0);
   protected:
     itkBinaryImageToShapeLabelMapFilterIUL3LM3();
     ~itkBinaryImageToShapeLabelMapFilterIUL3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer {
   public:
     itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer(itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer const & p);
     itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer(itkBinaryImageToShapeLabelMapFilterIUL3LM3 * p);
     ~itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUL3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToShapeLabelMapFilterIUL3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer const & r) const;
     itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer const & r);
     itkBinaryImageToShapeLabelMapFilterIUL3LM3_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUL3LM3 * r);
     itkBinaryImageToShapeLabelMapFilterIUL3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToShapeLabelMapFilterIUS2LM2 : public itkImageToImageFilterIUS2LM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
   private:
     itkBinaryImageToShapeLabelMapFilterIUS2LM2(itkBinaryImageToShapeLabelMapFilterIUS2LM2 const & arg0);
     void operator=(itkBinaryImageToShapeLabelMapFilterIUS2LM2 const & arg0);
   protected:
     itkBinaryImageToShapeLabelMapFilterIUS2LM2();
     ~itkBinaryImageToShapeLabelMapFilterIUS2LM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer {
   public:
     itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer(itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer const & p);
     itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer(itkBinaryImageToShapeLabelMapFilterIUS2LM2 * p);
     ~itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUS2LM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToShapeLabelMapFilterIUS2LM2 * GetPointer() const;
     bool operator<(itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer const & r) const;
     bool operator>(itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer const & r) const;
     bool operator<=(itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer const & r) const;
     bool operator>=(itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer const & r) const;
     itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer const & r);
     itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUS2LM2 * r);
     itkBinaryImageToShapeLabelMapFilterIUS2LM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryImageToShapeLabelMapFilterIUS3LM3 : public itkImageToImageFilterIUS3LM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetOutputBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetOutputBackgroundValue() const;
     virtual void SetInputForegroundValue(unsigned short const _arg);
     virtual unsigned short GetInputForegroundValue() const;
     virtual void SetComputeFeretDiameter(bool const _arg);
     virtual bool const & GetComputeFeretDiameter() const;
     virtual void ComputeFeretDiameterOn();
     virtual void ComputeFeretDiameterOff();
     virtual void SetComputePerimeter(bool const _arg);
     virtual bool const & GetComputePerimeter() const;
     virtual void ComputePerimeterOn();
     virtual void ComputePerimeterOff();
   private:
     itkBinaryImageToShapeLabelMapFilterIUS3LM3(itkBinaryImageToShapeLabelMapFilterIUS3LM3 const & arg0);
     void operator=(itkBinaryImageToShapeLabelMapFilterIUS3LM3 const & arg0);
   protected:
     itkBinaryImageToShapeLabelMapFilterIUS3LM3();
     ~itkBinaryImageToShapeLabelMapFilterIUS3LM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer {
   public:
     itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer(itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer const & p);
     itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer(itkBinaryImageToShapeLabelMapFilterIUS3LM3 * p);
     ~itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer();
     itkBinaryImageToShapeLabelMapFilterIUS3LM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryImageToShapeLabelMapFilterIUS3LM3 * GetPointer() const;
     bool operator<(itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer const & r) const;
     bool operator>(itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer const & r) const;
     bool operator<=(itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer const & r) const;
     bool operator>=(itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer const & r) const;
     itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer const & r);
     itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer & operator=(itkBinaryImageToShapeLabelMapFilterIUS3LM3 * r);
     itkBinaryImageToShapeLabelMapFilterIUS3LM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


