# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkNearestNeighborInterpolateImageFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkNearestNeighborInterpolateImageFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkNearestNeighborInterpolateImageFunctionPython
            return _itkNearestNeighborInterpolateImageFunctionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkNearestNeighborInterpolateImageFunctionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkNearestNeighborInterpolateImageFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkNearestNeighborInterpolateImageFunctionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkContinuousIndexPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkInterpolateImageFunctionPython
import itkImageFunctionPython
import itkImagePython
import itkCovariantVectorPython
import ITKRegionsPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkFunctionBasePython
import itkArrayPython
def itkNearestNeighborInterpolateImageFunctionID3D_New():
  return itkNearestNeighborInterpolateImageFunctionID3D.New()

def itkNearestNeighborInterpolateImageFunctionIF3D_New():
  return itkNearestNeighborInterpolateImageFunctionIF3D.New()

def itkNearestNeighborInterpolateImageFunctionIUS3D_New():
  return itkNearestNeighborInterpolateImageFunctionIUS3D.New()

def itkNearestNeighborInterpolateImageFunctionIUL3D_New():
  return itkNearestNeighborInterpolateImageFunctionIUL3D.New()

def itkNearestNeighborInterpolateImageFunctionIUC3D_New():
  return itkNearestNeighborInterpolateImageFunctionIUC3D.New()

def itkNearestNeighborInterpolateImageFunctionID2D_New():
  return itkNearestNeighborInterpolateImageFunctionID2D.New()

def itkNearestNeighborInterpolateImageFunctionIF2D_New():
  return itkNearestNeighborInterpolateImageFunctionIF2D.New()

def itkNearestNeighborInterpolateImageFunctionIUS2D_New():
  return itkNearestNeighborInterpolateImageFunctionIUS2D.New()

def itkNearestNeighborInterpolateImageFunctionIUL2D_New():
  return itkNearestNeighborInterpolateImageFunctionIUL2D.New()

def itkNearestNeighborInterpolateImageFunctionIUC2D_New():
  return itkNearestNeighborInterpolateImageFunctionIUC2D.New()

class itkNearestNeighborInterpolateImageFunctionID2D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionID2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID2D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionID2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionID2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionID2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionID2D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionID2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionID2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionID2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionID2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionID2D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID2D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionID2D)
itkNearestNeighborInterpolateImageFunctionID2D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID2D_swigregister
itkNearestNeighborInterpolateImageFunctionID2D_swigregister(itkNearestNeighborInterpolateImageFunctionID2D)

def itkNearestNeighborInterpolateImageFunctionID2D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionID2D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID2D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionID2D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionID2D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionID2D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID2D_cast(*args)

class itkNearestNeighborInterpolateImageFunctionID3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionID3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID3D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionID3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionID3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionID3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionID3D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionID3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionID3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionID3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionID3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionID3D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID3D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionID3D)
itkNearestNeighborInterpolateImageFunctionID3D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID3D_swigregister
itkNearestNeighborInterpolateImageFunctionID3D_swigregister(itkNearestNeighborInterpolateImageFunctionID3D)

def itkNearestNeighborInterpolateImageFunctionID3D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionID3D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID3D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionID3D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionID3D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionID3D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionID3D_cast(*args)

class itkNearestNeighborInterpolateImageFunctionIF2D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIF2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIF2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIF2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionIF2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIF2D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIF2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionIF2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionIF2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIF2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIF2D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionIF2D)
itkNearestNeighborInterpolateImageFunctionIF2D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_swigregister
itkNearestNeighborInterpolateImageFunctionIF2D_swigregister(itkNearestNeighborInterpolateImageFunctionIF2D)

def itkNearestNeighborInterpolateImageFunctionIF2D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionIF2D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIF2D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionIF2D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIF2D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF2D_cast(*args)

class itkNearestNeighborInterpolateImageFunctionIF3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIF3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIF3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIF3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionIF3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIF3D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIF3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionIF3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionIF3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIF3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIF3D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionIF3D)
itkNearestNeighborInterpolateImageFunctionIF3D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_swigregister
itkNearestNeighborInterpolateImageFunctionIF3D_swigregister(itkNearestNeighborInterpolateImageFunctionIF3D)

def itkNearestNeighborInterpolateImageFunctionIF3D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionIF3D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIF3D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionIF3D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIF3D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIF3D_cast(*args)

class itkNearestNeighborInterpolateImageFunctionIUC2D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUC2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUC2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUC2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionIUC2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUC2D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUC2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionIUC2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionIUC2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUC2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUC2D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionIUC2D)
itkNearestNeighborInterpolateImageFunctionIUC2D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_swigregister
itkNearestNeighborInterpolateImageFunctionIUC2D_swigregister(itkNearestNeighborInterpolateImageFunctionIUC2D)

def itkNearestNeighborInterpolateImageFunctionIUC2D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionIUC2D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUC2D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionIUC2D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUC2D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC2D_cast(*args)

class itkNearestNeighborInterpolateImageFunctionIUC3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUC3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUC3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUC3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionIUC3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUC3D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUC3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionIUC3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionIUC3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUC3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUC3D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionIUC3D)
itkNearestNeighborInterpolateImageFunctionIUC3D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_swigregister
itkNearestNeighborInterpolateImageFunctionIUC3D_swigregister(itkNearestNeighborInterpolateImageFunctionIUC3D)

def itkNearestNeighborInterpolateImageFunctionIUC3D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionIUC3D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUC3D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionIUC3D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUC3D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUC3D_cast(*args)

class itkNearestNeighborInterpolateImageFunctionIUL2D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUL2D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUL2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL2D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUL2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUL2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionIUL2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUL2D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUL2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionIUL2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionIUL2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUL2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUL2D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL2D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionIUL2D)
itkNearestNeighborInterpolateImageFunctionIUL2D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL2D_swigregister
itkNearestNeighborInterpolateImageFunctionIUL2D_swigregister(itkNearestNeighborInterpolateImageFunctionIUL2D)

def itkNearestNeighborInterpolateImageFunctionIUL2D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionIUL2D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL2D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUL2D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionIUL2D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUL2D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL2D_cast(*args)

class itkNearestNeighborInterpolateImageFunctionIUL3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUL3D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUL3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL3D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUL3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUL3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionIUL3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUL3D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUL3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionIUL3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionIUL3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUL3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUL3D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL3D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionIUL3D)
itkNearestNeighborInterpolateImageFunctionIUL3D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL3D_swigregister
itkNearestNeighborInterpolateImageFunctionIUL3D_swigregister(itkNearestNeighborInterpolateImageFunctionIUL3D)

def itkNearestNeighborInterpolateImageFunctionIUL3D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionIUL3D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL3D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUL3D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionIUL3D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUL3D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUL3D_cast(*args)

class itkNearestNeighborInterpolateImageFunctionIUS2D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUS2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUS2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUS2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionIUS2D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUS2D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionIUS2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionIUS2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUS2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUS2D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionIUS2D)
itkNearestNeighborInterpolateImageFunctionIUS2D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_swigregister
itkNearestNeighborInterpolateImageFunctionIUS2D_swigregister(itkNearestNeighborInterpolateImageFunctionIUS2D)

def itkNearestNeighborInterpolateImageFunctionIUS2D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionIUS2D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUS2D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionIUS2D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUS2D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS2D_cast(*args)

class itkNearestNeighborInterpolateImageFunctionIUS3D(itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D):
    """Proxy of C++ itkNearestNeighborInterpolateImageFunctionIUS3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkNearestNeighborInterpolateImageFunctionPython.delete_itkNearestNeighborInterpolateImageFunctionIUS3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUS3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkNearestNeighborInterpolateImageFunctionIUS3D"""
        return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkNearestNeighborInterpolateImageFunctionIUS3D
        
        Create a new object of the class itkNearestNeighborInterpolateImageFunctionIUS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkNearestNeighborInterpolateImageFunctionIUS3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkNearestNeighborInterpolateImageFunctionIUS3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkNearestNeighborInterpolateImageFunctionIUS3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkNearestNeighborInterpolateImageFunctionIUS3D.GetPointer = new_instancemethod(_itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_GetPointer,None,itkNearestNeighborInterpolateImageFunctionIUS3D)
itkNearestNeighborInterpolateImageFunctionIUS3D_swigregister = _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_swigregister
itkNearestNeighborInterpolateImageFunctionIUS3D_swigregister(itkNearestNeighborInterpolateImageFunctionIUS3D)

def itkNearestNeighborInterpolateImageFunctionIUS3D___New_orig__():
  """itkNearestNeighborInterpolateImageFunctionIUS3D___New_orig__()"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D___New_orig__()

def itkNearestNeighborInterpolateImageFunctionIUS3D_cast(*args):
  """itkNearestNeighborInterpolateImageFunctionIUS3D_cast(itkLightObject obj) -> itkNearestNeighborInterpolateImageFunctionIUS3D"""
  return _itkNearestNeighborInterpolateImageFunctionPython.itkNearestNeighborInterpolateImageFunctionIUS3D_cast(*args)



