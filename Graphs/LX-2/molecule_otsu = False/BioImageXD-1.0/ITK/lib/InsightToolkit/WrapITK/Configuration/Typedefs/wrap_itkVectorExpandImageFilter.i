// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVectorExpandImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkVectorExpandImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkVectorExpandImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkVectorExpandImageFilterJava
#endif
#ifdef SWIGLUA
%module itkVectorExpandImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkVectorExpandImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVectorExpandImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkVectorExpandImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkVectorExpandImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkVectorExpandImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkVectorExpandImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkVectorExpandImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkVectorExpandImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkVectorExpandImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkVectorExpandImageFilterPython
#endif
#ifdef SWIGR
%module itkVectorExpandImageFilterR
#endif
#ifdef SWIGRUBY
%module itkVectorExpandImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkVectorExpandImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkVectorExpandImageFilterTcl
#endif
#ifdef SWIGXML
%module itkVectorExpandImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Resize.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkVector.i


%include itk.i
%include wrap_itkVectorExpandImageFilter_ext.i


 class itkVectorExpandImageFilterIVF22IVF22 : public itkImageToImageFilterIVF22IVF22 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  VectorDimension = 2 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorExpandImageFilterIVF22IVF22_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInterpolator(itk::VectorInterpolateImageFunction< itk::Image< itk::Vector< float, 2u >, 2u >, double > * _arg);
     virtual itk::VectorInterpolateImageFunction< itk::Image< itk::Vector< float, 2u >, 2u >, double > * GetInterpolator();
     virtual void SetExpandFactors(float const * factors);
     virtual void SetExpandFactors(float const factor);
     virtual void SetExpandFactors(unsigned int const * factors);
     float const * GetExpandFactors() const;
     virtual void SetEdgePaddingValue(itkVectorF2 const & value);
     virtual itkVectorF2 const & GetEdgePaddingValue();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
   private:
     itkVectorExpandImageFilterIVF22IVF22(itkVectorExpandImageFilterIVF22IVF22 const & arg0);
     void operator=(itkVectorExpandImageFilterIVF22IVF22 const & arg0);
   protected:
     itkVectorExpandImageFilterIVF22IVF22();
     ~itkVectorExpandImageFilterIVF22IVF22();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkVectorExpandImageFilterIVF22IVF22_Pointer {
   public:
     itkVectorExpandImageFilterIVF22IVF22_Pointer();
     itkVectorExpandImageFilterIVF22IVF22_Pointer(itkVectorExpandImageFilterIVF22IVF22_Pointer const & p);
     itkVectorExpandImageFilterIVF22IVF22_Pointer(itkVectorExpandImageFilterIVF22IVF22 * p);
     ~itkVectorExpandImageFilterIVF22IVF22_Pointer();
     itkVectorExpandImageFilterIVF22IVF22 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorExpandImageFilterIVF22IVF22 * GetPointer() const;
     bool operator<(itkVectorExpandImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>(itkVectorExpandImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator<=(itkVectorExpandImageFilterIVF22IVF22_Pointer const & r) const;
     bool operator>=(itkVectorExpandImageFilterIVF22IVF22_Pointer const & r) const;
     itkVectorExpandImageFilterIVF22IVF22_Pointer & operator=(itkVectorExpandImageFilterIVF22IVF22_Pointer const & r);
     itkVectorExpandImageFilterIVF22IVF22_Pointer & operator=(itkVectorExpandImageFilterIVF22IVF22 * r);
     itkVectorExpandImageFilterIVF22IVF22 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVectorExpandImageFilterIVF33IVF33 : public itkImageToImageFilterIVF33IVF33 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  VectorDimension = 3 };
     enum  {  InputHasNumericTraitsCheck = 1 };
     enum  {  OutputHasNumericTraitsCheck = 1 };
     static itkVectorExpandImageFilterIVF33IVF33_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetInterpolator(itk::VectorInterpolateImageFunction< itk::Image< itk::Vector< float, 3u >, 3u >, double > * _arg);
     virtual itk::VectorInterpolateImageFunction< itk::Image< itk::Vector< float, 3u >, 3u >, double > * GetInterpolator();
     virtual void SetExpandFactors(float const * factors);
     virtual void SetExpandFactors(float const factor);
     virtual void SetExpandFactors(unsigned int const * factors);
     float const * GetExpandFactors() const;
     virtual void SetEdgePaddingValue(itkVectorF3 const & value);
     virtual itkVectorF3 const & GetEdgePaddingValue();
     virtual void GenerateOutputInformation();
     virtual void GenerateInputRequestedRegion();
   private:
     itkVectorExpandImageFilterIVF33IVF33(itkVectorExpandImageFilterIVF33IVF33 const & arg0);
     void operator=(itkVectorExpandImageFilterIVF33IVF33 const & arg0);
   protected:
     itkVectorExpandImageFilterIVF33IVF33();
     ~itkVectorExpandImageFilterIVF33IVF33();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
     virtual void BeforeThreadedGenerateData();
 };


 class itkVectorExpandImageFilterIVF33IVF33_Pointer {
   public:
     itkVectorExpandImageFilterIVF33IVF33_Pointer();
     itkVectorExpandImageFilterIVF33IVF33_Pointer(itkVectorExpandImageFilterIVF33IVF33_Pointer const & p);
     itkVectorExpandImageFilterIVF33IVF33_Pointer(itkVectorExpandImageFilterIVF33IVF33 * p);
     ~itkVectorExpandImageFilterIVF33IVF33_Pointer();
     itkVectorExpandImageFilterIVF33IVF33 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVectorExpandImageFilterIVF33IVF33 * GetPointer() const;
     bool operator<(itkVectorExpandImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>(itkVectorExpandImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator<=(itkVectorExpandImageFilterIVF33IVF33_Pointer const & r) const;
     bool operator>=(itkVectorExpandImageFilterIVF33IVF33_Pointer const & r) const;
     itkVectorExpandImageFilterIVF33IVF33_Pointer & operator=(itkVectorExpandImageFilterIVF33IVF33_Pointer const & r);
     itkVectorExpandImageFilterIVF33IVF33_Pointer & operator=(itkVectorExpandImageFilterIVF33IVF33 * r);
     itkVectorExpandImageFilterIVF33IVF33 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


