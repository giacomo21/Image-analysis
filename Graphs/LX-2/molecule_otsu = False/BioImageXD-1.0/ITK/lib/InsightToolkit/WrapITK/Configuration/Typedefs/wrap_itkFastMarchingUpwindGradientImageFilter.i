// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkFastMarchingUpwindGradientImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkFastMarchingUpwindGradientImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkFastMarchingUpwindGradientImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkFastMarchingUpwindGradientImageFilterJava
#endif
#ifdef SWIGLUA
%module itkFastMarchingUpwindGradientImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkFastMarchingUpwindGradientImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkFastMarchingUpwindGradientImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkFastMarchingUpwindGradientImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkFastMarchingUpwindGradientImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkFastMarchingUpwindGradientImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkFastMarchingUpwindGradientImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkFastMarchingUpwindGradientImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkFastMarchingUpwindGradientImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkFastMarchingUpwindGradientImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkFastMarchingUpwindGradientImageFilterPython
#endif
#ifdef SWIGR
%module itkFastMarchingUpwindGradientImageFilterR
#endif
#ifdef SWIGRUBY
%module itkFastMarchingUpwindGradientImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkFastMarchingUpwindGradientImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkFastMarchingUpwindGradientImageFilterTcl
#endif
#ifdef SWIGXML
%module itkFastMarchingUpwindGradientImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_itkFastMarchingImageFilter.i
%import wrap_itkIndex.i
%import wrap_itkImage.i
%import wrap_itkVectorContainer.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkFastMarchingUpwindGradientImageFilter_ext.i


 class itkFastMarchingUpwindGradientImageFilterID2ID2 : public itkFastMarchingImageFilterID2ID2 {
   public:
     enum  {  SetDimension = 2 };
     enum  {  NoTargets = 0,  OneTarget = 1,  SomeTargets = 2,  AllTargets = 3 };
     enum  {  LevelSetDoubleDivisionOperatorsCheck = 1 };
     static itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetTargetPoints(itkVectorContainerUILSND2 * points);
     itkVectorContainerUILSND2_Pointer GetTargetPoints();
     itkVectorContainerUILSND2_Pointer GetReachedTargetPoints();
     itk::SmartPointer< itk::Image< itk::CovariantVector< double, 2u >, 2u > > GetGradientImage() const;
     virtual void SetGenerateGradientImage(bool const _arg);
     virtual bool const & GetGenerateGradientImage() const;
     virtual void GenerateGradientImageOn();
     virtual void GenerateGradientImageOff();
     virtual void SetTargetOffset(double const _arg);
     virtual double const & GetTargetOffset() const;
     virtual void SetTargetReachedMode(int const _arg);
     virtual int const & GetTargetReachedMode() const;
     void SetTargetReachedModeToNoTargets();
     void SetTargetReachedModeToOneTarget();
     void SetTargetReachedModeToSomeTargets(long numberOfTargets);
     void SetTargetReachedModeToAllTargets();
     virtual long const & GetNumberOfTargets() const;
     virtual double const & GetTargetValue() const;
   private:
     itkFastMarchingUpwindGradientImageFilterID2ID2(itkFastMarchingUpwindGradientImageFilterID2ID2 const & arg0);
     void operator=(itkFastMarchingUpwindGradientImageFilterID2ID2 const & arg0);
   protected:
     itkFastMarchingUpwindGradientImageFilterID2ID2();
     ~itkFastMarchingUpwindGradientImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void Initialize(itkImageD2 * arg0);
     virtual void GenerateData();
     virtual void UpdateNeighbors(itkIndex2 const & index, itkImageD2 const * arg1, itkImageD2 * arg2);
     virtual void ComputeGradient(itkIndex2 const & index, itkImageD2 const * output, itkImageUC2 const * labelImage, itk::Image< itk::CovariantVector< double, 2u >, 2u > * gradientImage);
 };


 class itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer {
   public:
     itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer();
     itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer(itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer const & p);
     itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer(itkFastMarchingUpwindGradientImageFilterID2ID2 * p);
     ~itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer();
     itkFastMarchingUpwindGradientImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFastMarchingUpwindGradientImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer const & r) const;
     itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer & operator=(itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer const & r);
     itkFastMarchingUpwindGradientImageFilterID2ID2_Pointer & operator=(itkFastMarchingUpwindGradientImageFilterID2ID2 * r);
     itkFastMarchingUpwindGradientImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFastMarchingUpwindGradientImageFilterID3ID3 : public itkFastMarchingImageFilterID3ID3 {
   public:
     enum  {  SetDimension = 3 };
     enum  {  NoTargets = 0,  OneTarget = 1,  SomeTargets = 2,  AllTargets = 3 };
     enum  {  LevelSetDoubleDivisionOperatorsCheck = 1 };
     static itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetTargetPoints(itkVectorContainerUILSND3 * points);
     itkVectorContainerUILSND3_Pointer GetTargetPoints();
     itkVectorContainerUILSND3_Pointer GetReachedTargetPoints();
     itk::SmartPointer< itk::Image< itk::CovariantVector< double, 3u >, 3u > > GetGradientImage() const;
     virtual void SetGenerateGradientImage(bool const _arg);
     virtual bool const & GetGenerateGradientImage() const;
     virtual void GenerateGradientImageOn();
     virtual void GenerateGradientImageOff();
     virtual void SetTargetOffset(double const _arg);
     virtual double const & GetTargetOffset() const;
     virtual void SetTargetReachedMode(int const _arg);
     virtual int const & GetTargetReachedMode() const;
     void SetTargetReachedModeToNoTargets();
     void SetTargetReachedModeToOneTarget();
     void SetTargetReachedModeToSomeTargets(long numberOfTargets);
     void SetTargetReachedModeToAllTargets();
     virtual long const & GetNumberOfTargets() const;
     virtual double const & GetTargetValue() const;
   private:
     itkFastMarchingUpwindGradientImageFilterID3ID3(itkFastMarchingUpwindGradientImageFilterID3ID3 const & arg0);
     void operator=(itkFastMarchingUpwindGradientImageFilterID3ID3 const & arg0);
   protected:
     itkFastMarchingUpwindGradientImageFilterID3ID3();
     ~itkFastMarchingUpwindGradientImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void Initialize(itkImageD3 * arg0);
     virtual void GenerateData();
     virtual void UpdateNeighbors(itkIndex3 const & index, itkImageD3 const * arg1, itkImageD3 * arg2);
     virtual void ComputeGradient(itkIndex3 const & index, itkImageD3 const * output, itkImageUC3 const * labelImage, itk::Image< itk::CovariantVector< double, 3u >, 3u > * gradientImage);
 };


 class itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer {
   public:
     itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer();
     itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer(itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer const & p);
     itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer(itkFastMarchingUpwindGradientImageFilterID3ID3 * p);
     ~itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer();
     itkFastMarchingUpwindGradientImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFastMarchingUpwindGradientImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer const & r) const;
     itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer & operator=(itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer const & r);
     itkFastMarchingUpwindGradientImageFilterID3ID3_Pointer & operator=(itkFastMarchingUpwindGradientImageFilterID3ID3 * r);
     itkFastMarchingUpwindGradientImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFastMarchingUpwindGradientImageFilterIF2IF2 : public itkFastMarchingImageFilterIF2IF2 {
   public:
     enum  {  SetDimension = 2 };
     enum  {  NoTargets = 0,  OneTarget = 1,  SomeTargets = 2,  AllTargets = 3 };
     enum  {  LevelSetDoubleDivisionOperatorsCheck = 1 };
     static itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetTargetPoints(itkVectorContainerUILSNF2 * points);
     itkVectorContainerUILSNF2_Pointer GetTargetPoints();
     itkVectorContainerUILSNF2_Pointer GetReachedTargetPoints();
     itkImageCVF22_Pointer GetGradientImage() const;
     virtual void SetGenerateGradientImage(bool const _arg);
     virtual bool const & GetGenerateGradientImage() const;
     virtual void GenerateGradientImageOn();
     virtual void GenerateGradientImageOff();
     virtual void SetTargetOffset(double const _arg);
     virtual double const & GetTargetOffset() const;
     virtual void SetTargetReachedMode(int const _arg);
     virtual int const & GetTargetReachedMode() const;
     void SetTargetReachedModeToNoTargets();
     void SetTargetReachedModeToOneTarget();
     void SetTargetReachedModeToSomeTargets(long numberOfTargets);
     void SetTargetReachedModeToAllTargets();
     virtual long const & GetNumberOfTargets() const;
     virtual double const & GetTargetValue() const;
   private:
     itkFastMarchingUpwindGradientImageFilterIF2IF2(itkFastMarchingUpwindGradientImageFilterIF2IF2 const & arg0);
     void operator=(itkFastMarchingUpwindGradientImageFilterIF2IF2 const & arg0);
   protected:
     itkFastMarchingUpwindGradientImageFilterIF2IF2();
     ~itkFastMarchingUpwindGradientImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void Initialize(itkImageF2 * arg0);
     virtual void GenerateData();
     virtual void UpdateNeighbors(itkIndex2 const & index, itkImageF2 const * arg1, itkImageF2 * arg2);
     virtual void ComputeGradient(itkIndex2 const & index, itkImageF2 const * output, itkImageUC2 const * labelImage, itkImageCVF22 * gradientImage);
 };


 class itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer {
   public:
     itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer();
     itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer(itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer const & p);
     itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer(itkFastMarchingUpwindGradientImageFilterIF2IF2 * p);
     ~itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer();
     itkFastMarchingUpwindGradientImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFastMarchingUpwindGradientImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer const & r) const;
     itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer & operator=(itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer const & r);
     itkFastMarchingUpwindGradientImageFilterIF2IF2_Pointer & operator=(itkFastMarchingUpwindGradientImageFilterIF2IF2 * r);
     itkFastMarchingUpwindGradientImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkFastMarchingUpwindGradientImageFilterIF3IF3 : public itkFastMarchingImageFilterIF3IF3 {
   public:
     enum  {  SetDimension = 3 };
     enum  {  NoTargets = 0,  OneTarget = 1,  SomeTargets = 2,  AllTargets = 3 };
     enum  {  LevelSetDoubleDivisionOperatorsCheck = 1 };
     static itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetTargetPoints(itkVectorContainerUILSNF3 * points);
     itkVectorContainerUILSNF3_Pointer GetTargetPoints();
     itkVectorContainerUILSNF3_Pointer GetReachedTargetPoints();
     itkImageCVF33_Pointer GetGradientImage() const;
     virtual void SetGenerateGradientImage(bool const _arg);
     virtual bool const & GetGenerateGradientImage() const;
     virtual void GenerateGradientImageOn();
     virtual void GenerateGradientImageOff();
     virtual void SetTargetOffset(double const _arg);
     virtual double const & GetTargetOffset() const;
     virtual void SetTargetReachedMode(int const _arg);
     virtual int const & GetTargetReachedMode() const;
     void SetTargetReachedModeToNoTargets();
     void SetTargetReachedModeToOneTarget();
     void SetTargetReachedModeToSomeTargets(long numberOfTargets);
     void SetTargetReachedModeToAllTargets();
     virtual long const & GetNumberOfTargets() const;
     virtual double const & GetTargetValue() const;
   private:
     itkFastMarchingUpwindGradientImageFilterIF3IF3(itkFastMarchingUpwindGradientImageFilterIF3IF3 const & arg0);
     void operator=(itkFastMarchingUpwindGradientImageFilterIF3IF3 const & arg0);
   protected:
     itkFastMarchingUpwindGradientImageFilterIF3IF3();
     ~itkFastMarchingUpwindGradientImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void Initialize(itkImageF3 * arg0);
     virtual void GenerateData();
     virtual void UpdateNeighbors(itkIndex3 const & index, itkImageF3 const * arg1, itkImageF3 * arg2);
     virtual void ComputeGradient(itkIndex3 const & index, itkImageF3 const * output, itkImageUC3 const * labelImage, itkImageCVF33 * gradientImage);
 };


 class itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer {
   public:
     itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer();
     itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer(itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer const & p);
     itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer(itkFastMarchingUpwindGradientImageFilterIF3IF3 * p);
     ~itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer();
     itkFastMarchingUpwindGradientImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkFastMarchingUpwindGradientImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer const & r) const;
     itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer & operator=(itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer const & r);
     itkFastMarchingUpwindGradientImageFilterIF3IF3_Pointer & operator=(itkFastMarchingUpwindGradientImageFilterIF3IF3 * r);
     itkFastMarchingUpwindGradientImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


