# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkAbsImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkAbsImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkAbsImageFilterPython
            return _itkAbsImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkAbsImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkAbsImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkAbsImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import itkEventObjectsPython
import pyBasePython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import ITKRegionsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkImagePython
import itkFixedArrayPython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkImageSourcePython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterAPython
def itkAbsImageFilterID3ID3_New():
  return itkAbsImageFilterID3ID3.New()

def itkAbsImageFilterID3ID3_Superclass_New():
  return itkAbsImageFilterID3ID3_Superclass.New()

def itkAbsImageFilterID2ID2_New():
  return itkAbsImageFilterID2ID2.New()

def itkAbsImageFilterID2ID2_Superclass_New():
  return itkAbsImageFilterID2ID2_Superclass.New()

def itkAbsImageFilterIF3IF3_New():
  return itkAbsImageFilterIF3IF3.New()

def itkAbsImageFilterIF3IF3_Superclass_New():
  return itkAbsImageFilterIF3IF3_Superclass.New()

def itkAbsImageFilterIF2IF2_New():
  return itkAbsImageFilterIF2IF2.New()

def itkAbsImageFilterIF2IF2_Superclass_New():
  return itkAbsImageFilterIF2IF2_Superclass.New()

def itkAbsImageFilterIUS3IUS3_New():
  return itkAbsImageFilterIUS3IUS3.New()

def itkAbsImageFilterIUS3IUS3_Superclass_New():
  return itkAbsImageFilterIUS3IUS3_Superclass.New()

def itkAbsImageFilterIUS2IUS2_New():
  return itkAbsImageFilterIUS2IUS2.New()

def itkAbsImageFilterIUS2IUS2_Superclass_New():
  return itkAbsImageFilterIUS2IUS2_Superclass.New()

def itkAbsImageFilterIUL3IUL3_New():
  return itkAbsImageFilterIUL3IUL3.New()

def itkAbsImageFilterIUL3IUL3_Superclass_New():
  return itkAbsImageFilterIUL3IUL3_Superclass.New()

def itkAbsImageFilterIUL2IUL2_New():
  return itkAbsImageFilterIUL2IUL2.New()

def itkAbsImageFilterIUL2IUL2_Superclass_New():
  return itkAbsImageFilterIUL2IUL2_Superclass.New()

def itkAbsImageFilterIUC3IUC3_New():
  return itkAbsImageFilterIUC3IUC3.New()

def itkAbsImageFilterIUC3IUC3_Superclass_New():
  return itkAbsImageFilterIUC3IUC3_Superclass.New()

def itkAbsImageFilterIUC2IUC2_New():
  return itkAbsImageFilterIUC2IUC2.New()

def itkAbsImageFilterIUC2IUC2_Superclass_New():
  return itkAbsImageFilterIUC2IUC2_Superclass.New()

class itkAbsImageFilterID2ID2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    """Proxy of C++ itkAbsImageFilterID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(double,double)>
        GetFunctor(self) -> itk::Function::Abs<(double,double)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(double,double)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterID2ID2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterID2ID2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterID2ID2_Superclass
        
        Create a new object of the class itkAbsImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterID2ID2_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass_GetFunctor,None,itkAbsImageFilterID2ID2_Superclass)
itkAbsImageFilterID2ID2_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass_SetFunctor,None,itkAbsImageFilterID2ID2_Superclass)
itkAbsImageFilterID2ID2_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass_GetPointer,None,itkAbsImageFilterID2ID2_Superclass)
itkAbsImageFilterID2ID2_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass_swigregister
itkAbsImageFilterID2ID2_Superclass_swigregister(itkAbsImageFilterID2ID2_Superclass)

def itkAbsImageFilterID2ID2_Superclass___New_orig__():
  """itkAbsImageFilterID2ID2_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass___New_orig__()

def itkAbsImageFilterID2ID2_Superclass_cast(*args):
  """itkAbsImageFilterID2ID2_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterID2ID2_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_Superclass_cast(*args)

class itkAbsImageFilterID3ID3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    """Proxy of C++ itkAbsImageFilterID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(double,double)>
        GetFunctor(self) -> itk::Function::Abs<(double,double)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(double,double)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterID3ID3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterID3ID3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterID3ID3_Superclass
        
        Create a new object of the class itkAbsImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterID3ID3_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass_GetFunctor,None,itkAbsImageFilterID3ID3_Superclass)
itkAbsImageFilterID3ID3_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass_SetFunctor,None,itkAbsImageFilterID3ID3_Superclass)
itkAbsImageFilterID3ID3_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass_GetPointer,None,itkAbsImageFilterID3ID3_Superclass)
itkAbsImageFilterID3ID3_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass_swigregister
itkAbsImageFilterID3ID3_Superclass_swigregister(itkAbsImageFilterID3ID3_Superclass)

def itkAbsImageFilterID3ID3_Superclass___New_orig__():
  """itkAbsImageFilterID3ID3_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass___New_orig__()

def itkAbsImageFilterID3ID3_Superclass_cast(*args):
  """itkAbsImageFilterID3ID3_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterID3ID3_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_Superclass_cast(*args)

class itkAbsImageFilterIF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkAbsImageFilterIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(float,float)>
        GetFunctor(self) -> itk::Function::Abs<(float,float)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(float,float)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIF2IF2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIF2IF2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIF2IF2_Superclass
        
        Create a new object of the class itkAbsImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIF2IF2_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass_GetFunctor,None,itkAbsImageFilterIF2IF2_Superclass)
itkAbsImageFilterIF2IF2_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass_SetFunctor,None,itkAbsImageFilterIF2IF2_Superclass)
itkAbsImageFilterIF2IF2_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass_GetPointer,None,itkAbsImageFilterIF2IF2_Superclass)
itkAbsImageFilterIF2IF2_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass_swigregister
itkAbsImageFilterIF2IF2_Superclass_swigregister(itkAbsImageFilterIF2IF2_Superclass)

def itkAbsImageFilterIF2IF2_Superclass___New_orig__():
  """itkAbsImageFilterIF2IF2_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass___New_orig__()

def itkAbsImageFilterIF2IF2_Superclass_cast(*args):
  """itkAbsImageFilterIF2IF2_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterIF2IF2_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_Superclass_cast(*args)

class itkAbsImageFilterIF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkAbsImageFilterIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(float,float)>
        GetFunctor(self) -> itk::Function::Abs<(float,float)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(float,float)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIF3IF3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIF3IF3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIF3IF3_Superclass
        
        Create a new object of the class itkAbsImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIF3IF3_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass_GetFunctor,None,itkAbsImageFilterIF3IF3_Superclass)
itkAbsImageFilterIF3IF3_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass_SetFunctor,None,itkAbsImageFilterIF3IF3_Superclass)
itkAbsImageFilterIF3IF3_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass_GetPointer,None,itkAbsImageFilterIF3IF3_Superclass)
itkAbsImageFilterIF3IF3_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass_swigregister
itkAbsImageFilterIF3IF3_Superclass_swigregister(itkAbsImageFilterIF3IF3_Superclass)

def itkAbsImageFilterIF3IF3_Superclass___New_orig__():
  """itkAbsImageFilterIF3IF3_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass___New_orig__()

def itkAbsImageFilterIF3IF3_Superclass_cast(*args):
  """itkAbsImageFilterIF3IF3_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterIF3IF3_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_Superclass_cast(*args)

class itkAbsImageFilterIUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkAbsImageFilterIUC2IUC2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Abs<(unsigned char,unsigned char)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(unsigned char,unsigned char)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUC2IUC2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUC2IUC2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUC2IUC2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUC2IUC2_Superclass
        
        Create a new object of the class itkAbsImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUC2IUC2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass_GetFunctor,None,itkAbsImageFilterIUC2IUC2_Superclass)
itkAbsImageFilterIUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass_SetFunctor,None,itkAbsImageFilterIUC2IUC2_Superclass)
itkAbsImageFilterIUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass_GetPointer,None,itkAbsImageFilterIUC2IUC2_Superclass)
itkAbsImageFilterIUC2IUC2_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass_swigregister
itkAbsImageFilterIUC2IUC2_Superclass_swigregister(itkAbsImageFilterIUC2IUC2_Superclass)

def itkAbsImageFilterIUC2IUC2_Superclass___New_orig__():
  """itkAbsImageFilterIUC2IUC2_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass___New_orig__()

def itkAbsImageFilterIUC2IUC2_Superclass_cast(*args):
  """itkAbsImageFilterIUC2IUC2_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterIUC2IUC2_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_Superclass_cast(*args)

class itkAbsImageFilterIUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkAbsImageFilterIUC3IUC3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(unsigned char,unsigned char)>
        GetFunctor(self) -> itk::Function::Abs<(unsigned char,unsigned char)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(unsigned char,unsigned char)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUC3IUC3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUC3IUC3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUC3IUC3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUC3IUC3_Superclass
        
        Create a new object of the class itkAbsImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUC3IUC3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass_GetFunctor,None,itkAbsImageFilterIUC3IUC3_Superclass)
itkAbsImageFilterIUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass_SetFunctor,None,itkAbsImageFilterIUC3IUC3_Superclass)
itkAbsImageFilterIUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass_GetPointer,None,itkAbsImageFilterIUC3IUC3_Superclass)
itkAbsImageFilterIUC3IUC3_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass_swigregister
itkAbsImageFilterIUC3IUC3_Superclass_swigregister(itkAbsImageFilterIUC3IUC3_Superclass)

def itkAbsImageFilterIUC3IUC3_Superclass___New_orig__():
  """itkAbsImageFilterIUC3IUC3_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass___New_orig__()

def itkAbsImageFilterIUC3IUC3_Superclass_cast(*args):
  """itkAbsImageFilterIUC3IUC3_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterIUC3IUC3_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_Superclass_cast(*args)

class itkAbsImageFilterIUL2IUL2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    """Proxy of C++ itkAbsImageFilterIUL2IUL2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Abs<(unsigned long,unsigned long)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(unsigned long,unsigned long)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUL2IUL2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUL2IUL2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUL2IUL2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUL2IUL2_Superclass
        
        Create a new object of the class itkAbsImageFilterIUL2IUL2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUL2IUL2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUL2IUL2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUL2IUL2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUL2IUL2_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass_GetFunctor,None,itkAbsImageFilterIUL2IUL2_Superclass)
itkAbsImageFilterIUL2IUL2_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass_SetFunctor,None,itkAbsImageFilterIUL2IUL2_Superclass)
itkAbsImageFilterIUL2IUL2_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass_GetPointer,None,itkAbsImageFilterIUL2IUL2_Superclass)
itkAbsImageFilterIUL2IUL2_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass_swigregister
itkAbsImageFilterIUL2IUL2_Superclass_swigregister(itkAbsImageFilterIUL2IUL2_Superclass)

def itkAbsImageFilterIUL2IUL2_Superclass___New_orig__():
  """itkAbsImageFilterIUL2IUL2_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass___New_orig__()

def itkAbsImageFilterIUL2IUL2_Superclass_cast(*args):
  """itkAbsImageFilterIUL2IUL2_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterIUL2IUL2_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_Superclass_cast(*args)

class itkAbsImageFilterIUL3IUL3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    """Proxy of C++ itkAbsImageFilterIUL3IUL3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(unsigned long,unsigned long)>
        GetFunctor(self) -> itk::Function::Abs<(unsigned long,unsigned long)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(unsigned long,unsigned long)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUL3IUL3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUL3IUL3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUL3IUL3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUL3IUL3_Superclass
        
        Create a new object of the class itkAbsImageFilterIUL3IUL3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUL3IUL3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUL3IUL3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUL3IUL3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUL3IUL3_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass_GetFunctor,None,itkAbsImageFilterIUL3IUL3_Superclass)
itkAbsImageFilterIUL3IUL3_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass_SetFunctor,None,itkAbsImageFilterIUL3IUL3_Superclass)
itkAbsImageFilterIUL3IUL3_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass_GetPointer,None,itkAbsImageFilterIUL3IUL3_Superclass)
itkAbsImageFilterIUL3IUL3_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass_swigregister
itkAbsImageFilterIUL3IUL3_Superclass_swigregister(itkAbsImageFilterIUL3IUL3_Superclass)

def itkAbsImageFilterIUL3IUL3_Superclass___New_orig__():
  """itkAbsImageFilterIUL3IUL3_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass___New_orig__()

def itkAbsImageFilterIUL3IUL3_Superclass_cast(*args):
  """itkAbsImageFilterIUL3IUL3_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterIUL3IUL3_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_Superclass_cast(*args)

class itkAbsImageFilterIUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkAbsImageFilterIUS2IUS2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Abs<(unsigned short,unsigned short)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(unsigned short,unsigned short)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUS2IUS2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUS2IUS2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUS2IUS2_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUS2IUS2_Superclass
        
        Create a new object of the class itkAbsImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUS2IUS2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass_GetFunctor,None,itkAbsImageFilterIUS2IUS2_Superclass)
itkAbsImageFilterIUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass_SetFunctor,None,itkAbsImageFilterIUS2IUS2_Superclass)
itkAbsImageFilterIUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass_GetPointer,None,itkAbsImageFilterIUS2IUS2_Superclass)
itkAbsImageFilterIUS2IUS2_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass_swigregister
itkAbsImageFilterIUS2IUS2_Superclass_swigregister(itkAbsImageFilterIUS2IUS2_Superclass)

def itkAbsImageFilterIUS2IUS2_Superclass___New_orig__():
  """itkAbsImageFilterIUS2IUS2_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass___New_orig__()

def itkAbsImageFilterIUS2IUS2_Superclass_cast(*args):
  """itkAbsImageFilterIUS2IUS2_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterIUS2IUS2_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_Superclass_cast(*args)

class itkAbsImageFilterIUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkAbsImageFilterIUS3IUS3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def GetFunctor(self, *args):
        """
        GetFunctor(self) -> itk::Function::Abs<(unsigned short,unsigned short)>
        GetFunctor(self) -> itk::Function::Abs<(unsigned short,unsigned short)>
        """
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, *args):
        """SetFunctor(self, itk::Function::Abs<(unsigned short,unsigned short)> functor)"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass_SetFunctor(self, *args)

    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUS3IUS3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUS3IUS3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUS3IUS3_Superclass"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUS3IUS3_Superclass
        
        Create a new object of the class itkAbsImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUS3IUS3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass_GetFunctor,None,itkAbsImageFilterIUS3IUS3_Superclass)
itkAbsImageFilterIUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass_SetFunctor,None,itkAbsImageFilterIUS3IUS3_Superclass)
itkAbsImageFilterIUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass_GetPointer,None,itkAbsImageFilterIUS3IUS3_Superclass)
itkAbsImageFilterIUS3IUS3_Superclass_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass_swigregister
itkAbsImageFilterIUS3IUS3_Superclass_swigregister(itkAbsImageFilterIUS3IUS3_Superclass)

def itkAbsImageFilterIUS3IUS3_Superclass___New_orig__():
  """itkAbsImageFilterIUS3IUS3_Superclass___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass___New_orig__()

def itkAbsImageFilterIUS3IUS3_Superclass_cast(*args):
  """itkAbsImageFilterIUS3IUS3_Superclass_cast(itkLightObject obj) -> itkAbsImageFilterIUS3IUS3_Superclass"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_Superclass_cast(*args)

class itkAbsImageFilterID2ID2(itkAbsImageFilterID2ID2_Superclass):
    """Proxy of C++ itkAbsImageFilterID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterID2ID2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterID2ID2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterID2ID2
        
        Create a new object of the class itkAbsImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterID2ID2.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterID2ID2_GetPointer,None,itkAbsImageFilterID2ID2)
itkAbsImageFilterID2ID2_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_swigregister
itkAbsImageFilterID2ID2_swigregister(itkAbsImageFilterID2ID2)

def itkAbsImageFilterID2ID2___New_orig__():
  """itkAbsImageFilterID2ID2___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2___New_orig__()

def itkAbsImageFilterID2ID2_cast(*args):
  """itkAbsImageFilterID2ID2_cast(itkLightObject obj) -> itkAbsImageFilterID2ID2"""
  return _itkAbsImageFilterPython.itkAbsImageFilterID2ID2_cast(*args)

class itkAbsImageFilterID3ID3(itkAbsImageFilterID3ID3_Superclass):
    """Proxy of C++ itkAbsImageFilterID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterID3ID3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterID3ID3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterID3ID3
        
        Create a new object of the class itkAbsImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterID3ID3.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterID3ID3_GetPointer,None,itkAbsImageFilterID3ID3)
itkAbsImageFilterID3ID3_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_swigregister
itkAbsImageFilterID3ID3_swigregister(itkAbsImageFilterID3ID3)

def itkAbsImageFilterID3ID3___New_orig__():
  """itkAbsImageFilterID3ID3___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3___New_orig__()

def itkAbsImageFilterID3ID3_cast(*args):
  """itkAbsImageFilterID3ID3_cast(itkLightObject obj) -> itkAbsImageFilterID3ID3"""
  return _itkAbsImageFilterPython.itkAbsImageFilterID3ID3_cast(*args)

class itkAbsImageFilterIF2IF2(itkAbsImageFilterIF2IF2_Superclass):
    """Proxy of C++ itkAbsImageFilterIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIF2IF2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIF2IF2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIF2IF2
        
        Create a new object of the class itkAbsImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIF2IF2.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_GetPointer,None,itkAbsImageFilterIF2IF2)
itkAbsImageFilterIF2IF2_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_swigregister
itkAbsImageFilterIF2IF2_swigregister(itkAbsImageFilterIF2IF2)

def itkAbsImageFilterIF2IF2___New_orig__():
  """itkAbsImageFilterIF2IF2___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2___New_orig__()

def itkAbsImageFilterIF2IF2_cast(*args):
  """itkAbsImageFilterIF2IF2_cast(itkLightObject obj) -> itkAbsImageFilterIF2IF2"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIF2IF2_cast(*args)

class itkAbsImageFilterIF3IF3(itkAbsImageFilterIF3IF3_Superclass):
    """Proxy of C++ itkAbsImageFilterIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIF3IF3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIF3IF3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIF3IF3
        
        Create a new object of the class itkAbsImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIF3IF3.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_GetPointer,None,itkAbsImageFilterIF3IF3)
itkAbsImageFilterIF3IF3_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_swigregister
itkAbsImageFilterIF3IF3_swigregister(itkAbsImageFilterIF3IF3)

def itkAbsImageFilterIF3IF3___New_orig__():
  """itkAbsImageFilterIF3IF3___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3___New_orig__()

def itkAbsImageFilterIF3IF3_cast(*args):
  """itkAbsImageFilterIF3IF3_cast(itkLightObject obj) -> itkAbsImageFilterIF3IF3"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIF3IF3_cast(*args)

class itkAbsImageFilterIUC2IUC2(itkAbsImageFilterIUC2IUC2_Superclass):
    """Proxy of C++ itkAbsImageFilterIUC2IUC2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUC2IUC2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUC2IUC2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUC2IUC2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUC2IUC2
        
        Create a new object of the class itkAbsImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUC2IUC2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_GetPointer,None,itkAbsImageFilterIUC2IUC2)
itkAbsImageFilterIUC2IUC2_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_swigregister
itkAbsImageFilterIUC2IUC2_swigregister(itkAbsImageFilterIUC2IUC2)

def itkAbsImageFilterIUC2IUC2___New_orig__():
  """itkAbsImageFilterIUC2IUC2___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2___New_orig__()

def itkAbsImageFilterIUC2IUC2_cast(*args):
  """itkAbsImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkAbsImageFilterIUC2IUC2"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUC2IUC2_cast(*args)

class itkAbsImageFilterIUC3IUC3(itkAbsImageFilterIUC3IUC3_Superclass):
    """Proxy of C++ itkAbsImageFilterIUC3IUC3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUC3IUC3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUC3IUC3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUC3IUC3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUC3IUC3
        
        Create a new object of the class itkAbsImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUC3IUC3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_GetPointer,None,itkAbsImageFilterIUC3IUC3)
itkAbsImageFilterIUC3IUC3_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_swigregister
itkAbsImageFilterIUC3IUC3_swigregister(itkAbsImageFilterIUC3IUC3)

def itkAbsImageFilterIUC3IUC3___New_orig__():
  """itkAbsImageFilterIUC3IUC3___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3___New_orig__()

def itkAbsImageFilterIUC3IUC3_cast(*args):
  """itkAbsImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkAbsImageFilterIUC3IUC3"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUC3IUC3_cast(*args)

class itkAbsImageFilterIUL2IUL2(itkAbsImageFilterIUL2IUL2_Superclass):
    """Proxy of C++ itkAbsImageFilterIUL2IUL2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUL2IUL2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUL2IUL2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUL2IUL2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUL2IUL2
        
        Create a new object of the class itkAbsImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUL2IUL2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUL2IUL2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUL2IUL2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUL2IUL2.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_GetPointer,None,itkAbsImageFilterIUL2IUL2)
itkAbsImageFilterIUL2IUL2_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_swigregister
itkAbsImageFilterIUL2IUL2_swigregister(itkAbsImageFilterIUL2IUL2)

def itkAbsImageFilterIUL2IUL2___New_orig__():
  """itkAbsImageFilterIUL2IUL2___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2___New_orig__()

def itkAbsImageFilterIUL2IUL2_cast(*args):
  """itkAbsImageFilterIUL2IUL2_cast(itkLightObject obj) -> itkAbsImageFilterIUL2IUL2"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUL2IUL2_cast(*args)

class itkAbsImageFilterIUL3IUL3(itkAbsImageFilterIUL3IUL3_Superclass):
    """Proxy of C++ itkAbsImageFilterIUL3IUL3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUL3IUL3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUL3IUL3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUL3IUL3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUL3IUL3
        
        Create a new object of the class itkAbsImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUL3IUL3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUL3IUL3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUL3IUL3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUL3IUL3.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_GetPointer,None,itkAbsImageFilterIUL3IUL3)
itkAbsImageFilterIUL3IUL3_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_swigregister
itkAbsImageFilterIUL3IUL3_swigregister(itkAbsImageFilterIUL3IUL3)

def itkAbsImageFilterIUL3IUL3___New_orig__():
  """itkAbsImageFilterIUL3IUL3___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3___New_orig__()

def itkAbsImageFilterIUL3IUL3_cast(*args):
  """itkAbsImageFilterIUL3IUL3_cast(itkLightObject obj) -> itkAbsImageFilterIUL3IUL3"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUL3IUL3_cast(*args)

class itkAbsImageFilterIUS2IUS2(itkAbsImageFilterIUS2IUS2_Superclass):
    """Proxy of C++ itkAbsImageFilterIUS2IUS2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUS2IUS2
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUS2IUS2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUS2IUS2"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUS2IUS2
        
        Create a new object of the class itkAbsImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUS2IUS2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_GetPointer,None,itkAbsImageFilterIUS2IUS2)
itkAbsImageFilterIUS2IUS2_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_swigregister
itkAbsImageFilterIUS2IUS2_swigregister(itkAbsImageFilterIUS2IUS2)

def itkAbsImageFilterIUS2IUS2___New_orig__():
  """itkAbsImageFilterIUS2IUS2___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2___New_orig__()

def itkAbsImageFilterIUS2IUS2_cast(*args):
  """itkAbsImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkAbsImageFilterIUS2IUS2"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUS2IUS2_cast(*args)

class itkAbsImageFilterIUS3IUS3(itkAbsImageFilterIUS3IUS3_Superclass):
    """Proxy of C++ itkAbsImageFilterIUS3IUS3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ConvertibleCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_ConvertibleCheck
    InputGreaterThanIntCheck = _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_InputGreaterThanIntCheck
    def __New_orig__():
        """__New_orig__()"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkAbsImageFilterPython.delete_itkAbsImageFilterIUS3IUS3
    def cast(*args):
        """cast(itkLightObject obj) -> itkAbsImageFilterIUS3IUS3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkAbsImageFilterIUS3IUS3"""
        return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkAbsImageFilterIUS3IUS3
        
        Create a new object of the class itkAbsImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkAbsImageFilterIUS3IUS3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkAbsImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAbsImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAbsImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_GetPointer,None,itkAbsImageFilterIUS3IUS3)
itkAbsImageFilterIUS3IUS3_swigregister = _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_swigregister
itkAbsImageFilterIUS3IUS3_swigregister(itkAbsImageFilterIUS3IUS3)

def itkAbsImageFilterIUS3IUS3___New_orig__():
  """itkAbsImageFilterIUS3IUS3___New_orig__()"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3___New_orig__()

def itkAbsImageFilterIUS3IUS3_cast(*args):
  """itkAbsImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkAbsImageFilterIUS3IUS3"""
  return _itkAbsImageFilterPython.itkAbsImageFilterIUS3IUS3_cast(*args)



