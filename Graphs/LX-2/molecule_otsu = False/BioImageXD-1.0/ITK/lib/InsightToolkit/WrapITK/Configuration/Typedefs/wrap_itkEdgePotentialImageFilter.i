// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkEdgePotentialImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkEdgePotentialImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkEdgePotentialImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkEdgePotentialImageFilterJava
#endif
#ifdef SWIGLUA
%module itkEdgePotentialImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkEdgePotentialImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkEdgePotentialImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkEdgePotentialImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkEdgePotentialImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkEdgePotentialImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkEdgePotentialImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkEdgePotentialImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkEdgePotentialImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkEdgePotentialImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkEdgePotentialImageFilterPython
#endif
#ifdef SWIGR
%module itkEdgePotentialImageFilterR
#endif
#ifdef SWIGRUBY
%module itkEdgePotentialImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkEdgePotentialImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkEdgePotentialImageFilterTcl
#endif
#ifdef SWIGXML
%module itkEdgePotentialImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Filtering.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterB.i
%import wrap_ITKRegions.i


%include itk.i
%include wrap_itkEdgePotentialImageFilter_ext.i


 class itkEdgePotentialImageFilterICVF22ID2_Pointer {
   public:
     itkEdgePotentialImageFilterICVF22ID2_Pointer();
     itkEdgePotentialImageFilterICVF22ID2_Pointer(itkEdgePotentialImageFilterICVF22ID2_Pointer const & p);
     itkEdgePotentialImageFilterICVF22ID2_Pointer(itkEdgePotentialImageFilterICVF22ID2 * p);
     ~itkEdgePotentialImageFilterICVF22ID2_Pointer();
     itkEdgePotentialImageFilterICVF22ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkEdgePotentialImageFilterICVF22ID2 * GetPointer() const;
     bool operator<(itkEdgePotentialImageFilterICVF22ID2_Pointer const & r) const;
     bool operator>(itkEdgePotentialImageFilterICVF22ID2_Pointer const & r) const;
     bool operator<=(itkEdgePotentialImageFilterICVF22ID2_Pointer const & r) const;
     bool operator>=(itkEdgePotentialImageFilterICVF22ID2_Pointer const & r) const;
     itkEdgePotentialImageFilterICVF22ID2_Pointer & operator=(itkEdgePotentialImageFilterICVF22ID2_Pointer const & r);
     itkEdgePotentialImageFilterICVF22ID2_Pointer & operator=(itkEdgePotentialImageFilterICVF22ID2 * r);
     itkEdgePotentialImageFilterICVF22ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkEdgePotentialImageFilterICVF22ID2_Superclass : public itkInPlaceImageFilterICVF22ID2 {
   public:
     static itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::EdgePotential< itk::CovariantVector< float, 2u >, double > & GetFunctor();
     itk::Functor::EdgePotential< itk::CovariantVector< float, 2u >, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::EdgePotential< itk::CovariantVector< float, 2u >, double > const & functor);
   private:
     itkEdgePotentialImageFilterICVF22ID2_Superclass(itkEdgePotentialImageFilterICVF22ID2_Superclass const & arg0);
     void operator=(itkEdgePotentialImageFilterICVF22ID2_Superclass const & arg0);
   protected:
     itkEdgePotentialImageFilterICVF22ID2_Superclass();
     ~itkEdgePotentialImageFilterICVF22ID2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer {
   public:
     itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer();
     itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer(itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer const & p);
     itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer(itkEdgePotentialImageFilterICVF22ID2_Superclass * p);
     ~itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer();
     itkEdgePotentialImageFilterICVF22ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkEdgePotentialImageFilterICVF22ID2_Superclass * GetPointer() const;
     bool operator<(itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer const & r) const;
     bool operator>(itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer const & r) const;
     itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer & operator=(itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer const & r);
     itkEdgePotentialImageFilterICVF22ID2_Superclass_Pointer & operator=(itkEdgePotentialImageFilterICVF22ID2_Superclass * r);
     itkEdgePotentialImageFilterICVF22ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkEdgePotentialImageFilterICVF22IF2_Pointer {
   public:
     itkEdgePotentialImageFilterICVF22IF2_Pointer();
     itkEdgePotentialImageFilterICVF22IF2_Pointer(itkEdgePotentialImageFilterICVF22IF2_Pointer const & p);
     itkEdgePotentialImageFilterICVF22IF2_Pointer(itkEdgePotentialImageFilterICVF22IF2 * p);
     ~itkEdgePotentialImageFilterICVF22IF2_Pointer();
     itkEdgePotentialImageFilterICVF22IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkEdgePotentialImageFilterICVF22IF2 * GetPointer() const;
     bool operator<(itkEdgePotentialImageFilterICVF22IF2_Pointer const & r) const;
     bool operator>(itkEdgePotentialImageFilterICVF22IF2_Pointer const & r) const;
     bool operator<=(itkEdgePotentialImageFilterICVF22IF2_Pointer const & r) const;
     bool operator>=(itkEdgePotentialImageFilterICVF22IF2_Pointer const & r) const;
     itkEdgePotentialImageFilterICVF22IF2_Pointer & operator=(itkEdgePotentialImageFilterICVF22IF2_Pointer const & r);
     itkEdgePotentialImageFilterICVF22IF2_Pointer & operator=(itkEdgePotentialImageFilterICVF22IF2 * r);
     itkEdgePotentialImageFilterICVF22IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkEdgePotentialImageFilterICVF22IF2_Superclass : public itkInPlaceImageFilterICVF22IF2 {
   public:
     static itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::EdgePotential< itk::CovariantVector< float, 2u >, float > & GetFunctor();
     itk::Functor::EdgePotential< itk::CovariantVector< float, 2u >, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::EdgePotential< itk::CovariantVector< float, 2u >, float > const & functor);
   private:
     itkEdgePotentialImageFilterICVF22IF2_Superclass(itkEdgePotentialImageFilterICVF22IF2_Superclass const & arg0);
     void operator=(itkEdgePotentialImageFilterICVF22IF2_Superclass const & arg0);
   protected:
     itkEdgePotentialImageFilterICVF22IF2_Superclass();
     ~itkEdgePotentialImageFilterICVF22IF2_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer {
   public:
     itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer();
     itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer(itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer const & p);
     itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer(itkEdgePotentialImageFilterICVF22IF2_Superclass * p);
     ~itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer();
     itkEdgePotentialImageFilterICVF22IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkEdgePotentialImageFilterICVF22IF2_Superclass * GetPointer() const;
     bool operator<(itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer const & r) const;
     bool operator>(itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer const & r) const;
     itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer & operator=(itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer const & r);
     itkEdgePotentialImageFilterICVF22IF2_Superclass_Pointer & operator=(itkEdgePotentialImageFilterICVF22IF2_Superclass * r);
     itkEdgePotentialImageFilterICVF22IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkEdgePotentialImageFilterICVF33ID3_Pointer {
   public:
     itkEdgePotentialImageFilterICVF33ID3_Pointer();
     itkEdgePotentialImageFilterICVF33ID3_Pointer(itkEdgePotentialImageFilterICVF33ID3_Pointer const & p);
     itkEdgePotentialImageFilterICVF33ID3_Pointer(itkEdgePotentialImageFilterICVF33ID3 * p);
     ~itkEdgePotentialImageFilterICVF33ID3_Pointer();
     itkEdgePotentialImageFilterICVF33ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkEdgePotentialImageFilterICVF33ID3 * GetPointer() const;
     bool operator<(itkEdgePotentialImageFilterICVF33ID3_Pointer const & r) const;
     bool operator>(itkEdgePotentialImageFilterICVF33ID3_Pointer const & r) const;
     bool operator<=(itkEdgePotentialImageFilterICVF33ID3_Pointer const & r) const;
     bool operator>=(itkEdgePotentialImageFilterICVF33ID3_Pointer const & r) const;
     itkEdgePotentialImageFilterICVF33ID3_Pointer & operator=(itkEdgePotentialImageFilterICVF33ID3_Pointer const & r);
     itkEdgePotentialImageFilterICVF33ID3_Pointer & operator=(itkEdgePotentialImageFilterICVF33ID3 * r);
     itkEdgePotentialImageFilterICVF33ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkEdgePotentialImageFilterICVF33ID3_Superclass : public itkInPlaceImageFilterICVF33ID3 {
   public:
     static itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::EdgePotential< itk::CovariantVector< float, 3u >, double > & GetFunctor();
     itk::Functor::EdgePotential< itk::CovariantVector< float, 3u >, double > const & GetFunctor() const;
     void SetFunctor(itk::Functor::EdgePotential< itk::CovariantVector< float, 3u >, double > const & functor);
   private:
     itkEdgePotentialImageFilterICVF33ID3_Superclass(itkEdgePotentialImageFilterICVF33ID3_Superclass const & arg0);
     void operator=(itkEdgePotentialImageFilterICVF33ID3_Superclass const & arg0);
   protected:
     itkEdgePotentialImageFilterICVF33ID3_Superclass();
     ~itkEdgePotentialImageFilterICVF33ID3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer {
   public:
     itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer();
     itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer(itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer const & p);
     itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer(itkEdgePotentialImageFilterICVF33ID3_Superclass * p);
     ~itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer();
     itkEdgePotentialImageFilterICVF33ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkEdgePotentialImageFilterICVF33ID3_Superclass * GetPointer() const;
     bool operator<(itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer const & r) const;
     bool operator>(itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer const & r) const;
     itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer & operator=(itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer const & r);
     itkEdgePotentialImageFilterICVF33ID3_Superclass_Pointer & operator=(itkEdgePotentialImageFilterICVF33ID3_Superclass * r);
     itkEdgePotentialImageFilterICVF33ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkEdgePotentialImageFilterICVF33IF3_Pointer {
   public:
     itkEdgePotentialImageFilterICVF33IF3_Pointer();
     itkEdgePotentialImageFilterICVF33IF3_Pointer(itkEdgePotentialImageFilterICVF33IF3_Pointer const & p);
     itkEdgePotentialImageFilterICVF33IF3_Pointer(itkEdgePotentialImageFilterICVF33IF3 * p);
     ~itkEdgePotentialImageFilterICVF33IF3_Pointer();
     itkEdgePotentialImageFilterICVF33IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkEdgePotentialImageFilterICVF33IF3 * GetPointer() const;
     bool operator<(itkEdgePotentialImageFilterICVF33IF3_Pointer const & r) const;
     bool operator>(itkEdgePotentialImageFilterICVF33IF3_Pointer const & r) const;
     bool operator<=(itkEdgePotentialImageFilterICVF33IF3_Pointer const & r) const;
     bool operator>=(itkEdgePotentialImageFilterICVF33IF3_Pointer const & r) const;
     itkEdgePotentialImageFilterICVF33IF3_Pointer & operator=(itkEdgePotentialImageFilterICVF33IF3_Pointer const & r);
     itkEdgePotentialImageFilterICVF33IF3_Pointer & operator=(itkEdgePotentialImageFilterICVF33IF3 * r);
     itkEdgePotentialImageFilterICVF33IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkEdgePotentialImageFilterICVF33IF3_Superclass : public itkInPlaceImageFilterICVF33IF3 {
   public:
     static itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itk::Functor::EdgePotential< itk::CovariantVector< float, 3u >, float > & GetFunctor();
     itk::Functor::EdgePotential< itk::CovariantVector< float, 3u >, float > const & GetFunctor() const;
     void SetFunctor(itk::Functor::EdgePotential< itk::CovariantVector< float, 3u >, float > const & functor);
   private:
     itkEdgePotentialImageFilterICVF33IF3_Superclass(itkEdgePotentialImageFilterICVF33IF3_Superclass const & arg0);
     void operator=(itkEdgePotentialImageFilterICVF33IF3_Superclass const & arg0);
   protected:
     itkEdgePotentialImageFilterICVF33IF3_Superclass();
     ~itkEdgePotentialImageFilterICVF33IF3_Superclass();
     virtual void GenerateOutputInformation();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer {
   public:
     itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer();
     itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer(itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer const & p);
     itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer(itkEdgePotentialImageFilterICVF33IF3_Superclass * p);
     ~itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer();
     itkEdgePotentialImageFilterICVF33IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkEdgePotentialImageFilterICVF33IF3_Superclass * GetPointer() const;
     bool operator<(itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer const & r) const;
     bool operator>(itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer const & r) const;
     itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer & operator=(itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer const & r);
     itkEdgePotentialImageFilterICVF33IF3_Superclass_Pointer & operator=(itkEdgePotentialImageFilterICVF33IF3_Superclass * r);
     itkEdgePotentialImageFilterICVF33IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkEdgePotentialImageFilterICVF22ID2 : public itkEdgePotentialImageFilterICVF22ID2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkEdgePotentialImageFilterICVF22ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkEdgePotentialImageFilterICVF22ID2(itkEdgePotentialImageFilterICVF22ID2 const & arg0);
     void operator=(itkEdgePotentialImageFilterICVF22ID2 const & arg0);
   protected:
     itkEdgePotentialImageFilterICVF22ID2();
     ~itkEdgePotentialImageFilterICVF22ID2();
 };


 class itkEdgePotentialImageFilterICVF22IF2 : public itkEdgePotentialImageFilterICVF22IF2_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkEdgePotentialImageFilterICVF22IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkEdgePotentialImageFilterICVF22IF2(itkEdgePotentialImageFilterICVF22IF2 const & arg0);
     void operator=(itkEdgePotentialImageFilterICVF22IF2 const & arg0);
   protected:
     itkEdgePotentialImageFilterICVF22IF2();
     ~itkEdgePotentialImageFilterICVF22IF2();
 };


 class itkEdgePotentialImageFilterICVF33ID3 : public itkEdgePotentialImageFilterICVF33ID3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkEdgePotentialImageFilterICVF33ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkEdgePotentialImageFilterICVF33ID3(itkEdgePotentialImageFilterICVF33ID3 const & arg0);
     void operator=(itkEdgePotentialImageFilterICVF33ID3 const & arg0);
   protected:
     itkEdgePotentialImageFilterICVF33ID3();
     ~itkEdgePotentialImageFilterICVF33ID3();
 };


 class itkEdgePotentialImageFilterICVF33IF3 : public itkEdgePotentialImageFilterICVF33IF3_Superclass {
   public:
     enum  {  InputHasNumericTraitsCheck = 1 };
     static itkEdgePotentialImageFilterICVF33IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkEdgePotentialImageFilterICVF33IF3(itkEdgePotentialImageFilterICVF33IF3 const & arg0);
     void operator=(itkEdgePotentialImageFilterICVF33IF3 const & arg0);
   protected:
     itkEdgePotentialImageFilterICVF33IF3();
     ~itkEdgePotentialImageFilterICVF33IF3();
 };


