// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkHConcaveImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkHConcaveImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkHConcaveImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkHConcaveImageFilterJava
#endif
#ifdef SWIGLUA
%module itkHConcaveImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkHConcaveImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkHConcaveImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkHConcaveImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkHConcaveImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkHConcaveImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkHConcaveImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkHConcaveImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkHConcaveImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkHConcaveImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkHConcaveImageFilterPython
#endif
#ifdef SWIGR
%module itkHConcaveImageFilterR
#endif
#ifdef SWIGRUBY
%module itkHConcaveImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkHConcaveImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkHConcaveImageFilterTcl
#endif
#ifdef SWIGXML
%module itkHConcaveImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Morphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkHConcaveImageFilter_ext.i


 class itkHConcaveImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(double const _arg);
     virtual double GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterID2ID2(itkHConcaveImageFilterID2ID2 const & arg0);
     void operator=(itkHConcaveImageFilterID2ID2 const & arg0);
   protected:
     itkHConcaveImageFilterID2ID2();
     ~itkHConcaveImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterID2ID2_Pointer {
   public:
     itkHConcaveImageFilterID2ID2_Pointer();
     itkHConcaveImageFilterID2ID2_Pointer(itkHConcaveImageFilterID2ID2_Pointer const & p);
     itkHConcaveImageFilterID2ID2_Pointer(itkHConcaveImageFilterID2ID2 * p);
     ~itkHConcaveImageFilterID2ID2_Pointer();
     itkHConcaveImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterID2ID2_Pointer const & r) const;
     itkHConcaveImageFilterID2ID2_Pointer & operator=(itkHConcaveImageFilterID2ID2_Pointer const & r);
     itkHConcaveImageFilterID2ID2_Pointer & operator=(itkHConcaveImageFilterID2ID2 * r);
     itkHConcaveImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHConcaveImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(double const _arg);
     virtual double GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterID3ID3(itkHConcaveImageFilterID3ID3 const & arg0);
     void operator=(itkHConcaveImageFilterID3ID3 const & arg0);
   protected:
     itkHConcaveImageFilterID3ID3();
     ~itkHConcaveImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterID3ID3_Pointer {
   public:
     itkHConcaveImageFilterID3ID3_Pointer();
     itkHConcaveImageFilterID3ID3_Pointer(itkHConcaveImageFilterID3ID3_Pointer const & p);
     itkHConcaveImageFilterID3ID3_Pointer(itkHConcaveImageFilterID3ID3 * p);
     ~itkHConcaveImageFilterID3ID3_Pointer();
     itkHConcaveImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterID3ID3_Pointer const & r) const;
     itkHConcaveImageFilterID3ID3_Pointer & operator=(itkHConcaveImageFilterID3ID3_Pointer const & r);
     itkHConcaveImageFilterID3ID3_Pointer & operator=(itkHConcaveImageFilterID3ID3 * r);
     itkHConcaveImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHConcaveImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(float const _arg);
     virtual float GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterIF2IF2(itkHConcaveImageFilterIF2IF2 const & arg0);
     void operator=(itkHConcaveImageFilterIF2IF2 const & arg0);
   protected:
     itkHConcaveImageFilterIF2IF2();
     ~itkHConcaveImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterIF2IF2_Pointer {
   public:
     itkHConcaveImageFilterIF2IF2_Pointer();
     itkHConcaveImageFilterIF2IF2_Pointer(itkHConcaveImageFilterIF2IF2_Pointer const & p);
     itkHConcaveImageFilterIF2IF2_Pointer(itkHConcaveImageFilterIF2IF2 * p);
     ~itkHConcaveImageFilterIF2IF2_Pointer();
     itkHConcaveImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterIF2IF2_Pointer const & r) const;
     itkHConcaveImageFilterIF2IF2_Pointer & operator=(itkHConcaveImageFilterIF2IF2_Pointer const & r);
     itkHConcaveImageFilterIF2IF2_Pointer & operator=(itkHConcaveImageFilterIF2IF2 * r);
     itkHConcaveImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHConcaveImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(float const _arg);
     virtual float GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterIF3IF3(itkHConcaveImageFilterIF3IF3 const & arg0);
     void operator=(itkHConcaveImageFilterIF3IF3 const & arg0);
   protected:
     itkHConcaveImageFilterIF3IF3();
     ~itkHConcaveImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterIF3IF3_Pointer {
   public:
     itkHConcaveImageFilterIF3IF3_Pointer();
     itkHConcaveImageFilterIF3IF3_Pointer(itkHConcaveImageFilterIF3IF3_Pointer const & p);
     itkHConcaveImageFilterIF3IF3_Pointer(itkHConcaveImageFilterIF3IF3 * p);
     ~itkHConcaveImageFilterIF3IF3_Pointer();
     itkHConcaveImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterIF3IF3_Pointer const & r) const;
     itkHConcaveImageFilterIF3IF3_Pointer & operator=(itkHConcaveImageFilterIF3IF3_Pointer const & r);
     itkHConcaveImageFilterIF3IF3_Pointer & operator=(itkHConcaveImageFilterIF3IF3 * r);
     itkHConcaveImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHConcaveImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned char const _arg);
     virtual unsigned char GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterIUC2IUC2(itkHConcaveImageFilterIUC2IUC2 const & arg0);
     void operator=(itkHConcaveImageFilterIUC2IUC2 const & arg0);
   protected:
     itkHConcaveImageFilterIUC2IUC2();
     ~itkHConcaveImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterIUC2IUC2_Pointer {
   public:
     itkHConcaveImageFilterIUC2IUC2_Pointer();
     itkHConcaveImageFilterIUC2IUC2_Pointer(itkHConcaveImageFilterIUC2IUC2_Pointer const & p);
     itkHConcaveImageFilterIUC2IUC2_Pointer(itkHConcaveImageFilterIUC2IUC2 * p);
     ~itkHConcaveImageFilterIUC2IUC2_Pointer();
     itkHConcaveImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterIUC2IUC2_Pointer const & r) const;
     itkHConcaveImageFilterIUC2IUC2_Pointer & operator=(itkHConcaveImageFilterIUC2IUC2_Pointer const & r);
     itkHConcaveImageFilterIUC2IUC2_Pointer & operator=(itkHConcaveImageFilterIUC2IUC2 * r);
     itkHConcaveImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHConcaveImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned char const _arg);
     virtual unsigned char GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterIUC3IUC3(itkHConcaveImageFilterIUC3IUC3 const & arg0);
     void operator=(itkHConcaveImageFilterIUC3IUC3 const & arg0);
   protected:
     itkHConcaveImageFilterIUC3IUC3();
     ~itkHConcaveImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterIUC3IUC3_Pointer {
   public:
     itkHConcaveImageFilterIUC3IUC3_Pointer();
     itkHConcaveImageFilterIUC3IUC3_Pointer(itkHConcaveImageFilterIUC3IUC3_Pointer const & p);
     itkHConcaveImageFilterIUC3IUC3_Pointer(itkHConcaveImageFilterIUC3IUC3 * p);
     ~itkHConcaveImageFilterIUC3IUC3_Pointer();
     itkHConcaveImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterIUC3IUC3_Pointer const & r) const;
     itkHConcaveImageFilterIUC3IUC3_Pointer & operator=(itkHConcaveImageFilterIUC3IUC3_Pointer const & r);
     itkHConcaveImageFilterIUC3IUC3_Pointer & operator=(itkHConcaveImageFilterIUC3IUC3 * r);
     itkHConcaveImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHConcaveImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned long const _arg);
     virtual unsigned long GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterIUL2IUL2(itkHConcaveImageFilterIUL2IUL2 const & arg0);
     void operator=(itkHConcaveImageFilterIUL2IUL2 const & arg0);
   protected:
     itkHConcaveImageFilterIUL2IUL2();
     ~itkHConcaveImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterIUL2IUL2_Pointer {
   public:
     itkHConcaveImageFilterIUL2IUL2_Pointer();
     itkHConcaveImageFilterIUL2IUL2_Pointer(itkHConcaveImageFilterIUL2IUL2_Pointer const & p);
     itkHConcaveImageFilterIUL2IUL2_Pointer(itkHConcaveImageFilterIUL2IUL2 * p);
     ~itkHConcaveImageFilterIUL2IUL2_Pointer();
     itkHConcaveImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterIUL2IUL2_Pointer const & r) const;
     itkHConcaveImageFilterIUL2IUL2_Pointer & operator=(itkHConcaveImageFilterIUL2IUL2_Pointer const & r);
     itkHConcaveImageFilterIUL2IUL2_Pointer & operator=(itkHConcaveImageFilterIUL2IUL2 * r);
     itkHConcaveImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHConcaveImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned long const _arg);
     virtual unsigned long GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterIUL3IUL3(itkHConcaveImageFilterIUL3IUL3 const & arg0);
     void operator=(itkHConcaveImageFilterIUL3IUL3 const & arg0);
   protected:
     itkHConcaveImageFilterIUL3IUL3();
     ~itkHConcaveImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterIUL3IUL3_Pointer {
   public:
     itkHConcaveImageFilterIUL3IUL3_Pointer();
     itkHConcaveImageFilterIUL3IUL3_Pointer(itkHConcaveImageFilterIUL3IUL3_Pointer const & p);
     itkHConcaveImageFilterIUL3IUL3_Pointer(itkHConcaveImageFilterIUL3IUL3 * p);
     ~itkHConcaveImageFilterIUL3IUL3_Pointer();
     itkHConcaveImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterIUL3IUL3_Pointer const & r) const;
     itkHConcaveImageFilterIUL3IUL3_Pointer & operator=(itkHConcaveImageFilterIUL3IUL3_Pointer const & r);
     itkHConcaveImageFilterIUL3IUL3_Pointer & operator=(itkHConcaveImageFilterIUL3IUL3 * r);
     itkHConcaveImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHConcaveImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned short const _arg);
     virtual unsigned short GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterIUS2IUS2(itkHConcaveImageFilterIUS2IUS2 const & arg0);
     void operator=(itkHConcaveImageFilterIUS2IUS2 const & arg0);
   protected:
     itkHConcaveImageFilterIUS2IUS2();
     ~itkHConcaveImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterIUS2IUS2_Pointer {
   public:
     itkHConcaveImageFilterIUS2IUS2_Pointer();
     itkHConcaveImageFilterIUS2IUS2_Pointer(itkHConcaveImageFilterIUS2IUS2_Pointer const & p);
     itkHConcaveImageFilterIUS2IUS2_Pointer(itkHConcaveImageFilterIUS2IUS2 * p);
     ~itkHConcaveImageFilterIUS2IUS2_Pointer();
     itkHConcaveImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterIUS2IUS2_Pointer const & r) const;
     itkHConcaveImageFilterIUS2IUS2_Pointer & operator=(itkHConcaveImageFilterIUS2IUS2_Pointer const & r);
     itkHConcaveImageFilterIUS2IUS2_Pointer & operator=(itkHConcaveImageFilterIUS2IUS2 * r);
     itkHConcaveImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkHConcaveImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkHConcaveImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetHeight(unsigned short const _arg);
     virtual unsigned short GetHeight() const;
     unsigned long GetNumberOfIterationsUsed();
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
   private:
     itkHConcaveImageFilterIUS3IUS3(itkHConcaveImageFilterIUS3IUS3 const & arg0);
     void operator=(itkHConcaveImageFilterIUS3IUS3 const & arg0);
   protected:
     itkHConcaveImageFilterIUS3IUS3();
     ~itkHConcaveImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkHConcaveImageFilterIUS3IUS3_Pointer {
   public:
     itkHConcaveImageFilterIUS3IUS3_Pointer();
     itkHConcaveImageFilterIUS3IUS3_Pointer(itkHConcaveImageFilterIUS3IUS3_Pointer const & p);
     itkHConcaveImageFilterIUS3IUS3_Pointer(itkHConcaveImageFilterIUS3IUS3 * p);
     ~itkHConcaveImageFilterIUS3IUS3_Pointer();
     itkHConcaveImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkHConcaveImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkHConcaveImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkHConcaveImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkHConcaveImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkHConcaveImageFilterIUS3IUS3_Pointer const & r) const;
     itkHConcaveImageFilterIUS3IUS3_Pointer & operator=(itkHConcaveImageFilterIUS3IUS3_Pointer const & r);
     itkHConcaveImageFilterIUS3IUS3_Pointer & operator=(itkHConcaveImageFilterIUS3IUS3 * r);
     itkHConcaveImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


