// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAutoCropLabelMapFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkAutoCropLabelMapFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkAutoCropLabelMapFilterGuile
#endif
#ifdef SWIGJAVA
%module itkAutoCropLabelMapFilterJava
#endif
#ifdef SWIGLUA
%module itkAutoCropLabelMapFilterLua
#endif
#ifdef SWIGMODULA3
%module itkAutoCropLabelMapFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAutoCropLabelMapFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkAutoCropLabelMapFilterOcaml
#endif
#ifdef SWIGPERL
%module itkAutoCropLabelMapFilterPerl
#endif
#ifdef SWIGPERL5
%module itkAutoCropLabelMapFilterPerl5
#endif
#ifdef SWIGPHP
%module itkAutoCropLabelMapFilterPhp
#endif
#ifdef SWIGPHP4
%module itkAutoCropLabelMapFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkAutoCropLabelMapFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkAutoCropLabelMapFilterPike
#endif
#ifdef SWIGPYTHON
%module itkAutoCropLabelMapFilterPython
#endif
#ifdef SWIGR
%module itkAutoCropLabelMapFilterR
#endif
#ifdef SWIGRUBY
%module itkAutoCropLabelMapFilterRuby
#endif
#ifdef SWIGSEXP
%module itkAutoCropLabelMapFilterSexp
#endif
#ifdef SWIGTCL
%module itkAutoCropLabelMapFilterTcl
#endif
#ifdef SWIGXML
%module itkAutoCropLabelMapFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkSize.i
%import wrap_itkChangeRegionLabelMapFilter.i
%import wrap_itkIndex.i


%include itk.i
%include wrap_itkAutoCropLabelMapFilter_ext.i


 class itkAutoCropLabelMapFilterLM2 : public itkChangeRegionLabelMapFilterLM2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     static itkAutoCropLabelMapFilterLM2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetCropBorder(itkSize2 const _arg);
     virtual itkSize2 const & GetCropBorder() const;
     virtual itkIndex2 const & GetMinIndex() const;
     virtual itkIndex2 const & GetMaxIndex() const;
   private:
     itkAutoCropLabelMapFilterLM2(itkAutoCropLabelMapFilterLM2 const & arg0);
     void operator=(itkAutoCropLabelMapFilterLM2 const & arg0);
     void FindBoundingBox();
     void SetAndPadCropRegion();
   protected:
     itkAutoCropLabelMapFilterLM2();
     ~itkAutoCropLabelMapFilterLM2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
 };


 class itkAutoCropLabelMapFilterLM2_Pointer {
   public:
     itkAutoCropLabelMapFilterLM2_Pointer();
     itkAutoCropLabelMapFilterLM2_Pointer(itkAutoCropLabelMapFilterLM2_Pointer const & p);
     itkAutoCropLabelMapFilterLM2_Pointer(itkAutoCropLabelMapFilterLM2 * p);
     ~itkAutoCropLabelMapFilterLM2_Pointer();
     itkAutoCropLabelMapFilterLM2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAutoCropLabelMapFilterLM2 * GetPointer() const;
     bool operator<(itkAutoCropLabelMapFilterLM2_Pointer const & r) const;
     bool operator>(itkAutoCropLabelMapFilterLM2_Pointer const & r) const;
     bool operator<=(itkAutoCropLabelMapFilterLM2_Pointer const & r) const;
     bool operator>=(itkAutoCropLabelMapFilterLM2_Pointer const & r) const;
     itkAutoCropLabelMapFilterLM2_Pointer & operator=(itkAutoCropLabelMapFilterLM2_Pointer const & r);
     itkAutoCropLabelMapFilterLM2_Pointer & operator=(itkAutoCropLabelMapFilterLM2 * r);
     itkAutoCropLabelMapFilterLM2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAutoCropLabelMapFilterLM3 : public itkChangeRegionLabelMapFilterLM3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     static itkAutoCropLabelMapFilterLM3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetCropBorder(itkSize3 const _arg);
     virtual itkSize3 const & GetCropBorder() const;
     virtual itkIndex3 const & GetMinIndex() const;
     virtual itkIndex3 const & GetMaxIndex() const;
   private:
     itkAutoCropLabelMapFilterLM3(itkAutoCropLabelMapFilterLM3 const & arg0);
     void operator=(itkAutoCropLabelMapFilterLM3 const & arg0);
     void FindBoundingBox();
     void SetAndPadCropRegion();
   protected:
     itkAutoCropLabelMapFilterLM3();
     ~itkAutoCropLabelMapFilterLM3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateOutputInformation();
 };


 class itkAutoCropLabelMapFilterLM3_Pointer {
   public:
     itkAutoCropLabelMapFilterLM3_Pointer();
     itkAutoCropLabelMapFilterLM3_Pointer(itkAutoCropLabelMapFilterLM3_Pointer const & p);
     itkAutoCropLabelMapFilterLM3_Pointer(itkAutoCropLabelMapFilterLM3 * p);
     ~itkAutoCropLabelMapFilterLM3_Pointer();
     itkAutoCropLabelMapFilterLM3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAutoCropLabelMapFilterLM3 * GetPointer() const;
     bool operator<(itkAutoCropLabelMapFilterLM3_Pointer const & r) const;
     bool operator>(itkAutoCropLabelMapFilterLM3_Pointer const & r) const;
     bool operator<=(itkAutoCropLabelMapFilterLM3_Pointer const & r) const;
     bool operator>=(itkAutoCropLabelMapFilterLM3_Pointer const & r) const;
     itkAutoCropLabelMapFilterLM3_Pointer & operator=(itkAutoCropLabelMapFilterLM3_Pointer const & r);
     itkAutoCropLabelMapFilterLM3_Pointer & operator=(itkAutoCropLabelMapFilterLM3 * r);
     itkAutoCropLabelMapFilterLM3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


