// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkVotingBinaryImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkVotingBinaryImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkVotingBinaryImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkVotingBinaryImageFilterJava
#endif
#ifdef SWIGLUA
%module itkVotingBinaryImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkVotingBinaryImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkVotingBinaryImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkVotingBinaryImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkVotingBinaryImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkVotingBinaryImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkVotingBinaryImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkVotingBinaryImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkVotingBinaryImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkVotingBinaryImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkVotingBinaryImageFilterPython
#endif
#ifdef SWIGR
%module itkVotingBinaryImageFilterR
#endif
#ifdef SWIGRUBY
%module itkVotingBinaryImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkVotingBinaryImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkVotingBinaryImageFilterTcl
#endif
#ifdef SWIGXML
%module itkVotingBinaryImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Denoising.includes"
%}


%{
%}




%import wrap_itkSize.i
%import wrap_ITKRegions.i
%import wrap_itkImageToImageFilterA.i
%import wrap_ITKCommonBase.i


%include itk.i
%include wrap_itkVotingBinaryImageFilter_ext.i


 class itkVotingBinaryImageFilterID2ID2 : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(double const _arg);
     virtual void SetForegroundValue(double const _arg);
     virtual double const & GetBackgroundValue() const;
     virtual double const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterID2ID2(itkVotingBinaryImageFilterID2ID2 const & arg0);
     void operator=(itkVotingBinaryImageFilterID2ID2 const & arg0);
   protected:
     itkVotingBinaryImageFilterID2ID2();
     ~itkVotingBinaryImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterID2ID2_Pointer {
   public:
     itkVotingBinaryImageFilterID2ID2_Pointer();
     itkVotingBinaryImageFilterID2ID2_Pointer(itkVotingBinaryImageFilterID2ID2_Pointer const & p);
     itkVotingBinaryImageFilterID2ID2_Pointer(itkVotingBinaryImageFilterID2ID2 * p);
     ~itkVotingBinaryImageFilterID2ID2_Pointer();
     itkVotingBinaryImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterID2ID2_Pointer const & r) const;
     itkVotingBinaryImageFilterID2ID2_Pointer & operator=(itkVotingBinaryImageFilterID2ID2_Pointer const & r);
     itkVotingBinaryImageFilterID2ID2_Pointer & operator=(itkVotingBinaryImageFilterID2ID2 * r);
     itkVotingBinaryImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryImageFilterID3ID3 : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(double const _arg);
     virtual void SetForegroundValue(double const _arg);
     virtual double const & GetBackgroundValue() const;
     virtual double const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterID3ID3(itkVotingBinaryImageFilterID3ID3 const & arg0);
     void operator=(itkVotingBinaryImageFilterID3ID3 const & arg0);
   protected:
     itkVotingBinaryImageFilterID3ID3();
     ~itkVotingBinaryImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterID3ID3_Pointer {
   public:
     itkVotingBinaryImageFilterID3ID3_Pointer();
     itkVotingBinaryImageFilterID3ID3_Pointer(itkVotingBinaryImageFilterID3ID3_Pointer const & p);
     itkVotingBinaryImageFilterID3ID3_Pointer(itkVotingBinaryImageFilterID3ID3 * p);
     ~itkVotingBinaryImageFilterID3ID3_Pointer();
     itkVotingBinaryImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterID3ID3_Pointer const & r) const;
     itkVotingBinaryImageFilterID3ID3_Pointer & operator=(itkVotingBinaryImageFilterID3ID3_Pointer const & r);
     itkVotingBinaryImageFilterID3ID3_Pointer & operator=(itkVotingBinaryImageFilterID3ID3 * r);
     itkVotingBinaryImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryImageFilterIF2IF2 : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(float const _arg);
     virtual void SetForegroundValue(float const _arg);
     virtual float const & GetBackgroundValue() const;
     virtual float const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterIF2IF2(itkVotingBinaryImageFilterIF2IF2 const & arg0);
     void operator=(itkVotingBinaryImageFilterIF2IF2 const & arg0);
   protected:
     itkVotingBinaryImageFilterIF2IF2();
     ~itkVotingBinaryImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterIF2IF2_Pointer {
   public:
     itkVotingBinaryImageFilterIF2IF2_Pointer();
     itkVotingBinaryImageFilterIF2IF2_Pointer(itkVotingBinaryImageFilterIF2IF2_Pointer const & p);
     itkVotingBinaryImageFilterIF2IF2_Pointer(itkVotingBinaryImageFilterIF2IF2 * p);
     ~itkVotingBinaryImageFilterIF2IF2_Pointer();
     itkVotingBinaryImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterIF2IF2_Pointer const & r) const;
     itkVotingBinaryImageFilterIF2IF2_Pointer & operator=(itkVotingBinaryImageFilterIF2IF2_Pointer const & r);
     itkVotingBinaryImageFilterIF2IF2_Pointer & operator=(itkVotingBinaryImageFilterIF2IF2 * r);
     itkVotingBinaryImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryImageFilterIF3IF3 : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(float const _arg);
     virtual void SetForegroundValue(float const _arg);
     virtual float const & GetBackgroundValue() const;
     virtual float const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterIF3IF3(itkVotingBinaryImageFilterIF3IF3 const & arg0);
     void operator=(itkVotingBinaryImageFilterIF3IF3 const & arg0);
   protected:
     itkVotingBinaryImageFilterIF3IF3();
     ~itkVotingBinaryImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterIF3IF3_Pointer {
   public:
     itkVotingBinaryImageFilterIF3IF3_Pointer();
     itkVotingBinaryImageFilterIF3IF3_Pointer(itkVotingBinaryImageFilterIF3IF3_Pointer const & p);
     itkVotingBinaryImageFilterIF3IF3_Pointer(itkVotingBinaryImageFilterIF3IF3 * p);
     ~itkVotingBinaryImageFilterIF3IF3_Pointer();
     itkVotingBinaryImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterIF3IF3_Pointer const & r) const;
     itkVotingBinaryImageFilterIF3IF3_Pointer & operator=(itkVotingBinaryImageFilterIF3IF3_Pointer const & r);
     itkVotingBinaryImageFilterIF3IF3_Pointer & operator=(itkVotingBinaryImageFilterIF3IF3 * r);
     itkVotingBinaryImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
     virtual unsigned char const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterIUC2IUC2(itkVotingBinaryImageFilterIUC2IUC2 const & arg0);
     void operator=(itkVotingBinaryImageFilterIUC2IUC2 const & arg0);
   protected:
     itkVotingBinaryImageFilterIUC2IUC2();
     ~itkVotingBinaryImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterIUC2IUC2_Pointer {
   public:
     itkVotingBinaryImageFilterIUC2IUC2_Pointer();
     itkVotingBinaryImageFilterIUC2IUC2_Pointer(itkVotingBinaryImageFilterIUC2IUC2_Pointer const & p);
     itkVotingBinaryImageFilterIUC2IUC2_Pointer(itkVotingBinaryImageFilterIUC2IUC2 * p);
     ~itkVotingBinaryImageFilterIUC2IUC2_Pointer();
     itkVotingBinaryImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterIUC2IUC2_Pointer const & r) const;
     itkVotingBinaryImageFilterIUC2IUC2_Pointer & operator=(itkVotingBinaryImageFilterIUC2IUC2_Pointer const & r);
     itkVotingBinaryImageFilterIUC2IUC2_Pointer & operator=(itkVotingBinaryImageFilterIUC2IUC2 * r);
     itkVotingBinaryImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char const & GetBackgroundValue() const;
     virtual unsigned char const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterIUC3IUC3(itkVotingBinaryImageFilterIUC3IUC3 const & arg0);
     void operator=(itkVotingBinaryImageFilterIUC3IUC3 const & arg0);
   protected:
     itkVotingBinaryImageFilterIUC3IUC3();
     ~itkVotingBinaryImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterIUC3IUC3_Pointer {
   public:
     itkVotingBinaryImageFilterIUC3IUC3_Pointer();
     itkVotingBinaryImageFilterIUC3IUC3_Pointer(itkVotingBinaryImageFilterIUC3IUC3_Pointer const & p);
     itkVotingBinaryImageFilterIUC3IUC3_Pointer(itkVotingBinaryImageFilterIUC3IUC3 * p);
     ~itkVotingBinaryImageFilterIUC3IUC3_Pointer();
     itkVotingBinaryImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterIUC3IUC3_Pointer const & r) const;
     itkVotingBinaryImageFilterIUC3IUC3_Pointer & operator=(itkVotingBinaryImageFilterIUC3IUC3_Pointer const & r);
     itkVotingBinaryImageFilterIUC3IUC3_Pointer & operator=(itkVotingBinaryImageFilterIUC3IUC3 * r);
     itkVotingBinaryImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
     virtual unsigned long const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterIUL2IUL2(itkVotingBinaryImageFilterIUL2IUL2 const & arg0);
     void operator=(itkVotingBinaryImageFilterIUL2IUL2 const & arg0);
   protected:
     itkVotingBinaryImageFilterIUL2IUL2();
     ~itkVotingBinaryImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterIUL2IUL2_Pointer {
   public:
     itkVotingBinaryImageFilterIUL2IUL2_Pointer();
     itkVotingBinaryImageFilterIUL2IUL2_Pointer(itkVotingBinaryImageFilterIUL2IUL2_Pointer const & p);
     itkVotingBinaryImageFilterIUL2IUL2_Pointer(itkVotingBinaryImageFilterIUL2IUL2 * p);
     ~itkVotingBinaryImageFilterIUL2IUL2_Pointer();
     itkVotingBinaryImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterIUL2IUL2_Pointer const & r) const;
     itkVotingBinaryImageFilterIUL2IUL2_Pointer & operator=(itkVotingBinaryImageFilterIUL2IUL2_Pointer const & r);
     itkVotingBinaryImageFilterIUL2IUL2_Pointer & operator=(itkVotingBinaryImageFilterIUL2IUL2 * r);
     itkVotingBinaryImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long const & GetBackgroundValue() const;
     virtual unsigned long const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterIUL3IUL3(itkVotingBinaryImageFilterIUL3IUL3 const & arg0);
     void operator=(itkVotingBinaryImageFilterIUL3IUL3 const & arg0);
   protected:
     itkVotingBinaryImageFilterIUL3IUL3();
     ~itkVotingBinaryImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterIUL3IUL3_Pointer {
   public:
     itkVotingBinaryImageFilterIUL3IUL3_Pointer();
     itkVotingBinaryImageFilterIUL3IUL3_Pointer(itkVotingBinaryImageFilterIUL3IUL3_Pointer const & p);
     itkVotingBinaryImageFilterIUL3IUL3_Pointer(itkVotingBinaryImageFilterIUL3IUL3 * p);
     ~itkVotingBinaryImageFilterIUL3IUL3_Pointer();
     itkVotingBinaryImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterIUL3IUL3_Pointer const & r) const;
     itkVotingBinaryImageFilterIUL3IUL3_Pointer & operator=(itkVotingBinaryImageFilterIUL3IUL3_Pointer const & r);
     itkVotingBinaryImageFilterIUL3IUL3_Pointer & operator=(itkVotingBinaryImageFilterIUL3IUL3 * r);
     itkVotingBinaryImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize2 const _arg);
     virtual itkSize2 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
     virtual unsigned short const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterIUS2IUS2(itkVotingBinaryImageFilterIUS2IUS2 const & arg0);
     void operator=(itkVotingBinaryImageFilterIUS2IUS2 const & arg0);
   protected:
     itkVotingBinaryImageFilterIUS2IUS2();
     ~itkVotingBinaryImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterIUS2IUS2_Pointer {
   public:
     itkVotingBinaryImageFilterIUS2IUS2_Pointer();
     itkVotingBinaryImageFilterIUS2IUS2_Pointer(itkVotingBinaryImageFilterIUS2IUS2_Pointer const & p);
     itkVotingBinaryImageFilterIUS2IUS2_Pointer(itkVotingBinaryImageFilterIUS2IUS2 * p);
     ~itkVotingBinaryImageFilterIUS2IUS2_Pointer();
     itkVotingBinaryImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterIUS2IUS2_Pointer const & r) const;
     itkVotingBinaryImageFilterIUS2IUS2_Pointer & operator=(itkVotingBinaryImageFilterIUS2IUS2_Pointer const & r);
     itkVotingBinaryImageFilterIUS2IUS2_Pointer & operator=(itkVotingBinaryImageFilterIUS2IUS2 * r);
     itkVotingBinaryImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkVotingBinaryImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputConvertibleToOutputCheck = 1 };
     enum  {  SameDimensionCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkVotingBinaryImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetRadius(itkSize3 const _arg);
     virtual itkSize3 const & GetRadius() const;
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short const & GetBackgroundValue() const;
     virtual unsigned short const & GetForegroundValue() const;
     virtual unsigned int const & GetBirthThreshold() const;
     virtual void SetBirthThreshold(unsigned int const _arg);
     virtual unsigned int const & GetSurvivalThreshold() const;
     virtual void SetSurvivalThreshold(unsigned int const _arg);
     virtual void GenerateInputRequestedRegion();
   private:
     itkVotingBinaryImageFilterIUS3IUS3(itkVotingBinaryImageFilterIUS3IUS3 const & arg0);
     void operator=(itkVotingBinaryImageFilterIUS3IUS3 const & arg0);
   protected:
     itkVotingBinaryImageFilterIUS3IUS3();
     ~itkVotingBinaryImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkVotingBinaryImageFilterIUS3IUS3_Pointer {
   public:
     itkVotingBinaryImageFilterIUS3IUS3_Pointer();
     itkVotingBinaryImageFilterIUS3IUS3_Pointer(itkVotingBinaryImageFilterIUS3IUS3_Pointer const & p);
     itkVotingBinaryImageFilterIUS3IUS3_Pointer(itkVotingBinaryImageFilterIUS3IUS3 * p);
     ~itkVotingBinaryImageFilterIUS3IUS3_Pointer();
     itkVotingBinaryImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkVotingBinaryImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkVotingBinaryImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkVotingBinaryImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkVotingBinaryImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkVotingBinaryImageFilterIUS3IUS3_Pointer const & r) const;
     itkVotingBinaryImageFilterIUS3IUS3_Pointer & operator=(itkVotingBinaryImageFilterIUS3IUS3_Pointer const & r);
     itkVotingBinaryImageFilterIUS3IUS3_Pointer & operator=(itkVotingBinaryImageFilterIUS3IUS3 * r);
     itkVotingBinaryImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


