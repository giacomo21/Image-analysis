// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkAreaOpeningImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkAreaOpeningImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkAreaOpeningImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkAreaOpeningImageFilterJava
#endif
#ifdef SWIGLUA
%module itkAreaOpeningImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkAreaOpeningImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkAreaOpeningImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkAreaOpeningImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkAreaOpeningImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkAreaOpeningImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkAreaOpeningImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkAreaOpeningImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkAreaOpeningImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkAreaOpeningImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkAreaOpeningImageFilterPython
#endif
#ifdef SWIGR
%module itkAreaOpeningImageFilterR
#endif
#ifdef SWIGRUBY
%module itkAreaOpeningImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkAreaOpeningImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkAreaOpeningImageFilterTcl
#endif
#ifdef SWIGXML
%module itkAreaOpeningImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Review.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImageToImageFilterA.i
%import wrap_itkOffset.i


%include itk.i
%include wrap_itkAreaOpeningImageFilter_ext.i


 class itkAreaOpeningImageFilterID2ID2_Pointer {
   public:
     itkAreaOpeningImageFilterID2ID2_Pointer();
     itkAreaOpeningImageFilterID2ID2_Pointer(itkAreaOpeningImageFilterID2ID2_Pointer const & p);
     itkAreaOpeningImageFilterID2ID2_Pointer(itkAreaOpeningImageFilterID2ID2 * p);
     ~itkAreaOpeningImageFilterID2ID2_Pointer();
     itkAreaOpeningImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterID2ID2_Pointer const & r) const;
     itkAreaOpeningImageFilterID2ID2_Pointer & operator=(itkAreaOpeningImageFilterID2ID2_Pointer const & r);
     itkAreaOpeningImageFilterID2ID2_Pointer & operator=(itkAreaOpeningImageFilterID2ID2 * r);
     itkAreaOpeningImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterID2ID2_Superclass : public itkImageToImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset2 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterID2ID2_Superclass();
     ~itkAreaOpeningImageFilterID2ID2_Superclass();
     itkAreaOpeningImageFilterID2ID2_Superclass(itkAreaOpeningImageFilterID2ID2_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterID2ID2_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterID2ID2_Superclass_Pointer();
     itkAreaOpeningImageFilterID2ID2_Superclass_Pointer(itkAreaOpeningImageFilterID2ID2_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterID2ID2_Superclass_Pointer(itkAreaOpeningImageFilterID2ID2_Superclass * p);
     ~itkAreaOpeningImageFilterID2ID2_Superclass_Pointer();
     itkAreaOpeningImageFilterID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterID2ID2_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterID2ID2_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterID2ID2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterID2ID2_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterID2ID2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterID2ID2_Superclass * r);
     itkAreaOpeningImageFilterID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterID3ID3_Pointer {
   public:
     itkAreaOpeningImageFilterID3ID3_Pointer();
     itkAreaOpeningImageFilterID3ID3_Pointer(itkAreaOpeningImageFilterID3ID3_Pointer const & p);
     itkAreaOpeningImageFilterID3ID3_Pointer(itkAreaOpeningImageFilterID3ID3 * p);
     ~itkAreaOpeningImageFilterID3ID3_Pointer();
     itkAreaOpeningImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterID3ID3_Pointer const & r) const;
     itkAreaOpeningImageFilterID3ID3_Pointer & operator=(itkAreaOpeningImageFilterID3ID3_Pointer const & r);
     itkAreaOpeningImageFilterID3ID3_Pointer & operator=(itkAreaOpeningImageFilterID3ID3 * r);
     itkAreaOpeningImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterID3ID3_Superclass : public itkImageToImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset3 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterID3ID3_Superclass();
     ~itkAreaOpeningImageFilterID3ID3_Superclass();
     itkAreaOpeningImageFilterID3ID3_Superclass(itkAreaOpeningImageFilterID3ID3_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterID3ID3_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterID3ID3_Superclass_Pointer();
     itkAreaOpeningImageFilterID3ID3_Superclass_Pointer(itkAreaOpeningImageFilterID3ID3_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterID3ID3_Superclass_Pointer(itkAreaOpeningImageFilterID3ID3_Superclass * p);
     ~itkAreaOpeningImageFilterID3ID3_Superclass_Pointer();
     itkAreaOpeningImageFilterID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterID3ID3_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterID3ID3_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterID3ID3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterID3ID3_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterID3ID3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterID3ID3_Superclass * r);
     itkAreaOpeningImageFilterID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIF2IF2_Pointer {
   public:
     itkAreaOpeningImageFilterIF2IF2_Pointer();
     itkAreaOpeningImageFilterIF2IF2_Pointer(itkAreaOpeningImageFilterIF2IF2_Pointer const & p);
     itkAreaOpeningImageFilterIF2IF2_Pointer(itkAreaOpeningImageFilterIF2IF2 * p);
     ~itkAreaOpeningImageFilterIF2IF2_Pointer();
     itkAreaOpeningImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIF2IF2_Pointer const & r) const;
     itkAreaOpeningImageFilterIF2IF2_Pointer & operator=(itkAreaOpeningImageFilterIF2IF2_Pointer const & r);
     itkAreaOpeningImageFilterIF2IF2_Pointer & operator=(itkAreaOpeningImageFilterIF2IF2 * r);
     itkAreaOpeningImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIF2IF2_Superclass : public itkImageToImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset2 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterIF2IF2_Superclass();
     ~itkAreaOpeningImageFilterIF2IF2_Superclass();
     itkAreaOpeningImageFilterIF2IF2_Superclass(itkAreaOpeningImageFilterIF2IF2_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer();
     itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer(itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer(itkAreaOpeningImageFilterIF2IF2_Superclass * p);
     ~itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer();
     itkAreaOpeningImageFilterIF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIF2IF2_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterIF2IF2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIF2IF2_Superclass * r);
     itkAreaOpeningImageFilterIF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIF3IF3_Pointer {
   public:
     itkAreaOpeningImageFilterIF3IF3_Pointer();
     itkAreaOpeningImageFilterIF3IF3_Pointer(itkAreaOpeningImageFilterIF3IF3_Pointer const & p);
     itkAreaOpeningImageFilterIF3IF3_Pointer(itkAreaOpeningImageFilterIF3IF3 * p);
     ~itkAreaOpeningImageFilterIF3IF3_Pointer();
     itkAreaOpeningImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIF3IF3_Pointer const & r) const;
     itkAreaOpeningImageFilterIF3IF3_Pointer & operator=(itkAreaOpeningImageFilterIF3IF3_Pointer const & r);
     itkAreaOpeningImageFilterIF3IF3_Pointer & operator=(itkAreaOpeningImageFilterIF3IF3 * r);
     itkAreaOpeningImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIF3IF3_Superclass : public itkImageToImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset3 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterIF3IF3_Superclass();
     ~itkAreaOpeningImageFilterIF3IF3_Superclass();
     itkAreaOpeningImageFilterIF3IF3_Superclass(itkAreaOpeningImageFilterIF3IF3_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer();
     itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer(itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer(itkAreaOpeningImageFilterIF3IF3_Superclass * p);
     ~itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer();
     itkAreaOpeningImageFilterIF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIF3IF3_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterIF3IF3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIF3IF3_Superclass * r);
     itkAreaOpeningImageFilterIF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUC2IUC2_Pointer {
   public:
     itkAreaOpeningImageFilterIUC2IUC2_Pointer();
     itkAreaOpeningImageFilterIUC2IUC2_Pointer(itkAreaOpeningImageFilterIUC2IUC2_Pointer const & p);
     itkAreaOpeningImageFilterIUC2IUC2_Pointer(itkAreaOpeningImageFilterIUC2IUC2 * p);
     ~itkAreaOpeningImageFilterIUC2IUC2_Pointer();
     itkAreaOpeningImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     itkAreaOpeningImageFilterIUC2IUC2_Pointer & operator=(itkAreaOpeningImageFilterIUC2IUC2_Pointer const & r);
     itkAreaOpeningImageFilterIUC2IUC2_Pointer & operator=(itkAreaOpeningImageFilterIUC2IUC2 * r);
     itkAreaOpeningImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUC2IUC2_Superclass : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset2 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterIUC2IUC2_Superclass();
     ~itkAreaOpeningImageFilterIUC2IUC2_Superclass();
     itkAreaOpeningImageFilterIUC2IUC2_Superclass(itkAreaOpeningImageFilterIUC2IUC2_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer();
     itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer(itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer(itkAreaOpeningImageFilterIUC2IUC2_Superclass * p);
     ~itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer();
     itkAreaOpeningImageFilterIUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterIUC2IUC2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUC2IUC2_Superclass * r);
     itkAreaOpeningImageFilterIUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUC3IUC3_Pointer {
   public:
     itkAreaOpeningImageFilterIUC3IUC3_Pointer();
     itkAreaOpeningImageFilterIUC3IUC3_Pointer(itkAreaOpeningImageFilterIUC3IUC3_Pointer const & p);
     itkAreaOpeningImageFilterIUC3IUC3_Pointer(itkAreaOpeningImageFilterIUC3IUC3 * p);
     ~itkAreaOpeningImageFilterIUC3IUC3_Pointer();
     itkAreaOpeningImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     itkAreaOpeningImageFilterIUC3IUC3_Pointer & operator=(itkAreaOpeningImageFilterIUC3IUC3_Pointer const & r);
     itkAreaOpeningImageFilterIUC3IUC3_Pointer & operator=(itkAreaOpeningImageFilterIUC3IUC3 * r);
     itkAreaOpeningImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUC3IUC3_Superclass : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset3 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterIUC3IUC3_Superclass();
     ~itkAreaOpeningImageFilterIUC3IUC3_Superclass();
     itkAreaOpeningImageFilterIUC3IUC3_Superclass(itkAreaOpeningImageFilterIUC3IUC3_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer();
     itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer(itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer(itkAreaOpeningImageFilterIUC3IUC3_Superclass * p);
     ~itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer();
     itkAreaOpeningImageFilterIUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterIUC3IUC3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUC3IUC3_Superclass * r);
     itkAreaOpeningImageFilterIUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUL2IUL2_Pointer {
   public:
     itkAreaOpeningImageFilterIUL2IUL2_Pointer();
     itkAreaOpeningImageFilterIUL2IUL2_Pointer(itkAreaOpeningImageFilterIUL2IUL2_Pointer const & p);
     itkAreaOpeningImageFilterIUL2IUL2_Pointer(itkAreaOpeningImageFilterIUL2IUL2 * p);
     ~itkAreaOpeningImageFilterIUL2IUL2_Pointer();
     itkAreaOpeningImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     itkAreaOpeningImageFilterIUL2IUL2_Pointer & operator=(itkAreaOpeningImageFilterIUL2IUL2_Pointer const & r);
     itkAreaOpeningImageFilterIUL2IUL2_Pointer & operator=(itkAreaOpeningImageFilterIUL2IUL2 * r);
     itkAreaOpeningImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUL2IUL2_Superclass : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset2 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterIUL2IUL2_Superclass();
     ~itkAreaOpeningImageFilterIUL2IUL2_Superclass();
     itkAreaOpeningImageFilterIUL2IUL2_Superclass(itkAreaOpeningImageFilterIUL2IUL2_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer();
     itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer(itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer(itkAreaOpeningImageFilterIUL2IUL2_Superclass * p);
     ~itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer();
     itkAreaOpeningImageFilterIUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterIUL2IUL2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUL2IUL2_Superclass * r);
     itkAreaOpeningImageFilterIUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUL3IUL3_Pointer {
   public:
     itkAreaOpeningImageFilterIUL3IUL3_Pointer();
     itkAreaOpeningImageFilterIUL3IUL3_Pointer(itkAreaOpeningImageFilterIUL3IUL3_Pointer const & p);
     itkAreaOpeningImageFilterIUL3IUL3_Pointer(itkAreaOpeningImageFilterIUL3IUL3 * p);
     ~itkAreaOpeningImageFilterIUL3IUL3_Pointer();
     itkAreaOpeningImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     itkAreaOpeningImageFilterIUL3IUL3_Pointer & operator=(itkAreaOpeningImageFilterIUL3IUL3_Pointer const & r);
     itkAreaOpeningImageFilterIUL3IUL3_Pointer & operator=(itkAreaOpeningImageFilterIUL3IUL3 * r);
     itkAreaOpeningImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUL3IUL3_Superclass : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset3 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterIUL3IUL3_Superclass();
     ~itkAreaOpeningImageFilterIUL3IUL3_Superclass();
     itkAreaOpeningImageFilterIUL3IUL3_Superclass(itkAreaOpeningImageFilterIUL3IUL3_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer();
     itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer(itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer(itkAreaOpeningImageFilterIUL3IUL3_Superclass * p);
     ~itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer();
     itkAreaOpeningImageFilterIUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterIUL3IUL3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUL3IUL3_Superclass * r);
     itkAreaOpeningImageFilterIUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUS2IUS2_Pointer {
   public:
     itkAreaOpeningImageFilterIUS2IUS2_Pointer();
     itkAreaOpeningImageFilterIUS2IUS2_Pointer(itkAreaOpeningImageFilterIUS2IUS2_Pointer const & p);
     itkAreaOpeningImageFilterIUS2IUS2_Pointer(itkAreaOpeningImageFilterIUS2IUS2 * p);
     ~itkAreaOpeningImageFilterIUS2IUS2_Pointer();
     itkAreaOpeningImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     itkAreaOpeningImageFilterIUS2IUS2_Pointer & operator=(itkAreaOpeningImageFilterIUS2IUS2_Pointer const & r);
     itkAreaOpeningImageFilterIUS2IUS2_Pointer & operator=(itkAreaOpeningImageFilterIUS2IUS2 * r);
     itkAreaOpeningImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUS2IUS2_Superclass : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset2 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterIUS2IUS2_Superclass();
     ~itkAreaOpeningImageFilterIUS2IUS2_Superclass();
     itkAreaOpeningImageFilterIUS2IUS2_Superclass(itkAreaOpeningImageFilterIUS2IUS2_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer();
     itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer(itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer(itkAreaOpeningImageFilterIUS2IUS2_Superclass * p);
     ~itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer();
     itkAreaOpeningImageFilterIUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterIUS2IUS2_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUS2IUS2_Superclass * r);
     itkAreaOpeningImageFilterIUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUS3IUS3_Pointer {
   public:
     itkAreaOpeningImageFilterIUS3IUS3_Pointer();
     itkAreaOpeningImageFilterIUS3IUS3_Pointer(itkAreaOpeningImageFilterIUS3IUS3_Pointer const & p);
     itkAreaOpeningImageFilterIUS3IUS3_Pointer(itkAreaOpeningImageFilterIUS3IUS3 * p);
     ~itkAreaOpeningImageFilterIUS3IUS3_Pointer();
     itkAreaOpeningImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     itkAreaOpeningImageFilterIUS3IUS3_Pointer & operator=(itkAreaOpeningImageFilterIUS3IUS3_Pointer const & r);
     itkAreaOpeningImageFilterIUS3IUS3_Pointer & operator=(itkAreaOpeningImageFilterIUS3IUS3 * r);
     itkAreaOpeningImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterIUS3IUS3_Superclass : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetLambda(double const _arg);
     virtual double GetLambda() const;
   private:
     enum  {  INACTIVE = -1 };
     enum  {  ACTIVE = -2 };
     enum  {  ROOT = -3 };
     void SetupOffsetVec(std::vector< long > & PosOffsets, std::vector< itkOffset3 > & Offsets);
     void MakeSet(long x);
     long FindRoot(long x);
     bool Criterion(long x, long y);
     void Union(long n, long p);
   protected:
     itkAreaOpeningImageFilterIUS3IUS3_Superclass();
     ~itkAreaOpeningImageFilterIUS3IUS3_Superclass();
     itkAreaOpeningImageFilterIUS3IUS3_Superclass(itkAreaOpeningImageFilterIUS3IUS3_Superclass const & arg0);
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
 };


 class itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer {
   public:
     itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer();
     itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer(itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer const & p);
     itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer(itkAreaOpeningImageFilterIUS3IUS3_Superclass * p);
     ~itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer();
     itkAreaOpeningImageFilterIUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkAreaOpeningImageFilterIUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer const & r) const;
     itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer const & r);
     itkAreaOpeningImageFilterIUS3IUS3_Superclass_Pointer & operator=(itkAreaOpeningImageFilterIUS3IUS3_Superclass * r);
     itkAreaOpeningImageFilterIUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkAreaOpeningImageFilterID2ID2 : public itkAreaOpeningImageFilterID2ID2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkAreaOpeningImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterID2ID2(itkAreaOpeningImageFilterID2ID2 const & arg0);
     void operator=(itkAreaOpeningImageFilterID2ID2 const & arg0);
   protected:
     itkAreaOpeningImageFilterID2ID2();
     ~itkAreaOpeningImageFilterID2ID2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkAreaOpeningImageFilterID3ID3 : public itkAreaOpeningImageFilterID3ID3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkAreaOpeningImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterID3ID3(itkAreaOpeningImageFilterID3ID3 const & arg0);
     void operator=(itkAreaOpeningImageFilterID3ID3 const & arg0);
   protected:
     itkAreaOpeningImageFilterID3ID3();
     ~itkAreaOpeningImageFilterID3ID3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkAreaOpeningImageFilterIF2IF2 : public itkAreaOpeningImageFilterIF2IF2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkAreaOpeningImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterIF2IF2(itkAreaOpeningImageFilterIF2IF2 const & arg0);
     void operator=(itkAreaOpeningImageFilterIF2IF2 const & arg0);
   protected:
     itkAreaOpeningImageFilterIF2IF2();
     ~itkAreaOpeningImageFilterIF2IF2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkAreaOpeningImageFilterIF3IF3 : public itkAreaOpeningImageFilterIF3IF3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkAreaOpeningImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterIF3IF3(itkAreaOpeningImageFilterIF3IF3 const & arg0);
     void operator=(itkAreaOpeningImageFilterIF3IF3 const & arg0);
   protected:
     itkAreaOpeningImageFilterIF3IF3();
     ~itkAreaOpeningImageFilterIF3IF3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkAreaOpeningImageFilterIUC2IUC2 : public itkAreaOpeningImageFilterIUC2IUC2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkAreaOpeningImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterIUC2IUC2(itkAreaOpeningImageFilterIUC2IUC2 const & arg0);
     void operator=(itkAreaOpeningImageFilterIUC2IUC2 const & arg0);
   protected:
     itkAreaOpeningImageFilterIUC2IUC2();
     ~itkAreaOpeningImageFilterIUC2IUC2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkAreaOpeningImageFilterIUC3IUC3 : public itkAreaOpeningImageFilterIUC3IUC3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkAreaOpeningImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterIUC3IUC3(itkAreaOpeningImageFilterIUC3IUC3 const & arg0);
     void operator=(itkAreaOpeningImageFilterIUC3IUC3 const & arg0);
   protected:
     itkAreaOpeningImageFilterIUC3IUC3();
     ~itkAreaOpeningImageFilterIUC3IUC3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkAreaOpeningImageFilterIUL2IUL2 : public itkAreaOpeningImageFilterIUL2IUL2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkAreaOpeningImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterIUL2IUL2(itkAreaOpeningImageFilterIUL2IUL2 const & arg0);
     void operator=(itkAreaOpeningImageFilterIUL2IUL2 const & arg0);
   protected:
     itkAreaOpeningImageFilterIUL2IUL2();
     ~itkAreaOpeningImageFilterIUL2IUL2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkAreaOpeningImageFilterIUL3IUL3 : public itkAreaOpeningImageFilterIUL3IUL3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkAreaOpeningImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterIUL3IUL3(itkAreaOpeningImageFilterIUL3IUL3 const & arg0);
     void operator=(itkAreaOpeningImageFilterIUL3IUL3 const & arg0);
   protected:
     itkAreaOpeningImageFilterIUL3IUL3();
     ~itkAreaOpeningImageFilterIUL3IUL3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkAreaOpeningImageFilterIUS2IUS2 : public itkAreaOpeningImageFilterIUS2IUS2_Superclass {
   public:
     enum  {  ImageDimension = 2 };
     static itkAreaOpeningImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterIUS2IUS2(itkAreaOpeningImageFilterIUS2IUS2 const & arg0);
     void operator=(itkAreaOpeningImageFilterIUS2IUS2 const & arg0);
   protected:
     itkAreaOpeningImageFilterIUS2IUS2();
     ~itkAreaOpeningImageFilterIUS2IUS2();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkAreaOpeningImageFilterIUS3IUS3 : public itkAreaOpeningImageFilterIUS3IUS3_Superclass {
   public:
     enum  {  ImageDimension = 3 };
     static itkAreaOpeningImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetUseImageSpacing(bool const _arg);
     virtual bool const & GetUseImageSpacing() const;
     virtual void UseImageSpacingOn();
     virtual void UseImageSpacingOff();
   private:
     itkAreaOpeningImageFilterIUS3IUS3(itkAreaOpeningImageFilterIUS3IUS3 const & arg0);
     void operator=(itkAreaOpeningImageFilterIUS3IUS3 const & arg0);
   protected:
     itkAreaOpeningImageFilterIUS3IUS3();
     ~itkAreaOpeningImageFilterIUS3IUS3();
     virtual void GenerateData();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


