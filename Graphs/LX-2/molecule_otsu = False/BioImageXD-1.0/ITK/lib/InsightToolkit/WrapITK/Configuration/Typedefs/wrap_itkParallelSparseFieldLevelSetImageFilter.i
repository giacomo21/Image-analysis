// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkParallelSparseFieldLevelSetImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkParallelSparseFieldLevelSetImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkParallelSparseFieldLevelSetImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkParallelSparseFieldLevelSetImageFilterJava
#endif
#ifdef SWIGLUA
%module itkParallelSparseFieldLevelSetImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkParallelSparseFieldLevelSetImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkParallelSparseFieldLevelSetImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkParallelSparseFieldLevelSetImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkParallelSparseFieldLevelSetImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkParallelSparseFieldLevelSetImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkParallelSparseFieldLevelSetImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkParallelSparseFieldLevelSetImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkParallelSparseFieldLevelSetImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkParallelSparseFieldLevelSetImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkParallelSparseFieldLevelSetImageFilterPython
#endif
#ifdef SWIGR
%module itkParallelSparseFieldLevelSetImageFilterR
#endif
#ifdef SWIGRUBY
%module itkParallelSparseFieldLevelSetImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkParallelSparseFieldLevelSetImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkParallelSparseFieldLevelSetImageFilterTcl
#endif
#ifdef SWIGXML
%module itkParallelSparseFieldLevelSetImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Numerics.includes"
#include "LevelSet.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkIndex.i
%import wrap_ITKRegions.i
%import wrap_itkFiniteDifferenceImageFilter.i


%include itk.i
%include wrap_itkParallelSparseFieldLevelSetImageFilter_ext.i


 class itkParallelSparseFieldLevelSetImageFilterID2ID2 : public itkFiniteDifferenceImageFilterID2ID2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfLayers(signed char const _arg);
     virtual signed char GetNumberOfLayers() const;
     virtual void SetIsoSurfaceValue(double const _arg);
     virtual double GetIsoSurfaceValue() const;
     itkSparseFieldLayerPSFLSNI2_Pointer GetActiveListForIndex(itkIndex2 const index);
   private:
     itkParallelSparseFieldLevelSetImageFilterID2ID2(itkParallelSparseFieldLevelSetImageFilterID2ID2 const & arg0);
     void operator=(itkParallelSparseFieldLevelSetImageFilterID2ID2 const & arg0);
   protected:
     itkParallelSparseFieldLevelSetImageFilterID2ID2();
     ~itkParallelSparseFieldLevelSetImageFilterID2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void CopyInputToOutput();
     virtual void AllocateUpdateBuffer();
     virtual void Initialize();
     void ConstructActiveLayer();
     void InitializeActiveLayerValues();
     void ConstructLayer(signed char from, signed char to);
     void ProcessStatusList(itkSparseFieldLayerPSFLSNI2 * InputList, signed char ChangeToStatus, signed char SearchForStatus, unsigned int ThreadId);
     void PropagateAllLayerValues();
     void PropagateLayerValues(signed char from, signed char to, signed char promote, unsigned int InOrOut);
     virtual void InitializeBackgroundPixels();
     void ThreadedAllocateData(unsigned int ThreadId);
     void ThreadedInitializeData(unsigned int ThreadId, itkImageRegion2 const & ThreadRegion);
     void ComputeInitialThreadBoundaries();
     unsigned int GetThreadNumber(unsigned int splitAxisValue);
     void GetThreadRegionSplitByBoundary(unsigned int ThreadId, itkImageRegion2 & ThreadRegion);
     void DeallocateData();
     void Iterate();
     static void * IterateThreaderCallback(void * arg);
     virtual double ThreadedCalculateUpdateValue(unsigned int const arg0, itkIndex2 const arg1, double const & dt, double const & value, double const & change);
     virtual void ThreadedProcessPixelEnteringActiveLayer(itkIndex2 const arg0, double const arg1, unsigned int const arg2);
     virtual void ApplyUpdate(double arg0);
     virtual void ThreadedApplyUpdate(double dt, unsigned int ThreadId);
     virtual double CalculateChange();
     virtual double ThreadedCalculateChange(unsigned int ThreadId);
     void ThreadedUpdateActiveLayerValues(double dt, itkSparseFieldLayerPSFLSNI2 * StatusUpList, itkSparseFieldLayerPSFLSNI2 * StatusDownList, unsigned int ThreadId);
     void CopyInsertList(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI2_Pointer FromListPtr, itkSparseFieldLayerPSFLSNI2_Pointer ToListPtr);
     void ClearList(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI2_Pointer ListPtr);
     void CopyInsertInterNeighborNodeTransferBufferLayers(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI2_Pointer InputList, unsigned int InOrOut, unsigned int BufferLayerNumber);
     void ClearInterNeighborNodeTransferBufferLayers(unsigned int ThreadId, unsigned int InOrOut, unsigned int BufferLayerNumber);
     void ThreadedProcessFirstLayerStatusLists(unsigned int InputLayerNumber, unsigned int OutputLayerNumber, signed char SearchForStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedProcessStatusList(unsigned int InputLayerNumber, unsigned int OutputLayerNumber, signed char ChangeToStatus, signed char SearchForStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedProcessOutsideList(unsigned int InputLayerNumber, signed char ChangeToStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedPropagateLayerValues(signed char from, signed char to, signed char promote, unsigned int InorOut, unsigned int ThreadId);
     void GetThreadRegionSplitUniformly(unsigned int ThreadId, itkImageRegion2 & ThreadRegion);
     void ThreadedPostProcessOutput(itkImageRegion2 const & regionToProcess);
     virtual void CheckLoadBalance();
     virtual void ThreadedLoadBalance(unsigned int ThreadId);
     void WaitForAll();
     void SignalNeighborsAndWait(unsigned int ThreadId);
     void SignalNeighbor(unsigned int SemaphoreArrayNumber, unsigned int ThreadId);
     void WaitForNeighbor(unsigned int SemaphoreArrayNumber, unsigned int ThreadId);
     virtual void ThreadedInitializeIteration(unsigned int ThreadId);
 };


 class itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer {
   public:
     itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer();
     itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer(itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer const & p);
     itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer(itkParallelSparseFieldLevelSetImageFilterID2ID2 * p);
     ~itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer();
     itkParallelSparseFieldLevelSetImageFilterID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkParallelSparseFieldLevelSetImageFilterID2ID2 * GetPointer() const;
     bool operator<(itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer const & r) const;
     bool operator>(itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer const & r) const;
     bool operator<=(itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer const & r) const;
     bool operator>=(itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer const & r) const;
     itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer & operator=(itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer const & r);
     itkParallelSparseFieldLevelSetImageFilterID2ID2_Pointer & operator=(itkParallelSparseFieldLevelSetImageFilterID2ID2 * r);
     itkParallelSparseFieldLevelSetImageFilterID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkParallelSparseFieldLevelSetImageFilterID3ID3 : public itkFiniteDifferenceImageFilterID3ID3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfLayers(signed char const _arg);
     virtual signed char GetNumberOfLayers() const;
     virtual void SetIsoSurfaceValue(double const _arg);
     virtual double GetIsoSurfaceValue() const;
     itkSparseFieldLayerPSFLSNI3_Pointer GetActiveListForIndex(itkIndex3 const index);
   private:
     itkParallelSparseFieldLevelSetImageFilterID3ID3(itkParallelSparseFieldLevelSetImageFilterID3ID3 const & arg0);
     void operator=(itkParallelSparseFieldLevelSetImageFilterID3ID3 const & arg0);
   protected:
     itkParallelSparseFieldLevelSetImageFilterID3ID3();
     ~itkParallelSparseFieldLevelSetImageFilterID3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void CopyInputToOutput();
     virtual void AllocateUpdateBuffer();
     virtual void Initialize();
     void ConstructActiveLayer();
     void InitializeActiveLayerValues();
     void ConstructLayer(signed char from, signed char to);
     void ProcessStatusList(itkSparseFieldLayerPSFLSNI3 * InputList, signed char ChangeToStatus, signed char SearchForStatus, unsigned int ThreadId);
     void PropagateAllLayerValues();
     void PropagateLayerValues(signed char from, signed char to, signed char promote, unsigned int InOrOut);
     virtual void InitializeBackgroundPixels();
     void ThreadedAllocateData(unsigned int ThreadId);
     void ThreadedInitializeData(unsigned int ThreadId, itkImageRegion3 const & ThreadRegion);
     void ComputeInitialThreadBoundaries();
     unsigned int GetThreadNumber(unsigned int splitAxisValue);
     void GetThreadRegionSplitByBoundary(unsigned int ThreadId, itkImageRegion3 & ThreadRegion);
     void DeallocateData();
     void Iterate();
     static void * IterateThreaderCallback(void * arg);
     virtual double ThreadedCalculateUpdateValue(unsigned int const arg0, itkIndex3 const arg1, double const & dt, double const & value, double const & change);
     virtual void ThreadedProcessPixelEnteringActiveLayer(itkIndex3 const arg0, double const arg1, unsigned int const arg2);
     virtual void ApplyUpdate(double arg0);
     virtual void ThreadedApplyUpdate(double dt, unsigned int ThreadId);
     virtual double CalculateChange();
     virtual double ThreadedCalculateChange(unsigned int ThreadId);
     void ThreadedUpdateActiveLayerValues(double dt, itkSparseFieldLayerPSFLSNI3 * StatusUpList, itkSparseFieldLayerPSFLSNI3 * StatusDownList, unsigned int ThreadId);
     void CopyInsertList(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI3_Pointer FromListPtr, itkSparseFieldLayerPSFLSNI3_Pointer ToListPtr);
     void ClearList(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI3_Pointer ListPtr);
     void CopyInsertInterNeighborNodeTransferBufferLayers(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI3_Pointer InputList, unsigned int InOrOut, unsigned int BufferLayerNumber);
     void ClearInterNeighborNodeTransferBufferLayers(unsigned int ThreadId, unsigned int InOrOut, unsigned int BufferLayerNumber);
     void ThreadedProcessFirstLayerStatusLists(unsigned int InputLayerNumber, unsigned int OutputLayerNumber, signed char SearchForStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedProcessStatusList(unsigned int InputLayerNumber, unsigned int OutputLayerNumber, signed char ChangeToStatus, signed char SearchForStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedProcessOutsideList(unsigned int InputLayerNumber, signed char ChangeToStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedPropagateLayerValues(signed char from, signed char to, signed char promote, unsigned int InorOut, unsigned int ThreadId);
     void GetThreadRegionSplitUniformly(unsigned int ThreadId, itkImageRegion3 & ThreadRegion);
     void ThreadedPostProcessOutput(itkImageRegion3 const & regionToProcess);
     virtual void CheckLoadBalance();
     virtual void ThreadedLoadBalance(unsigned int ThreadId);
     void WaitForAll();
     void SignalNeighborsAndWait(unsigned int ThreadId);
     void SignalNeighbor(unsigned int SemaphoreArrayNumber, unsigned int ThreadId);
     void WaitForNeighbor(unsigned int SemaphoreArrayNumber, unsigned int ThreadId);
     virtual void ThreadedInitializeIteration(unsigned int ThreadId);
 };


 class itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer {
   public:
     itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer();
     itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer(itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer const & p);
     itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer(itkParallelSparseFieldLevelSetImageFilterID3ID3 * p);
     ~itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer();
     itkParallelSparseFieldLevelSetImageFilterID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkParallelSparseFieldLevelSetImageFilterID3ID3 * GetPointer() const;
     bool operator<(itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer const & r) const;
     bool operator>(itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer const & r) const;
     bool operator<=(itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer const & r) const;
     bool operator>=(itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer const & r) const;
     itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer & operator=(itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer const & r);
     itkParallelSparseFieldLevelSetImageFilterID3ID3_Pointer & operator=(itkParallelSparseFieldLevelSetImageFilterID3ID3 * r);
     itkParallelSparseFieldLevelSetImageFilterID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkParallelSparseFieldLevelSetImageFilterIF2IF2 : public itkFiniteDifferenceImageFilterIF2IF2 {
   public:
     enum  {  ImageDimension = 2 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfLayers(signed char const _arg);
     virtual signed char GetNumberOfLayers() const;
     virtual void SetIsoSurfaceValue(float const _arg);
     virtual float GetIsoSurfaceValue() const;
     itkSparseFieldLayerPSFLSNI2_Pointer GetActiveListForIndex(itkIndex2 const index);
   private:
     itkParallelSparseFieldLevelSetImageFilterIF2IF2(itkParallelSparseFieldLevelSetImageFilterIF2IF2 const & arg0);
     void operator=(itkParallelSparseFieldLevelSetImageFilterIF2IF2 const & arg0);
   protected:
     itkParallelSparseFieldLevelSetImageFilterIF2IF2();
     ~itkParallelSparseFieldLevelSetImageFilterIF2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void CopyInputToOutput();
     virtual void AllocateUpdateBuffer();
     virtual void Initialize();
     void ConstructActiveLayer();
     void InitializeActiveLayerValues();
     void ConstructLayer(signed char from, signed char to);
     void ProcessStatusList(itkSparseFieldLayerPSFLSNI2 * InputList, signed char ChangeToStatus, signed char SearchForStatus, unsigned int ThreadId);
     void PropagateAllLayerValues();
     void PropagateLayerValues(signed char from, signed char to, signed char promote, unsigned int InOrOut);
     virtual void InitializeBackgroundPixels();
     void ThreadedAllocateData(unsigned int ThreadId);
     void ThreadedInitializeData(unsigned int ThreadId, itkImageRegion2 const & ThreadRegion);
     void ComputeInitialThreadBoundaries();
     unsigned int GetThreadNumber(unsigned int splitAxisValue);
     void GetThreadRegionSplitByBoundary(unsigned int ThreadId, itkImageRegion2 & ThreadRegion);
     void DeallocateData();
     void Iterate();
     static void * IterateThreaderCallback(void * arg);
     virtual float ThreadedCalculateUpdateValue(unsigned int const arg0, itkIndex2 const arg1, double const & dt, float const & value, float const & change);
     virtual void ThreadedProcessPixelEnteringActiveLayer(itkIndex2 const arg0, float const arg1, unsigned int const arg2);
     virtual void ApplyUpdate(double arg0);
     virtual void ThreadedApplyUpdate(double dt, unsigned int ThreadId);
     virtual double CalculateChange();
     virtual double ThreadedCalculateChange(unsigned int ThreadId);
     void ThreadedUpdateActiveLayerValues(double dt, itkSparseFieldLayerPSFLSNI2 * StatusUpList, itkSparseFieldLayerPSFLSNI2 * StatusDownList, unsigned int ThreadId);
     void CopyInsertList(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI2_Pointer FromListPtr, itkSparseFieldLayerPSFLSNI2_Pointer ToListPtr);
     void ClearList(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI2_Pointer ListPtr);
     void CopyInsertInterNeighborNodeTransferBufferLayers(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI2_Pointer InputList, unsigned int InOrOut, unsigned int BufferLayerNumber);
     void ClearInterNeighborNodeTransferBufferLayers(unsigned int ThreadId, unsigned int InOrOut, unsigned int BufferLayerNumber);
     void ThreadedProcessFirstLayerStatusLists(unsigned int InputLayerNumber, unsigned int OutputLayerNumber, signed char SearchForStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedProcessStatusList(unsigned int InputLayerNumber, unsigned int OutputLayerNumber, signed char ChangeToStatus, signed char SearchForStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedProcessOutsideList(unsigned int InputLayerNumber, signed char ChangeToStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedPropagateLayerValues(signed char from, signed char to, signed char promote, unsigned int InorOut, unsigned int ThreadId);
     void GetThreadRegionSplitUniformly(unsigned int ThreadId, itkImageRegion2 & ThreadRegion);
     void ThreadedPostProcessOutput(itkImageRegion2 const & regionToProcess);
     virtual void CheckLoadBalance();
     virtual void ThreadedLoadBalance(unsigned int ThreadId);
     void WaitForAll();
     void SignalNeighborsAndWait(unsigned int ThreadId);
     void SignalNeighbor(unsigned int SemaphoreArrayNumber, unsigned int ThreadId);
     void WaitForNeighbor(unsigned int SemaphoreArrayNumber, unsigned int ThreadId);
     virtual void ThreadedInitializeIteration(unsigned int ThreadId);
 };


 class itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer {
   public:
     itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer();
     itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer(itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer const & p);
     itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer(itkParallelSparseFieldLevelSetImageFilterIF2IF2 * p);
     ~itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer();
     itkParallelSparseFieldLevelSetImageFilterIF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkParallelSparseFieldLevelSetImageFilterIF2IF2 * GetPointer() const;
     bool operator<(itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer const & r) const;
     bool operator>(itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer const & r) const;
     bool operator<=(itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer const & r) const;
     bool operator>=(itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer const & r) const;
     itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer & operator=(itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer const & r);
     itkParallelSparseFieldLevelSetImageFilterIF2IF2_Pointer & operator=(itkParallelSparseFieldLevelSetImageFilterIF2IF2 * r);
     itkParallelSparseFieldLevelSetImageFilterIF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkParallelSparseFieldLevelSetImageFilterIF3IF3 : public itkFiniteDifferenceImageFilterIF3IF3 {
   public:
     enum  {  ImageDimension = 3 };
     enum  {  OutputEqualityComparableCheck = 1 };
     enum  {  DoubleConvertibleToOutputCheck = 1 };
     enum  {  OutputOStreamWritableCheck = 1 };
     static itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetNumberOfLayers(signed char const _arg);
     virtual signed char GetNumberOfLayers() const;
     virtual void SetIsoSurfaceValue(float const _arg);
     virtual float GetIsoSurfaceValue() const;
     itkSparseFieldLayerPSFLSNI3_Pointer GetActiveListForIndex(itkIndex3 const index);
   private:
     itkParallelSparseFieldLevelSetImageFilterIF3IF3(itkParallelSparseFieldLevelSetImageFilterIF3IF3 const & arg0);
     void operator=(itkParallelSparseFieldLevelSetImageFilterIF3IF3 const & arg0);
   protected:
     itkParallelSparseFieldLevelSetImageFilterIF3IF3();
     ~itkParallelSparseFieldLevelSetImageFilterIF3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateData();
     virtual void CopyInputToOutput();
     virtual void AllocateUpdateBuffer();
     virtual void Initialize();
     void ConstructActiveLayer();
     void InitializeActiveLayerValues();
     void ConstructLayer(signed char from, signed char to);
     void ProcessStatusList(itkSparseFieldLayerPSFLSNI3 * InputList, signed char ChangeToStatus, signed char SearchForStatus, unsigned int ThreadId);
     void PropagateAllLayerValues();
     void PropagateLayerValues(signed char from, signed char to, signed char promote, unsigned int InOrOut);
     virtual void InitializeBackgroundPixels();
     void ThreadedAllocateData(unsigned int ThreadId);
     void ThreadedInitializeData(unsigned int ThreadId, itkImageRegion3 const & ThreadRegion);
     void ComputeInitialThreadBoundaries();
     unsigned int GetThreadNumber(unsigned int splitAxisValue);
     void GetThreadRegionSplitByBoundary(unsigned int ThreadId, itkImageRegion3 & ThreadRegion);
     void DeallocateData();
     void Iterate();
     static void * IterateThreaderCallback(void * arg);
     virtual float ThreadedCalculateUpdateValue(unsigned int const arg0, itkIndex3 const arg1, double const & dt, float const & value, float const & change);
     virtual void ThreadedProcessPixelEnteringActiveLayer(itkIndex3 const arg0, float const arg1, unsigned int const arg2);
     virtual void ApplyUpdate(double arg0);
     virtual void ThreadedApplyUpdate(double dt, unsigned int ThreadId);
     virtual double CalculateChange();
     virtual double ThreadedCalculateChange(unsigned int ThreadId);
     void ThreadedUpdateActiveLayerValues(double dt, itkSparseFieldLayerPSFLSNI3 * StatusUpList, itkSparseFieldLayerPSFLSNI3 * StatusDownList, unsigned int ThreadId);
     void CopyInsertList(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI3_Pointer FromListPtr, itkSparseFieldLayerPSFLSNI3_Pointer ToListPtr);
     void ClearList(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI3_Pointer ListPtr);
     void CopyInsertInterNeighborNodeTransferBufferLayers(unsigned int ThreadId, itkSparseFieldLayerPSFLSNI3_Pointer InputList, unsigned int InOrOut, unsigned int BufferLayerNumber);
     void ClearInterNeighborNodeTransferBufferLayers(unsigned int ThreadId, unsigned int InOrOut, unsigned int BufferLayerNumber);
     void ThreadedProcessFirstLayerStatusLists(unsigned int InputLayerNumber, unsigned int OutputLayerNumber, signed char SearchForStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedProcessStatusList(unsigned int InputLayerNumber, unsigned int OutputLayerNumber, signed char ChangeToStatus, signed char SearchForStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedProcessOutsideList(unsigned int InputLayerNumber, signed char ChangeToStatus, unsigned int InOrOut, unsigned int BufferLayerNumber, unsigned int ThreadId);
     void ThreadedPropagateLayerValues(signed char from, signed char to, signed char promote, unsigned int InorOut, unsigned int ThreadId);
     void GetThreadRegionSplitUniformly(unsigned int ThreadId, itkImageRegion3 & ThreadRegion);
     void ThreadedPostProcessOutput(itkImageRegion3 const & regionToProcess);
     virtual void CheckLoadBalance();
     virtual void ThreadedLoadBalance(unsigned int ThreadId);
     void WaitForAll();
     void SignalNeighborsAndWait(unsigned int ThreadId);
     void SignalNeighbor(unsigned int SemaphoreArrayNumber, unsigned int ThreadId);
     void WaitForNeighbor(unsigned int SemaphoreArrayNumber, unsigned int ThreadId);
     virtual void ThreadedInitializeIteration(unsigned int ThreadId);
 };


 class itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer {
   public:
     itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer();
     itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer(itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer const & p);
     itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer(itkParallelSparseFieldLevelSetImageFilterIF3IF3 * p);
     ~itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer();
     itkParallelSparseFieldLevelSetImageFilterIF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkParallelSparseFieldLevelSetImageFilterIF3IF3 * GetPointer() const;
     bool operator<(itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer const & r) const;
     bool operator>(itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer const & r) const;
     bool operator<=(itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer const & r) const;
     bool operator>=(itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer const & r) const;
     itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer & operator=(itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer const & r);
     itkParallelSparseFieldLevelSetImageFilterIF3IF3_Pointer & operator=(itkParallelSparseFieldLevelSetImageFilterIF3IF3 * r);
     itkParallelSparseFieldLevelSetImageFilterIF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkParallelSparseFieldLevelSetNodeI2 {
   public:
     ~itkParallelSparseFieldLevelSetNodeI2();
     itkParallelSparseFieldLevelSetNodeI2 & operator=(itkParallelSparseFieldLevelSetNodeI2 const & arg0);
     itkParallelSparseFieldLevelSetNodeI2(itkParallelSparseFieldLevelSetNodeI2 const & arg0);
     itkParallelSparseFieldLevelSetNodeI2();
   private:
   protected:
 };


 class itkParallelSparseFieldLevelSetNodeI3 {
   public:
     ~itkParallelSparseFieldLevelSetNodeI3();
     itkParallelSparseFieldLevelSetNodeI3 & operator=(itkParallelSparseFieldLevelSetNodeI3 const & arg0);
     itkParallelSparseFieldLevelSetNodeI3(itkParallelSparseFieldLevelSetNodeI3 const & arg0);
     itkParallelSparseFieldLevelSetNodeI3();
   private:
   protected:
 };


 class itkSparseFieldLayerPSFLSNI2 : public itkObject {
   public:
     static itkSparseFieldLayerPSFLSNI2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkParallelSparseFieldLevelSetNodeI2 * Front();
     itkParallelSparseFieldLevelSetNodeI2 const * Front() const;
     void PopFront();
     void PushFront(itkParallelSparseFieldLevelSetNodeI2 * n);
     void Unlink(itkParallelSparseFieldLevelSetNodeI2 * n);
     bool Empty() const;
     unsigned int Size() const;
     std::vector< itkSparseFieldLayerPSFLSNI2::RegionType > SplitRegions(int num) const;
   private:
     itkSparseFieldLayerPSFLSNI2(itkSparseFieldLayerPSFLSNI2 const & arg0);
     void operator=(itkSparseFieldLayerPSFLSNI2 const & arg0);
   protected:
     itkSparseFieldLayerPSFLSNI2();
     ~itkSparseFieldLayerPSFLSNI2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSparseFieldLayerPSFLSNI2_Pointer {
   public:
     itkSparseFieldLayerPSFLSNI2_Pointer();
     itkSparseFieldLayerPSFLSNI2_Pointer(itkSparseFieldLayerPSFLSNI2_Pointer const & p);
     itkSparseFieldLayerPSFLSNI2_Pointer(itkSparseFieldLayerPSFLSNI2 * p);
     ~itkSparseFieldLayerPSFLSNI2_Pointer();
     itkSparseFieldLayerPSFLSNI2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSparseFieldLayerPSFLSNI2 * GetPointer() const;
     bool operator<(itkSparseFieldLayerPSFLSNI2_Pointer const & r) const;
     bool operator>(itkSparseFieldLayerPSFLSNI2_Pointer const & r) const;
     bool operator<=(itkSparseFieldLayerPSFLSNI2_Pointer const & r) const;
     bool operator>=(itkSparseFieldLayerPSFLSNI2_Pointer const & r) const;
     itkSparseFieldLayerPSFLSNI2_Pointer & operator=(itkSparseFieldLayerPSFLSNI2_Pointer const & r);
     itkSparseFieldLayerPSFLSNI2_Pointer & operator=(itkSparseFieldLayerPSFLSNI2 * r);
     itkSparseFieldLayerPSFLSNI2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkSparseFieldLayerPSFLSNI3 : public itkObject {
   public:
     static itkSparseFieldLayerPSFLSNI3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     itkParallelSparseFieldLevelSetNodeI3 * Front();
     itkParallelSparseFieldLevelSetNodeI3 const * Front() const;
     void PopFront();
     void PushFront(itkParallelSparseFieldLevelSetNodeI3 * n);
     void Unlink(itkParallelSparseFieldLevelSetNodeI3 * n);
     bool Empty() const;
     unsigned int Size() const;
     std::vector< itkSparseFieldLayerPSFLSNI3::RegionType > SplitRegions(int num) const;
   private:
     itkSparseFieldLayerPSFLSNI3(itkSparseFieldLayerPSFLSNI3 const & arg0);
     void operator=(itkSparseFieldLayerPSFLSNI3 const & arg0);
   protected:
     itkSparseFieldLayerPSFLSNI3();
     ~itkSparseFieldLayerPSFLSNI3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkSparseFieldLayerPSFLSNI3_Pointer {
   public:
     itkSparseFieldLayerPSFLSNI3_Pointer();
     itkSparseFieldLayerPSFLSNI3_Pointer(itkSparseFieldLayerPSFLSNI3_Pointer const & p);
     itkSparseFieldLayerPSFLSNI3_Pointer(itkSparseFieldLayerPSFLSNI3 * p);
     ~itkSparseFieldLayerPSFLSNI3_Pointer();
     itkSparseFieldLayerPSFLSNI3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkSparseFieldLayerPSFLSNI3 * GetPointer() const;
     bool operator<(itkSparseFieldLayerPSFLSNI3_Pointer const & r) const;
     bool operator>(itkSparseFieldLayerPSFLSNI3_Pointer const & r) const;
     bool operator<=(itkSparseFieldLayerPSFLSNI3_Pointer const & r) const;
     bool operator>=(itkSparseFieldLayerPSFLSNI3_Pointer const & r) const;
     itkSparseFieldLayerPSFLSNI3_Pointer & operator=(itkSparseFieldLayerPSFLSNI3_Pointer const & r);
     itkSparseFieldLayerPSFLSNI3_Pointer & operator=(itkSparseFieldLayerPSFLSNI3 * r);
     itkSparseFieldLayerPSFLSNI3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


