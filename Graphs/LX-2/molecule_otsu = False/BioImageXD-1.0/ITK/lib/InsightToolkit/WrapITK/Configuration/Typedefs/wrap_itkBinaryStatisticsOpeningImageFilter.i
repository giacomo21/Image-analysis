// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkBinaryStatisticsOpeningImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkBinaryStatisticsOpeningImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkBinaryStatisticsOpeningImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkBinaryStatisticsOpeningImageFilterJava
#endif
#ifdef SWIGLUA
%module itkBinaryStatisticsOpeningImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkBinaryStatisticsOpeningImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkBinaryStatisticsOpeningImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkBinaryStatisticsOpeningImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkBinaryStatisticsOpeningImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkBinaryStatisticsOpeningImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkBinaryStatisticsOpeningImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkBinaryStatisticsOpeningImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkBinaryStatisticsOpeningImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkBinaryStatisticsOpeningImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkBinaryStatisticsOpeningImageFilterPython
#endif
#ifdef SWIGR
%module itkBinaryStatisticsOpeningImageFilterR
#endif
#ifdef SWIGRUBY
%module itkBinaryStatisticsOpeningImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkBinaryStatisticsOpeningImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkBinaryStatisticsOpeningImageFilterTcl
#endif
#ifdef SWIGXML
%module itkBinaryStatisticsOpeningImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Transforms.includes"
#include "Numerics.includes"
#include "BinaryMorphology.includes"
%}


%{
%}




%import wrap_ITKCommonBase.i
%import wrap_itkImage.i
%import wrap_itkImageToImageFilterA.i


%include itk.i
%include wrap_itkBinaryStatisticsOpeningImageFilter_ext.i


 class itkBinaryStatisticsOpeningImageFilterIUC2ID2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageD2 const * input);
     itkImageD2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageD2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC2ID2(itkBinaryStatisticsOpeningImageFilterIUC2ID2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC2ID2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC2ID2();
     ~itkBinaryStatisticsOpeningImageFilterIUC2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2ID2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC2ID2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC2ID2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2ID2 * r);
     itkBinaryStatisticsOpeningImageFilterIUC2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUC2IF2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageF2 const * input);
     itkImageF2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageF2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC2IF2(itkBinaryStatisticsOpeningImageFilterIUC2IF2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC2IF2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC2IF2();
     ~itkBinaryStatisticsOpeningImageFilterIUC2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2IF2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC2IF2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC2IF2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2IF2 * r);
     itkBinaryStatisticsOpeningImageFilterIUC2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUC2IUC2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUC2 const * input);
     itkImageUC2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageUC2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2(itkBinaryStatisticsOpeningImageFilterIUC2IUC2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC2IUC2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2();
     ~itkBinaryStatisticsOpeningImageFilterIUC2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2IUC2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2IUC2 * r);
     itkBinaryStatisticsOpeningImageFilterIUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUC2IUL2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUL2 const * input);
     itkImageUL2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageUL2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2(itkBinaryStatisticsOpeningImageFilterIUC2IUL2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC2IUL2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2();
     ~itkBinaryStatisticsOpeningImageFilterIUC2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2IUL2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2IUL2 * r);
     itkBinaryStatisticsOpeningImageFilterIUC2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUC2IUS2 : public itkImageToImageFilterIUC2IUC2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUS2 const * input);
     itkImageUS2 const * GetFeatureImage();
     void SetInput1(itkImageUC2 const * input);
     void SetInput2(itkImageUS2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2(itkBinaryStatisticsOpeningImageFilterIUC2IUS2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC2IUS2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2();
     ~itkBinaryStatisticsOpeningImageFilterIUC2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer(itkBinaryStatisticsOpeningImageFilterIUC2IUS2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC2IUS2 * r);
     itkBinaryStatisticsOpeningImageFilterIUC2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3ID3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageD3 const * input);
     itkImageD3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageD3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC3ID3(itkBinaryStatisticsOpeningImageFilterIUC3ID3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC3ID3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC3ID3();
     ~itkBinaryStatisticsOpeningImageFilterIUC3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3ID3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC3ID3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC3ID3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3ID3 * r);
     itkBinaryStatisticsOpeningImageFilterIUC3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3IF3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageF3 const * input);
     itkImageF3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageF3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC3IF3(itkBinaryStatisticsOpeningImageFilterIUC3IF3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC3IF3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC3IF3();
     ~itkBinaryStatisticsOpeningImageFilterIUC3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3IF3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC3IF3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC3IF3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3IF3 * r);
     itkBinaryStatisticsOpeningImageFilterIUC3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3IUC3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUC3 const * input);
     itkImageUC3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageUC3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3(itkBinaryStatisticsOpeningImageFilterIUC3IUC3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC3IUC3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3();
     ~itkBinaryStatisticsOpeningImageFilterIUC3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3IUC3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3IUC3 * r);
     itkBinaryStatisticsOpeningImageFilterIUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3IUL3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUL3 const * input);
     itkImageUL3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageUL3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3(itkBinaryStatisticsOpeningImageFilterIUC3IUL3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC3IUL3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3();
     ~itkBinaryStatisticsOpeningImageFilterIUC3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3IUL3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3IUL3 * r);
     itkBinaryStatisticsOpeningImageFilterIUC3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3IUS3 : public itkImageToImageFilterIUC3IUC3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned char const _arg);
     virtual unsigned char GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned char const _arg);
     virtual unsigned char GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUS3 const * input);
     itkImageUS3 const * GetFeatureImage();
     void SetInput1(itkImageUC3 const * input);
     void SetInput2(itkImageUS3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3(itkBinaryStatisticsOpeningImageFilterIUC3IUS3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUC3IUS3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3();
     ~itkBinaryStatisticsOpeningImageFilterIUC3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer(itkBinaryStatisticsOpeningImageFilterIUC3IUS3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUC3IUS3 * r);
     itkBinaryStatisticsOpeningImageFilterIUC3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2ID2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageD2 const * input);
     itkImageD2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageD2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL2ID2(itkBinaryStatisticsOpeningImageFilterIUL2ID2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL2ID2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL2ID2();
     ~itkBinaryStatisticsOpeningImageFilterIUL2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2ID2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL2ID2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL2ID2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2ID2 * r);
     itkBinaryStatisticsOpeningImageFilterIUL2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2IF2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageF2 const * input);
     itkImageF2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageF2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL2IF2(itkBinaryStatisticsOpeningImageFilterIUL2IF2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL2IF2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL2IF2();
     ~itkBinaryStatisticsOpeningImageFilterIUL2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2IF2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL2IF2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL2IF2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2IF2 * r);
     itkBinaryStatisticsOpeningImageFilterIUL2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2IUC2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUC2 const * input);
     itkImageUC2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageUC2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2(itkBinaryStatisticsOpeningImageFilterIUL2IUC2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL2IUC2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2();
     ~itkBinaryStatisticsOpeningImageFilterIUL2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2IUC2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2IUC2 * r);
     itkBinaryStatisticsOpeningImageFilterIUL2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2IUL2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUL2 const * input);
     itkImageUL2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageUL2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2(itkBinaryStatisticsOpeningImageFilterIUL2IUL2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL2IUL2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2();
     ~itkBinaryStatisticsOpeningImageFilterIUL2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2IUL2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2IUL2 * r);
     itkBinaryStatisticsOpeningImageFilterIUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2IUS2 : public itkImageToImageFilterIUL2IUL2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUS2 const * input);
     itkImageUS2 const * GetFeatureImage();
     void SetInput1(itkImageUL2 const * input);
     void SetInput2(itkImageUS2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2(itkBinaryStatisticsOpeningImageFilterIUL2IUS2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL2IUS2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2();
     ~itkBinaryStatisticsOpeningImageFilterIUL2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer(itkBinaryStatisticsOpeningImageFilterIUL2IUS2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL2IUS2 * r);
     itkBinaryStatisticsOpeningImageFilterIUL2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3ID3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageD3 const * input);
     itkImageD3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageD3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL3ID3(itkBinaryStatisticsOpeningImageFilterIUL3ID3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL3ID3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL3ID3();
     ~itkBinaryStatisticsOpeningImageFilterIUL3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3ID3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL3ID3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL3ID3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3ID3 * r);
     itkBinaryStatisticsOpeningImageFilterIUL3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3IF3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageF3 const * input);
     itkImageF3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageF3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL3IF3(itkBinaryStatisticsOpeningImageFilterIUL3IF3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL3IF3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL3IF3();
     ~itkBinaryStatisticsOpeningImageFilterIUL3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3IF3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL3IF3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL3IF3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3IF3 * r);
     itkBinaryStatisticsOpeningImageFilterIUL3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3IUC3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUC3 const * input);
     itkImageUC3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageUC3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3(itkBinaryStatisticsOpeningImageFilterIUL3IUC3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL3IUC3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3();
     ~itkBinaryStatisticsOpeningImageFilterIUL3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3IUC3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3IUC3 * r);
     itkBinaryStatisticsOpeningImageFilterIUL3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3IUL3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUL3 const * input);
     itkImageUL3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageUL3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3(itkBinaryStatisticsOpeningImageFilterIUL3IUL3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL3IUL3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3();
     ~itkBinaryStatisticsOpeningImageFilterIUL3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3IUL3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3IUL3 * r);
     itkBinaryStatisticsOpeningImageFilterIUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3IUS3 : public itkImageToImageFilterIUL3IUL3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned long const _arg);
     virtual unsigned long GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned long const _arg);
     virtual unsigned long GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUS3 const * input);
     itkImageUS3 const * GetFeatureImage();
     void SetInput1(itkImageUL3 const * input);
     void SetInput2(itkImageUS3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3(itkBinaryStatisticsOpeningImageFilterIUL3IUS3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUL3IUS3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3();
     ~itkBinaryStatisticsOpeningImageFilterIUL3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer(itkBinaryStatisticsOpeningImageFilterIUL3IUS3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUL3IUS3 * r);
     itkBinaryStatisticsOpeningImageFilterIUL3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2ID2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageD2 const * input);
     itkImageD2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageD2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS2ID2(itkBinaryStatisticsOpeningImageFilterIUS2ID2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS2ID2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS2ID2();
     ~itkBinaryStatisticsOpeningImageFilterIUS2ID2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2ID2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS2ID2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS2ID2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2ID2 * r);
     itkBinaryStatisticsOpeningImageFilterIUS2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2IF2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageF2 const * input);
     itkImageF2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageF2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS2IF2(itkBinaryStatisticsOpeningImageFilterIUS2IF2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS2IF2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS2IF2();
     ~itkBinaryStatisticsOpeningImageFilterIUS2IF2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2IF2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS2IF2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS2IF2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2IF2 * r);
     itkBinaryStatisticsOpeningImageFilterIUS2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2IUC2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUC2 const * input);
     itkImageUC2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageUC2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2(itkBinaryStatisticsOpeningImageFilterIUS2IUC2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS2IUC2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2();
     ~itkBinaryStatisticsOpeningImageFilterIUS2IUC2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2IUC2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2IUC2 * r);
     itkBinaryStatisticsOpeningImageFilterIUS2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2IUL2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUL2 const * input);
     itkImageUL2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageUL2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2(itkBinaryStatisticsOpeningImageFilterIUS2IUL2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS2IUL2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2();
     ~itkBinaryStatisticsOpeningImageFilterIUS2IUL2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2IUL2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2IUL2 * r);
     itkBinaryStatisticsOpeningImageFilterIUS2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2IUS2 : public itkImageToImageFilterIUS2IUS2 {
   public:
     enum  {  InputImageDimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  ImageDimension = 2 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUS2 const * input);
     itkImageUS2 const * GetFeatureImage();
     void SetInput1(itkImageUS2 const * input);
     void SetInput2(itkImageUS2 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2(itkBinaryStatisticsOpeningImageFilterIUS2IUS2 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS2IUS2 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2();
     ~itkBinaryStatisticsOpeningImageFilterIUS2IUS2();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer(itkBinaryStatisticsOpeningImageFilterIUS2IUS2 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS2IUS2 * r);
     itkBinaryStatisticsOpeningImageFilterIUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3ID3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageD3 const * input);
     itkImageD3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageD3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS3ID3(itkBinaryStatisticsOpeningImageFilterIUS3ID3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS3ID3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS3ID3();
     ~itkBinaryStatisticsOpeningImageFilterIUS3ID3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3ID3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS3ID3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS3ID3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3ID3 * r);
     itkBinaryStatisticsOpeningImageFilterIUS3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3IF3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageF3 const * input);
     itkImageF3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageF3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS3IF3(itkBinaryStatisticsOpeningImageFilterIUS3IF3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS3IF3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS3IF3();
     ~itkBinaryStatisticsOpeningImageFilterIUS3IF3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3IF3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS3IF3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS3IF3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3IF3 * r);
     itkBinaryStatisticsOpeningImageFilterIUS3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3IUC3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUC3 const * input);
     itkImageUC3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageUC3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3(itkBinaryStatisticsOpeningImageFilterIUS3IUC3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS3IUC3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3();
     ~itkBinaryStatisticsOpeningImageFilterIUS3IUC3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3IUC3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3IUC3 * r);
     itkBinaryStatisticsOpeningImageFilterIUS3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3IUL3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUL3 const * input);
     itkImageUL3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageUL3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3(itkBinaryStatisticsOpeningImageFilterIUS3IUL3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS3IUL3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3();
     ~itkBinaryStatisticsOpeningImageFilterIUS3IUL3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3IUL3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3IUL3 * r);
     itkBinaryStatisticsOpeningImageFilterIUS3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3IUS3 : public itkImageToImageFilterIUS3IUS3 {
   public:
     enum  {  InputImageDimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  ImageDimension = 3 };
     enum  {  InputEqualityComparableCheck = 1 };
     enum  {  IntConvertibleToInputCheck = 1 };
     enum  {  InputOStreamWritableCheck = 1 };
     static itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     virtual void SetFullyConnected(bool const _arg);
     virtual bool const & GetFullyConnected() const;
     virtual void FullyConnectedOn();
     virtual void FullyConnectedOff();
     virtual void SetBackgroundValue(unsigned short const _arg);
     virtual unsigned short GetBackgroundValue() const;
     virtual void SetForegroundValue(unsigned short const _arg);
     virtual unsigned short GetForegroundValue() const;
     virtual double GetLambda() const;
     virtual void SetLambda(double const _arg);
     virtual bool GetReverseOrdering() const;
     virtual void SetReverseOrdering(bool const _arg);
     virtual void ReverseOrderingOn();
     virtual void ReverseOrderingOff();
     virtual unsigned int GetAttribute() const;
     virtual void SetAttribute(unsigned int const _arg);
     void SetAttribute(std::string const & s);
     void SetFeatureImage(itkImageUS3 const * input);
     itkImageUS3 const * GetFeatureImage();
     void SetInput1(itkImageUS3 const * input);
     void SetInput2(itkImageUS3 const * input);
   private:
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3(itkBinaryStatisticsOpeningImageFilterIUS3IUS3 const & arg0);
     void operator=(itkBinaryStatisticsOpeningImageFilterIUS3IUS3 const & arg0);
   protected:
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3();
     ~itkBinaryStatisticsOpeningImageFilterIUS3IUS3();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
     virtual void GenerateInputRequestedRegion();
     virtual void EnlargeOutputRequestedRegion(itkDataObject * arg0);
     virtual void GenerateData();
 };


 class itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer {
   public:
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer const & p);
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer(itkBinaryStatisticsOpeningImageFilterIUS3IUS3 * p);
     ~itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer();
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3 * GetPointer() const;
     bool operator<(itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>(itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator<=(itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     bool operator>=(itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer const & r) const;
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer const & r);
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3_Pointer & operator=(itkBinaryStatisticsOpeningImageFilterIUS3IUS3 * r);
     itkBinaryStatisticsOpeningImageFilterIUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


