// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkLinearInterpolateImageFunctionChicken
#endif
#ifdef SWIGCSHARP
%module itkLinearInterpolateImageFunctionCsharp
#endif
#ifdef SWIGGUILE
%module itkLinearInterpolateImageFunctionGuile
#endif
#ifdef SWIGJAVA
%module itkLinearInterpolateImageFunctionJava
#endif
#ifdef SWIGLUA
%module itkLinearInterpolateImageFunctionLua
#endif
#ifdef SWIGMODULA3
%module itkLinearInterpolateImageFunctionModula3
#endif
#ifdef SWIGMZSCHEME
%module itkLinearInterpolateImageFunctionMzscheme
#endif
#ifdef SWIGOCAML
%module itkLinearInterpolateImageFunctionOcaml
#endif
#ifdef SWIGPERL
%module itkLinearInterpolateImageFunctionPerl
#endif
#ifdef SWIGPERL5
%module itkLinearInterpolateImageFunctionPerl5
#endif
#ifdef SWIGPHP
%module itkLinearInterpolateImageFunctionPhp
#endif
#ifdef SWIGPHP4
%module itkLinearInterpolateImageFunctionPhp4
#endif
#ifdef SWIGPHP5
%module itkLinearInterpolateImageFunctionPhp5
#endif
#ifdef SWIGPIKE
%module itkLinearInterpolateImageFunctionPike
#endif
#ifdef SWIGPYTHON
%module itkLinearInterpolateImageFunctionPython
#endif
#ifdef SWIGR
%module itkLinearInterpolateImageFunctionR
#endif
#ifdef SWIGRUBY
%module itkLinearInterpolateImageFunctionRuby
#endif
#ifdef SWIGSEXP
%module itkLinearInterpolateImageFunctionSexp
#endif
#ifdef SWIGTCL
%module itkLinearInterpolateImageFunctionTcl
#endif
#ifdef SWIGXML
%module itkLinearInterpolateImageFunctionXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "Interpolators.includes"
%}


%{
%}




%import wrap_itkContinuousIndex.i
%import wrap_ITKCommonBase.i
%import wrap_itkInterpolateImageFunction.i


%include itk.i
%include wrap_itkLinearInterpolateImageFunction_ext.i


 class itkLinearInterpolateImageFunctionID2D : public itkInterpolateImageFunctionID2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionID2D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const;
   private:
     itkLinearInterpolateImageFunctionID2D(itkLinearInterpolateImageFunctionID2D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionID2D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID2D::Dispatch<0u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID2D::Dispatch<1u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID2D::Dispatch<2u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID2D::Dispatch<3u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID2D::DispatchBase const & arg0, itkContinuousIndexD2 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD2 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionID2D();
     ~itkLinearInterpolateImageFunctionID2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionID2D_Pointer {
   public:
     itkLinearInterpolateImageFunctionID2D_Pointer();
     itkLinearInterpolateImageFunctionID2D_Pointer(itkLinearInterpolateImageFunctionID2D_Pointer const & p);
     itkLinearInterpolateImageFunctionID2D_Pointer(itkLinearInterpolateImageFunctionID2D * p);
     ~itkLinearInterpolateImageFunctionID2D_Pointer();
     itkLinearInterpolateImageFunctionID2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionID2D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionID2D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionID2D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionID2D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionID2D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionID2D_Pointer & operator=(itkLinearInterpolateImageFunctionID2D_Pointer const & r);
     itkLinearInterpolateImageFunctionID2D_Pointer & operator=(itkLinearInterpolateImageFunctionID2D * r);
     itkLinearInterpolateImageFunctionID2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLinearInterpolateImageFunctionID3D : public itkInterpolateImageFunctionID3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionID3D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const;
   private:
     itkLinearInterpolateImageFunctionID3D(itkLinearInterpolateImageFunctionID3D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionID3D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID3D::Dispatch<0u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID3D::Dispatch<1u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID3D::Dispatch<2u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID3D::Dispatch<3u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionID3D::DispatchBase const & arg0, itkContinuousIndexD3 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD3 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionID3D();
     ~itkLinearInterpolateImageFunctionID3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionID3D_Pointer {
   public:
     itkLinearInterpolateImageFunctionID3D_Pointer();
     itkLinearInterpolateImageFunctionID3D_Pointer(itkLinearInterpolateImageFunctionID3D_Pointer const & p);
     itkLinearInterpolateImageFunctionID3D_Pointer(itkLinearInterpolateImageFunctionID3D * p);
     ~itkLinearInterpolateImageFunctionID3D_Pointer();
     itkLinearInterpolateImageFunctionID3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionID3D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionID3D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionID3D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionID3D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionID3D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionID3D_Pointer & operator=(itkLinearInterpolateImageFunctionID3D_Pointer const & r);
     itkLinearInterpolateImageFunctionID3D_Pointer & operator=(itkLinearInterpolateImageFunctionID3D * r);
     itkLinearInterpolateImageFunctionID3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLinearInterpolateImageFunctionIF2D : public itkInterpolateImageFunctionIF2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionIF2D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const;
   private:
     itkLinearInterpolateImageFunctionIF2D(itkLinearInterpolateImageFunctionIF2D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionIF2D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF2D::Dispatch<0u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF2D::Dispatch<1u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF2D::Dispatch<2u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF2D::Dispatch<3u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF2D::DispatchBase const & arg0, itkContinuousIndexD2 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD2 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionIF2D();
     ~itkLinearInterpolateImageFunctionIF2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionIF2D_Pointer {
   public:
     itkLinearInterpolateImageFunctionIF2D_Pointer();
     itkLinearInterpolateImageFunctionIF2D_Pointer(itkLinearInterpolateImageFunctionIF2D_Pointer const & p);
     itkLinearInterpolateImageFunctionIF2D_Pointer(itkLinearInterpolateImageFunctionIF2D * p);
     ~itkLinearInterpolateImageFunctionIF2D_Pointer();
     itkLinearInterpolateImageFunctionIF2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionIF2D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionIF2D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionIF2D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionIF2D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionIF2D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionIF2D_Pointer & operator=(itkLinearInterpolateImageFunctionIF2D_Pointer const & r);
     itkLinearInterpolateImageFunctionIF2D_Pointer & operator=(itkLinearInterpolateImageFunctionIF2D * r);
     itkLinearInterpolateImageFunctionIF2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLinearInterpolateImageFunctionIF3D : public itkInterpolateImageFunctionIF3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionIF3D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const;
   private:
     itkLinearInterpolateImageFunctionIF3D(itkLinearInterpolateImageFunctionIF3D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionIF3D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF3D::Dispatch<0u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF3D::Dispatch<1u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF3D::Dispatch<2u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF3D::Dispatch<3u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIF3D::DispatchBase const & arg0, itkContinuousIndexD3 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD3 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionIF3D();
     ~itkLinearInterpolateImageFunctionIF3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionIF3D_Pointer {
   public:
     itkLinearInterpolateImageFunctionIF3D_Pointer();
     itkLinearInterpolateImageFunctionIF3D_Pointer(itkLinearInterpolateImageFunctionIF3D_Pointer const & p);
     itkLinearInterpolateImageFunctionIF3D_Pointer(itkLinearInterpolateImageFunctionIF3D * p);
     ~itkLinearInterpolateImageFunctionIF3D_Pointer();
     itkLinearInterpolateImageFunctionIF3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionIF3D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionIF3D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionIF3D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionIF3D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionIF3D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionIF3D_Pointer & operator=(itkLinearInterpolateImageFunctionIF3D_Pointer const & r);
     itkLinearInterpolateImageFunctionIF3D_Pointer & operator=(itkLinearInterpolateImageFunctionIF3D * r);
     itkLinearInterpolateImageFunctionIF3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLinearInterpolateImageFunctionIUC2D : public itkInterpolateImageFunctionIUC2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionIUC2D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const;
   private:
     itkLinearInterpolateImageFunctionIUC2D(itkLinearInterpolateImageFunctionIUC2D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionIUC2D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC2D::Dispatch<0u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC2D::Dispatch<1u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC2D::Dispatch<2u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC2D::Dispatch<3u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC2D::DispatchBase const & arg0, itkContinuousIndexD2 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD2 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionIUC2D();
     ~itkLinearInterpolateImageFunctionIUC2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionIUC2D_Pointer {
   public:
     itkLinearInterpolateImageFunctionIUC2D_Pointer();
     itkLinearInterpolateImageFunctionIUC2D_Pointer(itkLinearInterpolateImageFunctionIUC2D_Pointer const & p);
     itkLinearInterpolateImageFunctionIUC2D_Pointer(itkLinearInterpolateImageFunctionIUC2D * p);
     ~itkLinearInterpolateImageFunctionIUC2D_Pointer();
     itkLinearInterpolateImageFunctionIUC2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionIUC2D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionIUC2D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionIUC2D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionIUC2D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionIUC2D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionIUC2D_Pointer & operator=(itkLinearInterpolateImageFunctionIUC2D_Pointer const & r);
     itkLinearInterpolateImageFunctionIUC2D_Pointer & operator=(itkLinearInterpolateImageFunctionIUC2D * r);
     itkLinearInterpolateImageFunctionIUC2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLinearInterpolateImageFunctionIUC3D : public itkInterpolateImageFunctionIUC3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionIUC3D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const;
   private:
     itkLinearInterpolateImageFunctionIUC3D(itkLinearInterpolateImageFunctionIUC3D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionIUC3D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC3D::Dispatch<0u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC3D::Dispatch<1u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC3D::Dispatch<2u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC3D::Dispatch<3u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUC3D::DispatchBase const & arg0, itkContinuousIndexD3 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD3 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionIUC3D();
     ~itkLinearInterpolateImageFunctionIUC3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionIUC3D_Pointer {
   public:
     itkLinearInterpolateImageFunctionIUC3D_Pointer();
     itkLinearInterpolateImageFunctionIUC3D_Pointer(itkLinearInterpolateImageFunctionIUC3D_Pointer const & p);
     itkLinearInterpolateImageFunctionIUC3D_Pointer(itkLinearInterpolateImageFunctionIUC3D * p);
     ~itkLinearInterpolateImageFunctionIUC3D_Pointer();
     itkLinearInterpolateImageFunctionIUC3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionIUC3D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionIUC3D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionIUC3D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionIUC3D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionIUC3D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionIUC3D_Pointer & operator=(itkLinearInterpolateImageFunctionIUC3D_Pointer const & r);
     itkLinearInterpolateImageFunctionIUC3D_Pointer & operator=(itkLinearInterpolateImageFunctionIUC3D * r);
     itkLinearInterpolateImageFunctionIUC3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLinearInterpolateImageFunctionIUL2D : public itkInterpolateImageFunctionIUL2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionIUL2D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const;
   private:
     itkLinearInterpolateImageFunctionIUL2D(itkLinearInterpolateImageFunctionIUL2D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionIUL2D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL2D::Dispatch<0u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL2D::Dispatch<1u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL2D::Dispatch<2u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL2D::Dispatch<3u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL2D::DispatchBase const & arg0, itkContinuousIndexD2 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD2 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionIUL2D();
     ~itkLinearInterpolateImageFunctionIUL2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionIUL2D_Pointer {
   public:
     itkLinearInterpolateImageFunctionIUL2D_Pointer();
     itkLinearInterpolateImageFunctionIUL2D_Pointer(itkLinearInterpolateImageFunctionIUL2D_Pointer const & p);
     itkLinearInterpolateImageFunctionIUL2D_Pointer(itkLinearInterpolateImageFunctionIUL2D * p);
     ~itkLinearInterpolateImageFunctionIUL2D_Pointer();
     itkLinearInterpolateImageFunctionIUL2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionIUL2D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionIUL2D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionIUL2D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionIUL2D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionIUL2D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionIUL2D_Pointer & operator=(itkLinearInterpolateImageFunctionIUL2D_Pointer const & r);
     itkLinearInterpolateImageFunctionIUL2D_Pointer & operator=(itkLinearInterpolateImageFunctionIUL2D * r);
     itkLinearInterpolateImageFunctionIUL2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLinearInterpolateImageFunctionIUL3D : public itkInterpolateImageFunctionIUL3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionIUL3D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const;
   private:
     itkLinearInterpolateImageFunctionIUL3D(itkLinearInterpolateImageFunctionIUL3D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionIUL3D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL3D::Dispatch<0u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL3D::Dispatch<1u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL3D::Dispatch<2u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL3D::Dispatch<3u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUL3D::DispatchBase const & arg0, itkContinuousIndexD3 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD3 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionIUL3D();
     ~itkLinearInterpolateImageFunctionIUL3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionIUL3D_Pointer {
   public:
     itkLinearInterpolateImageFunctionIUL3D_Pointer();
     itkLinearInterpolateImageFunctionIUL3D_Pointer(itkLinearInterpolateImageFunctionIUL3D_Pointer const & p);
     itkLinearInterpolateImageFunctionIUL3D_Pointer(itkLinearInterpolateImageFunctionIUL3D * p);
     ~itkLinearInterpolateImageFunctionIUL3D_Pointer();
     itkLinearInterpolateImageFunctionIUL3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionIUL3D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionIUL3D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionIUL3D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionIUL3D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionIUL3D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionIUL3D_Pointer & operator=(itkLinearInterpolateImageFunctionIUL3D_Pointer const & r);
     itkLinearInterpolateImageFunctionIUL3D_Pointer & operator=(itkLinearInterpolateImageFunctionIUL3D * r);
     itkLinearInterpolateImageFunctionIUL3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLinearInterpolateImageFunctionIUS2D : public itkInterpolateImageFunctionIUS2D {
   public:
     enum  {  ImageDimension = 2 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionIUS2D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD2 const & index) const;
   private:
     itkLinearInterpolateImageFunctionIUS2D(itkLinearInterpolateImageFunctionIUS2D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionIUS2D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS2D::Dispatch<0u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS2D::Dispatch<1u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS2D::Dispatch<2u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS2D::Dispatch<3u> const & arg0, itkContinuousIndexD2 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS2D::DispatchBase const & arg0, itkContinuousIndexD2 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD2 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionIUS2D();
     ~itkLinearInterpolateImageFunctionIUS2D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionIUS2D_Pointer {
   public:
     itkLinearInterpolateImageFunctionIUS2D_Pointer();
     itkLinearInterpolateImageFunctionIUS2D_Pointer(itkLinearInterpolateImageFunctionIUS2D_Pointer const & p);
     itkLinearInterpolateImageFunctionIUS2D_Pointer(itkLinearInterpolateImageFunctionIUS2D * p);
     ~itkLinearInterpolateImageFunctionIUS2D_Pointer();
     itkLinearInterpolateImageFunctionIUS2D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionIUS2D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionIUS2D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionIUS2D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionIUS2D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionIUS2D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionIUS2D_Pointer & operator=(itkLinearInterpolateImageFunctionIUS2D_Pointer const & r);
     itkLinearInterpolateImageFunctionIUS2D_Pointer & operator=(itkLinearInterpolateImageFunctionIUS2D * r);
     itkLinearInterpolateImageFunctionIUS2D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkLinearInterpolateImageFunctionIUS3D : public itkInterpolateImageFunctionIUS3D {
   public:
     enum  {  ImageDimension = 3 };
     virtual char const * GetNameOfClass() const;
     static itkLinearInterpolateImageFunctionIUS3D_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual double EvaluateAtContinuousIndex(itkContinuousIndexD3 const & index) const;
   private:
     itkLinearInterpolateImageFunctionIUS3D(itkLinearInterpolateImageFunctionIUS3D const & arg0);
     void operator=(itkLinearInterpolateImageFunctionIUS3D const & arg0);
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS3D::Dispatch<0u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS3D::Dispatch<1u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS3D::Dispatch<2u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS3D::Dispatch<3u> const & arg0, itkContinuousIndexD3 const & index) const;
     double EvaluateOptimized(itkLinearInterpolateImageFunctionIUS3D::DispatchBase const & arg0, itkContinuousIndexD3 const & index) const;
     virtual double EvaluateUnoptimized(itkContinuousIndexD3 const & index) const;
   protected:
     itkLinearInterpolateImageFunctionIUS3D();
     ~itkLinearInterpolateImageFunctionIUS3D();
     virtual void PrintSelf(std::basic_ostream< char, std::char_traits< char > > & os, itkIndent indent) const;
 };


 class itkLinearInterpolateImageFunctionIUS3D_Pointer {
   public:
     itkLinearInterpolateImageFunctionIUS3D_Pointer();
     itkLinearInterpolateImageFunctionIUS3D_Pointer(itkLinearInterpolateImageFunctionIUS3D_Pointer const & p);
     itkLinearInterpolateImageFunctionIUS3D_Pointer(itkLinearInterpolateImageFunctionIUS3D * p);
     ~itkLinearInterpolateImageFunctionIUS3D_Pointer();
     itkLinearInterpolateImageFunctionIUS3D * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkLinearInterpolateImageFunctionIUS3D * GetPointer() const;
     bool operator<(itkLinearInterpolateImageFunctionIUS3D_Pointer const & r) const;
     bool operator>(itkLinearInterpolateImageFunctionIUS3D_Pointer const & r) const;
     bool operator<=(itkLinearInterpolateImageFunctionIUS3D_Pointer const & r) const;
     bool operator>=(itkLinearInterpolateImageFunctionIUS3D_Pointer const & r) const;
     itkLinearInterpolateImageFunctionIUS3D_Pointer & operator=(itkLinearInterpolateImageFunctionIUS3D_Pointer const & r);
     itkLinearInterpolateImageFunctionIUS3D_Pointer & operator=(itkLinearInterpolateImageFunctionIUS3D * r);
     itkLinearInterpolateImageFunctionIUS3D * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


