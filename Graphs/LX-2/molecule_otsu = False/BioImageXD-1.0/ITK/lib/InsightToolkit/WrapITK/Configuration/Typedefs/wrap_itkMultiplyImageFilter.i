// This file is automatically generated.
// Do not modify this file manually.


#ifdef SWIGCHICKEN
%module itkMultiplyImageFilterChicken
#endif
#ifdef SWIGCSHARP
%module itkMultiplyImageFilterCsharp
#endif
#ifdef SWIGGUILE
%module itkMultiplyImageFilterGuile
#endif
#ifdef SWIGJAVA
%module itkMultiplyImageFilterJava
#endif
#ifdef SWIGLUA
%module itkMultiplyImageFilterLua
#endif
#ifdef SWIGMODULA3
%module itkMultiplyImageFilterModula3
#endif
#ifdef SWIGMZSCHEME
%module itkMultiplyImageFilterMzscheme
#endif
#ifdef SWIGOCAML
%module itkMultiplyImageFilterOcaml
#endif
#ifdef SWIGPERL
%module itkMultiplyImageFilterPerl
#endif
#ifdef SWIGPERL5
%module itkMultiplyImageFilterPerl5
#endif
#ifdef SWIGPHP
%module itkMultiplyImageFilterPhp
#endif
#ifdef SWIGPHP4
%module itkMultiplyImageFilterPhp4
#endif
#ifdef SWIGPHP5
%module itkMultiplyImageFilterPhp5
#endif
#ifdef SWIGPIKE
%module itkMultiplyImageFilterPike
#endif
#ifdef SWIGPYTHON
%module itkMultiplyImageFilterPython
#endif
#ifdef SWIGR
%module itkMultiplyImageFilterR
#endif
#ifdef SWIGRUBY
%module itkMultiplyImageFilterRuby
#endif
#ifdef SWIGSEXP
%module itkMultiplyImageFilterSexp
#endif
#ifdef SWIGTCL
%module itkMultiplyImageFilterTcl
#endif
#ifdef SWIGXML
%module itkMultiplyImageFilterXml
#endif

%{
#include "VXLNumerics.includes"
#include "Base.includes"
#include "PixelMath.includes"
%}


%{
%}




%import wrap_ITKRegions.i
%import wrap_itkImage.i
%import wrap_itkInPlaceImageFilterB.i
%import wrap_ITKCommonBase.i
%import wrap_itkInPlaceImageFilterA.i


%include itk.i
%include wrap_itkMultiplyImageFilter_ext.i


 class itkMultiplyImageFilterICF2ICF2ICF2_Pointer {
   public:
     itkMultiplyImageFilterICF2ICF2ICF2_Pointer();
     itkMultiplyImageFilterICF2ICF2ICF2_Pointer(itkMultiplyImageFilterICF2ICF2ICF2_Pointer const & p);
     itkMultiplyImageFilterICF2ICF2ICF2_Pointer(itkMultiplyImageFilterICF2ICF2ICF2 * p);
     ~itkMultiplyImageFilterICF2ICF2ICF2_Pointer();
     itkMultiplyImageFilterICF2ICF2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterICF2ICF2ICF2 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterICF2ICF2ICF2_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterICF2ICF2ICF2_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterICF2ICF2ICF2_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterICF2ICF2ICF2_Pointer const & r) const;
     itkMultiplyImageFilterICF2ICF2ICF2_Pointer & operator=(itkMultiplyImageFilterICF2ICF2ICF2_Pointer const & r);
     itkMultiplyImageFilterICF2ICF2ICF2_Pointer & operator=(itkMultiplyImageFilterICF2ICF2ICF2 * r);
     itkMultiplyImageFilterICF2ICF2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterICF2ICF2ICF2_Superclass : public itkInPlaceImageFilterICF2ICF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF2 const * image1);
     void SetInput2(itkImageCF2 const * image2);
     itk::Function::Mult< std::complex< float >, std::complex< float >, std::complex< float > > & GetFunctor();
     itk::Function::Mult< std::complex< float >, std::complex< float >, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< std::complex< float >, std::complex< float >, std::complex< float > > const & functor);
   private:
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass(itkMultiplyImageFilterICF2ICF2ICF2_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterICF2ICF2ICF2_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass();
     ~itkMultiplyImageFilterICF2ICF2ICF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer {
   public:
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer();
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer(itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer const & p);
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer(itkMultiplyImageFilterICF2ICF2ICF2_Superclass * p);
     ~itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer();
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer & operator=(itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer const & r);
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer & operator=(itkMultiplyImageFilterICF2ICF2ICF2_Superclass * r);
     itkMultiplyImageFilterICF2ICF2ICF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterICF2IF2ICF2_Pointer {
   public:
     itkMultiplyImageFilterICF2IF2ICF2_Pointer();
     itkMultiplyImageFilterICF2IF2ICF2_Pointer(itkMultiplyImageFilterICF2IF2ICF2_Pointer const & p);
     itkMultiplyImageFilterICF2IF2ICF2_Pointer(itkMultiplyImageFilterICF2IF2ICF2 * p);
     ~itkMultiplyImageFilterICF2IF2ICF2_Pointer();
     itkMultiplyImageFilterICF2IF2ICF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterICF2IF2ICF2 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterICF2IF2ICF2_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterICF2IF2ICF2_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterICF2IF2ICF2_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterICF2IF2ICF2_Pointer const & r) const;
     itkMultiplyImageFilterICF2IF2ICF2_Pointer & operator=(itkMultiplyImageFilterICF2IF2ICF2_Pointer const & r);
     itkMultiplyImageFilterICF2IF2ICF2_Pointer & operator=(itkMultiplyImageFilterICF2IF2ICF2 * r);
     itkMultiplyImageFilterICF2IF2ICF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterICF2IF2ICF2_Superclass : public itkInPlaceImageFilterICF2ICF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF2 const * image1);
     void SetInput2(itkImageF2 const * image2);
     itk::Function::Mult< std::complex< float >, float, std::complex< float > > & GetFunctor();
     itk::Function::Mult< std::complex< float >, float, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< std::complex< float >, float, std::complex< float > > const & functor);
   private:
     itkMultiplyImageFilterICF2IF2ICF2_Superclass(itkMultiplyImageFilterICF2IF2ICF2_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterICF2IF2ICF2_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterICF2IF2ICF2_Superclass();
     ~itkMultiplyImageFilterICF2IF2ICF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer {
   public:
     itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer();
     itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer(itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer const & p);
     itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer(itkMultiplyImageFilterICF2IF2ICF2_Superclass * p);
     ~itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer();
     itkMultiplyImageFilterICF2IF2ICF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterICF2IF2ICF2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer & operator=(itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer const & r);
     itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer & operator=(itkMultiplyImageFilterICF2IF2ICF2_Superclass * r);
     itkMultiplyImageFilterICF2IF2ICF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterICF3ICF3ICF3_Pointer {
   public:
     itkMultiplyImageFilterICF3ICF3ICF3_Pointer();
     itkMultiplyImageFilterICF3ICF3ICF3_Pointer(itkMultiplyImageFilterICF3ICF3ICF3_Pointer const & p);
     itkMultiplyImageFilterICF3ICF3ICF3_Pointer(itkMultiplyImageFilterICF3ICF3ICF3 * p);
     ~itkMultiplyImageFilterICF3ICF3ICF3_Pointer();
     itkMultiplyImageFilterICF3ICF3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterICF3ICF3ICF3 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterICF3ICF3ICF3_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterICF3ICF3ICF3_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterICF3ICF3ICF3_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterICF3ICF3ICF3_Pointer const & r) const;
     itkMultiplyImageFilterICF3ICF3ICF3_Pointer & operator=(itkMultiplyImageFilterICF3ICF3ICF3_Pointer const & r);
     itkMultiplyImageFilterICF3ICF3ICF3_Pointer & operator=(itkMultiplyImageFilterICF3ICF3ICF3 * r);
     itkMultiplyImageFilterICF3ICF3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterICF3ICF3ICF3_Superclass : public itkInPlaceImageFilterICF3ICF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF3 const * image1);
     void SetInput2(itkImageCF3 const * image2);
     itk::Function::Mult< std::complex< float >, std::complex< float >, std::complex< float > > & GetFunctor();
     itk::Function::Mult< std::complex< float >, std::complex< float >, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< std::complex< float >, std::complex< float >, std::complex< float > > const & functor);
   private:
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass(itkMultiplyImageFilterICF3ICF3ICF3_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterICF3ICF3ICF3_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass();
     ~itkMultiplyImageFilterICF3ICF3ICF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer {
   public:
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer();
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer(itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer const & p);
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer(itkMultiplyImageFilterICF3ICF3ICF3_Superclass * p);
     ~itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer();
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer & operator=(itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer const & r);
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer & operator=(itkMultiplyImageFilterICF3ICF3ICF3_Superclass * r);
     itkMultiplyImageFilterICF3ICF3ICF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterICF3IF3ICF3_Pointer {
   public:
     itkMultiplyImageFilterICF3IF3ICF3_Pointer();
     itkMultiplyImageFilterICF3IF3ICF3_Pointer(itkMultiplyImageFilterICF3IF3ICF3_Pointer const & p);
     itkMultiplyImageFilterICF3IF3ICF3_Pointer(itkMultiplyImageFilterICF3IF3ICF3 * p);
     ~itkMultiplyImageFilterICF3IF3ICF3_Pointer();
     itkMultiplyImageFilterICF3IF3ICF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterICF3IF3ICF3 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterICF3IF3ICF3_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterICF3IF3ICF3_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterICF3IF3ICF3_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterICF3IF3ICF3_Pointer const & r) const;
     itkMultiplyImageFilterICF3IF3ICF3_Pointer & operator=(itkMultiplyImageFilterICF3IF3ICF3_Pointer const & r);
     itkMultiplyImageFilterICF3IF3ICF3_Pointer & operator=(itkMultiplyImageFilterICF3IF3ICF3 * r);
     itkMultiplyImageFilterICF3IF3ICF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterICF3IF3ICF3_Superclass : public itkInPlaceImageFilterICF3ICF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageCF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     itk::Function::Mult< std::complex< float >, float, std::complex< float > > & GetFunctor();
     itk::Function::Mult< std::complex< float >, float, std::complex< float > > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< std::complex< float >, float, std::complex< float > > const & functor);
   private:
     itkMultiplyImageFilterICF3IF3ICF3_Superclass(itkMultiplyImageFilterICF3IF3ICF3_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterICF3IF3ICF3_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterICF3IF3ICF3_Superclass();
     ~itkMultiplyImageFilterICF3IF3ICF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer {
   public:
     itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer();
     itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer(itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer const & p);
     itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer(itkMultiplyImageFilterICF3IF3ICF3_Superclass * p);
     ~itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer();
     itkMultiplyImageFilterICF3IF3ICF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterICF3IF3ICF3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer & operator=(itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer const & r);
     itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer & operator=(itkMultiplyImageFilterICF3IF3ICF3_Superclass * r);
     itkMultiplyImageFilterICF3IF3ICF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterID2ID2ID2_Pointer {
   public:
     itkMultiplyImageFilterID2ID2ID2_Pointer();
     itkMultiplyImageFilterID2ID2ID2_Pointer(itkMultiplyImageFilterID2ID2ID2_Pointer const & p);
     itkMultiplyImageFilterID2ID2ID2_Pointer(itkMultiplyImageFilterID2ID2ID2 * p);
     ~itkMultiplyImageFilterID2ID2ID2_Pointer();
     itkMultiplyImageFilterID2ID2ID2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterID2ID2ID2 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterID2ID2ID2_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterID2ID2ID2_Pointer const & r) const;
     itkMultiplyImageFilterID2ID2ID2_Pointer & operator=(itkMultiplyImageFilterID2ID2ID2_Pointer const & r);
     itkMultiplyImageFilterID2ID2ID2_Pointer & operator=(itkMultiplyImageFilterID2ID2ID2 * r);
     itkMultiplyImageFilterID2ID2ID2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterID2ID2ID2_Superclass : public itkInPlaceImageFilterID2ID2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD2 const * image1);
     void SetInput2(itkImageD2 const * image2);
     itk::Function::Mult< double, double, double > & GetFunctor();
     itk::Function::Mult< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< double, double, double > const & functor);
   private:
     itkMultiplyImageFilterID2ID2ID2_Superclass(itkMultiplyImageFilterID2ID2ID2_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterID2ID2ID2_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterID2ID2ID2_Superclass();
     ~itkMultiplyImageFilterID2ID2ID2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer {
   public:
     itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer();
     itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer(itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer const & p);
     itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer(itkMultiplyImageFilterID2ID2ID2_Superclass * p);
     ~itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer();
     itkMultiplyImageFilterID2ID2ID2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterID2ID2ID2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer const & r);
     itkMultiplyImageFilterID2ID2ID2_Superclass_Pointer & operator=(itkMultiplyImageFilterID2ID2ID2_Superclass * r);
     itkMultiplyImageFilterID2ID2ID2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterID3ID3ID3_Pointer {
   public:
     itkMultiplyImageFilterID3ID3ID3_Pointer();
     itkMultiplyImageFilterID3ID3ID3_Pointer(itkMultiplyImageFilterID3ID3ID3_Pointer const & p);
     itkMultiplyImageFilterID3ID3ID3_Pointer(itkMultiplyImageFilterID3ID3ID3 * p);
     ~itkMultiplyImageFilterID3ID3ID3_Pointer();
     itkMultiplyImageFilterID3ID3ID3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterID3ID3ID3 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterID3ID3ID3_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterID3ID3ID3_Pointer const & r) const;
     itkMultiplyImageFilterID3ID3ID3_Pointer & operator=(itkMultiplyImageFilterID3ID3ID3_Pointer const & r);
     itkMultiplyImageFilterID3ID3ID3_Pointer & operator=(itkMultiplyImageFilterID3ID3ID3 * r);
     itkMultiplyImageFilterID3ID3ID3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterID3ID3ID3_Superclass : public itkInPlaceImageFilterID3ID3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageD3 const * image1);
     void SetInput2(itkImageD3 const * image2);
     itk::Function::Mult< double, double, double > & GetFunctor();
     itk::Function::Mult< double, double, double > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< double, double, double > const & functor);
   private:
     itkMultiplyImageFilterID3ID3ID3_Superclass(itkMultiplyImageFilterID3ID3ID3_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterID3ID3ID3_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterID3ID3ID3_Superclass();
     ~itkMultiplyImageFilterID3ID3ID3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer {
   public:
     itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer();
     itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer(itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer const & p);
     itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer(itkMultiplyImageFilterID3ID3ID3_Superclass * p);
     ~itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer();
     itkMultiplyImageFilterID3ID3ID3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterID3ID3ID3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer const & r);
     itkMultiplyImageFilterID3ID3ID3_Superclass_Pointer & operator=(itkMultiplyImageFilterID3ID3ID3_Superclass * r);
     itkMultiplyImageFilterID3ID3ID3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIF2IF2IF2_Pointer {
   public:
     itkMultiplyImageFilterIF2IF2IF2_Pointer();
     itkMultiplyImageFilterIF2IF2IF2_Pointer(itkMultiplyImageFilterIF2IF2IF2_Pointer const & p);
     itkMultiplyImageFilterIF2IF2IF2_Pointer(itkMultiplyImageFilterIF2IF2IF2 * p);
     ~itkMultiplyImageFilterIF2IF2IF2_Pointer();
     itkMultiplyImageFilterIF2IF2IF2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIF2IF2IF2 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIF2IF2IF2_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIF2IF2IF2_Pointer const & r) const;
     itkMultiplyImageFilterIF2IF2IF2_Pointer & operator=(itkMultiplyImageFilterIF2IF2IF2_Pointer const & r);
     itkMultiplyImageFilterIF2IF2IF2_Pointer & operator=(itkMultiplyImageFilterIF2IF2IF2 * r);
     itkMultiplyImageFilterIF2IF2IF2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIF2IF2IF2_Superclass : public itkInPlaceImageFilterIF2IF2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF2 const * image1);
     void SetInput2(itkImageF2 const * image2);
     itk::Function::Mult< float, float, float > & GetFunctor();
     itk::Function::Mult< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< float, float, float > const & functor);
   private:
     itkMultiplyImageFilterIF2IF2IF2_Superclass(itkMultiplyImageFilterIF2IF2IF2_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterIF2IF2IF2_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterIF2IF2IF2_Superclass();
     ~itkMultiplyImageFilterIF2IF2IF2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer {
   public:
     itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer();
     itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer(itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer const & p);
     itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer(itkMultiplyImageFilterIF2IF2IF2_Superclass * p);
     ~itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer();
     itkMultiplyImageFilterIF2IF2IF2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIF2IF2IF2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer const & r);
     itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer & operator=(itkMultiplyImageFilterIF2IF2IF2_Superclass * r);
     itkMultiplyImageFilterIF2IF2IF2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIF3IF3IF3_Pointer {
   public:
     itkMultiplyImageFilterIF3IF3IF3_Pointer();
     itkMultiplyImageFilterIF3IF3IF3_Pointer(itkMultiplyImageFilterIF3IF3IF3_Pointer const & p);
     itkMultiplyImageFilterIF3IF3IF3_Pointer(itkMultiplyImageFilterIF3IF3IF3 * p);
     ~itkMultiplyImageFilterIF3IF3IF3_Pointer();
     itkMultiplyImageFilterIF3IF3IF3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIF3IF3IF3 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIF3IF3IF3_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIF3IF3IF3_Pointer const & r) const;
     itkMultiplyImageFilterIF3IF3IF3_Pointer & operator=(itkMultiplyImageFilterIF3IF3IF3_Pointer const & r);
     itkMultiplyImageFilterIF3IF3IF3_Pointer & operator=(itkMultiplyImageFilterIF3IF3IF3 * r);
     itkMultiplyImageFilterIF3IF3IF3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIF3IF3IF3_Superclass : public itkInPlaceImageFilterIF3IF3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageF3 const * image1);
     void SetInput2(itkImageF3 const * image2);
     itk::Function::Mult< float, float, float > & GetFunctor();
     itk::Function::Mult< float, float, float > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< float, float, float > const & functor);
   private:
     itkMultiplyImageFilterIF3IF3IF3_Superclass(itkMultiplyImageFilterIF3IF3IF3_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterIF3IF3IF3_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterIF3IF3IF3_Superclass();
     ~itkMultiplyImageFilterIF3IF3IF3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer {
   public:
     itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer();
     itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer(itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer const & p);
     itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer(itkMultiplyImageFilterIF3IF3IF3_Superclass * p);
     ~itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer();
     itkMultiplyImageFilterIF3IF3IF3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIF3IF3IF3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer const & r);
     itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer & operator=(itkMultiplyImageFilterIF3IF3IF3_Superclass * r);
     itkMultiplyImageFilterIF3IF3IF3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUC2IUC2IUC2_Pointer {
   public:
     itkMultiplyImageFilterIUC2IUC2IUC2_Pointer();
     itkMultiplyImageFilterIUC2IUC2IUC2_Pointer(itkMultiplyImageFilterIUC2IUC2IUC2_Pointer const & p);
     itkMultiplyImageFilterIUC2IUC2IUC2_Pointer(itkMultiplyImageFilterIUC2IUC2IUC2 * p);
     ~itkMultiplyImageFilterIUC2IUC2IUC2_Pointer();
     itkMultiplyImageFilterIUC2IUC2IUC2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUC2IUC2IUC2 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUC2IUC2IUC2_Pointer const & r) const;
     itkMultiplyImageFilterIUC2IUC2IUC2_Pointer & operator=(itkMultiplyImageFilterIUC2IUC2IUC2_Pointer const & r);
     itkMultiplyImageFilterIUC2IUC2IUC2_Pointer & operator=(itkMultiplyImageFilterIUC2IUC2IUC2 * r);
     itkMultiplyImageFilterIUC2IUC2IUC2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUC2IUC2IUC2_Superclass : public itkInPlaceImageFilterIUC2IUC2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC2 const * image1);
     void SetInput2(itkImageUC2 const * image2);
     itk::Function::Mult< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Function::Mult< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass();
     ~itkMultiplyImageFilterIUC2IUC2IUC2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer {
   public:
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer const & p);
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass * p);
     ~itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer();
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer const & r);
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer & operator=(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass * r);
     itkMultiplyImageFilterIUC2IUC2IUC2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUC3IUC3IUC3_Pointer {
   public:
     itkMultiplyImageFilterIUC3IUC3IUC3_Pointer();
     itkMultiplyImageFilterIUC3IUC3IUC3_Pointer(itkMultiplyImageFilterIUC3IUC3IUC3_Pointer const & p);
     itkMultiplyImageFilterIUC3IUC3IUC3_Pointer(itkMultiplyImageFilterIUC3IUC3IUC3 * p);
     ~itkMultiplyImageFilterIUC3IUC3IUC3_Pointer();
     itkMultiplyImageFilterIUC3IUC3IUC3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUC3IUC3IUC3 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUC3IUC3IUC3_Pointer const & r) const;
     itkMultiplyImageFilterIUC3IUC3IUC3_Pointer & operator=(itkMultiplyImageFilterIUC3IUC3IUC3_Pointer const & r);
     itkMultiplyImageFilterIUC3IUC3IUC3_Pointer & operator=(itkMultiplyImageFilterIUC3IUC3IUC3 * r);
     itkMultiplyImageFilterIUC3IUC3IUC3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUC3IUC3IUC3_Superclass : public itkInPlaceImageFilterIUC3IUC3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUC3 const * image1);
     void SetInput2(itkImageUC3 const * image2);
     itk::Function::Mult< unsigned char, unsigned char, unsigned char > & GetFunctor();
     itk::Function::Mult< unsigned char, unsigned char, unsigned char > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< unsigned char, unsigned char, unsigned char > const & functor);
   private:
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass();
     ~itkMultiplyImageFilterIUC3IUC3IUC3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer {
   public:
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer const & p);
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass * p);
     ~itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer();
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer const & r);
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer & operator=(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass * r);
     itkMultiplyImageFilterIUC3IUC3IUC3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUL2IUL2IUL2_Pointer {
   public:
     itkMultiplyImageFilterIUL2IUL2IUL2_Pointer();
     itkMultiplyImageFilterIUL2IUL2IUL2_Pointer(itkMultiplyImageFilterIUL2IUL2IUL2_Pointer const & p);
     itkMultiplyImageFilterIUL2IUL2IUL2_Pointer(itkMultiplyImageFilterIUL2IUL2IUL2 * p);
     ~itkMultiplyImageFilterIUL2IUL2IUL2_Pointer();
     itkMultiplyImageFilterIUL2IUL2IUL2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUL2IUL2IUL2 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUL2IUL2IUL2_Pointer const & r) const;
     itkMultiplyImageFilterIUL2IUL2IUL2_Pointer & operator=(itkMultiplyImageFilterIUL2IUL2IUL2_Pointer const & r);
     itkMultiplyImageFilterIUL2IUL2IUL2_Pointer & operator=(itkMultiplyImageFilterIUL2IUL2IUL2 * r);
     itkMultiplyImageFilterIUL2IUL2IUL2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUL2IUL2IUL2_Superclass : public itkInPlaceImageFilterIUL2IUL2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL2 const * image1);
     void SetInput2(itkImageUL2 const * image2);
     itk::Function::Mult< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Function::Mult< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass();
     ~itkMultiplyImageFilterIUL2IUL2IUL2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer {
   public:
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer const & p);
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass * p);
     ~itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer();
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer const & r);
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass_Pointer & operator=(itkMultiplyImageFilterIUL2IUL2IUL2_Superclass * r);
     itkMultiplyImageFilterIUL2IUL2IUL2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUL3IUL3IUL3_Pointer {
   public:
     itkMultiplyImageFilterIUL3IUL3IUL3_Pointer();
     itkMultiplyImageFilterIUL3IUL3IUL3_Pointer(itkMultiplyImageFilterIUL3IUL3IUL3_Pointer const & p);
     itkMultiplyImageFilterIUL3IUL3IUL3_Pointer(itkMultiplyImageFilterIUL3IUL3IUL3 * p);
     ~itkMultiplyImageFilterIUL3IUL3IUL3_Pointer();
     itkMultiplyImageFilterIUL3IUL3IUL3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUL3IUL3IUL3 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUL3IUL3IUL3_Pointer const & r) const;
     itkMultiplyImageFilterIUL3IUL3IUL3_Pointer & operator=(itkMultiplyImageFilterIUL3IUL3IUL3_Pointer const & r);
     itkMultiplyImageFilterIUL3IUL3IUL3_Pointer & operator=(itkMultiplyImageFilterIUL3IUL3IUL3 * r);
     itkMultiplyImageFilterIUL3IUL3IUL3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUL3IUL3IUL3_Superclass : public itkInPlaceImageFilterIUL3IUL3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUL3 const * image1);
     void SetInput2(itkImageUL3 const * image2);
     itk::Function::Mult< unsigned long, unsigned long, unsigned long > & GetFunctor();
     itk::Function::Mult< unsigned long, unsigned long, unsigned long > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< unsigned long, unsigned long, unsigned long > const & functor);
   private:
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass();
     ~itkMultiplyImageFilterIUL3IUL3IUL3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer {
   public:
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer const & p);
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass * p);
     ~itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer();
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer const & r);
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass_Pointer & operator=(itkMultiplyImageFilterIUL3IUL3IUL3_Superclass * r);
     itkMultiplyImageFilterIUL3IUL3IUL3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUS2IUS2IUS2_Pointer {
   public:
     itkMultiplyImageFilterIUS2IUS2IUS2_Pointer();
     itkMultiplyImageFilterIUS2IUS2IUS2_Pointer(itkMultiplyImageFilterIUS2IUS2IUS2_Pointer const & p);
     itkMultiplyImageFilterIUS2IUS2IUS2_Pointer(itkMultiplyImageFilterIUS2IUS2IUS2 * p);
     ~itkMultiplyImageFilterIUS2IUS2IUS2_Pointer();
     itkMultiplyImageFilterIUS2IUS2IUS2 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUS2IUS2IUS2 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUS2IUS2IUS2_Pointer const & r) const;
     itkMultiplyImageFilterIUS2IUS2IUS2_Pointer & operator=(itkMultiplyImageFilterIUS2IUS2IUS2_Pointer const & r);
     itkMultiplyImageFilterIUS2IUS2IUS2_Pointer & operator=(itkMultiplyImageFilterIUS2IUS2IUS2 * r);
     itkMultiplyImageFilterIUS2IUS2IUS2 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUS2IUS2IUS2_Superclass : public itkInPlaceImageFilterIUS2IUS2 {
   public:
     enum  {  InputImage1Dimension = 2 };
     enum  {  InputImage2Dimension = 2 };
     enum  {  OutputImageDimension = 2 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS2 const * image1);
     void SetInput2(itkImageUS2 const * image2);
     itk::Function::Mult< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Function::Mult< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass();
     ~itkMultiplyImageFilterIUS2IUS2IUS2_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion2 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer {
   public:
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer const & p);
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass * p);
     ~itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer();
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer const & r);
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer & operator=(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass * r);
     itkMultiplyImageFilterIUS2IUS2IUS2_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUS3IUS3IUS3_Pointer {
   public:
     itkMultiplyImageFilterIUS3IUS3IUS3_Pointer();
     itkMultiplyImageFilterIUS3IUS3IUS3_Pointer(itkMultiplyImageFilterIUS3IUS3IUS3_Pointer const & p);
     itkMultiplyImageFilterIUS3IUS3IUS3_Pointer(itkMultiplyImageFilterIUS3IUS3IUS3 * p);
     ~itkMultiplyImageFilterIUS3IUS3IUS3_Pointer();
     itkMultiplyImageFilterIUS3IUS3IUS3 * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUS3IUS3IUS3 * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUS3IUS3IUS3_Pointer const & r) const;
     itkMultiplyImageFilterIUS3IUS3IUS3_Pointer & operator=(itkMultiplyImageFilterIUS3IUS3IUS3_Pointer const & r);
     itkMultiplyImageFilterIUS3IUS3IUS3_Pointer & operator=(itkMultiplyImageFilterIUS3IUS3IUS3 * r);
     itkMultiplyImageFilterIUS3IUS3IUS3 * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterIUS3IUS3IUS3_Superclass : public itkInPlaceImageFilterIUS3IUS3 {
   public:
     enum  {  InputImage1Dimension = 3 };
     enum  {  InputImage2Dimension = 3 };
     enum  {  OutputImageDimension = 3 };
     enum  {  SameDimensionCheck1 = 1 };
     enum  {  SameDimensionCheck2 = 1 };
     static itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
     void SetInput1(itkImageUS3 const * image1);
     void SetInput2(itkImageUS3 const * image2);
     itk::Function::Mult< unsigned short, unsigned short, unsigned short > & GetFunctor();
     itk::Function::Mult< unsigned short, unsigned short, unsigned short > const & GetFunctor() const;
     void SetFunctor(itk::Function::Mult< unsigned short, unsigned short, unsigned short > const & functor);
   private:
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass const & arg0);
     void operator=(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass const & arg0);
   protected:
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass();
     ~itkMultiplyImageFilterIUS3IUS3IUS3_Superclass();
     virtual void ThreadedGenerateData(itkImageRegion3 const & outputRegionForThread, int threadId);
 };


 class itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer {
   public:
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer const & p);
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass * p);
     ~itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer();
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass * operator->() const;
     bool IsNotNull() const;
     bool IsNull() const;
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass * GetPointer() const;
     bool operator<(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator<=(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     bool operator>=(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r) const;
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer const & r);
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer & operator=(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass * r);
     itkMultiplyImageFilterIUS3IUS3IUS3_Superclass * Print(std::basic_ostream< char, std::char_traits< char > > & os) const;
   private:
     void Register();
     void UnRegister();
   protected:
 };


 class itkMultiplyImageFilterICF2ICF2ICF2 : public itkMultiplyImageFilterICF2ICF2ICF2_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterICF2ICF2ICF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterICF2ICF2ICF2(itkMultiplyImageFilterICF2ICF2ICF2 const & arg0);
     void operator=(itkMultiplyImageFilterICF2ICF2ICF2 const & arg0);
   protected:
     itkMultiplyImageFilterICF2ICF2ICF2();
     ~itkMultiplyImageFilterICF2ICF2ICF2();
 };


 class itkMultiplyImageFilterICF2IF2ICF2 : public itkMultiplyImageFilterICF2IF2ICF2_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterICF2IF2ICF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterICF2IF2ICF2(itkMultiplyImageFilterICF2IF2ICF2 const & arg0);
     void operator=(itkMultiplyImageFilterICF2IF2ICF2 const & arg0);
   protected:
     itkMultiplyImageFilterICF2IF2ICF2();
     ~itkMultiplyImageFilterICF2IF2ICF2();
 };


 class itkMultiplyImageFilterICF3ICF3ICF3 : public itkMultiplyImageFilterICF3ICF3ICF3_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterICF3ICF3ICF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterICF3ICF3ICF3(itkMultiplyImageFilterICF3ICF3ICF3 const & arg0);
     void operator=(itkMultiplyImageFilterICF3ICF3ICF3 const & arg0);
   protected:
     itkMultiplyImageFilterICF3ICF3ICF3();
     ~itkMultiplyImageFilterICF3ICF3ICF3();
 };


 class itkMultiplyImageFilterICF3IF3ICF3 : public itkMultiplyImageFilterICF3IF3ICF3_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterICF3IF3ICF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterICF3IF3ICF3(itkMultiplyImageFilterICF3IF3ICF3 const & arg0);
     void operator=(itkMultiplyImageFilterICF3IF3ICF3 const & arg0);
   protected:
     itkMultiplyImageFilterICF3IF3ICF3();
     ~itkMultiplyImageFilterICF3IF3ICF3();
 };


 class itkMultiplyImageFilterID2ID2ID2 : public itkMultiplyImageFilterID2ID2ID2_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterID2ID2ID2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterID2ID2ID2(itkMultiplyImageFilterID2ID2ID2 const & arg0);
     void operator=(itkMultiplyImageFilterID2ID2ID2 const & arg0);
   protected:
     itkMultiplyImageFilterID2ID2ID2();
     ~itkMultiplyImageFilterID2ID2ID2();
 };


 class itkMultiplyImageFilterID3ID3ID3 : public itkMultiplyImageFilterID3ID3ID3_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterID3ID3ID3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterID3ID3ID3(itkMultiplyImageFilterID3ID3ID3 const & arg0);
     void operator=(itkMultiplyImageFilterID3ID3ID3 const & arg0);
   protected:
     itkMultiplyImageFilterID3ID3ID3();
     ~itkMultiplyImageFilterID3ID3ID3();
 };


 class itkMultiplyImageFilterIF2IF2IF2 : public itkMultiplyImageFilterIF2IF2IF2_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterIF2IF2IF2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterIF2IF2IF2(itkMultiplyImageFilterIF2IF2IF2 const & arg0);
     void operator=(itkMultiplyImageFilterIF2IF2IF2 const & arg0);
   protected:
     itkMultiplyImageFilterIF2IF2IF2();
     ~itkMultiplyImageFilterIF2IF2IF2();
 };


 class itkMultiplyImageFilterIF3IF3IF3 : public itkMultiplyImageFilterIF3IF3IF3_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterIF3IF3IF3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterIF3IF3IF3(itkMultiplyImageFilterIF3IF3IF3 const & arg0);
     void operator=(itkMultiplyImageFilterIF3IF3IF3 const & arg0);
   protected:
     itkMultiplyImageFilterIF3IF3IF3();
     ~itkMultiplyImageFilterIF3IF3IF3();
 };


 class itkMultiplyImageFilterIUC2IUC2IUC2 : public itkMultiplyImageFilterIUC2IUC2IUC2_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterIUC2IUC2IUC2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterIUC2IUC2IUC2(itkMultiplyImageFilterIUC2IUC2IUC2 const & arg0);
     void operator=(itkMultiplyImageFilterIUC2IUC2IUC2 const & arg0);
   protected:
     itkMultiplyImageFilterIUC2IUC2IUC2();
     ~itkMultiplyImageFilterIUC2IUC2IUC2();
 };


 class itkMultiplyImageFilterIUC3IUC3IUC3 : public itkMultiplyImageFilterIUC3IUC3IUC3_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterIUC3IUC3IUC3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterIUC3IUC3IUC3(itkMultiplyImageFilterIUC3IUC3IUC3 const & arg0);
     void operator=(itkMultiplyImageFilterIUC3IUC3IUC3 const & arg0);
   protected:
     itkMultiplyImageFilterIUC3IUC3IUC3();
     ~itkMultiplyImageFilterIUC3IUC3IUC3();
 };


 class itkMultiplyImageFilterIUL2IUL2IUL2 : public itkMultiplyImageFilterIUL2IUL2IUL2_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterIUL2IUL2IUL2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterIUL2IUL2IUL2(itkMultiplyImageFilterIUL2IUL2IUL2 const & arg0);
     void operator=(itkMultiplyImageFilterIUL2IUL2IUL2 const & arg0);
   protected:
     itkMultiplyImageFilterIUL2IUL2IUL2();
     ~itkMultiplyImageFilterIUL2IUL2IUL2();
 };


 class itkMultiplyImageFilterIUL3IUL3IUL3 : public itkMultiplyImageFilterIUL3IUL3IUL3_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterIUL3IUL3IUL3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterIUL3IUL3IUL3(itkMultiplyImageFilterIUL3IUL3IUL3 const & arg0);
     void operator=(itkMultiplyImageFilterIUL3IUL3IUL3 const & arg0);
   protected:
     itkMultiplyImageFilterIUL3IUL3IUL3();
     ~itkMultiplyImageFilterIUL3IUL3IUL3();
 };


 class itkMultiplyImageFilterIUS2IUS2IUS2 : public itkMultiplyImageFilterIUS2IUS2IUS2_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterIUS2IUS2IUS2_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterIUS2IUS2IUS2(itkMultiplyImageFilterIUS2IUS2IUS2 const & arg0);
     void operator=(itkMultiplyImageFilterIUS2IUS2IUS2 const & arg0);
   protected:
     itkMultiplyImageFilterIUS2IUS2IUS2();
     ~itkMultiplyImageFilterIUS2IUS2IUS2();
 };


 class itkMultiplyImageFilterIUS3IUS3IUS3 : public itkMultiplyImageFilterIUS3IUS3IUS3_Superclass {
   public:
     enum  {  Input1Input2OutputMultiplyOperatorCheck = 1 };
     static itkMultiplyImageFilterIUS3IUS3IUS3_Pointer New();
     virtual itkLightObject_Pointer CreateAnother() const;
     virtual char const * GetNameOfClass() const;
   private:
     itkMultiplyImageFilterIUS3IUS3IUS3(itkMultiplyImageFilterIUS3IUS3IUS3 const & arg0);
     void operator=(itkMultiplyImageFilterIUS3IUS3IUS3 const & arg0);
   protected:
     itkMultiplyImageFilterIUS3IUS3IUS3();
     ~itkMultiplyImageFilterIUS3IUS3IUS3();
 };


