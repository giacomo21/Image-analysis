# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkScalarChanAndVeseLevelSetFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkScalarChanAndVeseLevelSetFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkScalarChanAndVeseLevelSetFunctionPython
            return _itkScalarChanAndVeseLevelSetFunctionPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkScalarChanAndVeseLevelSetFunctionPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkScalarChanAndVeseLevelSetFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkScalarChanAndVeseLevelSetFunctionPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkFixedArrayPython
import pyBasePython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkImagePython
import itkCovariantVectorPython
import vnl_vectorPython
import vcl_complexPython
import vnl_matrixPython
import itkVectorPython
import vnl_vector_refPython
import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkFiniteDifferenceFunctionPython
def itkScalarChanAndVeseLevelSetFunctionID3ID3_New():
  return itkScalarChanAndVeseLevelSetFunctionID3ID3.New()

def itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_New():
  return itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass.New()

def itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_New():
  return itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.New()

def itkScalarChanAndVeseLevelSetFunctionID2ID2_New():
  return itkScalarChanAndVeseLevelSetFunctionID2ID2.New()

def itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_New():
  return itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass.New()

def itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_New():
  return itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.New()

def itkScalarChanAndVeseLevelSetFunctionIF3IF3_New():
  return itkScalarChanAndVeseLevelSetFunctionIF3IF3.New()

def itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_New():
  return itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass.New()

def itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_New():
  return itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.New()

def itkScalarChanAndVeseLevelSetFunctionIF2IF2_New():
  return itkScalarChanAndVeseLevelSetFunctionIF2IF2.New()

def itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_New():
  return itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass.New()

def itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_New():
  return itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.New()

class itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionID2):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_ImageDimension
    def SetDomainFunction(self, *args):
        """SetDomainFunction(self, itk::HeavisideStepFunctionBase<(double,double)> f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetDomainFunction(self, *args)

    def Initialize(self, *args):
        """Initialize(self, itkSize2 r)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_Initialize(self, *args)

    def SetSharedData(self, *args):
        """SetSharedData(self, itk::SmartPointer<(itk::ConstrainedRegionBasedLevelSetFunctionSharedData<(itk::Image<(double,2u)>,itk::Image<(double,2u)>,itk::ScalarChanAndVeseLevelSetFunctionData<(itk::Image<(double,2u)>,itk::Image<(double,2u)>)>)>)> sharedDataIn)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetSharedData(self, *args)

    def UpdateSharedData(self, *args):
        """UpdateSharedData(self, bool forceUpdate)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_UpdateSharedData(self, *args)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF2 arg2 = (0.0)) -> double
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> neighborhood, 
            void globalData) -> double
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_ComputeUpdate(self, *args)

    def SetInitialImage(self, *args):
        """SetInitialImage(self, itkImageD2 f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetInitialImage(self, *args)

    def GetFeatureImage(self):
        """GetFeatureImage(self) -> itkImageD2"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetFeatureImage(self)

    def SetFeatureImage(self, *args):
        """SetFeatureImage(self, itkImageD2 f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetFeatureImage(self, *args)

    def AdvectionField(self, *args):
        """
        AdvectionField(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> arg0, 
            itkVectorF2 arg1, 
            itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass::GlobalDataStruct arg2 = None) -> itkFixedArrayD2
        AdvectionField(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> arg0, 
            itkVectorF2 arg1) -> itkFixedArrayD2
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_AdvectionField(self, *args)

    def SetAreaWeight(self, *args):
        """SetAreaWeight(self, double nu)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetAreaWeight(self, *args)

    def GetAreaWeight(self):
        """GetAreaWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetAreaWeight(self)

    def SetLambda1(self, *args):
        """SetLambda1(self, double lambda1)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetLambda1(self, *args)

    def GetLambda1(self):
        """GetLambda1(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetLambda1(self)

    def SetLambda2(self, *args):
        """SetLambda2(self, double lambda2)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetLambda2(self, *args)

    def GetLambda2(self):
        """GetLambda2(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetLambda2(self)

    def SetOverlapPenaltyWeight(self, *args):
        """SetOverlapPenaltyWeight(self, double gamma)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetOverlapPenaltyWeight(self, *args)

    def GetOverlapPenaltyWeight(self):
        """GetOverlapPenaltyWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetOverlapPenaltyWeight(self)

    def SetCurvatureWeight(self, *args):
        """SetCurvatureWeight(self, double c)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetCurvatureWeight(self, *args)

    def GetCurvatureWeight(self):
        """GetCurvatureWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetCurvatureWeight(self)

    def SetAdvectionWeight(self, *args):
        """SetAdvectionWeight(self, double iA)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetAdvectionWeight(self, *args)

    def GetAdvectionWeight(self):
        """GetAdvectionWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetAdvectionWeight(self)

    def SetReinitializationSmoothingWeight(self, *args):
        """SetReinitializationSmoothingWeight(self, double c)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetReinitializationSmoothingWeight(self, *args)

    def GetReinitializationSmoothingWeight(self):
        """GetReinitializationSmoothingWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetReinitializationSmoothingWeight(self)

    def SetVolumeMatchingWeight(self, *args):
        """SetVolumeMatchingWeight(self, double tau)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetVolumeMatchingWeight(self, *args)

    def GetVolumeMatchingWeight(self):
        """GetVolumeMatchingWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetVolumeMatchingWeight(self)

    def SetVolume(self, *args):
        """SetVolume(self, double volume)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetVolume(self, *args)

    def GetVolume(self):
        """GetVolume(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetVolume(self)

    def SetFunctionId(self, *args):
        """SetFunctionId(self, unsigned int iFid)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetFunctionId(self, *args)

    def ComputeCurvature(self, *args):
        """
        ComputeCurvature(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> arg0, 
            itkVectorF2 arg1, 
            itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass::GlobalDataStruct gd) -> double
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_ComputeCurvature(self, *args)

    def LaplacianSmoothingSpeed(self, *args):
        """
        LaplacianSmoothingSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> arg0, 
            itkVectorF2 arg1, 
            itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass::GlobalDataStruct arg2 = None) -> double
        LaplacianSmoothingSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> arg0, 
            itkVectorF2 arg1) -> double
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_LaplacianSmoothingSpeed(self, *args)

    def CurvatureSpeed(self, *args):
        """
        CurvatureSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> arg0, 
            itkVectorF2 arg1, 
            itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass::GlobalDataStruct arg2 = None) -> double
        CurvatureSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> arg0, 
            itkVectorF2 arg1) -> double
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_CurvatureSpeed(self, *args)

    def CalculateAdvectionImage(self):
        """CalculateAdvectionImage(self)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_CalculateAdvectionImage(self)

    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetDomainFunction = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetDomainFunction,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.Initialize = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_Initialize,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetSharedData = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetSharedData,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.UpdateSharedData = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_UpdateSharedData,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.ComputeUpdate = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_ComputeUpdate,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetInitialImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetInitialImage,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetFeatureImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetFeatureImage,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetFeatureImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetFeatureImage,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.AdvectionField = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_AdvectionField,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetAreaWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetAreaWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetAreaWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetAreaWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetLambda1 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetLambda1,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetLambda1 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetLambda1,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetLambda2 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetLambda2,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetLambda2 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetLambda2,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetOverlapPenaltyWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetOverlapPenaltyWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetOverlapPenaltyWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetOverlapPenaltyWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetCurvatureWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetCurvatureWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetCurvatureWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetCurvatureWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetAdvectionWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetAdvectionWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetAdvectionWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetAdvectionWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetReinitializationSmoothingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetReinitializationSmoothingWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetReinitializationSmoothingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetReinitializationSmoothingWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetVolumeMatchingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetVolumeMatchingWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetVolumeMatchingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetVolumeMatchingWeight,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetVolume = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetVolume,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetVolume = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetVolume,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.SetFunctionId = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_SetFunctionId,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.ComputeCurvature = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_ComputeCurvature,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.LaplacianSmoothingSpeed = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_LaplacianSmoothingSpeed,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.CurvatureSpeed = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_CurvatureSpeed,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.CalculateAdvectionImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_CalculateAdvectionImage,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_swigregister
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_swigregister(itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass)

def itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionID3):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_ImageDimension
    def SetDomainFunction(self, *args):
        """SetDomainFunction(self, itk::HeavisideStepFunctionBase<(double,double)> f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetDomainFunction(self, *args)

    def Initialize(self, *args):
        """Initialize(self, itkSize3 r)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_Initialize(self, *args)

    def SetSharedData(self, *args):
        """SetSharedData(self, itk::SmartPointer<(itk::ConstrainedRegionBasedLevelSetFunctionSharedData<(itk::Image<(double,3u)>,itk::Image<(double,3u)>,itk::ScalarChanAndVeseLevelSetFunctionData<(itk::Image<(double,3u)>,itk::Image<(double,3u)>)>)>)> sharedDataIn)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetSharedData(self, *args)

    def UpdateSharedData(self, *args):
        """UpdateSharedData(self, bool forceUpdate)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_UpdateSharedData(self, *args)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF3 arg2 = (0.0)) -> double
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> neighborhood, 
            void globalData) -> double
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_ComputeUpdate(self, *args)

    def SetInitialImage(self, *args):
        """SetInitialImage(self, itkImageD3 f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetInitialImage(self, *args)

    def GetFeatureImage(self):
        """GetFeatureImage(self) -> itkImageD3"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetFeatureImage(self)

    def SetFeatureImage(self, *args):
        """SetFeatureImage(self, itkImageD3 f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetFeatureImage(self, *args)

    def AdvectionField(self, *args):
        """
        AdvectionField(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> arg0, 
            itkVectorF3 arg1, 
            itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass::GlobalDataStruct arg2 = None) -> itkFixedArrayD3
        AdvectionField(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> arg0, 
            itkVectorF3 arg1) -> itkFixedArrayD3
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_AdvectionField(self, *args)

    def SetAreaWeight(self, *args):
        """SetAreaWeight(self, double nu)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetAreaWeight(self, *args)

    def GetAreaWeight(self):
        """GetAreaWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetAreaWeight(self)

    def SetLambda1(self, *args):
        """SetLambda1(self, double lambda1)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetLambda1(self, *args)

    def GetLambda1(self):
        """GetLambda1(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetLambda1(self)

    def SetLambda2(self, *args):
        """SetLambda2(self, double lambda2)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetLambda2(self, *args)

    def GetLambda2(self):
        """GetLambda2(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetLambda2(self)

    def SetOverlapPenaltyWeight(self, *args):
        """SetOverlapPenaltyWeight(self, double gamma)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetOverlapPenaltyWeight(self, *args)

    def GetOverlapPenaltyWeight(self):
        """GetOverlapPenaltyWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetOverlapPenaltyWeight(self)

    def SetCurvatureWeight(self, *args):
        """SetCurvatureWeight(self, double c)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetCurvatureWeight(self, *args)

    def GetCurvatureWeight(self):
        """GetCurvatureWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetCurvatureWeight(self)

    def SetAdvectionWeight(self, *args):
        """SetAdvectionWeight(self, double iA)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetAdvectionWeight(self, *args)

    def GetAdvectionWeight(self):
        """GetAdvectionWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetAdvectionWeight(self)

    def SetReinitializationSmoothingWeight(self, *args):
        """SetReinitializationSmoothingWeight(self, double c)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetReinitializationSmoothingWeight(self, *args)

    def GetReinitializationSmoothingWeight(self):
        """GetReinitializationSmoothingWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetReinitializationSmoothingWeight(self)

    def SetVolumeMatchingWeight(self, *args):
        """SetVolumeMatchingWeight(self, double tau)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetVolumeMatchingWeight(self, *args)

    def GetVolumeMatchingWeight(self):
        """GetVolumeMatchingWeight(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetVolumeMatchingWeight(self)

    def SetVolume(self, *args):
        """SetVolume(self, double volume)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetVolume(self, *args)

    def GetVolume(self):
        """GetVolume(self) -> double"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetVolume(self)

    def SetFunctionId(self, *args):
        """SetFunctionId(self, unsigned int iFid)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetFunctionId(self, *args)

    def ComputeCurvature(self, *args):
        """
        ComputeCurvature(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> arg0, 
            itkVectorF3 arg1, 
            itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass::GlobalDataStruct gd) -> double
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_ComputeCurvature(self, *args)

    def LaplacianSmoothingSpeed(self, *args):
        """
        LaplacianSmoothingSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> arg0, 
            itkVectorF3 arg1, 
            itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass::GlobalDataStruct arg2 = None) -> double
        LaplacianSmoothingSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> arg0, 
            itkVectorF3 arg1) -> double
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_LaplacianSmoothingSpeed(self, *args)

    def CurvatureSpeed(self, *args):
        """
        CurvatureSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> arg0, 
            itkVectorF3 arg1, 
            itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass::GlobalDataStruct arg2 = None) -> double
        CurvatureSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> arg0, 
            itkVectorF3 arg1) -> double
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_CurvatureSpeed(self, *args)

    def CalculateAdvectionImage(self):
        """CalculateAdvectionImage(self)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_CalculateAdvectionImage(self)

    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetDomainFunction = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetDomainFunction,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.Initialize = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_Initialize,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetSharedData = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetSharedData,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.UpdateSharedData = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_UpdateSharedData,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.ComputeUpdate = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_ComputeUpdate,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetInitialImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetInitialImage,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetFeatureImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetFeatureImage,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetFeatureImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetFeatureImage,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.AdvectionField = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_AdvectionField,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetAreaWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetAreaWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetAreaWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetAreaWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetLambda1 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetLambda1,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetLambda1 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetLambda1,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetLambda2 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetLambda2,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetLambda2 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetLambda2,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetOverlapPenaltyWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetOverlapPenaltyWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetOverlapPenaltyWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetOverlapPenaltyWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetCurvatureWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetCurvatureWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetCurvatureWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetCurvatureWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetAdvectionWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetAdvectionWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetAdvectionWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetAdvectionWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetReinitializationSmoothingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetReinitializationSmoothingWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetReinitializationSmoothingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetReinitializationSmoothingWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetVolumeMatchingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetVolumeMatchingWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetVolumeMatchingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetVolumeMatchingWeight,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetVolume = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetVolume,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetVolume = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetVolume,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.SetFunctionId = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_SetFunctionId,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.ComputeCurvature = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_ComputeCurvature,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.LaplacianSmoothingSpeed = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_LaplacianSmoothingSpeed,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.CurvatureSpeed = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_CurvatureSpeed,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.CalculateAdvectionImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_CalculateAdvectionImage,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_swigregister
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_swigregister(itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass)

def itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIF2):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_ImageDimension
    def SetDomainFunction(self, *args):
        """SetDomainFunction(self, itk::HeavisideStepFunctionBase<(float,float)> f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetDomainFunction(self, *args)

    def Initialize(self, *args):
        """Initialize(self, itkSize2 r)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_Initialize(self, *args)

    def SetSharedData(self, *args):
        """SetSharedData(self, itk::SmartPointer<(itk::ConstrainedRegionBasedLevelSetFunctionSharedData<(itk::Image<(float,2u)>,itk::Image<(float,2u)>,itk::ScalarChanAndVeseLevelSetFunctionData<(itk::Image<(float,2u)>,itk::Image<(float,2u)>)>)>)> sharedDataIn)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetSharedData(self, *args)

    def UpdateSharedData(self, *args):
        """UpdateSharedData(self, bool forceUpdate)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_UpdateSharedData(self, *args)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF2 arg2 = (0.0)) -> float
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> neighborhood, 
            void globalData) -> float
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_ComputeUpdate(self, *args)

    def SetInitialImage(self, *args):
        """SetInitialImage(self, itkImageF2 f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetInitialImage(self, *args)

    def GetFeatureImage(self):
        """GetFeatureImage(self) -> itkImageF2"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetFeatureImage(self)

    def SetFeatureImage(self, *args):
        """SetFeatureImage(self, itkImageF2 f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetFeatureImage(self, *args)

    def AdvectionField(self, *args):
        """
        AdvectionField(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> arg0, 
            itkVectorF2 arg1, 
            itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass::GlobalDataStruct arg2 = None) -> itkFixedArrayF2
        AdvectionField(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> arg0, 
            itkVectorF2 arg1) -> itkFixedArrayF2
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_AdvectionField(self, *args)

    def SetAreaWeight(self, *args):
        """SetAreaWeight(self, float nu)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetAreaWeight(self, *args)

    def GetAreaWeight(self):
        """GetAreaWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetAreaWeight(self)

    def SetLambda1(self, *args):
        """SetLambda1(self, float lambda1)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetLambda1(self, *args)

    def GetLambda1(self):
        """GetLambda1(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetLambda1(self)

    def SetLambda2(self, *args):
        """SetLambda2(self, float lambda2)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetLambda2(self, *args)

    def GetLambda2(self):
        """GetLambda2(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetLambda2(self)

    def SetOverlapPenaltyWeight(self, *args):
        """SetOverlapPenaltyWeight(self, float gamma)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetOverlapPenaltyWeight(self, *args)

    def GetOverlapPenaltyWeight(self):
        """GetOverlapPenaltyWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetOverlapPenaltyWeight(self)

    def SetCurvatureWeight(self, *args):
        """SetCurvatureWeight(self, float c)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetCurvatureWeight(self, *args)

    def GetCurvatureWeight(self):
        """GetCurvatureWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetCurvatureWeight(self)

    def SetAdvectionWeight(self, *args):
        """SetAdvectionWeight(self, float iA)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetAdvectionWeight(self, *args)

    def GetAdvectionWeight(self):
        """GetAdvectionWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetAdvectionWeight(self)

    def SetReinitializationSmoothingWeight(self, *args):
        """SetReinitializationSmoothingWeight(self, float c)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetReinitializationSmoothingWeight(self, *args)

    def GetReinitializationSmoothingWeight(self):
        """GetReinitializationSmoothingWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetReinitializationSmoothingWeight(self)

    def SetVolumeMatchingWeight(self, *args):
        """SetVolumeMatchingWeight(self, float tau)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetVolumeMatchingWeight(self, *args)

    def GetVolumeMatchingWeight(self):
        """GetVolumeMatchingWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetVolumeMatchingWeight(self)

    def SetVolume(self, *args):
        """SetVolume(self, float volume)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetVolume(self, *args)

    def GetVolume(self):
        """GetVolume(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetVolume(self)

    def SetFunctionId(self, *args):
        """SetFunctionId(self, unsigned int iFid)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetFunctionId(self, *args)

    def ComputeCurvature(self, *args):
        """
        ComputeCurvature(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> arg0, 
            itkVectorF2 arg1, 
            itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass::GlobalDataStruct gd) -> float
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_ComputeCurvature(self, *args)

    def LaplacianSmoothingSpeed(self, *args):
        """
        LaplacianSmoothingSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> arg0, 
            itkVectorF2 arg1, 
            itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass::GlobalDataStruct arg2 = None) -> float
        LaplacianSmoothingSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> arg0, 
            itkVectorF2 arg1) -> float
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_LaplacianSmoothingSpeed(self, *args)

    def CurvatureSpeed(self, *args):
        """
        CurvatureSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> arg0, 
            itkVectorF2 arg1, 
            itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass::GlobalDataStruct arg2 = None) -> float
        CurvatureSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> arg0, 
            itkVectorF2 arg1) -> float
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_CurvatureSpeed(self, *args)

    def CalculateAdvectionImage(self):
        """CalculateAdvectionImage(self)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_CalculateAdvectionImage(self)

    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetDomainFunction = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetDomainFunction,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.Initialize = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_Initialize,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetSharedData = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetSharedData,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.UpdateSharedData = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_UpdateSharedData,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.ComputeUpdate = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_ComputeUpdate,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetInitialImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetInitialImage,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetFeatureImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetFeatureImage,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetFeatureImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetFeatureImage,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.AdvectionField = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_AdvectionField,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetAreaWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetAreaWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetAreaWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetAreaWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetLambda1 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetLambda1,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetLambda1 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetLambda1,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetLambda2 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetLambda2,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetLambda2 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetLambda2,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetOverlapPenaltyWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetOverlapPenaltyWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetOverlapPenaltyWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetOverlapPenaltyWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetCurvatureWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetCurvatureWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetCurvatureWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetCurvatureWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetAdvectionWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetAdvectionWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetAdvectionWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetAdvectionWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetReinitializationSmoothingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetReinitializationSmoothingWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetReinitializationSmoothingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetReinitializationSmoothingWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetVolumeMatchingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetVolumeMatchingWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetVolumeMatchingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetVolumeMatchingWeight,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetVolume = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetVolume,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetVolume = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetVolume,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.SetFunctionId = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_SetFunctionId,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.ComputeCurvature = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_ComputeCurvature,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.LaplacianSmoothingSpeed = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_LaplacianSmoothingSpeed,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.CurvatureSpeed = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_CurvatureSpeed,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.CalculateAdvectionImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_CalculateAdvectionImage,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_swigregister
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_swigregister(itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass)

def itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass(itkFiniteDifferenceFunctionPython.itkFiniteDifferenceFunctionIF3):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_ImageDimension
    def SetDomainFunction(self, *args):
        """SetDomainFunction(self, itk::HeavisideStepFunctionBase<(float,float)> f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetDomainFunction(self, *args)

    def Initialize(self, *args):
        """Initialize(self, itkSize3 r)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_Initialize(self, *args)

    def SetSharedData(self, *args):
        """SetSharedData(self, itk::SmartPointer<(itk::ConstrainedRegionBasedLevelSetFunctionSharedData<(itk::Image<(float,3u)>,itk::Image<(float,3u)>,itk::ScalarChanAndVeseLevelSetFunctionData<(itk::Image<(float,3u)>,itk::Image<(float,3u)>)>)>)> sharedDataIn)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetSharedData(self, *args)

    def UpdateSharedData(self, *args):
        """UpdateSharedData(self, bool forceUpdate)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_UpdateSharedData(self, *args)

    def ComputeUpdate(self, *args):
        """
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> neighborhood, 
            void globalData, 
            itkVectorF3 arg2 = (0.0)) -> float
        ComputeUpdate(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> neighborhood, 
            void globalData) -> float
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_ComputeUpdate(self, *args)

    def SetInitialImage(self, *args):
        """SetInitialImage(self, itkImageF3 f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetInitialImage(self, *args)

    def GetFeatureImage(self):
        """GetFeatureImage(self) -> itkImageF3"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetFeatureImage(self)

    def SetFeatureImage(self, *args):
        """SetFeatureImage(self, itkImageF3 f)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetFeatureImage(self, *args)

    def AdvectionField(self, *args):
        """
        AdvectionField(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> arg0, 
            itkVectorF3 arg1, 
            itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass::GlobalDataStruct arg2 = None) -> itkFixedArrayF3
        AdvectionField(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> arg0, 
            itkVectorF3 arg1) -> itkFixedArrayF3
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_AdvectionField(self, *args)

    def SetAreaWeight(self, *args):
        """SetAreaWeight(self, float nu)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetAreaWeight(self, *args)

    def GetAreaWeight(self):
        """GetAreaWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetAreaWeight(self)

    def SetLambda1(self, *args):
        """SetLambda1(self, float lambda1)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetLambda1(self, *args)

    def GetLambda1(self):
        """GetLambda1(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetLambda1(self)

    def SetLambda2(self, *args):
        """SetLambda2(self, float lambda2)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetLambda2(self, *args)

    def GetLambda2(self):
        """GetLambda2(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetLambda2(self)

    def SetOverlapPenaltyWeight(self, *args):
        """SetOverlapPenaltyWeight(self, float gamma)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetOverlapPenaltyWeight(self, *args)

    def GetOverlapPenaltyWeight(self):
        """GetOverlapPenaltyWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetOverlapPenaltyWeight(self)

    def SetCurvatureWeight(self, *args):
        """SetCurvatureWeight(self, float c)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetCurvatureWeight(self, *args)

    def GetCurvatureWeight(self):
        """GetCurvatureWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetCurvatureWeight(self)

    def SetAdvectionWeight(self, *args):
        """SetAdvectionWeight(self, float iA)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetAdvectionWeight(self, *args)

    def GetAdvectionWeight(self):
        """GetAdvectionWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetAdvectionWeight(self)

    def SetReinitializationSmoothingWeight(self, *args):
        """SetReinitializationSmoothingWeight(self, float c)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetReinitializationSmoothingWeight(self, *args)

    def GetReinitializationSmoothingWeight(self):
        """GetReinitializationSmoothingWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetReinitializationSmoothingWeight(self)

    def SetVolumeMatchingWeight(self, *args):
        """SetVolumeMatchingWeight(self, float tau)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetVolumeMatchingWeight(self, *args)

    def GetVolumeMatchingWeight(self):
        """GetVolumeMatchingWeight(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetVolumeMatchingWeight(self)

    def SetVolume(self, *args):
        """SetVolume(self, float volume)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetVolume(self, *args)

    def GetVolume(self):
        """GetVolume(self) -> float"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetVolume(self)

    def SetFunctionId(self, *args):
        """SetFunctionId(self, unsigned int iFid)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetFunctionId(self, *args)

    def ComputeCurvature(self, *args):
        """
        ComputeCurvature(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> arg0, 
            itkVectorF3 arg1, 
            itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass::GlobalDataStruct gd) -> float
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_ComputeCurvature(self, *args)

    def LaplacianSmoothingSpeed(self, *args):
        """
        LaplacianSmoothingSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> arg0, 
            itkVectorF3 arg1, 
            itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass::GlobalDataStruct arg2 = None) -> float
        LaplacianSmoothingSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> arg0, 
            itkVectorF3 arg1) -> float
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_LaplacianSmoothingSpeed(self, *args)

    def CurvatureSpeed(self, *args):
        """
        CurvatureSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> arg0, 
            itkVectorF3 arg1, 
            itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass::GlobalDataStruct arg2 = None) -> float
        CurvatureSpeed(self, itk::ConstNeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> arg0, 
            itkVectorF3 arg1) -> float
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_CurvatureSpeed(self, *args)

    def CalculateAdvectionImage(self):
        """CalculateAdvectionImage(self)"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_CalculateAdvectionImage(self)

    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetDomainFunction = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetDomainFunction,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.Initialize = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_Initialize,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetSharedData = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetSharedData,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.UpdateSharedData = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_UpdateSharedData,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.ComputeUpdate = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_ComputeUpdate,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetInitialImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetInitialImage,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetFeatureImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetFeatureImage,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetFeatureImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetFeatureImage,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.AdvectionField = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_AdvectionField,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetAreaWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetAreaWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetAreaWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetAreaWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetLambda1 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetLambda1,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetLambda1 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetLambda1,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetLambda2 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetLambda2,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetLambda2 = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetLambda2,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetOverlapPenaltyWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetOverlapPenaltyWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetOverlapPenaltyWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetOverlapPenaltyWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetCurvatureWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetCurvatureWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetCurvatureWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetCurvatureWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetAdvectionWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetAdvectionWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetAdvectionWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetAdvectionWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetReinitializationSmoothingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetReinitializationSmoothingWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetReinitializationSmoothingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetReinitializationSmoothingWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetVolumeMatchingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetVolumeMatchingWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetVolumeMatchingWeight = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetVolumeMatchingWeight,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetVolume = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetVolume,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetVolume = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetVolume,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.SetFunctionId = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_SetFunctionId,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.ComputeCurvature = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_ComputeCurvature,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.LaplacianSmoothingSpeed = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_LaplacianSmoothingSpeed,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.CurvatureSpeed = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_CurvatureSpeed,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.CalculateAdvectionImage = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_CalculateAdvectionImage,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_swigregister
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_swigregister(itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass)

def itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass(itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_Superclass):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_ImageDimension
    def UpdatePixel(self, *args):
        """
        UpdatePixel(self, unsigned int idx, itk::NeighborhoodIterator<(itk::Image<(double,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,2u)>)>)> iterator, 
            double newValue, 
            bool status)
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_UpdatePixel(self, *args)

    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass.UpdatePixel = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_UpdatePixel,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass)
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_swigregister
itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_swigregister(itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass)

def itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass(itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_Superclass):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_ImageDimension
    def UpdatePixel(self, *args):
        """
        UpdatePixel(self, unsigned int idx, itk::NeighborhoodIterator<(itk::Image<(double,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(double,3u)>)>)> iterator, 
            double newValue, 
            bool status)
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_UpdatePixel(self, *args)

    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass.UpdatePixel = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_UpdatePixel,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass)
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_swigregister
itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_swigregister(itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass)

def itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass(itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_Superclass):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_ImageDimension
    def UpdatePixel(self, *args):
        """
        UpdatePixel(self, unsigned int idx, itk::NeighborhoodIterator<(itk::Image<(float,2u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,2u)>)>)> iterator, 
            float newValue, 
            bool status)
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_UpdatePixel(self, *args)

    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass.UpdatePixel = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_UpdatePixel,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_swigregister
itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_swigregister(itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass)

def itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass(itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_Superclass):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_ImageDimension
    def UpdatePixel(self, *args):
        """
        UpdatePixel(self, unsigned int idx, itk::NeighborhoodIterator<(itk::Image<(float,3u)>,itk::ZeroFluxNeumannBoundaryCondition<(itk::Image<(float,3u)>)>)> iterator, 
            float newValue, 
            bool status)
        """
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_UpdatePixel(self, *args)

    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass.UpdatePixel = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_UpdatePixel,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_swigregister
itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_swigregister(itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass)

def itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionID2ID2(itkScalarChanAndVeseLevelSetFunctionID2ID2_Superclass):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionID2ID2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionID2ID2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID2ID2"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionID2ID2"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionID2ID2
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionID2ID2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionID2ID2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionID2ID2.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionID2ID2)
itkScalarChanAndVeseLevelSetFunctionID2ID2_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_swigregister
itkScalarChanAndVeseLevelSetFunctionID2ID2_swigregister(itkScalarChanAndVeseLevelSetFunctionID2ID2)

def itkScalarChanAndVeseLevelSetFunctionID2ID2___New_orig__():
  """itkScalarChanAndVeseLevelSetFunctionID2ID2___New_orig__()"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2___New_orig__()

def itkScalarChanAndVeseLevelSetFunctionID2ID2_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionID2ID2_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID2ID2"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID2ID2_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionID3ID3(itkScalarChanAndVeseLevelSetFunctionID3ID3_Superclass):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionID3ID3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionID3ID3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID3ID3"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionID3ID3"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionID3ID3
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionID3ID3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionID3ID3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionID3ID3.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionID3ID3)
itkScalarChanAndVeseLevelSetFunctionID3ID3_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_swigregister
itkScalarChanAndVeseLevelSetFunctionID3ID3_swigregister(itkScalarChanAndVeseLevelSetFunctionID3ID3)

def itkScalarChanAndVeseLevelSetFunctionID3ID3___New_orig__():
  """itkScalarChanAndVeseLevelSetFunctionID3ID3___New_orig__()"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3___New_orig__()

def itkScalarChanAndVeseLevelSetFunctionID3ID3_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionID3ID3_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionID3ID3"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionID3ID3_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionIF2IF2(itkScalarChanAndVeseLevelSetFunctionIF2IF2_Superclass):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionIF2IF2 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionIF2IF2
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF2IF2"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionIF2IF2"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionIF2IF2
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionIF2IF2.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionIF2IF2.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionIF2IF2)
itkScalarChanAndVeseLevelSetFunctionIF2IF2_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_swigregister
itkScalarChanAndVeseLevelSetFunctionIF2IF2_swigregister(itkScalarChanAndVeseLevelSetFunctionIF2IF2)

def itkScalarChanAndVeseLevelSetFunctionIF2IF2___New_orig__():
  """itkScalarChanAndVeseLevelSetFunctionIF2IF2___New_orig__()"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2___New_orig__()

def itkScalarChanAndVeseLevelSetFunctionIF2IF2_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionIF2IF2_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF2IF2"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF2IF2_cast(*args)

class itkScalarChanAndVeseLevelSetFunctionIF3IF3(itkScalarChanAndVeseLevelSetFunctionIF3IF3_Superclass):
    """Proxy of C++ itkScalarChanAndVeseLevelSetFunctionIF3IF3 class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    ImageDimension = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_ImageDimension
    def __New_orig__():
        """__New_orig__()"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    __swig_destroy__ = _itkScalarChanAndVeseLevelSetFunctionPython.delete_itkScalarChanAndVeseLevelSetFunctionIF3IF3
    def cast(*args):
        """cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF3IF3"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkScalarChanAndVeseLevelSetFunctionIF3IF3"""
        return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkScalarChanAndVeseLevelSetFunctionIF3IF3
        
        Create a new object of the class itkScalarChanAndVeseLevelSetFunctionIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkScalarChanAndVeseLevelSetFunctionIF3IF3.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkScalarChanAndVeseLevelSetFunctionIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkScalarChanAndVeseLevelSetFunctionIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkScalarChanAndVeseLevelSetFunctionIF3IF3.GetPointer = new_instancemethod(_itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_GetPointer,None,itkScalarChanAndVeseLevelSetFunctionIF3IF3)
itkScalarChanAndVeseLevelSetFunctionIF3IF3_swigregister = _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_swigregister
itkScalarChanAndVeseLevelSetFunctionIF3IF3_swigregister(itkScalarChanAndVeseLevelSetFunctionIF3IF3)

def itkScalarChanAndVeseLevelSetFunctionIF3IF3___New_orig__():
  """itkScalarChanAndVeseLevelSetFunctionIF3IF3___New_orig__()"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3___New_orig__()

def itkScalarChanAndVeseLevelSetFunctionIF3IF3_cast(*args):
  """itkScalarChanAndVeseLevelSetFunctionIF3IF3_cast(itkLightObject obj) -> itkScalarChanAndVeseLevelSetFunctionIF3IF3"""
  return _itkScalarChanAndVeseLevelSetFunctionPython.itkScalarChanAndVeseLevelSetFunctionIF3IF3_cast(*args)



