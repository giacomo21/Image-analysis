# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (3,0,0):
    new_instancemethod = lambda func, inst, cls: _itkImageSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkImageSpatialObjectPython
            return _itkImageSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPointPython
import vnl_vectorPython
import vcl_complexPython
import pyBasePython
import vnl_matrixPython
import itkFixedArrayPython
import itkVectorPython
import vnl_vector_refPython
import itkImagePython
import itkCovariantVectorPython
import ITKRegionsPython
import ITKCommonBasePython
import itkEventObjectsPython
import itkSizePython
import itkIndexPython
import itkOffsetPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkRGBAPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBPixelPython
import itkSpatialObjectBasePython
import itkSpatialObjectPropertyPython
import itkScalableAffineTransformPython
import itkAffineTransformPython
import itkTransformPython
import itkArray2DPython
import itkArrayPython
import itkMatrixOffsetTransformBasePython
import itkAffineGeometryFramePython
import itkBoundingBoxPython
import itkMapContainerPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkLevelSetPython
import itkInterpolateImageFunctionPython
import itkImageFunctionPython
import itkFunctionBasePython
def itkImageSpatialObject3D_New():
  return itkImageSpatialObject3D.New()

def itkImageSpatialObject3F_New():
  return itkImageSpatialObject3F.New()

def itkImageSpatialObject3US_New():
  return itkImageSpatialObject3US.New()

def itkImageSpatialObject3UL_New():
  return itkImageSpatialObject3UL.New()

def itkImageSpatialObject3UC_New():
  return itkImageSpatialObject3UC.New()

def itkImageSpatialObject2D_New():
  return itkImageSpatialObject2D.New()

def itkImageSpatialObject2F_New():
  return itkImageSpatialObject2F.New()

def itkImageSpatialObject2US_New():
  return itkImageSpatialObject2US.New()

def itkImageSpatialObject2UL_New():
  return itkImageSpatialObject2UL.New()

def itkImageSpatialObject2UC_New():
  return itkImageSpatialObject2UC.New()

class itkImageSpatialObject2D(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkImageSpatialObject2D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageD2 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageD2"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD2 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD2 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionID2D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionID2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2D
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2D
        
        Create a new object of the class itkImageSpatialObject2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject2D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject2D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject2D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject2D.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_SetImage,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_GetImage,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_IsEvaluableAt,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_ValueAt,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_IsInside,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_SetSlicePosition,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_GetSlicePosition,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_GetPixelType,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_SetInterpolator,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_GetInterpolator,None,itkImageSpatialObject2D)
itkImageSpatialObject2D.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2D_GetPointer,None,itkImageSpatialObject2D)
itkImageSpatialObject2D_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject2D_swigregister
itkImageSpatialObject2D_swigregister(itkImageSpatialObject2D)

def itkImageSpatialObject2D___New_orig__():
  """itkImageSpatialObject2D___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2D___New_orig__()

def itkImageSpatialObject2D_cast(*args):
  """itkImageSpatialObject2D_cast(itkLightObject obj) -> itkImageSpatialObject2D"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2D_cast(*args)

class itkImageSpatialObject2F(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkImageSpatialObject2F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageF2 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageF2"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD2 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD2 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIF2D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2F
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject2F"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject2F"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2F
        
        Create a new object of the class itkImageSpatialObject2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject2F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject2F.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_SetImage,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetImage,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_IsEvaluableAt,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_ValueAt,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_IsInside,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_SetSlicePosition,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetSlicePosition,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetPixelType,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_SetInterpolator,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetInterpolator,None,itkImageSpatialObject2F)
itkImageSpatialObject2F.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2F_GetPointer,None,itkImageSpatialObject2F)
itkImageSpatialObject2F_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject2F_swigregister
itkImageSpatialObject2F_swigregister(itkImageSpatialObject2F)

def itkImageSpatialObject2F___New_orig__():
  """itkImageSpatialObject2F___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2F___New_orig__()

def itkImageSpatialObject2F_cast(*args):
  """itkImageSpatialObject2F_cast(itkLightObject obj) -> itkImageSpatialObject2F"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2F_cast(*args)

class itkImageSpatialObject2UC(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkImageSpatialObject2UC class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUC2 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageUC2"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD2 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD2 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIUC2D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2UC
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject2UC"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject2UC"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2UC
        
        Create a new object of the class itkImageSpatialObject2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject2UC.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject2UC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject2UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject2UC.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetImage,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetImage,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_IsEvaluableAt,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_ValueAt,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_IsInside,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetSlicePosition,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetSlicePosition,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetPixelType,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_SetInterpolator,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetInterpolator,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UC_GetPointer,None,itkImageSpatialObject2UC)
itkImageSpatialObject2UC_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject2UC_swigregister
itkImageSpatialObject2UC_swigregister(itkImageSpatialObject2UC)

def itkImageSpatialObject2UC___New_orig__():
  """itkImageSpatialObject2UC___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2UC___New_orig__()

def itkImageSpatialObject2UC_cast(*args):
  """itkImageSpatialObject2UC_cast(itkLightObject obj) -> itkImageSpatialObject2UC"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2UC_cast(*args)

class itkImageSpatialObject2UL(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkImageSpatialObject2UL class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUL2 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageUL2"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD2 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD2 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIUL2D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIUL2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2UL
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject2UL"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject2UL"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2UL
        
        Create a new object of the class itkImageSpatialObject2UL and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject2UL.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject2UL.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject2UL.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject2UL.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_SetImage,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetImage,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_IsEvaluableAt,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_ValueAt,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_IsInside,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_SetSlicePosition,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetSlicePosition,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetPixelType,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_SetInterpolator,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetInterpolator,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2UL_GetPointer,None,itkImageSpatialObject2UL)
itkImageSpatialObject2UL_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject2UL_swigregister
itkImageSpatialObject2UL_swigregister(itkImageSpatialObject2UL)

def itkImageSpatialObject2UL___New_orig__():
  """itkImageSpatialObject2UL___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2UL___New_orig__()

def itkImageSpatialObject2UL_cast(*args):
  """itkImageSpatialObject2UL_cast(itkLightObject obj) -> itkImageSpatialObject2UL"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2UL_cast(*args)

class itkImageSpatialObject2US(itkSpatialObjectBasePython.itkSpatialObject2):
    """Proxy of C++ itkImageSpatialObject2US class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUS2 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageUS2"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD2 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD2 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD2 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD2 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD2 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIUS2D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject2US
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject2US"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject2US"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject2US_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject2US
        
        Create a new object of the class itkImageSpatialObject2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject2US.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject2US.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject2US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject2US.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_SetImage,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetImage,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_IsEvaluableAt,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_ValueAt,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_IsInside,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_SetSlicePosition,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetSlicePosition,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetPixelType,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_SetInterpolator,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetInterpolator,None,itkImageSpatialObject2US)
itkImageSpatialObject2US.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject2US_GetPointer,None,itkImageSpatialObject2US)
itkImageSpatialObject2US_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject2US_swigregister
itkImageSpatialObject2US_swigregister(itkImageSpatialObject2US)

def itkImageSpatialObject2US___New_orig__():
  """itkImageSpatialObject2US___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2US___New_orig__()

def itkImageSpatialObject2US_cast(*args):
  """itkImageSpatialObject2US_cast(itkLightObject obj) -> itkImageSpatialObject2US"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject2US_cast(*args)

class itkImageSpatialObject3D(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkImageSpatialObject3D class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageD3 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageD3"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD3 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD3 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionID3D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionID3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3D
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3D_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3D
        
        Create a new object of the class itkImageSpatialObject3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject3D.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject3D.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject3D.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject3D.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_SetImage,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_GetImage,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_IsEvaluableAt,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_ValueAt,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_IsInside,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_SetSlicePosition,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_GetSlicePosition,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_GetPixelType,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_SetInterpolator,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_GetInterpolator,None,itkImageSpatialObject3D)
itkImageSpatialObject3D.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3D_GetPointer,None,itkImageSpatialObject3D)
itkImageSpatialObject3D_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject3D_swigregister
itkImageSpatialObject3D_swigregister(itkImageSpatialObject3D)

def itkImageSpatialObject3D___New_orig__():
  """itkImageSpatialObject3D___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3D___New_orig__()

def itkImageSpatialObject3D_cast(*args):
  """itkImageSpatialObject3D_cast(itkLightObject obj) -> itkImageSpatialObject3D"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3D_cast(*args)

class itkImageSpatialObject3F(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkImageSpatialObject3F class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageF3 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageF3"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD3 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD3 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIF3D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3F
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject3F"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject3F"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3F_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3F
        
        Create a new object of the class itkImageSpatialObject3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject3F.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject3F.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_SetImage,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetImage,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_IsEvaluableAt,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_ValueAt,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_IsInside,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_SetSlicePosition,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetSlicePosition,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetPixelType,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_SetInterpolator,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetInterpolator,None,itkImageSpatialObject3F)
itkImageSpatialObject3F.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3F_GetPointer,None,itkImageSpatialObject3F)
itkImageSpatialObject3F_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject3F_swigregister
itkImageSpatialObject3F_swigregister(itkImageSpatialObject3F)

def itkImageSpatialObject3F___New_orig__():
  """itkImageSpatialObject3F___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3F___New_orig__()

def itkImageSpatialObject3F_cast(*args):
  """itkImageSpatialObject3F_cast(itkLightObject obj) -> itkImageSpatialObject3F"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3F_cast(*args)

class itkImageSpatialObject3UC(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkImageSpatialObject3UC class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUC3 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageUC3"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD3 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD3 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIUC3D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3UC
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject3UC"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject3UC"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3UC
        
        Create a new object of the class itkImageSpatialObject3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject3UC.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject3UC.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject3UC.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject3UC.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetImage,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetImage,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_IsEvaluableAt,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_ValueAt,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_IsInside,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetSlicePosition,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetSlicePosition,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetPixelType,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_SetInterpolator,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetInterpolator,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UC_GetPointer,None,itkImageSpatialObject3UC)
itkImageSpatialObject3UC_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject3UC_swigregister
itkImageSpatialObject3UC_swigregister(itkImageSpatialObject3UC)

def itkImageSpatialObject3UC___New_orig__():
  """itkImageSpatialObject3UC___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3UC___New_orig__()

def itkImageSpatialObject3UC_cast(*args):
  """itkImageSpatialObject3UC_cast(itkLightObject obj) -> itkImageSpatialObject3UC"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3UC_cast(*args)

class itkImageSpatialObject3UL(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkImageSpatialObject3UL class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUL3 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageUL3"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD3 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD3 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIUL3D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIUL3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3UL
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject3UL"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject3UL"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3UL
        
        Create a new object of the class itkImageSpatialObject3UL and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject3UL.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject3UL.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject3UL.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject3UL.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_SetImage,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetImage,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_IsEvaluableAt,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_ValueAt,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_IsInside,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_SetSlicePosition,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetSlicePosition,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetPixelType,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_SetInterpolator,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetInterpolator,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3UL_GetPointer,None,itkImageSpatialObject3UL)
itkImageSpatialObject3UL_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject3UL_swigregister
itkImageSpatialObject3UL_swigregister(itkImageSpatialObject3UL)

def itkImageSpatialObject3UL___New_orig__():
  """itkImageSpatialObject3UL___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3UL___New_orig__()

def itkImageSpatialObject3UL_cast(*args):
  """itkImageSpatialObject3UL_cast(itkLightObject obj) -> itkImageSpatialObject3UL"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3UL_cast(*args)

class itkImageSpatialObject3US(itkSpatialObjectBasePython.itkSpatialObject3):
    """Proxy of C++ itkImageSpatialObject3US class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def __New_orig__():
        """__New_orig__()"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)
    def SetImage(self, *args):
        """SetImage(self, itkImageUS3 image)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_SetImage(self, *args)

    def GetImage(self):
        """GetImage(self) -> itkImageUS3"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_GetImage(self)

    def IsEvaluableAt(self, *args):
        """
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0, char name = 0l) -> bool
        IsEvaluableAt(self, itkPointD3 point, unsigned int depth = 0) -> bool
        IsEvaluableAt(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_IsEvaluableAt(self, *args)

    def ValueAt(self, *args):
        """
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0, 
            char name = 0l) -> bool
        ValueAt(self, itkPointD3 point, double value, unsigned int depth = 0) -> bool
        ValueAt(self, itkPointD3 point, double value) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_ValueAt(self, *args)

    def IsInside(self, *args):
        """
        IsInside(self, itkPointD3 point, unsigned int depth, char name) -> bool
        IsInside(self, itkPointD3 point) -> bool
        """
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_IsInside(self, *args)

    def SetSlicePosition(self, *args):
        """SetSlicePosition(self, unsigned int dimension, int position)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_SetSlicePosition(self, *args)

    def GetSlicePosition(self, *args):
        """GetSlicePosition(self, unsigned int dimension) -> int"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_GetSlicePosition(self, *args)

    def GetPixelType(self):
        """GetPixelType(self) -> char"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_GetPixelType(self)

    def SetInterpolator(self, *args):
        """SetInterpolator(self, itkInterpolateImageFunctionIUS3D interpolator)"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_SetInterpolator(self, *args)

    def GetInterpolator(self):
        """GetInterpolator(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_GetInterpolator(self)

    __swig_destroy__ = _itkImageSpatialObjectPython.delete_itkImageSpatialObject3US
    def cast(*args):
        """cast(itkLightObject obj) -> itkImageSpatialObject3US"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_cast(*args)

    cast = staticmethod(cast)
    def GetPointer(self):
        """GetPointer(self) -> itkImageSpatialObject3US"""
        return _itkImageSpatialObjectPython.itkImageSpatialObject3US_GetPointer(self)

    def New(*args, **kargs):
        """New() -> itkImageSpatialObject3US
        
        Create a new object of the class itkImageSpatialObject3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.
        
        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.
        
        The named parameters are used by calling the method with the same name prefixed by 'Set'.
        
        Ex:
        
          itkImageSpatialObject3US.New( reader, Threshold=10 ) 
        
        is (most of the time) equivalent to:
        
          obj = itkImageSpatialObject3US.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageSpatialObject3US.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageSpatialObject3US.SetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_SetImage,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.GetImage = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetImage,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.IsEvaluableAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_IsEvaluableAt,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.ValueAt = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_ValueAt,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.IsInside = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_IsInside,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.SetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_SetSlicePosition,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.GetSlicePosition = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetSlicePosition,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.GetPixelType = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetPixelType,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.SetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_SetInterpolator,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.GetInterpolator = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetInterpolator,None,itkImageSpatialObject3US)
itkImageSpatialObject3US.GetPointer = new_instancemethod(_itkImageSpatialObjectPython.itkImageSpatialObject3US_GetPointer,None,itkImageSpatialObject3US)
itkImageSpatialObject3US_swigregister = _itkImageSpatialObjectPython.itkImageSpatialObject3US_swigregister
itkImageSpatialObject3US_swigregister(itkImageSpatialObject3US)

def itkImageSpatialObject3US___New_orig__():
  """itkImageSpatialObject3US___New_orig__()"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3US___New_orig__()

def itkImageSpatialObject3US_cast(*args):
  """itkImageSpatialObject3US_cast(itkLightObject obj) -> itkImageSpatialObject3US"""
  return _itkImageSpatialObjectPython.itkImageSpatialObject3US_cast(*args)



