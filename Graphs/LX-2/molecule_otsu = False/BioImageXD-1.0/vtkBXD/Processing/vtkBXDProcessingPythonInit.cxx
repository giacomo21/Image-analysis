// Generated by vtkWrapPythonInit in VTK/Wrapping
#include "vtkPython.h"

#include "vtkSystemIncludes.h"
#include <string.h>
// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings 

extern  "C" {PyObject *PyVTKClass_vtkDistanceRepresentationScaled2DNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkExtTIFFReaderNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageAlphaFilterNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageAutoThresholdColocalizationNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageColocalizationFilterNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageColocalizationTestNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkIntensityTransferFunctionNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageColorMergeNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageMapToIntensitiesNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageSimpleMIPNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageSolitaryFilterNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkLSMReaderNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkLIFReaderNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageLabelCountNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageIterativeDeconvolution3DNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageDiffractionPSF3DNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkImageLabelDistanceToSurfaceNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkHandleColorTransferFunctionNew(char *); }
extern  "C" {PyObject *PyVTKClass_vtkTestMemoryNew(char *); }

static PyMethodDef PyvtkBXDProcessingPython_ClassMethods[] = {
{NULL, NULL, 0, NULL}};

extern  "C" {void initlibvtkBXDProcessingPython();}

void initlibvtkBXDProcessingPython()
{
  PyObject *m, *d, *c;

  static const char modulename[] = "libvtkBXDProcessingPython";
  m = Py_InitModule((char*)modulename, PyvtkBXDProcessingPython_ClassMethods);
  d = PyModule_GetDict(m);
  if (!d) Py_FatalError((char*)"can't get dictionary for module vtkBXDProcessingPython!");

  c = PyVTKClass_vtkDistanceRepresentationScaled2DNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkDistanceRepresentationScaled2D", c))
    {
      Py_FatalError((char*)"can't add class vtkDistanceRepresentationScaled2D to dictionary!");
    }

  c = PyVTKClass_vtkExtTIFFReaderNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkExtTIFFReader", c))
    {
      Py_FatalError((char*)"can't add class vtkExtTIFFReader to dictionary!");
    }

  c = PyVTKClass_vtkImageAlphaFilterNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageAlphaFilter", c))
    {
      Py_FatalError((char*)"can't add class vtkImageAlphaFilter to dictionary!");
    }

  c = PyVTKClass_vtkImageAutoThresholdColocalizationNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageAutoThresholdColocalization", c))
    {
      Py_FatalError((char*)"can't add class vtkImageAutoThresholdColocalization to dictionary!");
    }

  c = PyVTKClass_vtkImageColocalizationFilterNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageColocalizationFilter", c))
    {
      Py_FatalError((char*)"can't add class vtkImageColocalizationFilter to dictionary!");
    }

  c = PyVTKClass_vtkImageColocalizationTestNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageColocalizationTest", c))
    {
      Py_FatalError((char*)"can't add class vtkImageColocalizationTest to dictionary!");
    }

  c = PyVTKClass_vtkIntensityTransferFunctionNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkIntensityTransferFunction", c))
    {
      Py_FatalError((char*)"can't add class vtkIntensityTransferFunction to dictionary!");
    }

  c = PyVTKClass_vtkImageColorMergeNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageColorMerge", c))
    {
      Py_FatalError((char*)"can't add class vtkImageColorMerge to dictionary!");
    }

  c = PyVTKClass_vtkImageMapToIntensitiesNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageMapToIntensities", c))
    {
      Py_FatalError((char*)"can't add class vtkImageMapToIntensities to dictionary!");
    }

  c = PyVTKClass_vtkImageSimpleMIPNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageSimpleMIP", c))
    {
      Py_FatalError((char*)"can't add class vtkImageSimpleMIP to dictionary!");
    }

  c = PyVTKClass_vtkImageSolitaryFilterNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageSolitaryFilter", c))
    {
      Py_FatalError((char*)"can't add class vtkImageSolitaryFilter to dictionary!");
    }

  c = PyVTKClass_vtkLSMReaderNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkLSMReader", c))
    {
      Py_FatalError((char*)"can't add class vtkLSMReader to dictionary!");
    }

  c = PyVTKClass_vtkLIFReaderNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkLIFReader", c))
    {
      Py_FatalError((char*)"can't add class vtkLIFReader to dictionary!");
    }

  c = PyVTKClass_vtkImageLabelCountNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageLabelCount", c))
    {
      Py_FatalError((char*)"can't add class vtkImageLabelCount to dictionary!");
    }

  c = PyVTKClass_vtkImageIterativeDeconvolution3DNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageIterativeDeconvolution3D", c))
    {
      Py_FatalError((char*)"can't add class vtkImageIterativeDeconvolution3D to dictionary!");
    }

  c = PyVTKClass_vtkImageDiffractionPSF3DNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageDiffractionPSF3D", c))
    {
      Py_FatalError((char*)"can't add class vtkImageDiffractionPSF3D to dictionary!");
    }

  c = PyVTKClass_vtkImageLabelDistanceToSurfaceNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkImageLabelDistanceToSurface", c))
    {
      Py_FatalError((char*)"can't add class vtkImageLabelDistanceToSurface to dictionary!");
    }

  c = PyVTKClass_vtkHandleColorTransferFunctionNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkHandleColorTransferFunction", c))
    {
      Py_FatalError((char*)"can't add class vtkHandleColorTransferFunction to dictionary!");
    }

  c = PyVTKClass_vtkTestMemoryNew((char*)modulename);
  if (c && -1 == PyDict_SetItemString(d, (char*)"vtkTestMemory", c))
    {
      Py_FatalError((char*)"can't add class vtkTestMemory to dictionary!");
    }

}

